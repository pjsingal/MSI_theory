Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.004568, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.005378, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.119278, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002793, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.034464, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.26396, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.27275, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001239, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001802, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.11424, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003122, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.035975, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.22127, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.22623, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00116, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001759, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003572, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000798, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001361, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002938, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.01061, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000827, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.002401, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.004063, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000736, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001268, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002708, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.01023, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019145, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.019711, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.745672, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.00291, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.018077, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.76532, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.78757, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.010854, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.011387, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.090458, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.52562, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000124, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.52732, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000757, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.087492, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.03306, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.035529, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.007262, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000434, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.322561, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.003691, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.373535, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.35561, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.35635, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.12715, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001031, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.67282, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.8238, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.1817, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000881, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 2.9e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000324, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010796, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010847, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.65485e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  8.61904e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300  1.24409e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  9.83287e+35  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  5.46484e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.40548e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  8.94933e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800   2.9277e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  8.64524e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.34714e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  5.93886e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.41501e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.20049e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  6.91641e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.43561e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  2.87452e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  5.57247e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.04911e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  1.92319e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.44068e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  2.76334e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.52206e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.47597e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  1.98769e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  3.82043e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  8.28541e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  1.85915e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.16257e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  9.15206e+39  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  1.96249e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100  4.09382e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  8.30453e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.63928e+41  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.15241e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  5.91399e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.08388e+42   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  1.94338e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.41342e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  5.88066e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  9.94896e+42  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.5209, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.5e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001958
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000495
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.267966
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.207197
         W1a Well: minimal relaxation eigenvalue = 0.0683137
         W1a Well: maximal relaxation eigenvalue = 4.21349
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001881
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.169821
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043363
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.452038
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.293044
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.45428, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.33e+05 4.24e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000947  1.93e-16  6.84e-57
        W1b  1.06e+03         1  2.04e-13  7.22e-54
         P1  5.18e+15  4.91e+12         1  3.55e-41
         P2  1.46e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000147  2.49e-20  8.82e-61
        W1b  6.81e+03         1  1.69e-16     6e-57
         P1  4.02e+19  5.91e+15         1  3.55e-41
         P2  1.13e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.45759, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24422, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46352, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14    0.0446         0         1
          1      15.6       1.2         1   -0.0427
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0777    0.0446  -0.00131        -1
          1      1.07       1.2        -1   0.00131
         *Z       ---       ---   3.2e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46549, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187908, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43974, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254     0.011         0         1
          1         5     0.414         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174     0.011  -0.00348        -1
          1     0.341     0.414        -1   0.00348
         *Z       ---       ---   3.2e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44191, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25402, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187867, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44606, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132   0.00501         0         1
          1      2.95     0.328         1    -0.208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00904   0.00501  -0.00641        -1
          1     0.202     0.328        -1   0.00641
         *Z       ---       ---   3.2e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4476, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.065151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002904, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0683   0.00204         0         1
          1      1.77     0.269         1    -0.351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00467   0.00204   -0.0108        -1
          1     0.121     0.269        -1    0.0108
         *Z       ---       ---   3.2e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.071578, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019175, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002885, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0349  0.000744         0         1
          1       1.1      0.21         1    -0.516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00239  0.000744   -0.0159        -1
          1    0.0748      0.21        -1    0.0159
         *Z       ---       ---   3.2e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022141, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001996
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000495
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044063
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.188844
         W1a Well: minimal relaxation eigenvalue = 0.0670693
         W1a Well: maximal relaxation eigenvalue = 3.76037
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001228
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.171095
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045341
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077034
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.291429
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.838016, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.58e+05 5.53e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0012  1.14e-16  3.96e-55
        W1b       835         1  9.52e-14   3.3e-52
         P1  8.77e+15  1.05e+13         1  3.47e-39
         P2  2.53e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000301  1.52e-20  5.28e-59
        W1b  3.32e+03         1  5.06e-17  1.76e-55
         P1  6.57e+19  1.98e+16         1  3.47e-39
         P2  1.89e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 0.840701, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26279, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208751, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48317, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03    0.0506         0         1
          1      18.7      1.16         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693    0.0506  -0.00117        -1
          1      1.26      1.16        -1   0.00117
         *Z       ---       ---  2.75e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48484, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26498, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46077, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0128         0         1
          1      5.67     0.424         1   -0.0959
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0128  -0.00332        -1
          1      0.38     0.424        -1   0.00332
         *Z       ---       ---  2.75e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46236, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15986, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4284, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124   0.00599         0         1
          1      3.31     0.349         1    -0.183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00599  -0.00632        -1
          1     0.222     0.349        -1   0.00632
         *Z       ---       ---  2.75e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42892, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.050019, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002957, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053799, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0647   0.00251         0         1
          1      1.97     0.295         1    -0.318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434   0.00251    -0.011        -1
          1     0.132     0.295        -1     0.011
         *Z       ---       ---  2.75e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.053866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019486, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002947, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022491, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0333  0.000949         0     0.999
          1      1.21     0.236         1    -0.478
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223  0.000949   -0.0165        -1
          1    0.0814     0.236        -1    0.0165
         *Z       ---       ---  2.75e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022514, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001908
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000468
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044033
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.180389
         W1a Well: minimal relaxation eigenvalue = 0.0658303
         W1a Well: maximal relaxation eigenvalue = 4.83086
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001141
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.16268
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043076
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071226
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.270923
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.790982, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.23e+05 7.16e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00168  6.85e-17  1.53e-53
        W1b       596         1  4.08e-14  9.13e-51
         P1  1.46e+16  2.45e+13         1  2.24e-37
         P2  6.52e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000578  9.77e-21  2.19e-57
        W1b  1.73e+03         1  1.69e-17  3.78e-54
         P1  1.02e+20  5.92e+16         1  2.24e-37
         P2  4.57e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 0.793783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16823, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194046, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37037, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01    0.0585         0         1
          1      21.3      1.25         1   -0.0288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664    0.0585  -0.00118        -1
          1       1.4      1.25        -1   0.00118
         *Z       ---       ---  2.36e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16934, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178154, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35136, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0155         0         1
          1      6.31     0.448         1   -0.0845
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0155  -0.00346        -1
          1     0.415     0.448        -1   0.00346
         *Z       ---       ---  2.36e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35313, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16945, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177995, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35152, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00748         0         1
          1      3.66     0.375         1    -0.164
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00828   0.00748  -0.00671        -1
          1     0.241     0.375        -1   0.00671
         *Z       ---       ---  2.36e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35307, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.359309, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002762, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.365221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.066   0.00325         0         1
          1      2.17     0.322         1    -0.291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00435   0.00325   -0.0119        -1
          1     0.143     0.322        -1    0.0119
         *Z       ---       ---  2.36e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.365458, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018062, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020862, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0343   0.00128         0     0.999
          1      1.34     0.263         1    -0.444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226   0.00128   -0.0182        -1
          1    0.0879     0.263        -1    0.0182
         *Z       ---       ---  2.36e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020885, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002012
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000471
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044582
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.178496
         W1a Well: minimal relaxation eigenvalue = 0.0647287
         W1a Well: maximal relaxation eigenvalue = 3.73205
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001054
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.162733
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043521
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078366
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.276055
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.801927, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.55e+05 9.21e+11
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00237  4.44e-17  4.46e-52
        W1b       423         1  1.88e-14  1.89e-49
         P1  2.25e+16  5.33e+13         1     1e-35
         P2  2.24e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00105  6.54e-21  6.58e-56
        W1b       949         1  6.21e-18  6.24e-53
         P1  1.53e+20  1.61e+17         1     1e-35
         P2  1.52e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 0.804512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17438, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196114, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.997    0.0677         0         1
          1      25.3      1.14         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0645    0.0677  -0.00122        -1
          1      1.63      1.14        -1   0.00122
         *Z       ---       ---  2.11e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38354, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0188         0         1
          1      7.08     0.457         1   -0.0752
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00366        -1
          1     0.458     0.457        -1   0.00366
         *Z       ---       ---  2.11e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36041, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17346, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181009, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35856, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.129   0.00933         0         1
          1      4.05     0.397         1    -0.148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835   0.00933  -0.00718        -1
          1     0.262     0.397        -1   0.00718
         *Z       ---       ---  2.11e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.325602, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.331874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0684    0.0042         0     0.999
          1      2.39      0.35         1    -0.266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00443    0.0042   -0.0129        -1
          1     0.155      0.35        -1    0.0129
         *Z       ---       ---  2.11e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.332107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018155, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002784, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020997, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0358   0.00172         0     0.999
          1      1.47     0.292         1    -0.412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00232   0.00172   -0.0201        -1
          1     0.095     0.292        -1    0.0201
         *Z       ---       ---  2.11e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02102, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001995
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000471
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.124275
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182451
         W1a Well: minimal relaxation eigenvalue = 0.0635922
         W1a Well: maximal relaxation eigenvalue = 5.85651
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001128
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.166265
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.044274
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.280799
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.278951
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0958, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.35e+05 1.18e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00332  2.99e-17  9.84e-51
        W1b       301         1  9.02e-15  2.96e-48
         P1  3.34e+16  1.11e+14         1  3.28e-34
         P2  1.02e+50  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00183  4.55e-21  1.49e-54
        W1b       547         1  2.49e-18  8.17e-52
         P1   2.2e+20  4.02e+17         1  3.28e-34
         P2  6.69e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.09838, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38788, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.992     0.078         0         1
          1      27.7      1.29         1   -0.0219
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.078  -0.00126        -1
          1      1.76      1.29        -1   0.00126
         *Z       ---       ---   1.9e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.223821, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63091, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246    0.0226         0         1
          1      7.73     0.492         1   -0.0672
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0226  -0.00387        -1
          1     0.491     0.492        -1   0.00387
         *Z       ---       ---   1.9e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20872, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.180829, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39346, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134    0.0116         0         1
          1      4.41     0.428         1    -0.133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0085    0.0116  -0.00767        -1
          1     0.281     0.428        -1   0.00767
         *Z       ---       ---   1.9e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39401, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.053456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057009, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0718    0.0054         0     0.999
          1       2.6      0.38         1    -0.243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00456    0.0054    -0.014        -1
          1     0.165      0.38        -1     0.014
         *Z       ---       ---   1.9e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.057076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018363, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002797, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.038   0.00231         0     0.999
          1       1.6     0.322         1    -0.382
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00242   0.00231    -0.022        -1
          1     0.102     0.322        -1     0.022
         *Z       ---       ---   1.9e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021243, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001898
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000445
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.258247
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177531
         W1a Well: minimal relaxation eigenvalue = 0.0624809
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001172
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.165013
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043963
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079656
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.273084
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.01566, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.45e+05  1.5e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00442  2.03e-17  1.65e-49
        W1b       226         1  4.59e-15  3.73e-47
         P1  4.93e+16  2.18e+14         1  8.12e-33
         P2  6.07e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00304  3.27e-21  2.65e-53
        W1b       329         1  1.07e-18  8.71e-51
         P1  3.06e+20  9.31e+17         1  8.12e-33
         P2  3.77e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.01831, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13029, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32728, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.941    0.0891         0         1
          1      30.7      1.44         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00122        -1
          1      1.92      1.44        -1   0.00122
         *Z       ---       ---  1.72e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32924, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13154, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173693, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0267         0         1
          1      8.44     0.529         1    -0.059
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0152    0.0267  -0.00392        -1
          1     0.527     0.529        -1   0.00392
         *Z       ---       ---  1.72e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31099, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.245246, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41364, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134     0.014         0     0.999
          1      4.81      0.46         1    -0.119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014   -0.0079        -1
          1       0.3      0.46        -1    0.0079
         *Z       ---       ---  1.72e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.461554, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002637, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.470421, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0728   0.00674         0     0.999
          1      2.83     0.412         1     -0.22
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00674   -0.0146        -1
          1     0.177     0.412        -1    0.0146
         *Z       ---       ---  1.72e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.470785, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002604, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019854, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.039     0.003         0     0.998
          1      1.74     0.354         1     -0.35
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244     0.003   -0.0233        -1
          1     0.109     0.354        -1    0.0233
         *Z       ---       ---  1.72e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019877, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001833
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000446
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.146306
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.19535
         W1a Well: minimal relaxation eigenvalue = 0.0615737
         W1a Well: maximal relaxation eigenvalue = 6.0739
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001886
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264502
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077472
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088737
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.315339
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.11295, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.26e+05 1.89e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00622  1.46e-17  2.28e-48
        W1b       161         1  2.34e-15  3.67e-46
         P1  6.86e+16  4.27e+14         1  1.57e-31
         P2  4.38e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00488  2.42e-21  3.79e-52
        W1b       205         1  4.95e-19  7.76e-50
         P1  4.14e+20  2.02e+18         1  1.57e-31
         P2  2.64e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.11676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69861, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.282724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.00029, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.956     0.103         0         1
          1      35.4      1.25         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103   -0.0013        -1
          1      2.18      1.25        -1    0.0013
         *Z       ---       ---  1.59e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.00308, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.70457, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.251448, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.255    0.0322         0         1
          1      9.36     0.538         1   -0.0535
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322  -0.00422        -1
          1     0.576     0.538        -1   0.00422
         *Z       ---       ---  1.59e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.96595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.645661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002672, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.654739, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.142    0.0173         0     0.999
          1      5.29     0.487         1    -0.108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0173  -0.00852        -1
          1     0.325     0.487        -1   0.00852
         *Z       ---       ---  1.59e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.655097, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01741, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0787   0.00863         0     0.999
          1       3.1     0.445         1    -0.201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00863   -0.0159        -1
          1     0.191     0.445        -1    0.0159
         *Z       ---       ---  1.59e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017363, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00264, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020059, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0428   0.00401         0     0.998
          1      1.91     0.388         1    -0.322
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00401   -0.0254        -1
          1     0.118     0.388        -1    0.0254
         *Z       ---       ---  1.59e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020082, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001895
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000425
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036282
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.193226
         W1a Well: minimal relaxation eigenvalue = 0.0606607
         W1a Well: maximal relaxation eigenvalue = 4.42925
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001839
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.261749
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073491
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074206
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.293377
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.956638, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.13e+05 2.38e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00873  1.05e-17  2.54e-47
        W1b       115         1   1.2e-15  2.91e-45
         P1  9.55e+16  8.34e+14         1  2.43e-30
         P2  3.93e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00756  1.83e-21  4.45e-51
        W1b       132         1  2.42e-19  5.88e-49
         P1  5.46e+20  4.13e+18         1  2.43e-30
         P2  2.25e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.960721, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246222, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87626, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.987     0.118         0         1
          1      40.3      1.14         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.118  -0.00141        -1
          1      2.45      1.14        -1   0.00141
         *Z       ---       ---  1.47e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59798, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236813, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84197, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.272    0.0385         0         1
          1      10.3      0.56         1    -0.049
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0385  -0.00458        -1
          1     0.626      0.56        -1   0.00458
         *Z       ---       ---  1.47e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.84432, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.90204, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002494, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910688, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154    0.0213         0     0.999
          1      5.79      0.52         1   -0.0988
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00935    0.0213  -0.00923        -1
          1     0.351      0.52        -1   0.00923
         *Z       ---       ---  1.47e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911064, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016329, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002489, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0863     0.011         0     0.998
          1      3.39     0.483         1    -0.184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00524     0.011   -0.0172        -1
          1     0.205     0.483        -1    0.0172
         *Z       ---       ---  1.47e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018896, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016261, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002476, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01879, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0476   0.00532         0     0.997
          1      2.09     0.426         1    -0.297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00289   0.00532   -0.0277        -1
          1     0.127     0.426        -1    0.0277
         *Z       ---       ---  1.47e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018813, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001871
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000436
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038572
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.189158
         W1a Well: minimal relaxation eigenvalue = 0.0597142
         W1a Well: maximal relaxation eigenvalue = 6.74834
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001774
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.233656
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071379
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099942
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.295352
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.951655, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.54e+05 2.97e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0123  7.91e-18  2.45e-46
        W1b        81         1  6.41e-16  1.98e-44
         P1  1.26e+17  1.56e+15         1  3.09e-29
         P2  4.09e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0114  1.42e-21  4.39e-50
        W1b      87.9         1  1.25e-19  3.86e-48
         P1  7.04e+20  8.01e+18         1  3.09e-29
         P2  2.28e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.955382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5765, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253623, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86288, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.135         0         1
          1      44.2      1.25         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.135  -0.00159        -1
          1      2.64      1.25        -1   0.00159
         *Z       ---       ---  1.38e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.86526, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5819, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235781, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82544, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.299     0.046         0     0.999
          1      11.2     0.605         1   -0.0459
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046   -0.0051        -1
          1      0.67     0.605        -1    0.0051
         *Z       ---       ---  1.38e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82774, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.855847, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002546, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.864631, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0262         0     0.999
          1       6.3     0.562         1   -0.0914
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0103    0.0262   -0.0102        -1
          1     0.376     0.562        -1    0.0102
         *Z       ---       ---  1.38e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.864989, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016531, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019109, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0974    0.0139         0     0.998
          1      3.69     0.524         1     -0.17
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00582    0.0139   -0.0189        -1
          1      0.22     0.524        -1    0.0189
         *Z       ---       ---  1.38e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019038, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0544   0.00705         0     0.997
          1      2.28     0.467         1    -0.273
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00705   -0.0303        -1
          1     0.136     0.467        -1    0.0303
         *Z       ---       ---  1.38e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019061, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001781
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000432
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04069
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.19141
         W1a Well: minimal relaxation eigenvalue = 0.0587158
         W1a Well: maximal relaxation eigenvalue = 10.7587
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001671
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.251465
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073476
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.098887
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.297521
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.976825, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.35e+05 3.71e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0173  6.11e-18  2.02e-45
        W1b      57.9         1  3.54e-16  1.17e-43
         P1  1.64e+17  2.83e+15         1  3.31e-28
         P2  4.96e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0167  1.12e-21  3.72e-49
        W1b        60         1  6.75e-20  2.23e-47
         P1  8.89e+20  1.48e+19         1  3.31e-28
         P2  2.69e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.980548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.261433, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87147, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.155         0         1
          1      46.9      1.62         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067     0.155   -0.0018        -1
          1      2.76      1.62        -1    0.0018
         *Z       ---       ---  1.32e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239904, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85126, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0546         0     0.999
          1      12.1     0.676         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0195    0.0546  -0.00568        -1
          1      0.71     0.676        -1   0.00568
         *Z       ---       ---  1.32e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002611, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.829903, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.193    0.0319         0     0.999
          1      6.82     0.614         1    -0.085
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0319   -0.0112        -1
          1       0.4     0.614        -1    0.0112
         *Z       ---       ---  1.32e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.830265, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016761, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019404, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.111    0.0175         0     0.997
          1      4.01      0.57         1    -0.157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00651    0.0175   -0.0206        -1
          1     0.235      0.57        -1    0.0206
         *Z       ---       ---  1.32e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016675, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002585, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019317, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0628   0.00924         0     0.996
          1       2.5     0.511         1    -0.252
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00369   0.00924    -0.033    -0.999
          1     0.147     0.511    -0.999     0.033
         *Z       ---       ---  1.32e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01934, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001838
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000418
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038696
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179491
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001813
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.241113
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071467
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09447
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.281819
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.929767, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.54e+05 4.59e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0238  4.69e-18  1.41e-44
        W1b      42.1         1  1.97e-16  5.94e-43
         P1  2.13e+17  5.07e+15         1  3.01e-27
         P2  7.08e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0238  9.06e-22  2.73e-48
        W1b        42         1  3.81e-20  1.15e-46
         P1   1.1e+21  2.63e+19         1  3.01e-27
         P2  3.66e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.933503, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52127, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.256936, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79268, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.176         0         1
          1      51.6      1.74         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00202        -1
          1      2.99      1.74        -1   0.00202
         *Z       ---       ---  1.25e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79506, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52377, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.228862, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.367    0.0644         0     0.999
          1      13.2     0.725         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0644  -0.00629        -1
          1     0.764     0.725        -1   0.00629
         *Z       ---       ---  1.25e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.76198, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00378, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002472, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0385         0     0.998
          1      7.44     0.664         1   -0.0792
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0122        -1
          1     0.431     0.664        -1    0.0122
         *Z       ---       ---  1.25e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015961, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002458, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018471, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0218         0     0.997
          1      4.38      0.62         1    -0.145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00729    0.0218   -0.0223        -1
          1     0.254      0.62        -1    0.0223
         *Z       ---       ---  1.25e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018495, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015868, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018368, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0724    0.0119         0     0.995
          1      2.74      0.56         1    -0.231
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419    0.0119   -0.0357    -0.999
          1     0.158      0.56    -0.999    0.0357
         *Z       ---       ---  1.25e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018391, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001792
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000416
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037486
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.176824
         W1a Well: minimal relaxation eigenvalue = 0.0572581
         W1a Well: maximal relaxation eigenvalue = 6.11952
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001834
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.239828
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070575
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09033
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.286728
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.924327, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.35e+05 5.67e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0328  3.75e-18  8.94e-44
        W1b      30.5         1  1.14e-16  2.72e-42
         P1  2.67e+17  8.75e+15         1  2.38e-26
         P2  1.12e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0333  7.43e-22  1.77e-47
        W1b      30.1         1  2.23e-20  5.32e-46
         P1  1.35e+21  4.48e+19         1  2.38e-26
         P2  5.65e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.92802, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53397, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80783, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.199         0         1
          1      60.3       1.2         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0786     0.199  -0.00236        -1
          1      3.46       1.2        -1   0.00236
         *Z       ---       ---   1.2e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.8102, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53867, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.229346, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.416    0.0756         0     0.999
          1      14.7     0.739         1   -0.0392
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0756   -0.0071        -1
          1     0.839     0.739        -1    0.0071
         *Z       ---       ---   1.2e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.77737, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.967303, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002468, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97572, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.247    0.0463         0     0.998
          1      8.21     0.707         1   -0.0747
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0463   -0.0135        -1
          1      0.47     0.707        -1    0.0135
         *Z       ---       ---   1.2e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.976079, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01613, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002453, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146     0.027         0     0.996
          1      4.83     0.672         1    -0.135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834     0.027   -0.0244        -1
          1     0.276     0.672        -1    0.0244
         *Z       ---       ---   1.2e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016032, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018514, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0849    0.0153         0     0.993
          1      3.02     0.612         1    -0.214
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00486    0.0153   -0.0387    -0.999
          1     0.173     0.612    -0.999    0.0387
         *Z       ---       ---   1.2e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018538, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001851
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034098
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.185524
         W1a Well: minimal relaxation eigenvalue = 0.0563928
         W1a Well: maximal relaxation eigenvalue = 9.76691
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001649
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.239375
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070058
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.096022
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.284073
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.931039, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.13e+05 6.97e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0451  3.05e-18  5.05e-43
        W1b      22.1         1  6.75e-17  1.12e-41
         P1  3.28e+17  1.48e+16         1  1.65e-25
         P2  1.98e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0456  6.18e-22  1.02e-46
        W1b      21.9         1  1.35e-20  2.24e-45
         P1  1.62e+21  7.38e+19         1  1.65e-25
         P2  9.78e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.934747, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53411, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.237989, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79797, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.223         0     0.999
          1      63.9       1.6         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.223  -0.00281        -1
          1       3.6       1.6        -1   0.00281
         *Z       ---       ---  1.17e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.80076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53979, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.228062, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.482    0.0881         0     0.998
          1      15.9      0.82         1   -0.0382
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0881  -0.00813        -1
          1     0.894      0.82        -1   0.00813
         *Z       ---       ---  1.17e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.979181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002461, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.288    0.0552         0     0.997
          1      8.93     0.773         1   -0.0712
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0552   -0.0151        -1
          1     0.503     0.773        -1    0.0151
         *Z       ---       ---  1.17e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.987864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016033, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002444, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.171    0.0332         0     0.994
          1      5.28     0.733         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00966    0.0332   -0.0268        -1
          1     0.298     0.733        -1    0.0268
         *Z       ---       ---  1.17e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018552, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016021, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002435, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018508, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.101    0.0196         0     0.991
          1      3.32     0.669         1    -0.198
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0057    0.0196    -0.042    -0.999
          1     0.187     0.669    -0.999     0.042
         *Z       ---       ---  1.17e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018532, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001683
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000402
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036454
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177769
         W1a Well: minimal relaxation eigenvalue = 0.0557725
         W1a Well: maximal relaxation eigenvalue = 6.3968
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00179
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.240359
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067488
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083268
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.272665
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.900145, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.64e+05 8.54e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0605  2.46e-18  2.51e-42
        W1b      16.5         1  4.06e-17  4.15e-41
         P1  4.07e+17  2.46e+16         1  1.02e-24
         P2  3.98e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0613  5.21e-22  5.32e-46
        W1b      16.3         1  8.49e-21  8.67e-45
         P1  1.92e+21  1.18e+20         1  1.02e-24
         P2  1.88e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.90383, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.44584, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.226254, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69989, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.249         0     0.999
          1      72.7      1.32         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.099     0.249  -0.00327        -1
          1      4.05      1.32        -1   0.00327
         *Z       ---       ---  1.12e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70223, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45042, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218365, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.549     0.102         0     0.998
          1      17.5     0.863         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102  -0.00914        -1
          1     0.976     0.863        -1   0.00914
         *Z       ---       ---  1.12e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67785, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18244, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0651         0     0.996
          1      9.82     0.833         1   -0.0677
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0651   -0.0167        -1
          1     0.548     0.833        -1    0.0167
         *Z       ---       ---  1.12e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002339, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.198    0.0402         0     0.993
          1      5.81     0.797         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0402   -0.0291        -1
          1     0.324     0.797        -1    0.0291
         *Z       ---       ---  1.12e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017609, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015114, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017487, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.118    0.0245     0.011     0.989
          1      3.67     0.731         1    -0.183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0066    0.0245    -0.045    -0.999
          1     0.205     0.731    -0.999     0.045
         *Z       ---       ---  1.12e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01751, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001793
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035768
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179702
         W1a Well: minimal relaxation eigenvalue = 0.0549719
         W1a Well: maximal relaxation eigenvalue = 10.0621
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001827
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.224995
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066696
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094667
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.272747
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.896275, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229  1.4e+05 1.04e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0801  2.05e-18  1.16e-41
        W1b      12.5         1  2.56e-17  1.45e-40
         P1  4.87e+17   3.9e+16         1  5.66e-24
         P2   8.6e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0811  4.44e-22  2.52e-45
        W1b      12.3         1  5.48e-21   3.1e-44
         P1  2.25e+21  1.83e+20         1  5.66e-24
         P2  3.98e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.900751, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.227311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70767, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.277         0     0.999
          1      78.5      1.57         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.277  -0.00379        -1
          1      4.31      1.57        -1   0.00379
         *Z       ---       ---   1.1e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.71005, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45958, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218847, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.627     0.117         0     0.997
          1        19     0.952         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0345     0.117   -0.0103        -1
          1      1.04     0.952        -1    0.0103
         *Z       ---       ---   1.1e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.68762, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003942, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17482, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.38     0.076         0     0.995
          1      10.7     0.911         1   -0.0647
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0209     0.076   -0.0183        -1
          1     0.589     0.911        -1    0.0183
         *Z       ---       ---   1.1e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17518, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015267, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002338, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0481         0     0.991
          1      6.37     0.869         1    -0.111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0126    0.0481   -0.0314        -1
          1      0.35     0.869        -1    0.0314
         *Z       ---       ---   1.1e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017679, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002332, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017728, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.139    0.0303    0.0134     0.987
          1      4.05     0.799         1     -0.17
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00763    0.0303   -0.0481    -0.999
          1     0.223     0.799    -0.999    0.0481
         *Z       ---       ---   1.1e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017751, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00162
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000391
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039281
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166158
         W1a Well: minimal relaxation eigenvalue = 0.0541168
         W1a Well: maximal relaxation eigenvalue = 13.6688
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001601
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.226568
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063673
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094094
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260062
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.870803, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.43e+05 1.27e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.104   1.7e-18  4.84e-41
        W1b      9.58         1  1.63e-17  4.63e-40
         P1  5.89e+17  6.14e+16         1  2.85e-23
         P2  2.07e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.106  3.83e-22  1.09e-44
        W1b      9.46         1  3.63e-21  1.03e-43
         P1  2.61e+21  2.76e+20         1  2.85e-23
         P2  9.17e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.874468, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.37676, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6319, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.28     0.306         0     0.999
          1        84      2.08         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.306  -0.00437        -1
          1      4.54      2.08        -1   0.00437
         *Z       ---       ---  1.07e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63426, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.38371, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208411, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.716     0.133         0     0.996
          1      20.6      1.06         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133   -0.0115        -1
          1      1.12      1.06        -1    0.0115
         *Z       ---       ---  1.07e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60099, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.022494, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34223, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.436    0.0879         0     0.994
          1      11.7         1         1    -0.062
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236    0.0879     -0.02        -1
          1     0.632         1        -1      0.02
         *Z       ---       ---  1.07e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016341, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002224, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.266    0.0569    0.0108     0.989
          1      6.98      0.95         1    -0.105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0569   -0.0338    -0.999
          1     0.378      0.95    -0.999    0.0338
         *Z       ---       ---  1.07e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014351, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002227, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016627, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.162    0.0369    0.0163     0.984
          1      4.47     0.875         1    -0.158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0369   -0.0511    -0.999
          1     0.242     0.875    -0.999    0.0511
         *Z       ---       ---  1.07e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01665, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.0017
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03313
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168462
         W1a Well: minimal relaxation eigenvalue = 0.0537563
         W1a Well: maximal relaxation eigenvalue = 7.27034
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00163
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228462
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063867
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09055
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.261335
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.866783, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.19e+05 1.53e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.134  1.45e-18   1.9e-40
        W1b      7.46         1  1.08e-17  1.41e-39
         P1  6.89e+17  9.24e+16         1  1.31e-22
         P2  5.27e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.136  3.34e-22  4.37e-44
        W1b      7.37         1  2.46e-21  3.22e-43
         P1  2.99e+21  4.06e+20         1  1.31e-22
         P2  2.29e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.870447, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.37903, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.628, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55     0.338         0     0.998
          1      96.3      1.46         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00497        -1
          1      5.18      1.46        -1   0.00497
         *Z       ---       ---  1.05e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63035, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.38285, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59791, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807      0.15         0     0.995
          1      22.9       1.1         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0127        -1
          1      1.23       1.1        -1    0.0127
         *Z       ---       ---  1.05e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60021, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31898, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.02303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.495     0.101         0     0.992
          1      12.9      1.07         1   -0.0594
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101   -0.0217        -1
          1     0.694      1.07        -1    0.0217
         *Z       ---       ---  1.05e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34815, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016829, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002249, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019341, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.304     0.067     0.013     0.987
          1      7.73      1.03         1   -0.0984
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163     0.067    -0.036    -0.999
          1     0.416      1.03    -0.999     0.036
         *Z       ---       ---  1.05e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019381, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014387, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016641, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.187    0.0446    0.0193     0.981
          1      4.97     0.952         1    -0.146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0446   -0.0535    -0.999
          1     0.267     0.952    -0.999    0.0535
         *Z       ---       ---  1.05e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016665, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001726
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000404
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.995984
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1801
         W1a Well: minimal relaxation eigenvalue = 0.0530077
         W1a Well: maximal relaxation eigenvalue = 11.4029
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001696
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.236943
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065026
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085513
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.262176
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.84663, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 9.59e+04 1.85e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.17  1.25e-18  6.92e-40
        W1b      5.88         1  7.35e-18  4.07e-39
         P1  7.99e+17  1.36e+17         1  5.53e-22
         P2  1.45e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.172  2.94e-22  1.62e-43
        W1b      5.81         1  1.71e-21  9.44e-43
         P1   3.4e+21  5.86e+20         1  5.53e-22
         P2  6.15e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 1.85031, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39532, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.233526, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.65992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.87     0.374         0     0.998
          1       102      2.01         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.374  -0.00559        -1
          1      5.42      2.01        -1   0.00559
         *Z       ---       ---  1.04e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.66231, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3992, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.211377, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61723, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.913     0.169         0     0.994
          1      24.8      1.22         1   -0.0339
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0484     0.169    -0.014        -1
          1      1.32      1.22        -1     0.014
         *Z       ---       ---  1.04e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.61952, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28271, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.018506, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3069, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.563     0.116         0      0.99
          1      14.1      1.18         1    -0.057
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.116   -0.0235        -1
          1     0.747      1.18        -1    0.0235
         *Z       ---       ---  1.04e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3073, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01471, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002264, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017068, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.348     0.078    0.0156     0.984
          1      8.49      1.13         1   -0.0929
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184     0.078   -0.0383    -0.999
          1      0.45      1.13    -0.999    0.0383
         *Z       ---       ---  1.04e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002264, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.217    0.0532    0.0228     0.977
          1      5.49      1.04         1    -0.137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0532   -0.0563    -0.998
          1     0.291      1.04    -0.998    0.0563
         *Z       ---       ---  1.04e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016852, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001727
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035866
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166766
         W1a Well: minimal relaxation eigenvalue = 0.0524324
         W1a Well: maximal relaxation eigenvalue = 10.7298
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001696
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211211
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060162
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087662
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.24272
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.824879, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.16e+05 2.23e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.213  1.07e-18  2.32e-39
        W1b       4.7         1  5.02e-18  1.09e-38
         P1  9.36e+17  1.99e+17         1  2.17e-21
         P2  4.32e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.216  2.61e-22  5.65e-43
        W1b      4.64         1  1.21e-21  2.62e-42
         P1  3.83e+21  8.27e+20         1  2.17e-21
         P2  1.77e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.828524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32533, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.216766, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55579, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.21     0.405         0     0.997
          1       114      1.82         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.405   -0.0063        -1
          1      5.99      1.82        -1    0.0063
         *Z       ---       ---  1.03e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55819, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32433, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200453, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53116, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.188         0     0.993
          1      27.2      1.32         1   -0.0332
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0539     0.188   -0.0153        -1
          1      1.43      1.32        -1    0.0153
         *Z       ---       ---  1.03e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33901, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149702, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4952, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.636     0.131    0.0115     0.988
          1      15.5      1.28         1   -0.0548
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0333     0.131   -0.0253        -1
          1     0.812      1.28        -1    0.0253
         *Z       ---       ---  1.03e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4958, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.033558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002159, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.036228, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.395    0.0898    0.0184     0.982
          1      9.36      1.22         1   -0.0879
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0898   -0.0405    -0.999
          1     0.491      1.22    -0.999    0.0405
         *Z       ---       ---  1.03e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.036286, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002147, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015974, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0627    0.0264     0.974
          1      6.08      1.13         1    -0.128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.013    0.0627   -0.0588    -0.998
          1     0.319      1.13    -0.998    0.0588
         *Z       ---       ---  1.03e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015998, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001726
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000401
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033281
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172916
         W1a Well: minimal relaxation eigenvalue = 0.0519977
         W1a Well: maximal relaxation eigenvalue = 6.87135
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001757
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.225823
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064437
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070399
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.251164
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.838669, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 9.27e+04 2.68e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.264  9.38e-19  7.42e-39
        W1b      3.79         1  3.55e-18  2.81e-38
         P1  1.07e+18  2.82e+17         1  7.91e-21
         P2  1.35e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.267  2.33e-22  1.85e-42
        W1b      3.74         1  8.73e-22  6.91e-42
         P1  4.29e+21  1.15e+21         1  7.91e-21
         P2  5.42e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.842663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.226336, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59373, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.59     0.442         0     0.996
          1       127      1.76         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187     0.442  -0.00701        -1
          1      6.59      1.76        -1   0.00701
         *Z       ---       ---  1.02e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.59617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34988, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.2038, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15      0.21         0     0.991
          1        30      1.42         1   -0.0325
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.06      0.21   -0.0167        -1
          1      1.56      1.42        -1    0.0167
         *Z       ---       ---  1.02e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.56259, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35073, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.129949, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48672, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.717     0.148    0.0137     0.986
          1      17.1      1.39         1   -0.0527
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0373     0.148   -0.0271        -1
          1     0.888      1.39        -1    0.0271
         *Z       ---       ---  1.02e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48732, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.031609, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002141, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.034256, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.449     0.103    0.0214     0.979
          1      10.4      1.33         1    -0.083
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0233     0.103   -0.0426    -0.999
          1     0.539      1.33    -0.999    0.0426
         *Z       ---       ---  1.02e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.034315, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013759, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002115, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015921, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.285    0.0736    0.0303      0.97
          1      6.78      1.23         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0148    0.0736   -0.0608    -0.998
          1     0.353      1.23    -0.998    0.0608
         *Z       ---       ---  1.02e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015945, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001639
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000377
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032675
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16302
         W1a Well: minimal relaxation eigenvalue = 0.0512682
         W1a Well: maximal relaxation eigenvalue = 11.7432
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001643
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204044
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059593
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077831
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.240229
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.797221, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236  1.3e+05  3.2e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.324  8.15e-19  2.21e-38
        W1b      3.08         1  2.51e-18   6.8e-38
         P1  1.23e+18  3.98e+17         1  2.71e-20
         P2  4.53e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.328   2.1e-22  5.69e-42
        W1b      3.05         1  6.41e-22  1.74e-41
         P1  4.76e+21  1.56e+21         1  2.71e-20
         P2  1.76e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.800899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28824, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52045, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.03     0.479         0     0.996
          1       137      2.09         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.479  -0.00784        -1
          1      7.03      2.09        -1   0.00784
         *Z       ---       ---  1.01e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29247, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.3     0.232    0.0103      0.99
          1      32.6      1.56         1    -0.032
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0666     0.232   -0.0182        -1
          1      1.67      1.56        -1    0.0182
         *Z       ---       ---  1.01e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49626, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29589, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.809     0.165    0.0163     0.984
          1      18.6      1.52         1    -0.051
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0415     0.165    -0.029        -1
          1     0.956      1.52        -1     0.029
         *Z       ---       ---  1.01e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49982, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.160361, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002047, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.167669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.509     0.117     0.025     0.975
          1      11.4      1.45         1   -0.0792
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.117    -0.045    -0.999
          1     0.582      1.45    -0.999     0.045
         *Z       ---       ---  1.01e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.168047, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013233, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002041, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015321, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.325    0.0852    0.0351     0.965
          1      7.46      1.34         1    -0.112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167    0.0852   -0.0637    -0.998
          1     0.383      1.34    -0.998    0.0637
         *Z       ---       ---  1.01e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015344, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001697
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000373
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033185
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16588
         W1a Well: minimal relaxation eigenvalue = 0.0509017
         W1a Well: maximal relaxation eigenvalue = 7.43617
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001634
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208433
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059527
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082717
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.242955
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.813045, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.04e+05 3.82e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.393  7.26e-19  6.33e-38
        W1b      2.54         1  1.84e-18  1.61e-37
         P1  1.38e+18  5.42e+17         1  8.73e-20
         P2  1.58e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.398   1.9e-22  1.66e-41
        W1b      2.51         1  4.78e-22  4.18e-41
         P1  5.25e+21  2.09e+21         1  8.73e-20
         P2  6.02e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.816753, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29225, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222419, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54142, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.44     0.521         0     0.995
          1       152      1.97         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.521  -0.00855        -1
          1      7.75      1.97        -1   0.00855
         *Z       ---       ---  1.01e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54384, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29273, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197997, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.44     0.256    0.0121     0.988
          1        36      1.68         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0734     0.256   -0.0195        -1
          1      1.83      1.68        -1    0.0195
         *Z       ---       ---  1.01e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4998, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29467, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.903     0.185    0.0189     0.981
          1      20.6      1.64         1   -0.0489
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0459     0.185   -0.0307        -1
          1      1.05      1.64        -1    0.0307
         *Z       ---       ---  1.01e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50105, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.132218, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139612, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.133    0.0285     0.971
          1      12.6      1.57         1   -0.0746
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.133   -0.0467    -0.999
          1     0.642      1.57    -0.999    0.0467
         *Z       ---       ---  1.01e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.139976, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01535, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.369    0.0985    0.0392     0.961
          1      8.34      1.45         1    -0.104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0985    -0.065    -0.998
          1     0.425      1.45    -0.998     0.065
         *Z       ---       ---  1.01e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015374, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001653
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000381
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029307
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172743
         W1a Well: minimal relaxation eigenvalue = 0.0502875
         W1a Well: maximal relaxation eigenvalue = 10.8633
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00177
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213159
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058664
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066121
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.237138
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.79742, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.57e+05 4.54e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.474  6.51e-19  1.73e-37
        W1b      2.11         1  1.37e-18  3.65e-37
         P1  1.54e+18  7.28e+17         1  2.66e-19
         P2  5.78e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.479  1.74e-22  4.62e-41
        W1b      2.09         1  3.63e-22  9.64e-41
         P1  5.75e+21  2.76e+21         1  2.66e-19
         P2  2.16e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.80109, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29788, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.214106, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54083, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.95     0.565         0     0.994
          1       165      2.34         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249     0.565  -0.00935        -1
          1      8.29      2.34        -1   0.00935
         *Z       ---       ---  1.01e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30161, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197524, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.61     0.281    0.0143     0.986
          1      39.2      1.84         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.081     0.281    -0.021        -1
          1      1.97      1.84        -1     0.021
         *Z       ---       ---  1.01e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30122, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50432, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.205    0.0219     0.978
          1      22.5      1.79         1   -0.0473
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0508     0.205   -0.0326    -0.999
          1      1.13      1.79    -0.999    0.0326
         *Z       ---       ---  1.01e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.124812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002073, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132202, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.643      0.15    0.0327     0.967
          1      13.8      1.71         1   -0.0713
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0323      0.15    -0.049    -0.999
          1     0.696      1.71    -0.999     0.049
         *Z       ---       ---  1.01e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.132568, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013285, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.418     0.112    0.0445     0.955
          1      9.18      1.58         1   -0.0984
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021     0.112   -0.0675    -0.998
          1     0.462      1.58    -0.998    0.0675
         *Z       ---       ---  1.01e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015408, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001659
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000367
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032628
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168028
         W1a Well: minimal relaxation eigenvalue = 0.0491988
         W1a Well: maximal relaxation eigenvalue = 19.0868
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001645
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214197
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057108
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065472
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.235394
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.793098, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.33e+05 5.39e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.565  5.77e-19  4.44e-37
        W1b      1.77         1  1.02e-18  7.86e-37
         P1  1.73e+18  9.79e+17         1  7.69e-19
         P2  2.25e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.572  1.59e-22  1.23e-40
        W1b      1.75         1  2.79e-22  2.14e-40
         P1  6.27e+21  3.59e+21         1  7.69e-19
         P2  8.15e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.796751, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25949, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215133, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48974, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.53     0.611         0     0.992
          1       176      3.56         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.611   -0.0102        -1
          1      8.64      3.56        -1    0.0102
         *Z       ---       ---  1.01e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49214, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25853, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191496, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.81     0.308    0.0168     0.983
          1      42.3      2.07         1   -0.0302
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.308   -0.0227        -1
          1      2.08      2.07        -1    0.0227
         *Z       ---       ---  1.01e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25874, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191411, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.225    0.0256     0.974
          1      24.3      1.98         1   -0.0465
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.225   -0.0349    -0.999
          1      1.19      1.98    -0.999    0.0349
         *Z       ---       ---  1.01e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45881, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.276448, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.283624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.723     0.166     0.038     0.962
          1      14.9      1.88         1   -0.0699
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0356     0.166   -0.0524    -0.999
          1     0.731      1.88    -0.999    0.0524
         *Z       ---       ---  1.01e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.283983, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002029, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014929, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.47     0.126    0.0518     0.948
          1      9.84      1.75         1   -0.0966
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0231     0.126   -0.0724    -0.997
          1     0.484      1.75    -0.997    0.0724
         *Z       ---       ---  1.01e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014953, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001736
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000375
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031482
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.169544
         W1a Well: minimal relaxation eigenvalue = 0.0493603
         W1a Well: maximal relaxation eigenvalue = 9.42937
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001601
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203206
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057822
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075437
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234301
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.791255, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.03e+05 6.38e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.67  5.24e-19  1.11e-36
        W1b      1.49         1  7.82e-19  1.66e-36
         P1  1.91e+18  1.28e+18         1  2.12e-18
         P2  9.01e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.678  1.47e-22  3.12e-40
        W1b      1.47         1  2.17e-22   4.6e-40
         P1   6.8e+21  4.61e+21         1  2.12e-18
         P2  3.21e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.794944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.259, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201036, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.06     0.658         0     0.991
          1       199       2.5         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.658    -0.011        -1
          1      9.83       2.5        -1     0.011
         *Z       ---       ---  1.02e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48886, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25974, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191564, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45738, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.98     0.337    0.0192     0.981
          1      47.2      2.17         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.098     0.337   -0.0239        -1
          1      2.33      2.17        -1    0.0239
         *Z       ---       ---  1.02e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4597, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26084, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190967, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45806, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25      0.25    0.0287     0.971
          1      27.2      2.12         1   -0.0441
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0619      0.25   -0.0361    -0.999
          1      1.34      2.12    -0.999    0.0361
         *Z       ---       ---  1.02e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46039, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.273751, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001997, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.28094, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.805     0.187    0.0415     0.959
          1      16.9      2.02         1   -0.0646
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0397     0.187   -0.0528    -0.999
          1     0.832      2.02    -0.999    0.0528
         *Z       ---       ---  1.02e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.281302, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012887, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001984, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.531     0.145     0.055     0.945
          1      11.3      1.86         1   -0.0869
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0262     0.145   -0.0709    -0.997
          1     0.558      1.86    -0.997    0.0709
         *Z       ---       ---  1.02e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01494, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001574
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000379
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027876
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164502
         W1a Well: minimal relaxation eigenvalue = 0.0487517
         W1a Well: maximal relaxation eigenvalue = 13.2322
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001546
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19684
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058391
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077355
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.229265
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.773188, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 9.27e+04 7.53e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.787   4.7e-19  2.62e-36
        W1b      1.27         1  5.97e-19  3.33e-36
         P1  2.13e+18  1.68e+18         1  5.58e-18
         P2  3.81e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.798  1.36e-22  7.61e-40
        W1b      1.25         1  1.71e-22  9.55e-40
         P1  7.33e+21  5.85e+21         1  5.58e-18
         P2  1.31e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.776875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2131, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.207737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4343, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.7      0.71    0.0104      0.99
          1       215      2.96         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.327      0.71   -0.0119        -1
          1      10.5      2.96        -1    0.0119
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43674, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20827, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39911, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.2     0.367    0.0221     0.978
          1      51.3      2.38         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.367   -0.0255        -1
          1       2.5      2.38        -1    0.0255
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40145, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21114, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184746, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.274    0.0327     0.967
          1      29.6       2.3         1   -0.0429
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.068     0.274   -0.0381    -0.999
          1      1.44       2.3    -0.999    0.0381
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.445716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.452702, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.898     0.207    0.0468     0.953
          1      18.4       2.2         1   -0.0624
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0438     0.207   -0.0553    -0.998
          1     0.895       2.2    -0.998    0.0553
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.453074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012356, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001955, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014357, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.594     0.162    0.0617     0.938
          1      12.3      2.03         1   -0.0836
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.029     0.162   -0.0739    -0.997
          1     0.601      2.03    -0.997    0.0739
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014381, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001669
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000367
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032218
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164032
         W1a Well: minimal relaxation eigenvalue = 0.0485115
         W1a Well: maximal relaxation eigenvalue = 7.55643
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001649
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.202357
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055062
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069262
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.224843
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.76741, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.48e+05 8.88e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.92  4.31e-19  6.07e-36
        W1b      1.09         1  4.68e-19   6.6e-36
         P1  2.32e+18  2.13e+18         1  1.41e-17
         P2  1.65e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.932  1.27e-22  1.79e-39
        W1b      1.07         1  1.36e-22  1.92e-39
         P1  7.88e+21  7.34e+21         1  1.41e-17
         P2  5.59e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.77136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208883, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43831, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.37     0.761    0.0121     0.988
          1       240      2.83         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.358     0.761   -0.0127        -1
          1      11.6      2.83        -1    0.0127
         *Z       ---       ---  1.03e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44069, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21283, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40356, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.43     0.399    0.0251     0.975
          1      56.9      2.56         1    -0.028
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.399   -0.0268        -1
          1      2.76      2.56        -1    0.0268
         *Z       ---       ---  1.03e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40589, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185031, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40421, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.54     0.301    0.0365     0.964
          1        33      2.49         1   -0.0412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0748     0.301   -0.0394    -0.999
          1       1.6      2.49    -0.999    0.0394
         *Z       ---       ---  1.03e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40654, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.438945, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001957, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.445968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1     0.231    0.0512     0.949
          1      20.6      2.37         1   -0.0586
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0485     0.231   -0.0561    -0.998
          1         1      2.37    -0.998    0.0561
         *Z       ---       ---  1.03e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.446336, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012358, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001927, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014331, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.669     0.183    0.0661     0.934
          1        14      2.17         1   -0.0769
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0325     0.183   -0.0736    -0.997
          1     0.677      2.17    -0.997    0.0736
         *Z       ---       ---  1.03e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014354, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001612
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000363
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031133
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165136
         W1a Well: minimal relaxation eigenvalue = 0.0479634
         W1a Well: maximal relaxation eigenvalue = 11.0685
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001712
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.20005
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055812
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077012
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.229642
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.777849, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.11e+05 1.04e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.07  3.97e-19  1.36e-35
        W1b     0.936         1  3.71e-19  1.27e-35
         P1  2.52e+18  2.69e+18         1  3.42e-17
         P2  7.37e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.08  1.19e-22  4.06e-39
        W1b     0.925         1   1.1e-22  3.76e-39
         P1  8.42e+21  9.11e+21         1  3.42e-17
         P2  2.46e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.781542, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11002, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.210073, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33352, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.16     0.815     0.014     0.986
          1       261      3.15         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.391     0.815   -0.0137        -1
          1      12.5      3.15        -1    0.0137
         *Z       ---       ---  1.04e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22287, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41482, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.69     0.432    0.0286     0.971
          1      61.8      2.79         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.432   -0.0285        -1
          1      2.96      2.79        -1    0.0285
         *Z       ---       ---  1.04e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22172, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186579, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41444, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.71     0.328    0.0412     0.959
          1      35.8      2.71         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0821     0.328   -0.0416    -0.999
          1      1.72      2.71    -0.999    0.0416
         *Z       ---       ---  1.04e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41675, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.509556, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001971, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.516588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.253    0.0574     0.943
          1      22.4      2.58         1    -0.057
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0533     0.253   -0.0588    -0.998
          1      1.07      2.58    -0.998    0.0588
         *Z       ---       ---  1.04e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.516943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012475, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001941, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014461, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.745     0.203    0.0737     0.926
          1      15.2      2.37         1   -0.0745
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0357     0.203   -0.0767    -0.997
          1     0.727      2.37    -0.997    0.0767
         *Z       ---       ---  1.04e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014484, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001571
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029787
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16217
         W1a Well: minimal relaxation eigenvalue = 0.0475024
         W1a Well: maximal relaxation eigenvalue = 11.9635
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001653
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204078
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054722
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060869
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.220798
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.751434, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.14e+05 1.22e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.23  3.61e-19  2.89e-35
        W1b     0.811         1  2.93e-19  2.35e-35
         P1  2.77e+18  3.41e+18         1     8e-17
         P2  3.46e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.25  1.11e-22  8.92e-39
        W1b     0.801         1  8.93e-23  7.15e-39
         P1  8.97e+21  1.12e+22         1     8e-17
         P2  1.12e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.755655, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17806, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199474, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.99     0.872     0.016     0.984
          1       285      3.43         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.427     0.872   -0.0146        -1
          1      13.6      3.43        -1    0.0146
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39623, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17654, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.180117, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36282, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.97     0.466    0.0323     0.968
          1      67.5      3.03         1   -0.0271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.466   -0.0301        -1
          1      3.21      3.03        -1    0.0301
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36544, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180239, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36761, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.89     0.356     0.046     0.954
          1      39.2      2.94         1   -0.0391
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0898     0.356   -0.0434    -0.999
          1      1.86      2.94    -0.999    0.0434
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36994, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.547887, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001897, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.554747, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.278    0.0634     0.937
          1      24.5      2.79         1   -0.0549
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0585     0.278   -0.0609    -0.998
          1      1.16      2.79    -0.998    0.0609
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.555111, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012019, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013939, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.83     0.224    0.0808     0.919
          1      16.6      2.56         1   -0.0713
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0394     0.224   -0.0789    -0.997
          1     0.791      2.56    -0.997    0.0789
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013962, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001636
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000367
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028266
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158299
         W1a Well: minimal relaxation eigenvalue = 0.0472471
         W1a Well: maximal relaxation eigenvalue = 8.06801
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001844
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.206219
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056681
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06784
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219176
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.755322, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.08e+04 1.43e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.41  3.36e-19  6.06e-35
        W1b     0.707         1  2.37e-19  4.29e-35
         P1  2.98e+18  4.22e+18         1  1.81e-16
         P2  1.65e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.43  1.05e-22   1.9e-38
        W1b     0.698         1  7.34e-23  1.33e-38
         P1  9.52e+21  1.36e+22         1  1.81e-16
         P2  5.27e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.758989, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18111, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188679, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.87     0.931    0.0181     0.982
          1       313      3.63         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.466     0.931   -0.0155        -1
          1      14.8      3.63        -1    0.0155
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3974, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179701, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36602, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.26     0.504    0.0359     0.964
          1      74.7      3.28         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.504   -0.0313        -1
          1      3.53      3.28        -1    0.0313
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36835, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180026, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36761, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.09     0.388    0.0504      0.95
          1      43.7      3.17         1   -0.0375
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0986     0.388   -0.0446    -0.999
          1      2.06      3.17    -0.999    0.0446
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37017, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.558032, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001904, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.564865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.306    0.0681     0.932
          1      27.6         3         1   -0.0516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0646     0.306   -0.0613    -0.998
          1       1.3         3    -0.998    0.0613
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.565224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001883, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013965, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.93      0.25    0.0852     0.915
          1      18.9      2.74         1   -0.0658
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0439      0.25    -0.078    -0.997
          1     0.891      2.74    -0.997     0.078
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013988, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001568
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.684254
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164497
         W1a Well: minimal relaxation eigenvalue = 0.0456433
         W1a Well: maximal relaxation eigenvalue = 22.2072
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002173
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203455
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05501
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05166
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214359
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.3927, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 9.27e+04 1.67e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.61  3.08e-19  1.22e-34
        W1b     0.619         1  1.91e-19  7.54e-35
         P1  3.24e+18  5.24e+18         1  3.95e-16
         P2  8.22e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.63  9.94e-23  3.92e-38
        W1b     0.612         1  6.08e-23   2.4e-38
         P1  1.01e+22  1.65e+22         1  3.95e-16
         P2  2.55e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 1.39636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15084, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185595, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36041, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2     0.991    0.0208     0.979
          1       335      5.15         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509     0.991   -0.0167        -1
          1      15.3      5.15        -1    0.0167
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36284, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14501, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32552, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.68     0.538    0.0416     0.958
          1      78.6      3.68         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.538   -0.0342    -0.999
          1      3.59      3.68    -0.999    0.0342
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32787, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174398, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32993, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.34     0.414    0.0592     0.941
          1      44.8      3.51         1   -0.0389
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.414   -0.0494    -0.999
          1      2.05      3.51    -0.999    0.0494
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.676708, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001819, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.683395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.326    0.0818     0.918
          1      27.5      3.33         1   -0.0552
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693     0.326     -0.07    -0.998
          1      1.25      3.33    -0.998      0.07
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.683766, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.268     0.105     0.895
          1      18.3      3.08         1    -0.073
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0464     0.268   -0.0924    -0.996
          1     0.835      3.08    -0.996    0.0924
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013579, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001613
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028824
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156981
         W1a Well: minimal relaxation eigenvalue = 0.0463534
         W1a Well: maximal relaxation eigenvalue = 11.6786
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001743
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203193
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055485
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070376
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216452
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.749909, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222  1.5e+05 1.94e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.83  2.88e-19  2.41e-34
        W1b     0.545         1  1.57e-19  1.32e-34
         P1  3.47e+18  6.36e+18         1  8.37e-16
         P2  4.14e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.86  9.43e-23  7.89e-38
        W1b     0.539         1  5.08e-23  4.25e-38
         P1  1.06e+22  1.97e+22         1  8.37e-16
         P2  1.27e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.75361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37058, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.7       1.1    0.0226     0.977
          1       373      4.36         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.543       1.1   -0.0171        -1
          1      17.3      4.36        -1    0.0171
         *Z       ---       ---  1.08e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.373, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15654, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176377, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3389, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.91     0.595    0.0443     0.956
          1      88.5      3.87         1   -0.0253
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.595   -0.0342    -0.999
          1       4.1      3.87    -0.999    0.0342
         *Z       ---       ---  1.08e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34123, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33832, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.51     0.461    0.0613     0.939
          1      51.6      3.74         1   -0.0356
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.461   -0.0481    -0.999
          1      2.39      3.74    -0.999    0.0481
         *Z       ---       ---  1.08e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.64384, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001834, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.650585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.65     0.366    0.0817     0.918
          1      32.6      3.53         1   -0.0485
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0767     0.366   -0.0656    -0.998
          1      1.51      3.53    -0.998    0.0656
         *Z       ---       ---  1.08e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.650951, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01366, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.303     0.101     0.899
          1      22.3      3.22         1   -0.0614
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0525     0.303   -0.0829    -0.997
          1      1.03      3.22    -0.997    0.0829
         *Z       ---       ---  1.08e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013684, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001585
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000373
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030603
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162375
         W1a Well: minimal relaxation eigenvalue = 0.0454509
         W1a Well: maximal relaxation eigenvalue = 19.3099
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001771
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19801
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053397
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060611
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.215476
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.738906, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.07e+05 2.26e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.07  2.71e-19  4.66e-34
        W1b     0.483         1  1.31e-19  2.25e-34
         P1   3.7e+18  7.66e+18         1  1.72e-15
         P2  2.15e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.1  8.97e-23  1.55e-37
        W1b     0.476         1  4.27e-23  7.36e-38
         P1  1.11e+22  2.34e+22         1  1.72e-15
         P2  6.47e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.742551, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16313, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39024, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.14    0.0259     0.974
          1       404      5.16         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.598      1.14   -0.0184        -1
          1      18.3      5.16        -1    0.0184
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39268, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16369, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178031, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34752, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.36     0.625    0.0504      0.95
          1      94.4      4.24         1   -0.0256
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.198     0.625   -0.0369    -0.999
          1      4.29      4.24    -0.999    0.0369
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34986, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16295, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178349, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34727, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.79     0.486      0.07      0.93
          1      54.3      4.08         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.486   -0.0522    -0.999
          1      2.47      4.08    -0.999    0.0522
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34958, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.603953, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.610742, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.389    0.0942     0.906
          1      33.6      3.86         1   -0.0502
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.083     0.389    -0.072    -0.997
          1      1.53      3.86    -0.997     0.072
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.6111, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011872, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001865, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013781, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.24     0.324     0.118     0.882
          1      22.6      3.55         1   -0.0647
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0563     0.324   -0.0927    -0.996
          1      1.03      3.55    -0.996    0.0927
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013804, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001459
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000353
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029649
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153414
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 16.6298
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.0017
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191107
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052581
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061395
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.207548
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714133, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.35e+05 2.62e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.33  2.51e-19  8.67e-34
        W1b     0.429         1  1.08e-19  3.72e-34
         P1  3.98e+18  9.28e+18         1  3.45e-15
         P2  1.15e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.36  8.56e-23  2.95e-37
        W1b     0.423         1  3.62e-23  1.25e-37
         P1  1.17e+22  2.76e+22         1  3.45e-15
         P2  3.39e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.718257, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00102, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.4       1.2    0.0288     0.971
          1       442      5.41         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.653       1.2   -0.0194        -1
          1      20.1      5.41        -1    0.0194
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20982, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172144, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29699, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.76     0.667     0.055     0.945
          1       104      4.56         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216     0.667   -0.0381    -0.999
          1      4.72      4.56    -0.999    0.0381
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29931, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12054, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173051, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29982, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.05     0.524    0.0753     0.925
          1      60.3      4.39         1   -0.0349
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.138     0.524   -0.0532    -0.999
          1      2.73      4.39    -0.999    0.0532
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.88386, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002548, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89115, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.422    0.0997       0.9
          1      37.7      4.14         1   -0.0475
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0911     0.422   -0.0723    -0.997
          1      1.71      4.14    -0.997    0.0723
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011422, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001806, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.355     0.123     0.877
          1      25.6      3.79         1   -0.0602
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0623     0.355   -0.0915    -0.996
          1      1.16      3.79    -0.996    0.0915
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013295, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001503
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02836
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158578
         W1a Well: minimal relaxation eigenvalue = 0.0453442
         W1a Well: maximal relaxation eigenvalue = 9.77346
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001632
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184872
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054597
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059936
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211559
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.716288, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265 9.12e+04 3.03e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.62  2.37e-19   1.6e-33
        W1b     0.382         1  9.07e-20  6.11e-34
         P1  4.22e+18   1.1e+19         1  6.73e-15
         P2  6.26e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.65  8.19e-23  5.52e-37
        W1b     0.378         1  3.09e-23  2.08e-37
         P1  1.22e+22  3.23e+22         1  6.73e-15
         P2  1.81e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.719979, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194048, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.7      1.27    0.0318     0.968
          1       491       5.3         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.712      1.27   -0.0203        -1
          1      22.3       5.3        -1    0.0203
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34807, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173007, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.2     0.717    0.0591     0.941
          1       117      4.89         1    -0.024
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.236     0.717   -0.0388    -0.999
          1       5.3      4.89    -0.999    0.0388
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30794, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30458, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.35     0.568     0.079     0.921
          1      68.7       4.7         1   -0.0328
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.568    -0.053    -0.999
          1      3.12       4.7    -0.999     0.053
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30687, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.738472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001819, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.745086, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.463     0.102     0.898
          1      43.8       4.4         1   -0.0433
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.463   -0.0699    -0.998
          1      1.99       4.4    -0.998    0.0699
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.745443, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011496, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001819, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.55     0.392     0.122     0.878
          1      30.3      3.98         1   -0.0532
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0701     0.392   -0.0858    -0.996
          1      1.37      3.98    -0.996    0.0858
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013381, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001462
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000364
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028242
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16004
         W1a Well: minimal relaxation eigenvalue = 0.0446386
         W1a Well: maximal relaxation eigenvalue = 17.2723
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001731
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191465
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052215
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072629
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209605
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.732574, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.48e+05 3.51e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.92  2.25e-19  2.88e-33
        W1b     0.343         1   7.7e-20  9.87e-34
         P1  4.45e+18   1.3e+19         1  1.28e-14
         P2  3.47e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.95  7.86e-23  1.01e-36
        W1b     0.338         1  2.66e-23  3.41e-37
         P1  1.27e+22  3.76e+22         1  1.28e-14
         P2  9.92e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.736055, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13939, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198325, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.9       1.4    0.0344     0.966
          1       527      6.36         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.755       1.4   -0.0208        -1
          1      23.5      6.36        -1    0.0208
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35622, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14065, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175786, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32272, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.64     0.779     0.065     0.935
          1       124      5.33         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252     0.779   -0.0407    -0.999
          1      5.54      5.33    -0.999    0.0407
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32506, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14163, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32171, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.63     0.614    0.0878     0.912
          1      71.7      5.13         1    -0.033
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.614   -0.0563    -0.998
          1       3.2      5.13    -0.998    0.0563
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.324, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.69539, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.702067, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.4     0.499     0.115     0.885
          1      44.8      4.83         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.499   -0.0757    -0.997
          1         2      4.83    -0.997    0.0757
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.702422, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011619, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001811, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013474, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.66     0.423      0.14      0.86
          1      30.4       4.4         1   -0.0559
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.074     0.423    -0.095    -0.995
          1      1.36       4.4    -0.995     0.095
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.0135, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001543
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027979
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153048
         W1a Well: minimal relaxation eigenvalue = 0.0445813
         W1a Well: maximal relaxation eigenvalue = 12.4447
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001583
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19044
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051027
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060377
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204731
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.705323, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 8.43e+04 4.05e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25   2.1e-19  5.02e-33
        W1b     0.308         1  6.48e-20  1.55e-33
         P1  4.75e+18  1.54e+19         1  2.39e-14
         P2  1.99e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.29  7.56e-23   1.8e-36
        W1b     0.304         1   2.3e-23  5.49e-37
         P1  1.32e+22  4.35e+22         1  2.39e-14
         P2  5.54e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.708944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192801, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.7      1.44    0.0384     0.962
          1       582      6.26         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.836      1.44   -0.0222        -1
          1      25.9      6.26        -1    0.0222
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10139, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168937, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.21     0.817    0.0703      0.93
          1       138      5.72         1   -0.0233
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.277     0.817   -0.0419    -0.999
          1      6.15      5.72    -0.999    0.0419
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27865, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10248, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168771, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27711, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         4     0.652     0.093     0.907
          1      80.8      5.48         1   -0.0316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.178     0.652   -0.0568    -0.998
          1       3.6      5.48    -0.998    0.0568
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27939, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.838095, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001795, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.844589, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.67     0.537     0.119     0.881
          1      51.4      5.14         1   -0.0414
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.119     0.537   -0.0744    -0.997
          1      2.29      5.14    -0.997    0.0744
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.84496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011223, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00177, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013036, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.86     0.459     0.141     0.859
          1      35.4      4.63         1   -0.0508
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0828     0.459   -0.0911    -0.996
          1      1.58      4.63    -0.996    0.0911
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013059, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.0015
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029273
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157935
         W1a Well: minimal relaxation eigenvalue = 0.0436457
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001658
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.182271
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049868
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070837
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.2105
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.718539, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.42e+05 4.66e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       3.6     2e-19   8.7e-33
        W1b     0.278         1  5.57e-20  2.42e-33
         P1  4.99e+18   1.8e+19         1  4.35e-14
         P2  1.15e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.64  7.28e-23  3.16e-36
        W1b     0.275         1     2e-23  8.69e-37
         P1  1.37e+22     5e+22         1  4.35e-14
         P2  3.16e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.722252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10906, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31326, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.7      1.52    0.0424     0.958
          1       626      7.81         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.905      1.52   -0.0233        -1
          1      27.3      7.81        -1    0.0233
         *Z       ---       ---  1.18e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31564, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.85     0.864    0.0784     0.922
          1       146      6.25         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.864   -0.0448    -0.999
          1      6.38      6.25    -0.999    0.0448
         *Z       ---       ---  1.18e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28554, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10678, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.169941, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28235, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.4     0.689     0.105     0.895
          1      83.8      5.99         1   -0.0326
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.689   -0.0617    -0.998
          1      3.66      5.99    -0.998    0.0617
         *Z       ---       ---  1.18e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28463, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815737, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.822296, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.9     0.567     0.136     0.864
          1      51.8      5.64         1   -0.0438
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.567   -0.0828    -0.997
          1      2.26      5.64    -0.997    0.0828
         *Z       ---       ---  1.18e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.822652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011322, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001778, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013146, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.99     0.488     0.166     0.834
          1      34.8      5.13         1   -0.0553
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.087     0.488    -0.104    -0.995
          1      1.52      5.13    -0.995     0.104
         *Z       ---       ---  1.18e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01317, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001538
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028562
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158207
         W1a Well: minimal relaxation eigenvalue = 0.0438766
         W1a Well: maximal relaxation eigenvalue = 13.9334
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001506
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.186969
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051882
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063391
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.203137
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.709669, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 8.43e+04 5.36e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.97  1.89e-19  1.46e-32
        W1b     0.252         1  4.75e-20  3.68e-33
         P1   5.3e+18  2.11e+19         1  7.75e-14
         P2  6.84e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.02  7.03e-23  5.45e-36
        W1b     0.249         1  1.75e-23  1.36e-36
         P1  1.42e+22  5.72e+22         1  7.75e-14
         P2  1.83e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.713323, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07971, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188963, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28061, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      22.3      1.61    0.0458     0.954
          1       693      7.35         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.98      1.61   -0.0241        -1
          1      30.4      7.35        -1    0.0241
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28305, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08127, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164946, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25175, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.39     0.926    0.0822     0.918
          1       164      6.69         1   -0.0226
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.324     0.926   -0.0449    -0.999
          1      7.18      6.69    -0.999    0.0449
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08001, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165086, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25086, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.77     0.745     0.108     0.892
          1      95.7      6.39         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.209     0.745   -0.0604    -0.998
          1       4.2      6.39    -0.998    0.0604
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25314, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.912692, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005407, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.18     0.619     0.136     0.864
          1      60.6      5.97         1   -0.0396
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.14     0.619   -0.0786    -0.997
          1      2.66      5.97    -0.997    0.0786
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.923142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011019, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01279, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.534     0.161     0.839
          1      41.6      5.37         1   -0.0483
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0977     0.534   -0.0958    -0.995
          1      1.83      5.37    -0.995    0.0958
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012813, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001507
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031231
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156282
         W1a Well: minimal relaxation eigenvalue = 0.0413519
         W1a Well: maximal relaxation eigenvalue = 26.2311
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001611
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.190969
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049564
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070408
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198266
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714276, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.43e+05 6.15e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37   1.8e-19  2.44e-32
        W1b     0.229         1  4.12e-20  5.59e-33
         P1  5.55e+18  2.42e+19         1  1.35e-13
         P2  4.09e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  6.81e-23  9.22e-36
        W1b     0.226         1  1.54e-23  2.08e-36
         P1  1.47e+22   6.5e+22         1  1.35e-13
         P2  1.08e+35   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.717866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08085, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186314, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28246, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.7       1.7    0.0502      0.95
          1       757        12         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.06       1.7   -0.0253        -1
          1      31.3        12        -1    0.0253
         *Z       ---       ---  1.22e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08241, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166088, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25428, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.44     0.974    0.0927     0.907
          1       176      7.41         1   -0.0234
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.349     0.974   -0.0488    -0.999
          1      7.28      7.41    -0.999    0.0488
         *Z       ---       ---  1.22e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25664, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08103, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165938, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25276, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.4      0.78     0.124     0.876
          1      99.1      7.02         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223      0.78   -0.0677    -0.998
          1       4.1      7.02    -0.998    0.0677
         *Z       ---       ---  1.22e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25506, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.909268, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005215, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919132, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.54     0.647     0.162     0.838
          1      59.7      6.61         1   -0.0443
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.146     0.647   -0.0921    -0.996
          1      2.47      6.61    -0.996    0.0921
         *Z       ---       ---  1.22e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919498, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001723, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.41     0.564       0.2       0.8
          1        39      6.05         1   -0.0571
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0995     0.564    -0.119    -0.993
          1      1.61      6.05    -0.993     0.119
         *Z       ---       ---  1.22e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012839, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001439
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027168
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157321
         W1a Well: minimal relaxation eigenvalue = 0.0432471
         W1a Well: maximal relaxation eigenvalue = 14.6962
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001625
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191748
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052755
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071864
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201293
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.719323, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266  8.9e+04 7.04e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.79  1.73e-19  4.01e-32
        W1b     0.209         1   3.6e-20  8.37e-33
         P1  5.79e+18  2.78e+19         1  2.32e-13
         P2  2.49e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.86   6.6e-23  1.53e-35
        W1b     0.206         1  1.36e-23  3.16e-36
         P1  1.52e+22  7.36e+22         1  2.32e-13
         P2  6.52e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.722936, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08717, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191532, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.2      1.84    0.0531     0.947
          1       826      8.52         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      1.84   -0.0256        -1
          1      35.7      8.52        -1    0.0256
         *Z       ---       ---  1.25e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09102, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168207, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.7      1.06    0.0941     0.906
          1       194      7.76         1   -0.0217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.376      1.06   -0.0474    -0.999
          1       8.4      7.76    -0.999    0.0474
         *Z       ---       ---  1.25e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26735, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09201, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168328, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26614, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.63     0.855     0.122     0.878
          1       113      7.41         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.243     0.855   -0.0632    -0.998
          1       4.9      7.41    -0.998    0.0632
         *Z       ---       ---  1.25e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.868469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875862, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.77     0.714     0.152     0.848
          1      71.6       6.9         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.163     0.714   -0.0817    -0.997
          1       3.1       6.9    -0.997    0.0817
         *Z       ---       ---  1.25e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876217, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011161, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012959, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.65     0.621     0.179     0.821
          1      49.2      6.19         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.115     0.621    -0.099    -0.995
          1      2.13      6.19    -0.995     0.099
         *Z       ---       ---  1.25e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012981, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001541
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000356
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026955
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150064
         W1a Well: minimal relaxation eigenvalue = 0.043148
         W1a Well: maximal relaxation eigenvalue = 9.68424
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001624
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.187194
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049064
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06101
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198359
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.690004, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.54e+05 8.06e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.25  1.64e-19  6.42e-32
        W1b     0.191         1  3.12e-20  1.22e-32
         P1  6.11e+18   3.2e+19         1  3.92e-13
         P2  1.56e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.31  6.41e-23  2.51e-35
        W1b     0.188         1  1.21e-23  4.73e-36
         P1  1.56e+22  8.29e+22         1  3.92e-13
         P2  3.98e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.693652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05877, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26009, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.3      1.96    0.0566     0.943
          1       904      9.12         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.96   -0.0262        -1
          1        39      9.12        -1    0.0262
         *Z       ---       ---  1.27e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26257, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164203, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23024, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.43      1.14     0.098     0.902
          1       217      8.32         1   -0.0207
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.407      1.14   -0.0474    -0.999
          1      9.35      8.32    -0.999    0.0474
         *Z       ---       ---  1.27e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23256, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05749, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164244, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.14     0.923     0.125     0.875
          1       129      7.91         1   -0.0271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.265     0.923    -0.062    -0.998
          1      5.55      7.91    -0.998     0.062
         *Z       ---       ---  1.27e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22947, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.972961, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.012895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.15     0.776     0.152     0.848
          1      82.8       7.3         1   -0.0342
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.179     0.776   -0.0782    -0.997
          1      3.57       7.3    -0.997    0.0782
         *Z       ---       ---  1.27e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.99097, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001733, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012754, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.96     0.676     0.175     0.825
          1      57.8      6.46         1   -0.0405
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.128     0.676   -0.0924    -0.996
          1      2.49      6.46    -0.996    0.0924
         *Z       ---       ---  1.27e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012783, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001475
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000352
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027917
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151457
         W1a Well: minimal relaxation eigenvalue = 0.0426313
         W1a Well: maximal relaxation eigenvalue = 15.4781
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001719
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188075
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051609
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06763
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197543
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701339, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 9.49e+04 9.21e+14
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.72  1.57e-19  1.02e-31
        W1b     0.175         1  2.75e-20  1.79e-32
         P1  6.35e+18  3.63e+19         1  6.49e-13
         P2  9.78e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       5.8  6.24e-23  4.05e-35
        W1b     0.173         1  1.08e-23  6.99e-36
         P1   1.6e+22  9.29e+22         1  6.49e-13
         P2  2.47e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.705243, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26719, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.1      2.04    0.0618     0.938
          1       982      9.95         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.33      2.04   -0.0275        -1
          1      41.8      9.95        -1    0.0275
         *Z       ---       ---   1.3e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2696, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0707, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163968, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24034, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.3      1.19     0.107     0.893
          1       230      9.03         1    -0.021
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.44      1.19   -0.0503    -0.999
          1      9.82      9.03    -0.999    0.0503
         *Z       ---       ---   1.3e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24266, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0564, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164367, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22646, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.68     0.965     0.138     0.862
          1       134      8.59         1   -0.0279
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.285     0.965   -0.0665    -0.998
          1      5.72      8.59    -0.998    0.0665
         *Z       ---       ---   1.3e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2288, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.946176, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.008624, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.48     0.814      0.17      0.83
          1      84.7      7.97         1   -0.0358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.191     0.814   -0.0854    -0.996
          1      3.61      7.97    -0.996    0.0854
         *Z       ---       ---   1.3e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959857, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01273, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.16     0.713     0.198     0.802
          1      57.9      7.11         1   -0.0433
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.135     0.713    -0.103    -0.995
          1      2.47      7.11    -0.995     0.103
         *Z       ---       ---   1.3e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012753, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001501
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000337
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029101
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15454
         W1a Well: minimal relaxation eigenvalue = 0.0406043
         W1a Well: maximal relaxation eigenvalue = 25.4688
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001641
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184558
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048123
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061557
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194746
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.68996, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.16e+04 1.05e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.23   1.5e-19  1.59e-31
        W1b     0.161         1  2.41e-20  2.55e-32
         P1  6.67e+18  4.15e+19         1  1.06e-12
         P2   6.3e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.31  6.08e-23  6.43e-35
        W1b     0.159         1  9.63e-24  1.02e-35
         P1  1.65e+22  1.04e+23         1  1.06e-12
         P2  1.55e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.693593, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04581, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172764, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24411, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      35.3      2.15    0.0667     0.933
          1  1.06e+03      14.9         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      2.15   -0.0286        -1
          1      43.1      14.9        -1    0.0286
         *Z       ---       ---  1.32e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24656, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0481, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162024, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21575, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.6      1.24     0.119     0.881
          1       247      9.97         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.471      1.24   -0.0538    -0.999
          1        10      9.97    -0.999    0.0538
         *Z       ---       ---  1.32e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04852, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161343, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.45      1.01     0.155     0.845
          1       139      9.42         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.302      1.01   -0.0733    -0.997
          1      5.66      9.42    -0.997    0.0733
         *Z       ---       ---  1.32e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21758, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0112, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01573, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0316, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.91     0.851     0.197     0.803
          1      84.3      8.81         1   -0.0394
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.851    -0.098    -0.995
          1      3.42      8.81    -0.995     0.098
         *Z       ---       ---  1.32e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012306, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001692, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014204, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.37     0.754     0.238     0.762
          1      55.2      7.99         1   -0.0501
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.754    -0.124    -0.992
          1      2.24      7.99    -0.992     0.124
         *Z       ---       ---  1.32e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014243, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001423
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000343
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028644
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149424
         W1a Well: minimal relaxation eigenvalue = 0.042072
         W1a Well: maximal relaxation eigenvalue = 15.9099
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001702
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183444
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047782
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064946
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196568
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.688291, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.1e+05  1.2e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.76  1.45e-19  2.46e-31
        W1b     0.148         1  2.14e-20  3.64e-32
         P1  6.91e+18  4.67e+19         1   1.7e-12
         P2  4.06e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.84  5.93e-23  1.01e-34
        W1b     0.146         1  8.66e-24  1.47e-35
         P1  1.69e+22  1.15e+23         1   1.7e-12
         P2  9.92e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.691953, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0446, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181557, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.9      2.25    0.0707     0.929
          1  1.17e+03      11.5         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.55      2.25   -0.0293        -1
          1      49.4      11.5        -1    0.0293
         *Z       ---       ---  1.35e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24133, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03636, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158966, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.2      1.33     0.121     0.879
          1       275      10.4         1   -0.0203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.513      1.33   -0.0528    -0.999
          1      11.6      10.4    -0.999    0.0528
         *Z       ---       ---  1.35e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160568, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21133, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.89      1.09     0.153     0.847
          1       160      9.87         1   -0.0267
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.332      1.09   -0.0694    -0.998
          1      6.72      9.87    -0.998    0.0694
         *Z       ---       ---  1.35e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21362, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03841, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.31     0.924     0.187     0.813
          1       100      9.12         1   -0.0341
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223     0.924   -0.0884    -0.996
          1      4.23      9.12    -0.996    0.0884
         *Z       ---       ---  1.35e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01269, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001686, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014589, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.76     0.816     0.217     0.783
          1      68.6      8.11         1    -0.041
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.158     0.816    -0.106    -0.994
          1      2.89      8.11    -0.994     0.106
         *Z       ---       ---  1.35e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014656, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001524
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000344
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030232
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151353
         W1a Well: minimal relaxation eigenvalue = 0.0420327
         W1a Well: maximal relaxation eigenvalue = 10.5703
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001669
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183479
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048144
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064003
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194268
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.688256, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296  6.1e+04 1.36e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.32   1.4e-19  3.76e-31
        W1b     0.137         1  1.91e-20  5.14e-32
         P1  7.15e+18  5.23e+19         1  2.69e-12
         P2  2.66e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.41  5.79e-23  1.56e-34
        W1b     0.135         1  7.82e-24   2.1e-35
         P1  1.73e+22  1.28e+23         1  2.69e-12
         P2  6.41e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.691834, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03421, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169817, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        40      2.37    0.0751     0.925
          1  1.27e+03      12.3         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.68      2.37     -0.03        -1
          1      53.4      12.3        -1      0.03
         *Z       ---       ---  1.38e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22898, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03418, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.41     0.125     0.875
          1       305      11.1         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.556      1.41   -0.0527    -0.999
          1      12.8      11.1    -0.999    0.0527
         *Z       ---       ---  1.38e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20176, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159723, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19784, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.62      1.16     0.155     0.845
          1       181      10.5         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.362      1.16   -0.0677    -0.998
          1      7.62      10.5    -0.998    0.0677
         *Z       ---       ---  1.38e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20037, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.996147, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015499, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01625, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.86     0.996     0.185     0.815
          1       117      9.58         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.246     0.996   -0.0838    -0.996
          1      4.91      9.58    -0.996    0.0838
         *Z       ---       ---  1.38e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0167, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012224, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001683, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014106, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.21     0.881      0.21      0.79
          1      81.2      8.38         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.177     0.881   -0.0977    -0.995
          1      3.41      8.38    -0.995    0.0977
         *Z       ---       ---  1.38e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014145, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001464
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00034
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027302
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146905
         W1a Well: minimal relaxation eigenvalue = 0.0416422
         W1a Well: maximal relaxation eigenvalue = 13.8216
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001644
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.182636
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048485
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060147
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.191961
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.674919, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.33e+05 1.54e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.91  1.34e-19  5.62e-31
        W1b     0.126         1  1.69e-20  7.11e-32
         P1  7.47e+18  5.91e+19         1   4.2e-12
         P2  1.78e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         8  5.67e-23  2.38e-34
        W1b     0.125         1  7.08e-24  2.98e-35
         P1  1.76e+22  1.41e+23         1   4.2e-12
         P2   4.2e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.67841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03147, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179574, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23537, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      42.1      2.64    0.0779     0.922
          1  1.38e+03      13.4         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      2.64     -0.03        -1
          1      57.5      13.4        -1      0.03
         *Z       ---       ---  1.41e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23778, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03083, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1598, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        14      1.54     0.131     0.869
          1       326        12         1    -0.019
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.584      1.54   -0.0535    -0.999
          1      13.6        12    -0.999    0.0535
         *Z       ---       ---  1.41e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19842, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19785, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.14      1.26     0.164     0.836
          1       191      11.4         1   -0.0248
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.381      1.26   -0.0695    -0.998
          1      7.95      11.4    -0.998    0.0695
         *Z       ---       ---  1.41e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20018, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03187, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.041791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.2      1.07     0.198     0.802
          1       121      10.4         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.258      1.07   -0.0874    -0.996
          1      5.05      10.4    -0.996    0.0874
         *Z       ---       ---  1.41e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07937, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015295, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001656, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017257, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.44     0.946     0.226     0.774
          1      83.2      9.18         1    -0.037
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.185     0.946    -0.103    -0.995
          1      3.47      9.18    -0.995     0.103
         *Z       ---       ---  1.41e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017303, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001461
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000408
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027485
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164542
         W1a Well: minimal relaxation eigenvalue = 0.039915
         W1a Well: maximal relaxation eigenvalue = 24.9138
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001533
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.177121
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046972
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074982
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20691
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714851, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 7.47e+04 1.75e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.52   1.3e-19  8.39e-31
        W1b     0.117         1  1.52e-20  9.85e-32
         P1  7.71e+18  6.57e+19         1  6.47e-12
         P2  1.19e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.63  5.56e-23  3.59e-34
        W1b     0.116         1  6.44e-24  4.16e-35
         P1   1.8e+22  1.55e+23         1  6.47e-12
         P2  2.78e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.718424, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0271, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.2      2.68    0.0853     0.915
          1  1.52e+03      15.3         1    -0.011
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.93      2.68   -0.0319    -0.999
          1      60.9      15.3    -0.999    0.0319
         *Z       ---       ---  1.44e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22493, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03864, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.160543, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20457, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.8      1.57     0.146     0.854
          1       348      13.1         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.632      1.57   -0.0584    -0.998
          1      13.9      13.1    -0.998    0.0584
         *Z       ---       ---  1.44e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20693, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160952, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.2      1.29     0.186     0.814
          1       196      12.5         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.406      1.29   -0.0782    -0.997
          1      7.84      12.5    -0.997    0.0782
         *Z       ---       ---  1.44e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20909, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04006, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.017785, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06265, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.75       1.1     0.231     0.769
          1       119      11.6         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.269       1.1    -0.103    -0.995
          1      4.75      11.6    -0.995     0.103
         *Z       ---       ---  1.44e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06316, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001673, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.67     0.988     0.273     0.727
          1      77.9      10.4         1   -0.0442
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.988    -0.128    -0.992
          1      3.11      10.4    -0.992     0.128
         *Z       ---       ---  1.44e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017015, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001432
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000334
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026698
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149378
         W1a Well: minimal relaxation eigenvalue = 0.0411961
         W1a Well: maximal relaxation eigenvalue = 12.7339
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001654
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180634
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046562
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058939
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.188871
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.667952, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.72e+05 1.98e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.16  1.25e-19  1.22e-30
        W1b     0.109         1  1.36e-20  1.34e-31
         P1  8.03e+18  7.35e+19         1  9.83e-12
         P2  8.16e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.28  5.45e-23  5.36e-34
        W1b     0.108         1  5.87e-24  5.78e-35
         P1  1.83e+22   1.7e+23         1  9.83e-12
         P2  1.87e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.671563, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00962, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20938, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      50.7      2.79     0.089     0.911
          1  1.64e+03      15.5         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.79   -0.0323    -0.999
          1      67.4      15.5    -0.999    0.0323
         *Z       ---       ---  1.47e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21186, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00828, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155983, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16962, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.7      1.67     0.145     0.855
          1       391      13.8         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.689      1.67   -0.0562    -0.998
          1      16.1      13.8    -0.998    0.0562
         *Z       ---       ---  1.47e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17196, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01004, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15604, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9      1.39     0.179     0.821
          1       230        13         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.449      1.39   -0.0719    -0.997
          1      9.48        13    -0.997    0.0719
         *Z       ---       ---  1.47e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17397, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00766, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137059, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.42      1.19     0.213     0.787
          1       147      11.8         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.306      1.19   -0.0889    -0.996
          1      6.05      11.8    -0.996    0.0889
         *Z       ---       ---  1.47e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.15038, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.025861, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001648, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.027903, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.34      1.06      0.24      0.76
          1       101      10.2         1   -0.0345
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.22      1.06    -0.104    -0.995
          1      4.16      10.2    -0.995     0.104
         *Z       ---       ---  1.47e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02796, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001442
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000343
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027625
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163805
         W1a Well: minimal relaxation eigenvalue = 0.0400853
         W1a Well: maximal relaxation eigenvalue = 22.7706
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001605
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.172911
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.044989
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074914
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201588
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702223, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 9.59e+04 2.24e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.83  1.21e-19  1.79e-30
        W1b     0.102         1  1.23e-20  1.82e-31
         P1  8.26e+18  8.12e+19         1  1.48e-11
         P2  5.59e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.96  5.35e-23   7.9e-34
        W1b       0.1         1  5.38e-24  7.94e-35
         P1  1.87e+22  1.86e+23         1  1.48e-11
         P2  1.27e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.706009, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      56.1      2.92    0.0953     0.905
          1   1.8e+03        17         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.25      2.92   -0.0336    -0.999
          1      72.3        17    -0.999    0.0336
         *Z       ---       ---  1.51e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19812, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0177, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18054, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.4      1.74     0.159     0.841
          1       413      14.9         1   -0.0192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.736      1.74   -0.0603    -0.998
          1      16.5      14.9    -0.998    0.0603
         *Z       ---       ---  1.51e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0166, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17972, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.8      1.44       0.2       0.8
          1       234      14.1         1   -0.0254
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.474      1.44   -0.0795    -0.997
          1       9.4      14.1    -0.997    0.0795
         *Z       ---       ---  1.51e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18205, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01457, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.114229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1338, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.88      1.24     0.244     0.756
          1       143        13         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.316      1.24    -0.103    -0.995
          1      5.73        13    -0.995     0.103
         *Z       ---       ---  1.51e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13439, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.024443, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.52      1.12     0.284     0.716
          1      94.3      11.6         1   -0.0404
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.221      1.12    -0.126    -0.992
          1      3.78      11.6    -0.992     0.126
         *Z       ---       ---  1.51e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.026547, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001462
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028388
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146839
         W1a Well: minimal relaxation eigenvalue = 0.0406634
         W1a Well: maximal relaxation eigenvalue = 14.244
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001668
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179619
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047716
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069807
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201307
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.689798, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.64e+05 2.53e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.5  1.18e-19  2.58e-30
        W1b    0.0949         1  1.12e-20  2.45e-31
         P1  8.49e+18  8.94e+19         1  2.19e-11
         P2  3.87e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.7  5.26e-23  1.15e-33
        W1b    0.0938         1  4.93e-24  1.08e-34
         P1   1.9e+22  2.03e+23         1  2.19e-11
         P2  8.67e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.693104, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00158, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179128, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      57.6      3.27    0.0964     0.904
          1  1.92e+03        18         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.34      3.27   -0.0329    -0.999
          1      78.1        18    -0.999    0.0329
         *Z       ---       ---  1.54e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02504, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18838, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.1      1.93     0.157     0.843
          1       455      15.9         1   -0.0176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.777      1.93   -0.0572    -0.998
          1      18.5      15.9    -0.998    0.0572
         *Z       ---       ---  1.54e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02459, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157189, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18713, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.5      1.59     0.193     0.807
          1       267      14.9         1   -0.0226
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.508      1.59   -0.0733    -0.997
          1      10.8      14.9    -0.997    0.0733
         *Z       ---       ---  1.54e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18942, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.083713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1119, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.52      1.37     0.229     0.771
          1       169      13.6         1   -0.0281
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.346      1.37   -0.0909    -0.996
          1      6.87      13.6    -0.996    0.0909
         *Z       ---       ---  1.54e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.021448, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023457, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.14      1.22     0.258     0.742
          1       116      11.8         1    -0.033
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.25      1.22    -0.107    -0.994
          1       4.7      11.8    -0.994     0.107
         *Z       ---       ---  1.54e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023509, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001407
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000333
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030019
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147559
         W1a Well: minimal relaxation eigenvalue = 0.0383822
         W1a Well: maximal relaxation eigenvalue = 17.6661
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00172
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.161009
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045222
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056565
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.185221
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.642328, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301 5.82e+04 8.04e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      19.1  9.14e-20  6.01e-29
        W1b    0.0523         1  4.78e-21  3.15e-30
         P1  1.09e+19  2.09e+20         1  6.58e-10
         P2  1.66e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      19.3  4.67e-23  3.07e-32
        W1b    0.0517         1  2.41e-24  1.59e-33
         P1  2.14e+22  4.14e+23         1  6.58e-10
         P2  3.25e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.64582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.959004, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161963, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       126      5.14      0.15      0.85
          1   4.3e+03      34.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.84      5.14   -0.0404    -0.999
          1       165      34.9    -0.999    0.0404
         *Z       ---       ---  1.95e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14628, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.976387, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        41      3.15     0.228     0.772
          1  1.01e+03      30.2         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.57      3.15   -0.0673    -0.998
          1      38.6      30.2    -0.998    0.0673
         *Z       ---       ---  1.95e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13573, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.976976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150906, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13306, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.7      2.66     0.271     0.729
          1       581      27.9         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.03      2.66   -0.0846    -0.996
          1      22.3      27.9    -0.996    0.0846
         *Z       ---       ---  1.95e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13539, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.977258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13391, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.2      2.35     0.312     0.688
          1       361      24.8         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.699      2.35    -0.103    -0.995
          1      13.8      24.8    -0.995     0.103
         *Z       ---       ---  1.95e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13623, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.170198, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.176094, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      2.14     0.347     0.653
          1       239      20.6         1   -0.0278
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.506      2.14     -0.12    -0.993
          1      9.18      20.6    -0.993      0.12
         *Z       ---       ---  1.95e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.176472, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001396
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000329
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027468
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156459
         W1a Well: minimal relaxation eigenvalue = 0.0368009
         W1a Well: maximal relaxation eigenvalue = 14.9793
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001783
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.166089
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041625
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067504
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.177436
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.653236, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.33e+05  2.3e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      30.5   7.7e-20   7.1e-28
        W1b    0.0328         1  2.53e-21  2.33e-29
         P1   1.3e+19  3.96e+20         1  9.23e-09
         P2  1.41e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      30.8  4.43e-23  4.09e-31
        W1b    0.0324         1  1.44e-24  1.33e-32
         P1  2.26e+22  6.96e+23         1  9.23e-09
         P2  2.45e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.656763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.921238, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.10756, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       260      8.12     0.201     0.799
          1  9.11e+03      61.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.56      8.12   -0.0455    -0.999
          1       335      61.8    -0.999    0.0455
         *Z       ---       ---   2.5e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10994, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.932965, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08401, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        84      5.13     0.283     0.717
          1  2.15e+03      51.3         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.09      5.13   -0.0714    -0.997
          1        79      51.3    -0.997    0.0714
         *Z       ---       ---   2.5e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.930524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14498, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      55.1      4.42     0.324     0.676
          1  1.24e+03      45.5         1   -0.0158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.03      4.42   -0.0867    -0.996
          1      45.8      45.5    -0.996    0.0867
         *Z       ---       ---   2.5e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08305, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.933013, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08332, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      38.2      3.95     0.362     0.638
          1       766      37.9         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.4      3.95    -0.102    -0.995
          1      28.2      37.9    -0.995     0.102
         *Z       ---       ---   2.5e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08561, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.36528, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001504, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.370939, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.2      3.62     0.391     0.609
          1       495      28.7         1   -0.0211
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.04      3.62    -0.116    -0.993
          1      18.2      28.7    -0.993     0.116
         *Z       ---       ---   2.5e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.371297, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001297
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000321
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029719
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.148844
         W1a Well: minimal relaxation eigenvalue = 0.0349897
         W1a Well: maximal relaxation eigenvalue = 20.7817
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001901
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.158279
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.042356
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064687
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.176055
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.636107, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.11e+05 6.05e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      44.3  6.85e-20   5.2e-27
        W1b    0.0226         1  1.55e-21  1.17e-28
         P1  1.46e+19  6.47e+20         1  7.59e-08
         P2  1.92e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      44.9  4.38e-23  3.33e-30
        W1b    0.0223         1  9.77e-25  7.42e-32
         P1  2.28e+22  1.02e+24         1  7.59e-08
         P2     3e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.639433, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.888865, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05533, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       488      14.1     0.237     0.763
          1  1.76e+04       100         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.1      14.1   -0.0465    -0.999
          1       616       100    -0.999    0.0465
         *Z       ---       ---  3.21e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00216306
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000735, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06044, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.908795, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       153      8.77     0.322     0.678
          1  3.98e+03      79.5         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.37      8.77   -0.0711    -0.997
          1       139      79.5    -0.997    0.0711
         *Z       ---       ---  3.21e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05955, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.910259, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141838, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      99.5       7.5     0.366     0.634
          1  2.21e+03      68.9         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.48       7.5   -0.0865    -0.996
          1      77.5      68.9    -0.996    0.0865
         *Z       ---       ---  3.21e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05959, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.904947, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141545, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0516, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        68      6.67     0.409     0.591
          1  1.29e+03      55.7         1   -0.0156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.38      6.67    -0.103    -0.995
          1      45.2      55.7    -0.995     0.103
         *Z       ---       ---  3.21e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05386, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.496723, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001491, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.50228, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      49.5      6.11     0.445     0.555
          1       784      40.3         1   -0.0181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.73      6.11     -0.12    -0.993
          1      27.4      40.3    -0.993      0.12
         *Z       ---       ---  3.21e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.502649, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00127
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000314
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029791
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.145246
         W1a Well: minimal relaxation eigenvalue = 0.0334303
         W1a Well: maximal relaxation eigenvalue = 23.764
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002106
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.152451
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039098
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065626
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.171996
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.620121, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237 1.27e+05 1.48e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      60.3  6.34e-20  2.69e-26
        W1b    0.0166         1  1.05e-21  4.46e-28
         P1  1.58e+19  9.52e+20         1  4.24e-07
         P2  3.72e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      61.1  4.46e-23  1.89e-29
        W1b    0.0164         1  7.31e-25   3.1e-31
         P1  2.24e+22  1.37e+24         1  4.24e-07
         P2  5.28e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.623586, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862971, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148005, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02267, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       984      20.4     0.287     0.713
          1  3.09e+04       127         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.9      20.4   -0.0517    -0.999
          1  1.03e+03       127    -0.999    0.0517
         *Z       ---       ---  4.11e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00266799
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02647, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.882864, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02483, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       306      13.1     0.378     0.622
          1  6.84e+03      95.4         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.2      13.1    -0.078    -0.997
          1       229      95.4    -0.997     0.078
         *Z       ---       ---  4.11e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02723, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.884282, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137183, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02651, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       197      11.4     0.425     0.575
          1  3.72e+03      79.2         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.59      11.4   -0.0946    -0.996
          1       124      79.2    -0.996    0.0946
         *Z       ---       ---  4.11e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02888, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.884627, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02703, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       134      10.4      0.47      0.53
          1  2.09e+03      60.1         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.48      10.4    -0.113    -0.994
          1      69.8      60.1    -0.994     0.113
         *Z       ---       ---  4.11e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02931, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.620403, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001476, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.625889, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      96.8      9.72     0.509     0.491
          1   1.2e+03      39.8         1   -0.0172
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.23      9.72    -0.132    -0.991
          1      40.1      39.8    -0.991     0.132
         *Z       ---       ---  4.11e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.626255, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00138
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000321
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027826
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140592
         W1a Well: minimal relaxation eigenvalue = 0.0324287
         W1a Well: maximal relaxation eigenvalue = 23.6011
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002013
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.14384
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039787
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053776
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.173172
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.595576, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364  2.1e+04  3.4e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        78  6.03e-20  1.07e-25
        W1b    0.0128         1  7.73e-22  1.37e-27
         P1  1.66e+19  1.29e+21         1  1.78e-06
         P2  9.35e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        79  4.63e-23  8.23e-29
        W1b    0.0127         1  5.87e-25  1.04e-30
         P1  2.16e+22   1.7e+24         1  1.78e-06
         P2  1.22e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.599195, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.84692, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14534, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+03      31.5     0.323     0.677
          1  4.69e+04       131         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.4      31.5    -0.054    -0.999
          1  1.52e+03       131    -0.999     0.054
         *Z       ---       ---  5.25e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00291095
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134925, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00217, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       562      20.6     0.413     0.587
          1  1.01e+04      91.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.2      20.6   -0.0793    -0.997
          1       328      91.8    -0.997    0.0793
         *Z       ---       ---  5.25e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00629174
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000544, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00566, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.864674, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135272, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       362      18.1     0.458     0.542
          1  5.38e+03      72.2         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.7      18.1   -0.0951    -0.995
          1       175      72.2    -0.995    0.0951
         *Z       ---       ---  5.25e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00777, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.864827, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135003, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       247      16.5     0.502     0.498
          1  2.92e+03      50.8         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0         8      16.5    -0.113    -0.994
          1      94.6      50.8    -0.994     0.113
         *Z       ---       ---  5.25e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00697, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.691528, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.69836, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       179      15.3     0.542     0.458
          1   1.6e+03      30.5         1   -0.0152
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       5.8      15.3    -0.133    -0.991
          1      51.9      30.5    -0.991     0.133
         *Z       ---       ---  5.25e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.698718, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00122
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000308
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027942
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140381
         W1a Well: minimal relaxation eigenvalue = 0.0317692
         W1a Well: maximal relaxation eigenvalue = 21.0497
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002141
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.151354
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039312
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067541
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.155859
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.598839, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.13e+04 7.42e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        97  5.85e-20  3.48e-25
        W1b    0.0103         1  6.03e-22  3.58e-27
         P1  1.71e+19  1.66e+21         1  5.94e-06
         P2  2.88e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      98.2  4.87e-23   2.9e-28
        W1b    0.0102         1  4.96e-25  2.95e-30
         P1  2.05e+22  2.01e+24         1  5.94e-06
         P2  3.45e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.602262, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.83286, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.153345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.99782, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.11e+03      54.4     0.342     0.658
          1  6.19e+04       115         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.7      54.4   -0.0527    -0.999
          1  1.97e+03       115    -0.999    0.0527
         *Z       ---       ---  6.67e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00278013
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000592, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00188, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.850345, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132858, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988064, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       935      35.2      0.42      0.58
          1   1.3e+04      75.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.7      35.2   -0.0734    -0.997
          1       414      75.2    -0.997    0.0734
         *Z       ---       ---  6.67e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.995 0.005
         well projection threshold  = 0.2
         partition projection error = 0.00539019
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000543, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.991587, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849912, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133537, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988943, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       600      30.5     0.459     0.541
          1  6.78e+03      56.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        19      30.5   -0.0859    -0.996
          1       215      56.3    -0.996    0.0859
         *Z       ---       ---  6.67e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.991249, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.85003, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133023, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987861, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       408      27.2     0.499     0.501
          1  3.57e+03      37.1         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        13      27.2      -0.1    -0.995
          1       113      37.1    -0.995       0.1
         *Z       ---       ---  6.67e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990182, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763314, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.008144, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.775424, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       296      24.6     0.538     0.462
          1  1.89e+03      20.9         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.41      24.6    -0.118    -0.993
          1      60.1      20.9    -0.993     0.118
         *Z       ---       ---  6.67e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.775776, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.4e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001236
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000313
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026573
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139932
         W1a Well: minimal relaxation eigenvalue = 0.0185831
         W1a Well: maximal relaxation eigenvalue = 36.1758
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002231
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134798
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038793
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064697
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152112
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.573337, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.43e+05 1.54e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       117  5.76e-20  9.62e-25
        W1b   0.00855         1  4.93e-22  8.23e-27
         P1  1.74e+19  2.03e+21         1  1.67e-05
         P2  1.04e+24  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       118  5.17e-23  8.64e-28
        W1b   0.00845         1  4.37e-25   7.3e-30
         P1  1.93e+22  2.29e+24         1  1.67e-05
         P2  1.16e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.577408, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.982674, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.58e+03      74.2     0.396     0.604
          1  1.24e+05      81.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       178      74.2   -0.0605    -0.998
          1   2.3e+03      81.4    -0.998    0.0605
         *Z       ---       ---  8.43e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00365742
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000605, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.986745, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.837716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130874, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.973431, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.8e+03      48.9     0.492     0.508
          1  2.55e+04      53.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52      48.9    -0.089    -0.996
          1       474      53.4    -0.996     0.089
         *Z       ---       ---  8.43e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.992 0.008
         well projection threshold  = 0.2
         partition projection error = 0.00792928
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000536, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.97691, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.836301, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.972221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+03      43.4     0.542     0.458
          1   1.3e+04      41.4         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.3      43.4    -0.109    -0.994
          1       242      41.4    -0.994     0.109
         *Z       ---       ---  8.43e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.988 0.012
         well projection threshold  = 0.2
         partition projection error = 0.0118631
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000525, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.975708, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.834149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131338, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.13e+03      40.4     0.596     0.404
          1  6.72e+03      29.1         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        21      40.4    -0.135    -0.991
          1       125      29.1    -0.991     0.135
         *Z       ---       ---  8.43e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.972849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822751, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.012314, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.839062, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       774      38.9     0.653     0.347
          1  3.49e+03      17.8         1   -0.0161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      14.4      38.9    -0.171    -0.985
          1      64.8      17.8    -0.985     0.171
         *Z       ---       ---  8.43e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.839543, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000123
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002787
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000309
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02773
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137816
         W1a Well: minimal relaxation eigenvalue = 0.0294345
         W1a Well: maximal relaxation eigenvalue = 27.1693
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002154
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135498
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037821
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056115
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152121
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.565109, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 3.95e+04 3.08e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       138  5.74e-20  2.34e-24
        W1b   0.00727         1  4.17e-22   1.7e-26
         P1  1.74e+19   2.4e+21         1  4.08e-05
         P2  4.27e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       139  5.52e-23  2.25e-27
        W1b   0.00718         1  3.97e-25  1.62e-29
         P1  1.81e+22  2.52e+24         1  4.08e-05
         P2  4.44e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.569248, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82131, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131267, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+04       117     0.433     0.567
          1  8.52e+04      53.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       299       117   -0.0649    -0.998
          1  2.51e+03      53.3    -0.998    0.0649
         *Z       ---       ---  1.06e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814732, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947041, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.99e+03      77.5     0.525     0.475
          1  1.74e+04        33         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        88      77.5    -0.094    -0.996
          1       512        33    -0.996     0.094
         *Z       ---       ---  1.06e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.991 0.009
         well projection threshold  = 0.2
         partition projection error = 0.00882782
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000608, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950615, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128666, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949609, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+03      68.1     0.575     0.425
          1  8.85e+03      24.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.6      68.1    -0.115    -0.993
          1       260      24.4    -0.993     0.115
         *Z       ---       ---  1.06e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822332, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129621, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956717, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+03      61.4     0.633     0.367
          1  4.52e+03      16.5         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      37.1      61.4    -0.145    -0.989
          1       133      16.5    -0.989     0.145
         *Z       ---       ---  1.06e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959049, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.067941, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893075, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       891      55.3     0.702     0.298
          1  2.32e+03      10.7         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      26.2      55.3    -0.197     -0.98
          1      68.3      10.7     -0.98     0.197
         *Z       ---       ---  1.06e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893631, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000233
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007814
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000339
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026103
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134209
         W1a Well: minimal relaxation eigenvalue = 0.0292226
         W1a Well: maximal relaxation eigenvalue = 25.0455
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00204
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135107
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037846
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061071
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154502
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.571679, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 8.56e+04 5.93e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       158  5.79e-20  5.16e-24
        W1b   0.00631         1  3.65e-22  3.26e-26
         P1  1.73e+19  2.74e+21         1  8.91e-05
         P2  1.94e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       160  5.92e-23  5.27e-27
        W1b   0.00623         1  3.69e-25  3.29e-29
         P1  1.69e+22  2.71e+24         1  8.91e-05
         P2   1.9e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.575201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824273, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139787, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.984785, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.61e+04       192     0.485     0.515
          1  8.84e+04      42.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       470       192   -0.0746    -0.997
          1  2.58e+03      42.9    -0.997    0.0746
         *Z       ---       ---  1.33e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.987048, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823695, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.62e+03       127     0.576     0.424
          1   1.8e+04      27.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       135       127    -0.107    -0.994
          1       525      27.1    -0.994     0.107
         *Z       ---       ---  1.33e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.988 0.012
         well projection threshold  = 0.2
         partition projection error = 0.0115448
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00061, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.96144, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823625, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957405, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.89e+03       110     0.629     0.371
          1   9.1e+03      21.1         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      84.5       110    -0.133    -0.991
          1       266      21.1    -0.991     0.133
         *Z       ---       ---  1.33e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959774, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822663, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128981, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956562, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.91e+03      96.1     0.694     0.306
          1  4.63e+03      16.4         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.8      96.1    -0.177    -0.984
          1       135      16.4    -0.984     0.177
         *Z       ---       ---  1.33e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819292, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.054363, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+03      81.9     0.781     0.219
          1  2.38e+03      15.5         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      38.8      81.9    -0.272    -0.962
          1      69.5      15.5    -0.962     0.272
         *Z       ---       ---  1.33e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.878505, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000195
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006762
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00032
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.025899
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134782
         W1a Well: minimal relaxation eigenvalue = 0.019451
         W1a Well: maximal relaxation eigenvalue = 35.6595
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002177
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135059
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03736
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056118
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151748
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.563062, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 1.88e+04  1.1e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       180  5.86e-20  1.04e-23
        W1b   0.00557         1  3.26e-22  5.78e-26
         P1  1.71e+19  3.07e+21         1  0.000177
         P2  9.64e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       182  6.36e-23  1.13e-26
        W1b    0.0055         1   3.5e-25   6.2e-29
         P1  1.57e+22  2.86e+24         1  0.000177
         P2  8.87e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.566557, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136539, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.968222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.87e+04       281     0.566     0.434
          1  1.35e+05      36.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       753       281   -0.0967    -0.995
          1  2.63e+03      36.6    -0.995    0.0967
         *Z       ---       ---  1.65e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.970515, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815616, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+04       180     0.668     0.332
          1  2.74e+04      26.1         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       206       180    -0.149    -0.989
          1       532      26.1    -0.989     0.149
         *Z       ---       ---  1.65e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941752, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.37e+03       154     0.728     0.272
          1  1.39e+04      23.8         1   -0.0149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       124       154    -0.196    -0.981
          1       269      23.8    -0.981     0.196
         *Z       ---       ---  1.65e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.962 0.038
         well projection threshold  = 0.2
         partition projection error = 0.038335
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000603, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945608, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807017, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128492, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940406, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.98e+03       132       0.8       0.2
          1  7.08e+03      25.4         1   -0.0223
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      77.5       132    -0.286    -0.958
          1       138      25.4    -0.958     0.286
         *Z       ---       ---  1.65e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.942732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814682, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.098672, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917777, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.56e+03       100     0.885     0.115
          1  3.73e+03      43.3         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.7       100    -0.498    -0.867
          1      72.6      43.3    -0.867     0.498
         *Z       ---       ---  1.65e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918345, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000258
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.010052
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001236
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026218
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139295
         W1a Well: minimal relaxation eigenvalue = 0.00167849
         W1a Well: maximal relaxation eigenvalue = 49.8239
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002256
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.130501
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037172
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061884
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151052
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.572587, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.58e+05 1.99e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       201  5.95e-20  1.94e-23
        W1b   0.00498         1  2.97e-22  9.66e-26
         P1  1.68e+19  3.37e+21         1  0.000326
         P2  5.16e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       203  6.85e-23  2.23e-26
        W1b   0.00492         1  3.37e-25   1.1e-28
         P1  1.46e+22  2.96e+24         1  0.000326
         P2  4.48e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.576108, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.969342, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.31e+05       376     0.685     0.315
          1  1.57e+06      45.4         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.23e+03       376    -0.151    -0.988
          1  2.64e+03      45.4    -0.988     0.151
         *Z       ---       ---  2.03e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.971664, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807565, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129316, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942061, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.93e+05       234       0.8       0.2
          1  3.22e+05      41.2         1   -0.0199
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       324       234    -0.271    -0.962
          1       540      41.2    -0.962     0.271
         *Z       ---       ---  2.03e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.944282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.805367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128132, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938148, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.11e+05       188      0.86      0.14
          1  1.65e+05      55.5         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       187       188    -0.397    -0.918
          1       277      55.5    -0.918     0.397
         *Z       ---       ---  2.03e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.940339, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.809753, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941443, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.39e+04       128     0.918     0.082
          1   8.8e+04      98.5         1   -0.0557
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107       128     -0.62    -0.785
          1       148      98.5    -0.785      0.62
         *Z       ---       ---  2.03e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94363, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.805616, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.52e+04      58.2     0.958    0.0423
          1  5.08e+04       164         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        59      58.2    -0.848    -0.531
          1      85.3       164    -0.531     0.848
         *Z       ---       ---  2.03e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.940408, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000426
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.010803
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002008
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026817
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133069
         W1a Well: minimal relaxation eigenvalue = 0.0233994
         W1a Well: maximal relaxation eigenvalue = 33.2244
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002239
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136158
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037451
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051242
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147628
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.560303, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 5.65e+04  3.5e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       222  6.08e-20  3.41e-23
        W1b   0.00451         1  2.74e-22  1.54e-25
         P1  1.65e+19  3.65e+21         1  0.000561
         P2  2.93e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       224  7.39e-23  4.14e-26
        W1b   0.00446         1  3.29e-25  1.85e-28
         P1  1.35e+22  3.04e+24         1  0.000561
         P2  2.41e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.564221, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799697, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961416, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.32e+04       461     0.853     0.147
          1  1.15e+05       122         1   -0.0262
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.95e+03       461    -0.363    -0.932
          1  2.68e+03       122    -0.932     0.363
         *Z       ---       ---  2.49e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963725, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797757, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127044, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.03e+04      98.3     0.957    0.0429
          1  2.65e+04       298         1    -0.101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       475      98.3    -0.832    -0.555
          1       620       298    -0.555     0.832
         *Z       ---       ---  2.49e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931807, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125538, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927793, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.05e+04      30.5     0.976    0.0237
          1  1.58e+04       320         1    -0.186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       247      30.5     -0.94     -0.34
          1       369       320     -0.34      0.94
         *Z       ---       ---  2.49e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930277, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797956, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125416, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928311, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.37e+03      11.1     0.985    0.0148
          1  1.01e+04       306         1    -0.299
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       126      11.1    -0.976    -0.219
          1       235       306    -0.219     0.976
         *Z       ---       ---  2.49e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.952 0.048
         well projection threshold  = 0.2
         partition projection error = 0.0234107
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000641, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.932006, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12675, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928213, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.72e+03      4.61      0.99    0.0102
          1  6.82e+03       284         1     -0.44
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      63.5      4.61    -0.989    -0.151
          1       160       284    -0.151     0.989
         *Z       ---       ---  2.49e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930522, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002368
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.062172
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002485
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027469
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131427
         W1a Well: minimal relaxation eigenvalue = 0.00775347
         W1a Well: maximal relaxation eigenvalue = 42.2807
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001942
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133164
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038038
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060423
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149148
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.62096, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.34e+04    6e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       242  6.22e-20  5.69e-23
        W1b   0.00412         1  2.57e-22  2.35e-25
         P1  1.61e+19  3.89e+21         1  0.000914
         P2  1.76e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       245  7.97e-23  7.28e-26
        W1b   0.00408         1  3.25e-25  2.97e-28
         P1  1.26e+22  3.08e+24         1  0.000914
         P2  1.37e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.624849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142831, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.07e+05       237     0.961    0.0391
          1  3.82e+05       858         1    -0.101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.38e+03       237    -0.845    -0.535
          1  2.96e+03       858    -0.535     0.845
         *Z       ---       ---  3.04e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958495, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79542, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126414, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926654, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.33e+04      34.8     0.981    0.0187
          1  9.46e+04       667         1    -0.217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       491      34.8    -0.959    -0.284
          1       734       667    -0.284     0.959
         *Z       ---       ---  3.04e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928846, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793928, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923911, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.19e+04      17.1     0.986    0.0143
          1  5.44e+04       581         1    -0.284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       247      17.1    -0.975    -0.221
          1       422       581    -0.221     0.975
         *Z       ---       ---  3.04e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926091, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797599, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125682, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928294, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.6e+04      9.24     0.989    0.0112
          1  3.25e+04       515         1    -0.363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       124      9.24    -0.985    -0.174
          1       252       515    -0.174     0.985
         *Z       ---       ---  3.04e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931146, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794818, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926645, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.05e+03      5.29     0.991         0
          1  2.03e+04       467         1    -0.458
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      62.4      5.29     -0.99    -0.139
          1       158       467    -0.139      0.99
         *Z       ---       ---  3.04e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.981 0.019
         well projection threshold  = 0.2
         partition projection error = 0.00563625
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000646, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930249, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00216
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.071554
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002759
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02803
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13383
         W1a Well: minimal relaxation eigenvalue = 0.000545536
         W1a Well: maximal relaxation eigenvalue = 51.7734
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002153
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128319
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037692
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055216
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14826
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.62263, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      633 1.01e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       263  6.39e-20  9.08e-23
        W1b    0.0038         1  2.43e-22  3.45e-25
         P1  1.57e+19  4.11e+21         1   0.00142
         P2   1.1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       266  8.59e-23  1.22e-25
        W1b   0.00376         1  3.23e-25  4.59e-28
         P1  1.16e+22   3.1e+24         1   0.00142
         P2   8.2e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.626533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793425, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13361, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948204, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.48e+06      12.8      0.99         0
          1   8.6e+06  1.26e+03         1    -0.384
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.44e+03      12.8    -0.987    -0.158
          1  4.69e+03  1.26e+03    -0.158     0.987
         *Z       ---       ---  3.68e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12508, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922931, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.98e+05      5.75     0.992         0
          1  2.21e+06       837         1    -0.482
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       490      5.75    -0.992    -0.127
          1  1.21e+03       837    -0.127     0.992
         *Z       ---       ---  3.68e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925089, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.791084, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919882, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.49e+05      4.48     0.993         0
          1  1.27e+06       741         1    -0.529
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       245      4.48    -0.993    -0.116
          1       695       741    -0.116     0.993
         *Z       ---       ---  3.68e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922001, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792244, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.921495, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.25e+05       3.6     0.993         0
          1  7.53e+05       687         1    -0.581
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       123       3.6    -0.994    -0.106
          1       411       687    -0.106     0.994
         *Z       ---       ---  3.68e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792511, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125277, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.13e+05       2.9     0.994         0
          1  4.58e+05       671         1    -0.638
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      61.4       2.9    -0.995   -0.0962
          1       250       671   -0.0962     0.995
         *Z       ---       ---  3.68e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.924754, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00232
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.10082
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003005
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027494
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130178
         W1a Well: minimal relaxation eigenvalue = 0.0200784
         W1a Well: maximal relaxation eigenvalue = 34.677
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002216
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129489
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036702
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056152
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146646
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.647558, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.1e+05 1.65e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       283  6.57e-20  1.39e-22
        W1b   0.00354         1  2.32e-22  4.92e-25
         P1  1.52e+19   4.3e+21         1   0.00212
         P2  7.18e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       286  9.26e-23  1.96e-25
        W1b   0.00349         1  3.23e-25  6.85e-28
         P1  1.08e+22  3.09e+24         1   0.00212
         P2   5.1e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.651571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778172, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.934668, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.2e+05      3.06     0.995         0
          1  3.82e+05  1.59e+03         1    -0.645
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.41e+03      3.06    -0.996   -0.0917
          1  7.67e+03  1.59e+03   -0.0917     0.996
         *Z       ---       ---  4.45e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.936911, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.776061, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.4e+04      1.71     0.995         0
          1  1.07e+05  1.12e+03         1    -0.753
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       482      1.71    -0.997   -0.0787
          1  2.14e+03  1.12e+03   -0.0787     0.997
         *Z       ---       ---  4.45e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774822, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901366, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.2e+04      1.26     0.996         0
          1  6.57e+04       991         1    -0.817
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       241      1.26    -0.997   -0.0726
          1  1.32e+03       991   -0.0726     0.997
         *Z       ---       ---  4.45e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777781, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122569, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905098, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.01e+03     0.855     0.996         0
          1  4.25e+04       882         1    -0.894
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       121     0.855    -0.998   -0.0664
          1       853       882   -0.0664     0.998
         *Z       ---       ---  4.45e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 4.93941e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.908706, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77276, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899182, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.01e+03      0.52     0.996         0
          1  2.87e+04       764         1     -0.98
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      60.4      0.52    -0.998   -0.0606
          1       577       764   -0.0606     0.998
         *Z       ---       ---  4.45e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 1.53597e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00056, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902899, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00232
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121009
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033775
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040334
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134071
         W1a Well: minimal relaxation eigenvalue = 0.00908652
         W1a Well: maximal relaxation eigenvalue = 40.8989
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002023
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132576
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036263
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051394
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145982
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.713196, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.24e+04 2.66e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       302  6.77e-20  2.06e-22
        W1b   0.00331         1  2.24e-22  6.82e-25
         P1  1.48e+19  4.47e+21         1   0.00305
         P2  4.85e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       306  9.97e-23  3.04e-25
        W1b   0.00327         1  3.26e-25  9.93e-28
         P1     1e+22  3.07e+24         1   0.00305
         P2  3.29e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.717057, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141701, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929849, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.59e+05      1.73     0.996         0
          1  1.14e+06  2.69e+03         1    -0.801
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.36e+03      1.73    -0.997   -0.0716
          1  1.04e+04  2.69e+03   -0.0716     0.997
         *Z       ---       ---  5.34e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.932099, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77707, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122537, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90413, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.19e+04      1.14     0.996         0
          1  2.96e+05   1.8e+03         1    -0.866
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       471      1.14    -0.998   -0.0662
          1  2.69e+03   1.8e+03   -0.0662     0.998
         *Z       ---       ---  5.34e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906262, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778805, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123005, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.59e+04      0.94     0.996         0
          1  1.74e+05  1.56e+03         1    -0.905
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       236      0.94    -0.998   -0.0634
          1  1.58e+03  1.56e+03   -0.0634     0.998
         *Z       ---       ---  5.34e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.908705, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777953, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904754, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.3e+04     0.739     0.997         0
          1  1.06e+05  1.37e+03         1    -0.953
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       118     0.739    -0.998   -0.0602
          1       966  1.37e+03   -0.0602     0.998
         *Z       ---       ---  5.34e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778905, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1227, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906364, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.49e+03     0.537     0.997         0
          1  6.79e+04   1.2e+03    -0.991         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        59     0.537    -0.998   -0.0569
          1       617   1.2e+03   -0.0569     0.998
         *Z       ---       ---  5.34e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 2.80779e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000629, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.909958, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002516
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126499
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033979
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038065
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135296
         W1a Well: minimal relaxation eigenvalue = 0.00289402
         W1a Well: maximal relaxation eigenvalue = 46.8593
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002421
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133977
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036049
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045208
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144071
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711684, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.23e+04 4.22e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       322  6.98e-20  2.97e-22
        W1b   0.00311         1  2.17e-22  9.23e-25
         P1  1.43e+19  4.61e+21         1   0.00425
         P2  3.37e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       325  1.07e-22  4.57e-25
        W1b   0.00307         1   3.3e-25   1.4e-27
         P1  9.32e+21  3.03e+24         1   0.00425
         P2  2.19e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.715711, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769865, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137646, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.96e+05     0.818     0.997         0
          1  5.75e+06  2.98e+03         1    -0.958
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   2.3e+03     0.818    -0.998   -0.0581
          1  1.66e+04  2.98e+03   -0.0581     0.998
         *Z       ---       ---  6.38e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.921654, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770218, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896685, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.59e+05     0.659     0.997         0
          1  1.51e+06  2.07e+03         1        -1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       461     0.659    -0.998   -0.0557
          1  4.36e+03  2.07e+03   -0.0557     0.998
         *Z       ---       ---  6.38e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898907, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121397, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896016, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.96e+04     0.596     0.997         0
          1  8.79e+05  1.86e+03    -0.977         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       230     0.596    -0.999   -0.0544
          1  2.54e+03  1.86e+03   -0.0544     0.999
         *Z       ---       ---  6.38e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76972, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121923, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89638, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.98e+04     0.522     0.997         0
          1  5.29e+05  1.73e+03    -0.952         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115     0.522    -0.999    -0.053
          1  1.53e+03  1.73e+03    -0.053     0.999
         *Z       ---       ---  6.38e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898535, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769856, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895978, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.99e+04     0.433     0.997         0
          1  3.29e+05  1.63e+03    -0.922         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.6     0.433    -0.999   -0.0514
          1       951  1.63e+03   -0.0514     0.999
         *Z       ---       ---  6.38e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898147, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002453
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123212
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.035238
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037672
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135235
         W1a Well: minimal relaxation eigenvalue = 0.000466789
         W1a Well: maximal relaxation eigenvalue = 51.268
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002081
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134836
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037783
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.048757
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140192
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.710773, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.27e+03 6.56e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       340   7.2e-20  4.16e-22
        W1b   0.00294         1  2.12e-22  1.22e-24
         P1  1.39e+19  4.72e+21         1   0.00577
         P2   2.4e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       344  1.15e-22  6.66e-25
        W1b    0.0029         1  3.35e-25  1.94e-27
         P1  8.67e+21  2.98e+24         1   0.00577
         P2   1.5e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.714856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769657, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130644, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91773, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.82e+06     0.549     0.997         0
          1   4.8e+07  4.75e+03    -0.951         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.25e+03     0.549    -0.999   -0.0515
          1  2.24e+04  4.75e+03   -0.0515     0.999
         *Z       ---       ---  7.59e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919986, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771153, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121097, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896778, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.63e+05     0.466     0.997         0
          1  1.19e+07  3.15e+03     -0.93         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       450     0.466    -0.999   -0.0503
          1  5.55e+03  3.15e+03   -0.0503     0.999
         *Z       ---       ---  7.59e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771117, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121841, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.82e+05      0.44     0.997         0
          1  6.69e+06  2.76e+03    -0.919         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       225      0.44    -0.999   -0.0498
          1  3.12e+03  2.76e+03   -0.0498     0.999
         *Z       ---       ---  7.59e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899894, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770587, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121033, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896143, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.41e+05     0.413     0.997         0
          1  3.85e+06   2.5e+03    -0.907         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112     0.413    -0.999   -0.0491
          1   1.8e+03   2.5e+03   -0.0491     0.999
         *Z       ---       ---  7.59e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898271, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770091, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122134, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896981, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.2e+05     0.381     0.997         0
          1  2.26e+06  2.35e+03    -0.893         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      56.2     0.381    -0.999   -0.0484
          1  1.06e+03  2.35e+03   -0.0484     0.999
         *Z       ---       ---  7.59e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899122, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002349
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120203
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.037933
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038267
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134657
         W1a Well: minimal relaxation eigenvalue = 0.00217979
         W1a Well: maximal relaxation eigenvalue = 47.9358
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002279
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134488
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035954
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049678
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144512
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.713264, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.48e+04 1.01e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  7.46e-20  5.71e-22
        W1b   0.00279         1  2.08e-22  1.59e-24
         P1  1.34e+19   4.8e+21         1   0.00765
         P2  1.75e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       363  1.24e-22  9.49e-25
        W1b   0.00276         1  3.42e-25  2.62e-27
         P1  8.07e+21  2.93e+24         1   0.00765
         P2  1.05e+24  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.717095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765827, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130312, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914453, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+06     0.365     0.998         0
          1  1.47e+07  6.23e+03    -0.891         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.19e+03     0.365    -0.999    -0.047
          1  3.21e+04  6.23e+03    -0.047     0.999
         *Z       ---       ---  9.01e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916711, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770285, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121616, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896636, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.01e+05     0.318     0.998         0
          1  3.66e+06  4.07e+03    -0.876         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       439     0.318    -0.999   -0.0462
          1  7.98e+03  4.07e+03   -0.0462     0.999
         *Z       ---       ---  9.01e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898803, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769092, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895707, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+05       0.3     0.998         0
          1  2.08e+06  3.49e+03    -0.868         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       219       0.3    -0.999   -0.0458
          1  4.54e+03  3.49e+03   -0.0458     0.999
         *Z       ---       ---  9.01e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897877, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77072, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.03e+04     0.279     0.998         0
          1  1.22e+06  3.03e+03    -0.858         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       110     0.279    -0.999   -0.0453
          1  2.65e+03  3.03e+03   -0.0453     0.999
         *Z       ---       ---  9.01e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899659, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769562, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121376, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89548, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.52e+04     0.254     0.998         0
          1  7.28e+05  2.66e+03    -0.847         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.9     0.254    -0.999   -0.0447
          1  1.59e+03  2.66e+03   -0.0447     0.999
         *Z       ---       ---  9.01e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897659, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002346
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120596
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03383
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038105
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133412
         W1a Well: minimal relaxation eigenvalue = 0.000509723
         W1a Well: maximal relaxation eigenvalue = 50.4489
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002301
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.131984
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036156
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056345
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.138714
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706872, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.79e+03 1.52e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       376  7.71e-20  7.65e-22
        W1b   0.00266         1  2.05e-22  2.03e-24
         P1   1.3e+19  4.88e+21         1   0.00992
         P2  1.31e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       381  1.33e-22  1.32e-24
        W1b   0.00263         1   3.5e-25  3.47e-27
         P1  7.52e+21  2.86e+24         1   0.00992
         P2  7.57e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.710962, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771142, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923839, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.2e+06     0.317     0.998         0
          1  8.01e+07  1.07e+04    -0.858         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.14e+03     0.317    -0.999   -0.0442
          1  4.08e+04  1.07e+04   -0.0442     0.999
         *Z       ---       ---  1.06e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926116, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122083, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897081, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.4e+05     0.284     0.998         0
          1  1.87e+07   6.7e+03     -0.85         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       428     0.284    -0.999   -0.0438
          1  9.55e+03   6.7e+03   -0.0438     0.999
         *Z       ---       ---  1.06e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899244, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123009, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898121, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.2e+05     0.274     0.998         0
          1  1.02e+07  5.59e+03    -0.847         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       214     0.274    -0.999   -0.0436
          1  5.22e+03  5.59e+03   -0.0436     0.999
         *Z       ---       ---  1.06e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770385, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121658, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.1e+05     0.265     0.998         0
          1  5.69e+06  4.75e+03    -0.842         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107     0.265    -0.999   -0.0434
          1   2.9e+03  4.75e+03   -0.0434     0.999
         *Z       ---       ---  1.06e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898731, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770158, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122192, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897085, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.05e+05     0.255     0.998         0
          1  3.22e+06  4.13e+03    -0.837         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.6     0.255    -0.999   -0.0431
          1  1.64e+03  4.13e+03   -0.0431     0.999
         *Z       ---       ---  1.06e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899219, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002306
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119473
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033389
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037002
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135778
         W1a Well: minimal relaxation eigenvalue = 0.0151463
         W1a Well: maximal relaxation eigenvalue = 36.5563
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002254
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124596
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035909
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054284
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143367
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70156, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 3.75e+05 2.27e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       393  7.96e-20  1.01e-21
        W1b   0.00254         1  2.03e-22  2.56e-24
         P1  1.26e+19  4.94e+21         1    0.0126
         P2  9.95e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       398  1.43e-22   1.8e-24
        W1b   0.00251         1  3.58e-25  4.52e-27
         P1  7.01e+21  2.79e+24         1    0.0126
         P2  5.55e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.705404, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904988, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.38e+05     0.233     0.998         0
          1  4.37e+06   9.1e+03    -0.823         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.09e+03     0.233    -0.999   -0.0414
          1  6.62e+04   9.1e+03   -0.0414     0.999
         *Z       ---       ---  1.25e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907229, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756576, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120341, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.76e+04     0.204     0.998         0
          1  1.15e+06  5.91e+03    -0.811         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       418     0.204    -0.999   -0.0409
          1  1.74e+04  5.91e+03   -0.0409     0.999
         *Z       ---       ---  1.25e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883557, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120274, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.38e+04     0.187     0.998         0
          1  6.77e+05  4.87e+03    -0.804         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       209     0.187    -0.999   -0.0405
          1  1.03e+04  4.87e+03   -0.0405     0.999
         *Z       ---       ---  1.25e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759675, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   6.9e+03     0.169     0.998         0
          1  4.12e+05  3.85e+03    -0.796         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105     0.169    -0.999   -0.0401
          1  6.23e+03  3.85e+03   -0.0401     0.999
         *Z       ---       ---  1.25e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.000105282
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000648, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760444, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.45e+03     0.155     0.998         0
          1  2.55e+05  2.78e+03    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      52.3     0.155    -0.999   -0.0397
          1  3.86e+03  2.78e+03   -0.0397     0.999
         *Z       ---       ---  1.25e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.000113431
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00056, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889351, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002414
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124664
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034054
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04449
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133971
         W1a Well: minimal relaxation eigenvalue = 0.00887509
         W1a Well: maximal relaxation eigenvalue = 40.4422
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002374
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124633
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035672
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054971
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140995
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711339, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.14e+05 3.34e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       410  8.23e-20   1.3e-21
        W1b   0.00244         1  2.01e-22  3.17e-24
         P1  1.21e+19  4.98e+21         1    0.0158
         P2  7.69e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       415  1.53e-22  2.41e-24
        W1b   0.00241         1  3.68e-25  5.81e-27
         P1  6.55e+21  2.72e+24         1    0.0158
         P2  4.15e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.715171, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76033, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.907691, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.3e+05     0.208     0.998         0
          1   9.4e+06  1.34e+04    -0.807         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03     0.208    -0.999   -0.0398
          1  8.34e+04  1.34e+04   -0.0398     0.999
         *Z       ---       ---  1.46e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.909945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760596, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120634, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885951, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.6e+04     0.191     0.998         0
          1  2.33e+06  8.59e+03      -0.8         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       408     0.191    -0.999   -0.0395
          1  2.07e+04  8.59e+03   -0.0395     0.999
         *Z       ---       ---  1.46e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760105, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120756, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885349, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.3e+04     0.181     0.998         0
          1  1.33e+06   7.1e+03    -0.796         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204     0.181    -0.999   -0.0393
          1  1.18e+04   7.1e+03   -0.0393     0.999
         *Z       ---       ---  1.46e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+04     0.169     0.998         0
          1  7.85e+05  5.72e+03    -0.791         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       102     0.169    -0.999    -0.039
          1  6.97e+03  5.72e+03    -0.039     0.999
         *Z       ---       ---  1.46e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76126, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119618, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88534, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.75e+03     0.158     0.998         0
          1  4.73e+05   4.3e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        51     0.158    -0.999   -0.0387
          1   4.2e+03   4.3e+03   -0.0387     0.999
         *Z       ---       ---  1.46e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.000112228
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000612, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888925, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002325
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.117752
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.035032
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04726
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132391
         W1a Well: minimal relaxation eigenvalue = 0.00478203
         W1a Well: maximal relaxation eigenvalue = 43.6492
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002163
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121775
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035495
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058276
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141344
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706569, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.14e+05 4.87e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       426  8.51e-20  1.65e-21
        W1b   0.00235         1     2e-22  3.88e-24
         P1  1.18e+19  5.01e+21         1    0.0194
         P2  6.04e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       431  1.63e-22  3.18e-24
        W1b   0.00232         1  3.79e-25  7.37e-27
         P1  6.12e+21  2.64e+24         1    0.0194
         P2  3.15e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.710424, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758799, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137282, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906327, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.17e+05     0.192     0.998         0
          1  2.15e+07  2.25e+04    -0.796         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.99e+03     0.192    -0.999   -0.0385
          1  1.03e+05  2.25e+04   -0.0385     0.999
         *Z       ---       ---   1.7e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757203, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12074, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.34e+04     0.181     0.998         0
          1  5.03e+06  1.41e+04    -0.792         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       399     0.181    -0.999   -0.0383
          1  2.41e+04  1.41e+04   -0.0383     0.999
         *Z       ---       ---   1.7e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884819, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75708, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.17e+04     0.175     0.998         0
          1  2.78e+06  1.16e+04     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       199     0.175    -0.999   -0.0382
          1  1.33e+04  1.16e+04   -0.0382     0.999
         *Z       ---       ---   1.7e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75811, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120253, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883056, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.08e+04     0.168     0.998         0
          1  1.57e+06  9.42e+03    -0.786         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      99.7     0.168    -0.999   -0.0381
          1  7.52e+03  9.42e+03   -0.0381     0.999
         *Z       ---       ---   1.7e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882293, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+04      0.16     0.998         0
          1  9.12e+05  7.44e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.9      0.16    -0.999   -0.0379
          1  4.36e+03  7.44e+03   -0.0379     0.999
         *Z       ---       ---   1.7e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884656, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 403.022, elapsed time[sec] = 8
