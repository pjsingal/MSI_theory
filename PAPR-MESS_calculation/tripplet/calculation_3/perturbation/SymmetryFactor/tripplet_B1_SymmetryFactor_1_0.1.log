Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.006455, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.007633, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.116917, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.0029, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.035096, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.31064, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.32315, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001331, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001889, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.116014, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003166, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.038168, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.24459, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.24971, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001304, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001901, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00398, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000826, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001398, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003011, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012311, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000851, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.002022, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003734, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000756, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001291, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002777, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010073, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019737, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.020348, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.760599, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.00329, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.018737, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.80533, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.82833, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.011072, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.011112, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.092004, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.5836, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000119, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.58507, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000742, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.103471, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.04312, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.051515, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.010823, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000595, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.375559, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.004838, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.577566, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.67596, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.6767, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.176862, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.00139, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.39488, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.59639, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.2749, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000902, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00033, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010968, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.01102, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.22239e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  6.76184e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33   4.5774e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.73034e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  4.97632e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.23361e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  2.78712e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  5.89823e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37   1.1866e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37   2.2896e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.26242e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  7.68867e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38   1.3483e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.30483e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  3.84938e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39  6.29345e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.00895e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.58849e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40  2.45927e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  3.74844e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  3.99522e+51  7.16371e+38  2.22239e+34  3.30169e+46
     200  3.87426e+38  2.39757e+42  4.20573e+36  6.76184e+35  6.21905e+37
     300  1.62356e+38   6.2003e+39  2.66938e+36   4.5774e+36  6.95471e+35
     400  2.18646e+38  6.06528e+38  4.17222e+36  1.73034e+37  2.85836e+35
     500  4.20247e+38  2.33681e+38  8.42533e+36  4.97632e+37  3.68706e+35
     600  9.11395e+38  1.70642e+38  1.83532e+37  1.23361e+38  7.13924e+35
     700  2.04507e+39  1.74317e+38  4.04463e+37  2.78712e+38   1.6066e+36
     800  4.57883e+39  2.15146e+38  8.78947e+37  5.89823e+38  3.78644e+36
     900  1.00673e+40  2.96719e+38  1.86391e+38   1.1866e+39  8.92065e+36
    1000  2.15873e+40  4.37313e+38  3.84242e+38   2.2896e+39  2.05678e+37
    1100   4.5032e+40  6.70523e+38  7.69432e+38  4.26242e+39  4.59845e+37
    1200  9.13498e+40  1.05177e+39  1.49762e+39  7.68867e+39  9.93706e+37
    1300  1.80321e+41  1.66961e+39  2.83701e+39   1.3483e+40  2.07486e+38
    1400  3.46766e+41  2.66328e+39  5.23856e+39  2.30483e+40  4.19068e+38
    1500  6.50539e+41   4.2488e+39  9.44382e+39  3.84938e+40  8.20174e+38
    1600  1.19227e+42   6.7574e+39  1.66473e+40  6.29345e+40  1.55852e+39
    1700  2.13772e+42  1.06912e+40  2.87368e+40  1.00895e+41  2.88128e+39
    1800  3.75476e+42  1.68032e+40  4.86438e+40  1.58849e+41   5.1923e+39
    1900  6.46873e+42  2.62102e+40  8.08464e+40  2.45927e+41  9.13766e+39
    2000  1.09439e+43  4.05515e+40  1.32082e+41  3.74844e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.7347, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001838
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000563
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.047879
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.23939
         W1a Well: minimal relaxation eigenvalue = 0.0683137
         W1a Well: maximal relaxation eigenvalue = 4.21349
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002426
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.29625
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.083718
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.282306
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.34347
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.32278, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.47e+05 4.67e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 3.74e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00104  2.12e-16  7.52e-57
        W1b       960         1  2.04e-13  7.22e-54
         P1  4.71e+15  4.91e+12         1  3.55e-41
         P2  1.33e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000162  2.74e-20   9.7e-61
        W1b  6.19e+03         1  1.69e-16     6e-57
         P1  3.65e+19  5.91e+15         1  3.55e-41
         P2  1.03e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.32715, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88024, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.304987, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22457, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14    0.0446         0         1
          1      14.7      1.09         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0777    0.0446  -0.00138        -1
          1         1      1.09        -1   0.00138
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.22732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88434, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.285635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17806, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254     0.011         0         1
          1      4.61     0.378         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174     0.011  -0.00366        -1
          1     0.315     0.378        -1   0.00366
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.18045, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.182541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003023, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.192468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132   0.00501         0         1
          1      2.71     0.301         1    -0.209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00904   0.00501  -0.00673        -1
          1     0.185     0.301        -1   0.00673
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.192848, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019549, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003007, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022615, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0683   0.00204         0         1
          1      1.63     0.247         1    -0.352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00467   0.00204   -0.0114        -1
          1     0.111     0.247        -1    0.0114
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003052, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022617, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0349  0.000743         0     0.999
          1         1     0.193         1    -0.517
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00239  0.000743   -0.0167        -1
          1    0.0684     0.193        -1    0.0167
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022641, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001856
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000579
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03974
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.232303
         W1a Well: minimal relaxation eigenvalue = 0.0670693
         W1a Well: maximal relaxation eigenvalue = 3.76037
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002165
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.297964
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.085813
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087207
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.348075
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.12034, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.74e+05 6.09e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 4.82e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00132  1.25e-16  4.35e-55
        W1b       759         1  9.52e-14   3.3e-52
         P1  7.98e+15  1.05e+13         1  3.47e-39
         P2   2.3e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000331  1.67e-20  5.81e-59
        W1b  3.02e+03         1  5.06e-17  1.76e-55
         P1  5.98e+19  1.98e+16         1  3.47e-39
         P2  1.72e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.12433, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.9044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.323431, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.25041, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03    0.0506         0         1
          1      17.5      1.06         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693    0.0506  -0.00123        -1
          1      1.18      1.06        -1   0.00123
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.25292, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.90821, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.287586, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.20395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0128         0         1
          1      5.22     0.388         1    -0.096
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0128  -0.00349        -1
          1      0.35     0.388        -1   0.00349
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.20635, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.12605, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003083, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.13614, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124   0.00599         0         1
          1      3.03     0.321         1    -0.183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00599  -0.00664        -1
          1     0.203     0.321        -1   0.00664
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.136517, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019765, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003097, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022925, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0647   0.00251         0         1
          1       1.8     0.271         1    -0.318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434   0.00251   -0.0116        -1
          1     0.121     0.271        -1    0.0116
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02295, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019736, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003062, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022859, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0333  0.000948         0     0.999
          1      1.11     0.217         1    -0.478
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223  0.000948   -0.0174        -1
          1    0.0744     0.217        -1    0.0174
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022884, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001769
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000546
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036805
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.219881
         W1a Well: minimal relaxation eigenvalue = 0.0658303
         W1a Well: maximal relaxation eigenvalue = 4.83086
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001844
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.282755
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.080825
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07696
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.326201
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.05068, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.35e+05 7.87e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.18e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00185  7.53e-17  1.69e-53
        W1b       542         1  4.08e-14  9.13e-51
         P1  1.33e+16  2.45e+13         1  2.24e-37
         P2  5.93e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000636  1.07e-20  2.41e-57
        W1b  1.57e+03         1  1.69e-17  3.78e-54
         P1  9.31e+19  5.92e+16         1  2.24e-37
         P2  4.16e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.05514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.300715, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.07504, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01    0.0585         0         1
          1      19.9      1.13         1   -0.0288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664    0.0585  -0.00124        -1
          1      1.31      1.13        -1   0.00124
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76229, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.266417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0155         0         1
          1      5.81      0.41         1   -0.0846
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0155  -0.00363        -1
          1     0.382      0.41        -1   0.00363
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.03924, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.48836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002858, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.498052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00748         0         1
          1      3.35     0.344         1    -0.164
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00828   0.00748  -0.00705        -1
          1     0.221     0.344        -1   0.00705
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.498423, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018306, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.066   0.00325         0     0.999
          1      1.98     0.296         1    -0.291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00435   0.00325   -0.0125        -1
          1     0.131     0.296        -1    0.0125
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021239, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018263, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002829, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021149, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0343   0.00128         0     0.999
          1      1.22     0.242         1    -0.445
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226   0.00128   -0.0191        -1
          1    0.0804     0.242        -1    0.0191
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021173, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00185
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000553
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037134
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.215595
         W1a Well: minimal relaxation eigenvalue = 0.0647287
         W1a Well: maximal relaxation eigenvalue = 3.73205
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001789
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.283776
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081728
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085169
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.329345
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0595, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.71e+05 1.01e+12
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 7.86e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0026  4.89e-17  4.91e-52
        W1b       384         1  1.88e-14  1.89e-49
         P1  2.05e+16  5.33e+13         1     1e-35
         P2  2.04e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00116   7.2e-21  7.23e-56
        W1b       863         1  6.21e-18  6.24e-53
         P1  1.39e+20  1.61e+17         1     1e-35
         P2  1.38e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.12659, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.305223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09806, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.997    0.0677         0         1
          1      23.5      1.02         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0645    0.0677  -0.00128        -1
          1      1.52      1.02        -1   0.00128
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.10057, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77554, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.269925, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05329, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0188         0         1
          1       6.5     0.419         1   -0.0752
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00384        -1
          1      0.42     0.419        -1   0.00384
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0557, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.375932, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002874, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.385461, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.129   0.00933         0         1
          1      3.71     0.366         1    -0.148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835   0.00933  -0.00754        -1
          1      0.24     0.366        -1   0.00754
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.385854, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002857, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02131, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0684    0.0042         0     0.999
          1      2.18     0.322         1    -0.266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00443    0.0042   -0.0136        -1
          1     0.141     0.322        -1    0.0136
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021335, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01834, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021251, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0358   0.00173         0     0.999
          1      1.34     0.268         1    -0.412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00232   0.00173    -0.021        -1
          1    0.0868     0.268        -1     0.021
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021275, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001847
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000555
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035172
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.217106
         W1a Well: minimal relaxation eigenvalue = 0.0635922
         W1a Well: maximal relaxation eigenvalue = 5.85651
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001865
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.288868
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.082143
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087461
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.337742
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.07507, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.49e+05 1.29e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11  9.9e+13
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00365  3.29e-17  1.08e-50
        W1b       274         1  9.02e-15  2.96e-48
         P1  3.04e+16  1.11e+14         1  3.28e-34
         P2  9.24e+49  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00201     5e-21  1.64e-54
        W1b       497         1  2.49e-18  8.17e-52
         P1     2e+20  4.02e+17         1  3.28e-34
         P2  6.08e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.07917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.305993, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11798, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.992     0.078         0         1
          1      25.8      1.16         1   -0.0219
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.078  -0.00133        -1
          1      1.64      1.16        -1   0.00133
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.12044, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79551, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.271361, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.07468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246    0.0226         0         1
          1      7.09     0.451         1   -0.0673
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0226  -0.00406        -1
          1     0.451     0.451        -1   0.00406
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07707, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.394996, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.404619, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134    0.0116         0         1
          1      4.04     0.394         1    -0.133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0085    0.0116  -0.00806        -1
          1     0.257     0.394        -1   0.00806
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.404985, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002883, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021578, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0718    0.0054         0     0.999
          1      2.38      0.35         1    -0.243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00456    0.0054   -0.0147        -1
          1     0.151      0.35        -1    0.0147
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021602, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018632, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00289, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.038   0.00231         0     0.999
          1      1.46     0.296         1    -0.381
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00242   0.00231    -0.023        -1
          1     0.093     0.296        -1     0.023
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021605, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001763
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000518
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.312231
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.210946
         W1a Well: minimal relaxation eigenvalue = 0.0624809
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001805
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.272708
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07972
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08332
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.320849
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.30509, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.59e+05 1.65e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.24e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00486  2.23e-17  1.81e-49
        W1b       206         1  4.59e-15  3.73e-47
         P1  4.48e+16  2.18e+14         1  8.12e-33
         P2  5.52e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00335  3.59e-21  2.92e-53
        W1b       299         1  1.07e-18  8.71e-51
         P1  2.78e+20  9.31e+17         1  8.12e-33
         P2  3.43e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.30893, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68347, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.2809, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99025, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.941    0.0891         0         1
          1      28.5      1.29         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00128        -1
          1      1.78      1.29        -1   0.00128
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.9927, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.257535, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95494, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0267         0         1
          1      7.74     0.486         1    -0.059
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0152    0.0267  -0.00412        -1
          1     0.484     0.486        -1   0.00412
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.95758, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.654964, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00274, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.664335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134     0.014         0     0.999
          1       4.4     0.424         1    -0.119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014  -0.00829        -1
          1     0.275     0.424        -1   0.00829
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.664689, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017504, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002727, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020287, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0728   0.00674         0     0.999
          1      2.59      0.38         1     -0.22
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00674   -0.0153        -1
          1     0.162      0.38        -1    0.0153
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017459, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0391   0.00301         0     0.998
          1       1.6     0.326         1     -0.35
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244   0.00301   -0.0244        -1
          1    0.0997     0.326        -1    0.0244
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020261, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001694
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000528
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032564
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.202482
         W1a Well: minimal relaxation eigenvalue = 0.0615737
         W1a Well: maximal relaxation eigenvalue = 6.0739
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001837
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.271221
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079399
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089998
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.31964
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0206, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.39e+05 2.08e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14 1.55e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00685   1.6e-17  2.51e-48
        W1b       146         1  2.34e-15  3.67e-46
         P1  6.24e+16  4.27e+14         1  1.57e-31
         P2  3.98e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00537  2.66e-21  4.16e-52
        W1b       186         1  4.95e-19  7.76e-50
         P1  3.76e+20  2.02e+18         1  1.57e-31
         P2   2.4e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.02468, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68739, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.287287, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99344, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.956     0.103         0         1
          1      32.8      1.12         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103  -0.00137        -1
          1      2.02      1.12        -1   0.00137
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.99621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.70712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.258745, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97347, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.255    0.0322         0         1
          1      8.57     0.496         1   -0.0535
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322  -0.00443        -1
          1     0.528     0.496        -1   0.00443
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.97587, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.620064, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00276, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.629393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.142    0.0173         0     0.999
          1      4.83      0.45         1    -0.108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0173  -0.00894        -1
          1     0.298      0.45        -1   0.00894
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.629772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017722, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020528, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0787   0.00864         0     0.999
          1      2.83     0.412         1    -0.201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00864   -0.0166        -1
          1     0.174     0.412        -1    0.0166
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01766, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020447, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0428   0.00402         0     0.998
          1      1.75     0.358         1    -0.322
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00402   -0.0266        -1
          1     0.108     0.358        -1    0.0266
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020471, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001775
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000495
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037005
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.200992
         W1a Well: minimal relaxation eigenvalue = 0.0606607
         W1a Well: maximal relaxation eigenvalue = 4.42925
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001796
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.269779
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076154
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073112
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.300513
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.981889, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.24e+05 2.62e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 1.92e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0096  1.15e-17   2.8e-47
        W1b       104         1   1.2e-15  2.91e-45
         P1  8.68e+16  8.34e+14         1  2.43e-30
         P2  3.58e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00832  2.01e-21  4.89e-51
        W1b       120         1  2.42e-19  5.88e-49
         P1  4.96e+20  4.13e+18         1  2.43e-30
         P2  2.04e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.986022, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59829, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.254318, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.987     0.118         0         1
          1      37.2      1.02         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.118  -0.00148        -1
          1      2.26      1.02        -1   0.00148
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.88839, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59993, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244414, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.272    0.0385         0         1
          1      9.44     0.518         1    -0.049
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0385   -0.0048        -1
          1     0.572     0.518        -1    0.0048
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.876457, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002597, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885169, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154    0.0213         0     0.999
          1       5.3     0.482         1   -0.0988
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00935    0.0213  -0.00968        -1
          1     0.321     0.482        -1   0.00968
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885539, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016554, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002589, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0863     0.011         0     0.998
          1       3.1     0.447         1    -0.184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00524     0.011    -0.018        -1
          1     0.188     0.447        -1     0.018
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002585, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0476   0.00533         0     0.997
          1      1.91     0.394         1    -0.296
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00289   0.00533    -0.029        -1
          1     0.116     0.394        -1     0.029
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019183, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001758
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0005
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033384
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.197657
         W1a Well: minimal relaxation eigenvalue = 0.0597142
         W1a Well: maximal relaxation eigenvalue = 6.74834
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001773
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.242193
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078479
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.10141
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.302753
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.97994, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.69e+05 3.27e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 2.37e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0136   8.7e-18  2.69e-46
        W1b      73.7         1  6.41e-16  1.98e-44
         P1  1.15e+17  1.56e+15         1  3.09e-29
         P2  3.71e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0125  1.56e-21  4.83e-50
        W1b      79.9         1  1.25e-19  3.86e-48
         P1   6.4e+20  8.01e+18         1  3.09e-29
         P2  2.07e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.983781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61165, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.26333, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90887, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.135         0         1
          1      40.8      1.12         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.135  -0.00167        -1
          1      2.43      1.12        -1   0.00167
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91127, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.6154, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86962, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.299     0.046         0     0.999
          1      10.3     0.561         1   -0.0459
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046  -0.00535        -1
          1     0.613     0.561        -1   0.00535
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87199, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.834379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002607, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.843181, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0262         0     0.999
          1      5.76     0.522         1   -0.0915
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0103    0.0262   -0.0107        -1
          1     0.344     0.522        -1    0.0107
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.843552, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016781, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01943, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0974     0.014         0     0.998
          1      3.37     0.486         1     -0.17
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00582     0.014   -0.0198        -1
          1     0.201     0.486        -1    0.0198
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019455, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016738, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002589, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0545   0.00707         0     0.996
          1      2.09     0.432         1    -0.272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00707   -0.0317    -0.999
          1     0.125     0.432    -0.999    0.0317
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019408, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001688
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000505
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035568
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.200481
         W1a Well: minimal relaxation eigenvalue = 0.0587158
         W1a Well: maximal relaxation eigenvalue = 10.7587
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001796
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.263949
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07848
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.091583
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.30855
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00234, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.49e+05 4.08e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33 2.91e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.019  6.72e-18  2.22e-45
        W1b      52.7         1  3.54e-16  1.17e-43
         P1  1.49e+17  2.83e+15         1  3.31e-28
         P2   4.5e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0183  1.24e-21  4.09e-49
        W1b      54.6         1  6.75e-20  2.23e-47
         P1  8.09e+20  1.48e+19         1  3.31e-28
         P2  2.45e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 1.00615, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.63278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.269694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92051, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.155         0         1
          1      43.3      1.45         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067     0.155  -0.00189        -1
          1      2.54      1.45        -1   0.00189
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.92291, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.63833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.249195, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89552, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0546         0     0.999
          1      11.1     0.626         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0195    0.0546  -0.00596        -1
          1      0.65     0.626        -1   0.00596
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.89791, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002675, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.804248, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.193    0.0319         0     0.998
          1      6.24     0.571         1    -0.085
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0319   -0.0117        -1
          1     0.366     0.571        -1    0.0117
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.804611, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016991, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.111    0.0176         0     0.997
          1      3.67      0.53         1    -0.157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00651    0.0176   -0.0216        -1
          1     0.216      0.53        -1    0.0216
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016946, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002659, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019664, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0629   0.00928         0     0.995
          1      2.29     0.474         1     -0.25
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00369   0.00928   -0.0345    -0.999
          1     0.134     0.474    -0.999    0.0345
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019688, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001702
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000487
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035456
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.18873
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001875
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.25423
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075675
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090583
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.297324
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.96494, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.69e+05 5.05e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 3.55e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  5.16e-18  1.55e-44
        W1b      38.2         1  1.97e-16  5.94e-43
         P1  1.94e+17  5.07e+15         1  3.01e-27
         P2  6.43e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  9.97e-22  3.01e-48
        W1b      38.2         1  3.81e-20  1.15e-46
         P1     1e+21  2.63e+19         1  3.01e-27
         P2  3.33e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.968716, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5484, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.267654, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83123, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.176         0         1
          1      47.6      1.55         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00212        -1
          1      2.76      1.55        -1   0.00212
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55362, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79681, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.367    0.0644         0     0.999
          1      12.1     0.673         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0644   -0.0066        -1
          1     0.699     0.673        -1    0.0066
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.991115, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00256, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.999717, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0385         0     0.998
          1      6.81     0.618         1   -0.0792
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0128        -1
          1     0.394     0.618        -1    0.0128
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016061, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018659, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0219         0     0.996
          1      4.02     0.578         1    -0.145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00729    0.0219   -0.0234        -1
          1     0.232     0.578        -1    0.0234
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018682, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002539, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0725     0.012         0     0.994
          1      2.51     0.521         1     -0.23
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419     0.012   -0.0372    -0.999
          1     0.145     0.521    -0.999    0.0372
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018632, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001653
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000481
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035619
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.184078
         W1a Well: minimal relaxation eigenvalue = 0.0572581
         W1a Well: maximal relaxation eigenvalue = 6.11952
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001951
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.255552
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076765
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.086893
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.298225
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.960424, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.49e+05 6.24e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.32e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0361  4.13e-18  9.83e-44
        W1b      27.7         1  1.14e-16  2.72e-42
         P1  2.42e+17  8.75e+15         1  2.38e-26
         P2  1.02e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0366  8.17e-22  1.95e-47
        W1b      27.3         1  2.23e-20  5.32e-46
         P1  1.22e+21  4.48e+19         1  2.38e-26
         P2  5.14e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.964355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55879, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.266345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.199         0         1
          1      55.4      1.09         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0786     0.199  -0.00248        -1
          1      3.17      1.09        -1   0.00248
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.84803, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56746, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81464, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.416    0.0756         0     0.999
          1      13.4     0.691         1   -0.0392
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0756  -0.00745        -1
          1     0.767     0.691        -1   0.00745
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.817, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.951384, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960046, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.247    0.0463         0     0.997
          1      7.51     0.661         1   -0.0746
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0463   -0.0142        -1
          1      0.43     0.661        -1    0.0142
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.960418, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016196, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00255, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018801, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146    0.0271         0     0.995
          1      4.42     0.627         1    -0.134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834    0.0271   -0.0255        -1
          1     0.253     0.627        -1    0.0255
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016169, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.085    0.0154         0     0.992
          1      2.77      0.57         1    -0.212
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00487    0.0154   -0.0403    -0.999
          1     0.159      0.57    -0.999    0.0403
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018799, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001699
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000489
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037096
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.193292
         W1a Well: minimal relaxation eigenvalue = 0.0563928
         W1a Well: maximal relaxation eigenvalue = 9.76691
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002611
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.251989
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074423
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.103487
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.292915
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.976116, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.24e+05 7.67e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.23e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0497  3.35e-18  5.55e-43
        W1b      20.1         1  6.75e-17  1.12e-41
         P1  2.98e+17  1.48e+16         1  1.65e-25
         P2   1.8e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0501  6.79e-22  1.12e-46
        W1b      19.9         1  1.35e-20  2.24e-45
         P1  1.47e+21  7.38e+19         1  1.65e-25
         P2   8.9e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.979853, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.2423, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80835, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.223         0     0.999
          1      58.8      1.44         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.223  -0.00295        -1
          1      3.31      1.44        -1   0.00295
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81071, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54108, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.23402, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78216, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.482    0.0882         0     0.998
          1      14.5     0.766         1   -0.0383
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0882  -0.00853        -1
          1     0.818     0.766        -1   0.00853
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.954857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.963358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.289    0.0552         0     0.996
          1      8.17     0.724         1   -0.0711
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0552   -0.0159        -1
          1     0.461     0.724        -1    0.0159
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963723, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018843, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.171    0.0333         0     0.994
          1      4.84     0.685         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00967    0.0333   -0.0281        -1
          1     0.273     0.685        -1    0.0281
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016227, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00253, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01881, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.101    0.0197         0      0.99
          1      3.05     0.625         1    -0.197
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00571    0.0197   -0.0437    -0.999
          1     0.172     0.625    -0.999    0.0437
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018834, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001562
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000474
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041495
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186382
         W1a Well: minimal relaxation eigenvalue = 0.0557725
         W1a Well: maximal relaxation eigenvalue = 6.3968
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00169
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.252516
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071523
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085566
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.278799
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.938128, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.81e+05 9.39e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.31e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0666   2.7e-18  2.76e-42
        W1b        15         1  4.06e-17  4.15e-41
         P1   3.7e+17  2.46e+16         1  1.02e-24
         P2  3.62e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0675  5.73e-22  5.85e-46
        W1b      14.8         1  8.49e-21  8.67e-45
         P1  1.75e+21  1.18e+20         1  1.02e-24
         P2  1.71e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.941866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.44815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.233072, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71048, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.249         0     0.999
          1      66.6       1.2         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.099     0.249  -0.00343        -1
          1      3.71       1.2        -1   0.00343
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.71284, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.549     0.102         0     0.998
          1        16      0.81         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102   -0.0096        -1
          1     0.891      0.81        -1    0.0096
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.68185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18493, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0651         0     0.996
          1      8.98     0.782         1   -0.0677
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0651   -0.0175        -1
          1     0.501     0.782        -1    0.0175
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18537, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015315, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002435, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.198    0.0403         0     0.992
          1      5.33     0.747         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0403   -0.0304        -1
          1     0.297     0.747        -1    0.0304
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015279, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002428, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017758, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.119    0.0246    0.0119     0.988
          1      3.38     0.684         1    -0.182
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00661    0.0246   -0.0468    -0.999
          1     0.188     0.684    -0.999    0.0468
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017782, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001652
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000472
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032074
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.18862
         W1a Well: minimal relaxation eigenvalue = 0.0549719
         W1a Well: maximal relaxation eigenvalue = 10.0621
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001773
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.239542
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.072558
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090671
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.282914
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.928468, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.54e+05 1.15e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 7.58e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0881  2.26e-18  1.28e-41
        W1b      11.4         1  2.56e-17  1.45e-40
         P1  4.43e+17   3.9e+16         1  5.66e-24
         P2  7.82e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0892  4.89e-22  2.77e-45
        W1b      11.2         1  5.48e-21   3.1e-44
         P1  2.05e+21  1.83e+20         1  5.66e-24
         P2  3.61e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.932569, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48822, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236877, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.74905, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.277         0     0.999
          1      71.9      1.43         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.277  -0.00399        -1
          1      3.95      1.43        -1   0.00399
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.75146, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.49259, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.229658, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.627     0.117         0     0.997
          1      17.4     0.894         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0345     0.117   -0.0108        -1
          1     0.954     0.894        -1    0.0108
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.73152, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14968, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002711, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.38    0.0761         0     0.994
          1       9.8     0.856         1   -0.0647
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0209    0.0761   -0.0192        -1
          1     0.539     0.856        -1    0.0192
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1586, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015466, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002413, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017932, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0482         0      0.99
          1      5.84     0.816         1    -0.111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0126    0.0482   -0.0328    -0.999
          1     0.321     0.816    -0.999    0.0328
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017956, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017987, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.139    0.0305    0.0146     0.985
          1      3.73     0.749         1    -0.168
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00764    0.0305   -0.0499    -0.999
          1     0.205     0.749    -0.999    0.0499
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018011, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00149
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000462
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035544
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179139
         W1a Well: minimal relaxation eigenvalue = 0.0541168
         W1a Well: maximal relaxation eigenvalue = 13.6688
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001713
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.240606
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068227
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085997
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.272478
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.903581, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.57e+05 1.39e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.08e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.115  1.87e-18  5.32e-41
        W1b      8.71         1  1.63e-17  4.63e-40
         P1  5.35e+17  6.14e+16         1  2.85e-23
         P2  1.88e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.116  4.22e-22   1.2e-44
        W1b       8.6         1  3.63e-21  1.03e-43
         P1  2.37e+21  2.76e+20         1  2.85e-23
         P2  8.33e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.907331, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40523, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.245588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.28     0.306         0     0.998
          1        77      1.87         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.306  -0.00459        -1
          1      4.17      1.87        -1   0.00459
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215999, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63077, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.716     0.133         0     0.996
          1      18.9     0.997         1   -0.0356
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133    -0.012        -1
          1      1.02     0.997        -1     0.012
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31322, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.021443, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34043, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.436     0.088         0     0.993
          1      10.7     0.942         1   -0.0619
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236     0.088    -0.021        -1
          1     0.579     0.942        -1     0.021
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34088, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015575, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002326, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018122, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.266    0.0571    0.0118     0.988
          1      6.41     0.894         1    -0.104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0571   -0.0353    -0.999
          1     0.347     0.894    -0.999    0.0353
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014539, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016899, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.162    0.0371    0.0177     0.982
          1      4.12     0.822         1    -0.157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00878    0.0371    -0.053    -0.999
          1     0.223     0.822    -0.999     0.053
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016925, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00159
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000461
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.704258
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.181686
         W1a Well: minimal relaxation eigenvalue = 0.0537563
         W1a Well: maximal relaxation eigenvalue = 7.27034
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001738
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.237227
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068086
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082234
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.271554
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.56692, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.31e+05 1.69e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.08e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.148   1.6e-18  2.09e-40
        W1b      6.78         1  1.08e-17  1.41e-39
         P1  6.26e+17  9.24e+16         1  1.31e-22
         P2  4.79e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.149  3.68e-22   4.8e-44
        W1b       6.7         1  2.46e-21  3.22e-43
         P1  2.72e+21  4.06e+20         1  1.31e-22
         P2  2.08e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 1.57071, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.243823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66843, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55     0.338         0     0.998
          1        88      1.36         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00522        -1
          1      4.73      1.36        -1   0.00522
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67085, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41288, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218165, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63779, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807      0.15         0     0.995
          1      20.9      1.04         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0133        -1
          1      1.12      1.04        -1    0.0133
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64015, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31006, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.020916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.495     0.101         0     0.991
          1      11.8      1.01         1   -0.0593
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101   -0.0228        -1
          1     0.635      1.01        -1    0.0228
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015451, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002315, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017986, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.304    0.0672    0.0142     0.986
          1       7.1     0.971         1   -0.0977
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0672   -0.0375    -0.999
          1     0.382     0.971    -0.999    0.0375
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018023, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016938, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.188    0.0449    0.0209     0.979
          1      4.58     0.895         1    -0.145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0449   -0.0555    -0.998
          1     0.246     0.895    -0.998    0.0555
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016963, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001605
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000464
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03078
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186165
         W1a Well: minimal relaxation eigenvalue = 0.0530077
         W1a Well: maximal relaxation eigenvalue = 11.4029
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002092
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.245424
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068858
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077651
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.273576
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.903698, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 1.05e+05 2.04e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.29e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.187  1.38e-18  7.61e-40
        W1b      5.34         1  7.35e-18  4.07e-39
         P1  7.26e+17  1.36e+17         1  5.53e-22
         P2  1.31e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.189  3.23e-22  1.79e-43
        W1b      5.28         1  1.71e-21  9.44e-43
         P1  3.09e+21  5.86e+20         1  5.53e-22
         P2  5.59e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.907453, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.4212, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240521, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6936, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.87     0.374         0     0.997
          1      93.7      1.83         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.374  -0.00588        -1
          1      4.97      1.83        -1   0.00588
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.69605, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40531, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21674, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.914     0.169         0     0.994
          1      22.7      1.15         1   -0.0339
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0484     0.169   -0.0147        -1
          1       1.2      1.15        -1    0.0147
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63112, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28189, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0174, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3051, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.563     0.116    0.0105     0.989
          1      12.9      1.11         1   -0.0569
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.116   -0.0246        -1
          1     0.685      1.11        -1    0.0246
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014713, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002326, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017091, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.348    0.0783     0.017     0.983
          1       7.8      1.06         1   -0.0923
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0185    0.0783   -0.0399    -0.999
          1     0.414      1.06    -0.999    0.0399
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017115, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014674, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002331, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017056, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.217    0.0536    0.0247     0.975
          1      5.06     0.979         1    -0.135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0536   -0.0584    -0.998
          1     0.268     0.979    -0.998    0.0584
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01708, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.0016
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000443
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034941
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.17558
         W1a Well: minimal relaxation eigenvalue = 0.0524324
         W1a Well: maximal relaxation eigenvalue = 10.7298
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001877
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.225994
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065404
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084921
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.253662
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.861806, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.27e+05 2.45e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.53e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.234  1.18e-18  2.55e-39
        W1b      4.27         1  5.02e-18  1.09e-38
         P1  8.51e+17  1.99e+17         1  2.17e-21
         P2  3.93e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.237  2.87e-22  6.21e-43
        W1b      4.22         1  1.21e-21  2.62e-42
         P1  3.49e+21  8.27e+20         1  2.17e-21
         P2  1.61e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.865581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34623, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.225753, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58536, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.21     0.405         0     0.997
          1       104      1.68         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.405  -0.00662        -1
          1      5.47      1.68        -1   0.00662
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.58781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34826, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.188         0     0.992
          1      24.9      1.25         1   -0.0332
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0539     0.188   -0.0161        -1
          1      1.31      1.25        -1    0.0161
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.56621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48904, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.636     0.131    0.0126     0.987
          1      14.2      1.21         1   -0.0547
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0333     0.131   -0.0264        -1
          1     0.744      1.21        -1    0.0264
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48966, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.032106, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.034835, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.396    0.0902      0.02      0.98
          1      8.61      1.16         1   -0.0872
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0902   -0.0422    -0.999
          1     0.451      1.16    -0.999    0.0422
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.034897, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013951, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016205, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.249    0.0632    0.0286     0.971
          1      5.62      1.07         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0131    0.0632   -0.0608    -0.998
          1     0.295      1.07    -0.998    0.0608
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016228, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001596
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000445
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033692
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.181846
         W1a Well: minimal relaxation eigenvalue = 0.0519977
         W1a Well: maximal relaxation eigenvalue = 6.87135
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001756
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.234131
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066351
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071837
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260172
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.868801, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 1.02e+05 2.94e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22  1.8e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.291  1.03e-18  8.16e-39
        W1b      3.44         1  3.55e-18  2.81e-38
         P1  9.69e+17  2.82e+17         1  7.91e-21
         P2  1.22e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.294  2.57e-22  2.03e-42
        W1b       3.4         1  8.73e-22  6.91e-42
         P1   3.9e+21  1.15e+21         1  7.91e-21
         P2  4.93e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.872981, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34817, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230089, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59923, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.59     0.442         0     0.996
          1       116      1.64         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187     0.442  -0.00737        -1
          1      6.01      1.64        -1   0.00737
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60245, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34886, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.207136, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56255, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15      0.21         0     0.991
          1      27.4      1.35         1   -0.0325
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.06      0.21   -0.0175        -1
          1      1.43      1.35        -1    0.0175
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.56485, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35008, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.114891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.717     0.148     0.015     0.985
          1      15.7      1.31         1   -0.0525
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0373     0.148   -0.0283        -1
          1     0.814      1.31        -1    0.0283
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47161, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.030472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00222, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.033158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.449     0.104    0.0233     0.977
          1      9.54      1.26         1   -0.0823
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0234     0.104   -0.0443    -0.999
          1     0.496      1.26    -0.999    0.0443
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.033215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013916, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002215, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01618, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.286    0.0742    0.0328     0.967
          1      6.26      1.16         1    -0.117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0149    0.0742   -0.0628    -0.998
          1     0.326      1.16    -0.998    0.0628
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016204, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001519
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000436
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034066
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170934
         W1a Well: minimal relaxation eigenvalue = 0.0512682
         W1a Well: maximal relaxation eigenvalue = 11.7432
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001661
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214287
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064939
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079421
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.249642
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.834025, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.43e+05 3.52e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.12e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.357  8.96e-19  2.43e-38
        W1b       2.8         1  2.51e-18   6.8e-38
         P1  1.12e+18  3.98e+17         1  2.71e-20
         P2  4.12e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.36  2.31e-22  6.26e-42
        W1b      2.77         1  6.41e-22  1.74e-41
         P1  4.33e+21  1.56e+21         1  2.71e-20
         P2   1.6e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.837996, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28974, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.223358, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.03     0.479         0     0.995
          1       125      1.94         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.479  -0.00824        -1
          1      6.42      1.94        -1   0.00824
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28796, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201094, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49554, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.3     0.232    0.0113     0.989
          1      29.8      1.48         1    -0.032
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0666     0.232   -0.0191        -1
          1      1.53      1.48        -1    0.0191
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49787, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29117, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4981, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.81     0.165    0.0178     0.982
          1      17.1      1.44         1   -0.0508
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0415     0.165   -0.0303        -1
          1     0.876      1.44        -1    0.0303
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50043, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.142972, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002128, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.150403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.51     0.118    0.0272     0.973
          1      10.5      1.37         1   -0.0785
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.118   -0.0468    -0.999
          1     0.536      1.37    -0.999    0.0468
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.150774, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013327, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002121, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.326    0.0859    0.0379     0.962
          1       6.9      1.27         1     -0.11
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167    0.0859   -0.0658    -0.998
          1     0.354      1.27    -0.998    0.0658
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01552, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001576
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00044
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033742
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172391
         W1a Well: minimal relaxation eigenvalue = 0.0509017
         W1a Well: maximal relaxation eigenvalue = 7.43617
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00171
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213359
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063662
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085095
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.25418
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.842884, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.15e+05  4.2e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  2.5e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.433  7.98e-19  6.97e-38
        W1b      2.31         1  1.84e-18  1.61e-37
         P1  1.25e+18  5.42e+17         1  8.73e-20
         P2  1.44e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.438   2.1e-22  1.83e-41
        W1b      2.28         1  4.78e-22  4.18e-41
         P1  4.77e+21  2.09e+21         1  8.73e-20
         P2  5.47e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.846633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29606, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.226576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54889, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.44     0.522         0     0.994
          1       139      1.85         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.522  -0.00899        -1
          1      7.06      1.85        -1   0.00899
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55134, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50542, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.44     0.256    0.0133     0.987
          1      32.9       1.6         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0734     0.256   -0.0205        -1
          1      1.67       1.6        -1    0.0205
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201709, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5063, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.903     0.185    0.0206     0.979
          1      18.9      1.56         1   -0.0487
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.046     0.185    -0.032    -0.999
          1     0.961      1.56    -0.999     0.032
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.099308, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002138, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.106736, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.134     0.031     0.969
          1      11.6      1.49         1   -0.0739
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.134   -0.0485    -0.999
          1     0.591      1.49    -0.999    0.0485
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.107103, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002129, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015572, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.37    0.0994    0.0423     0.958
          1      7.71      1.37         1    -0.102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0994    -0.067    -0.998
          1     0.393      1.37    -0.998     0.067
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.0156, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001526
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000441
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031417
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.178653
         W1a Well: minimal relaxation eigenvalue = 0.0502875
         W1a Well: maximal relaxation eigenvalue = 10.8633
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001814
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218361
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063288
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067595
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.246325
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.825864, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.72e+05    5e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.92e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.521  7.16e-19   1.9e-37
        W1b      1.92         1  1.37e-18  3.65e-37
         P1   1.4e+18  7.28e+17         1  2.66e-19
         P2  5.25e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.527  1.91e-22  5.08e-41
        W1b       1.9         1  3.63e-22  9.64e-41
         P1  5.23e+21  2.76e+21         1  2.66e-19
         P2  1.97e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.829652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29865, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.546, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.95     0.565         0     0.993
          1       150      2.18         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249     0.565  -0.00984        -1
          1      7.55      2.18        -1   0.00984
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.61     0.282    0.0157     0.984
          1      35.8      1.75         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.081     0.282    -0.022        -1
          1       1.8      1.75        -1     0.022
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50741, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5092, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.205     0.024     0.976
          1      20.7       1.7         1   -0.0471
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0509     0.205    -0.034    -0.999
          1      1.04       1.7    -0.999     0.034
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51155, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.107938, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002151, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.11541, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.644      0.15    0.0355     0.965
          1      12.7      1.63         1   -0.0706
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0324      0.15   -0.0509    -0.999
          1     0.641      1.63    -0.999    0.0509
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.115776, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013453, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002142, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.419     0.113     0.048     0.952
          1       8.5       1.5         1   -0.0967
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0211     0.113   -0.0697    -0.998
          1     0.427       1.5    -0.998    0.0697
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015668, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00156
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000433
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033575
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173506
         W1a Well: minimal relaxation eigenvalue = 0.0491988
         W1a Well: maximal relaxation eigenvalue = 19.0868
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001692
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218152
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062921
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065524
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.243477
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.816889, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.47e+05 5.93e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.42e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.621  6.35e-19  4.88e-37
        W1b      1.61         1  1.02e-18  7.86e-37
         P1  1.58e+18  9.79e+17         1  7.69e-19
         P2  2.05e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.629  1.75e-22  1.35e-40
        W1b      1.59         1  2.79e-22  2.14e-40
         P1   5.7e+21  3.59e+21         1  7.69e-19
         P2  7.41e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.820625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25507, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22011, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49053, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.53     0.611         0     0.992
          1       160      3.23         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.611   -0.0107        -1
          1      7.89      3.23        -1    0.0107
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49315, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25713, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195284, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.81     0.308    0.0184     0.982
          1      38.7      1.97         1   -0.0302
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.308   -0.0238        -1
          1       1.9      1.97        -1    0.0238
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46117, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25437, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.226     0.028     0.972
          1      22.2      1.88         1   -0.0463
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.226   -0.0365    -0.999
          1      1.09      1.88    -0.999    0.0365
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45737, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.267681, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002074, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.274941, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.724     0.167    0.0413     0.959
          1      13.7      1.79         1   -0.0693
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0356     0.167   -0.0545    -0.999
          1     0.673      1.79    -0.999    0.0545
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.275299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012945, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002068, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.472     0.128    0.0559     0.944
          1       9.1      1.66         1   -0.0952
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0232     0.128   -0.0748    -0.997
          1     0.448      1.66    -0.997    0.0748
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015084, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001572
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000428
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032618
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175092
         W1a Well: minimal relaxation eigenvalue = 0.0493603
         W1a Well: maximal relaxation eigenvalue = 9.42937
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001701
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217347
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.061956
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076051
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.242265
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.824893, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.13e+05 7.02e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 3.98e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.737  5.76e-19  1.22e-36
        W1b      1.36         1  7.82e-19  1.66e-36
         P1  1.74e+18  1.28e+18         1  2.12e-18
         P2  8.19e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.746  1.62e-22  3.43e-40
        W1b      1.34         1  2.17e-22   4.6e-40
         P1  6.18e+21  4.61e+21         1  2.12e-18
         P2  2.92e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.82865, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25502, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.486, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.06     0.658         0      0.99
          1       181      2.36         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.658   -0.0116        -1
          1      8.95      2.36        -1    0.0116
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48846, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25854, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.98     0.337    0.0211     0.979
          1      43.1      2.07         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.098     0.337   -0.0251        -1
          1      2.13      2.07        -1    0.0251
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46135, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25906, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45991, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25      0.25    0.0313     0.969
          1        25      2.01         1   -0.0439
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0619      0.25   -0.0376    -0.999
          1      1.23      2.01    -0.999    0.0376
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46258, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.264041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002061, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.271288, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807     0.188    0.0449     0.955
          1      15.6      1.92         1   -0.0639
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0398     0.188   -0.0547    -0.999
          1     0.768      1.92    -0.999    0.0547
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.271657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012998, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015095, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.533     0.146    0.0591     0.941
          1      10.5      1.76         1   -0.0853
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0263     0.146    -0.073    -0.997
          1     0.517      1.76    -0.997     0.073
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015119, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001465
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028994
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173626
         W1a Well: minimal relaxation eigenvalue = 0.0487517
         W1a Well: maximal relaxation eigenvalue = 13.2322
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001696
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.206291
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059731
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078636
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234515
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.801357, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 1.02e+05 8.29e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 4.63e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.866  5.17e-19  2.89e-36
        W1b      1.15         1  5.97e-19  3.33e-36
         P1  1.93e+18  1.68e+18         1  5.58e-18
         P2  3.46e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.877   1.5e-22  8.38e-40
        W1b      1.14         1  1.71e-22  9.55e-40
         P1  6.67e+21  5.85e+21         1  5.58e-18
         P2  1.19e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.805122, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21402, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.213567, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44111, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.7      0.71    0.0115     0.989
          1       196      2.77         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.327      0.71   -0.0125        -1
          1      9.55      2.77        -1    0.0125
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2144, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.2     0.368    0.0242     0.976
          1      46.8      2.27         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.368   -0.0267        -1
          1      2.28      2.27        -1    0.0267
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41211, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21554, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189433, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41116, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.275    0.0357     0.964
          1      27.2      2.19         1   -0.0427
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.068     0.275   -0.0397    -0.999
          1      1.32      2.19    -0.999    0.0397
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41347, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.413783, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.42083, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.899     0.208    0.0508     0.949
          1      16.9      2.09         1   -0.0617
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0438     0.208   -0.0574    -0.998
          1     0.825      2.09    -0.998    0.0574
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.421202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.597     0.164    0.0664     0.934
          1      11.4      1.92         1   -0.0821
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.164   -0.0762    -0.997
          1     0.557      1.92    -0.997    0.0762
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014612, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001546
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03257
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170885
         W1a Well: minimal relaxation eigenvalue = 0.0485115
         W1a Well: maximal relaxation eigenvalue = 7.55643
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00167
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209766
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059937
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070086
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234581
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.797191, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.63e+05 9.76e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 5.37e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  4.74e-19  6.68e-36
        W1b     0.988         1  4.68e-19   6.6e-36
         P1  2.11e+18  2.13e+18         1  1.41e-17
         P2   1.5e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.02   1.4e-22  1.97e-39
        W1b     0.976         1  1.36e-22  1.92e-39
         P1  7.16e+21  7.34e+21         1  1.41e-17
         P2  5.08e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.801205, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21571, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215573, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44784, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.37     0.761    0.0133     0.987
          1       218      2.68         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.358     0.761   -0.0134        -1
          1      10.6      2.68        -1    0.0134
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45029, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21426, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188673, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.43       0.4    0.0275     0.972
          1      51.9      2.44         1    -0.028
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118       0.4   -0.0281        -1
          1      2.52      2.44        -1    0.0281
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41025, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.54     0.302    0.0398      0.96
          1      30.3      2.37         1   -0.0409
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0749     0.302   -0.0411    -0.999
          1      1.47      2.37    -0.999    0.0411
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41257, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.409436, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.416532, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1     0.232    0.0553     0.945
          1        19      2.25         1   -0.0579
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0486     0.232   -0.0581    -0.998
          1     0.924      2.25    -0.998    0.0581
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.416899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012522, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.672     0.184    0.0709     0.929
          1      12.9      2.06         1   -0.0754
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0326     0.184   -0.0756    -0.997
          1     0.628      2.06    -0.997    0.0756
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014612, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001474
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000423
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032145
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174747
         W1a Well: minimal relaxation eigenvalue = 0.0479634
         W1a Well: maximal relaxation eigenvalue = 11.0685
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00172
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213436
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060283
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077185
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.23446
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.811379, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.22e+05 1.15e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.21e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.18  4.36e-19  1.49e-35
        W1b     0.851         1  3.71e-19  1.27e-35
         P1  2.29e+18  2.69e+18         1  3.42e-17
         P2   6.7e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.19  1.31e-22  4.47e-39
        W1b      0.84         1   1.1e-22  3.76e-39
         P1  7.66e+21  9.11e+21         1  3.42e-17
         P2  2.24e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.815156, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22544, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45466, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.16     0.815    0.0154     0.985
          1       237      2.98         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.391     0.815   -0.0144        -1
          1      11.4      2.98        -1    0.0144
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45711, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22673, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42351, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.69     0.432    0.0314     0.969
          1      56.4      2.66         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.432   -0.0299        -1
          1      2.71      2.66        -1    0.0299
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42586, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22596, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18964, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42181, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.71     0.329    0.0449     0.955
          1      32.9      2.58         1     -0.04
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0821     0.329   -0.0433    -0.999
          1      1.58      2.58    -0.999    0.0433
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42413, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.374054, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002029, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381189, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.255     0.062     0.938
          1      20.7      2.45         1   -0.0563
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0534     0.255   -0.0609    -0.998
          1     0.991      2.45    -0.998    0.0609
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.381549, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012639, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.00202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014705, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.749     0.205     0.079     0.921
          1      14.1      2.24         1    -0.073
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0359     0.205   -0.0789    -0.997
          1     0.674      2.24    -0.997    0.0789
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014729, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00144
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000427
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029726
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168914
         W1a Well: minimal relaxation eigenvalue = 0.0475024
         W1a Well: maximal relaxation eigenvalue = 11.9635
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00171
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.212098
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057515
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062887
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227149
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.77786, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.26e+05 1.34e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.17e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.36  3.98e-19  3.18e-35
        W1b     0.738         1  2.93e-19  2.35e-35
         P1  2.52e+18  3.41e+18         1     8e-17
         P2  3.14e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.37  1.23e-22  9.81e-39
        W1b     0.728         1  8.93e-23  7.15e-39
         P1  8.15e+21  1.12e+22         1     8e-17
         P2  1.02e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.781683, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18227, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208467, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40747, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.99     0.872    0.0176     0.982
          1       259      3.25         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.427     0.872   -0.0154        -1
          1      12.3      3.25        -1    0.0154
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40989, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18225, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37243, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.97     0.467    0.0354     0.965
          1      61.7       2.9         1   -0.0271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.467   -0.0315        -1
          1      2.93       2.9        -1    0.0315
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37519, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17974, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18509, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37092, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.89     0.357    0.0501      0.95
          1        36       2.8         1   -0.0389
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0899     0.357   -0.0453    -0.999
          1      1.71       2.8    -0.999    0.0453
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37326, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.524816, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001962, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.531768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.279    0.0685     0.931
          1      22.6      2.66         1   -0.0543
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0586     0.279    -0.063    -0.998
          1      1.07      2.66    -0.998     0.063
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.532132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012178, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001952, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.834     0.227    0.0866     0.913
          1      15.4      2.43         1   -0.0699
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0396     0.227   -0.0811    -0.997
          1     0.733      2.43    -0.997    0.0811
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014204, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001527
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000419
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028584
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165633
         W1a Well: minimal relaxation eigenvalue = 0.0472471
         W1a Well: maximal relaxation eigenvalue = 8.06801
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001752
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.212582
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058644
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06829
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.228053
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.780605, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.89e+04 1.57e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 8.25e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.56  3.69e-19  6.67e-35
        W1b     0.643         1  2.37e-19  4.29e-35
         P1  2.71e+18  4.22e+18         1  1.81e-16
         P2   1.5e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.58  1.16e-22  2.09e-38
        W1b     0.635         1  7.34e-23  1.33e-38
         P1  8.65e+21  1.36e+22         1  1.81e-16
         P2  4.79e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.784293, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1871, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192296, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4043, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.87     0.931    0.0199      0.98
          1       285      3.44         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.466     0.931   -0.0163        -1
          1      13.4      3.44        -1    0.0163
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18693, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37677, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.26     0.505    0.0393     0.961
          1      68.2      3.13         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.505   -0.0328    -0.999
          1      3.22      3.13    -0.999    0.0328
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18259, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37261, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.09      0.39    0.0548     0.945
          1      40.1      3.02         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0987      0.39   -0.0464    -0.999
          1      1.89      3.02    -0.999    0.0464
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.525139, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001942, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.53218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.308    0.0734     0.927
          1      25.5      2.85         1   -0.0509
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0648     0.308   -0.0634    -0.998
          1       1.2      2.85    -0.998    0.0634
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.532549, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001937, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014203, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.934     0.252    0.0911     0.909
          1      17.5      2.59         1   -0.0644
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0442     0.252   -0.0801    -0.997
          1     0.827      2.59    -0.997    0.0801
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01423, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001443
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029638
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166586
         W1a Well: minimal relaxation eigenvalue = 0.0456433
         W1a Well: maximal relaxation eigenvalue = 22.2072
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001719
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.202838
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056641
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.052615
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21923
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.746367, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 1.02e+05 1.84e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 9.49e+15
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.78  3.39e-19  1.34e-34
        W1b     0.563         1  1.91e-19  7.54e-35
         P1  2.95e+18  5.24e+18         1  3.95e-16
         P2  7.47e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.8  1.09e-22  4.32e-38
        W1b     0.556         1  6.08e-23   2.4e-38
         P1  9.15e+21  1.65e+22         1  3.95e-16
         P2  2.32e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.750102, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14933, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192034, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36631, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2     0.991    0.0229     0.977
          1       305      4.78         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509     0.991   -0.0176        -1
          1      13.9      4.78        -1    0.0176
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36874, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15091, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177264, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33396, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.68     0.538    0.0457     0.954
          1      71.6      3.51         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.538   -0.0359    -0.999
          1      3.27      3.51    -0.999    0.0359
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33631, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13657, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.34     0.415    0.0646     0.935
          1        41      3.35         1   -0.0388
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.415   -0.0517    -0.999
          1      1.87      3.35    -0.999    0.0517
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.648558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001948, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.655401, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.328    0.0887     0.911
          1      25.3      3.18         1   -0.0548
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0694     0.328   -0.0728    -0.997
          1      1.15      3.18    -0.997    0.0728
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.655764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013779, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02      0.27     0.113     0.887
          1      16.9      2.93         1    -0.072
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0466      0.27   -0.0955    -0.995
          1     0.772      2.93    -0.995    0.0955
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013803, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001478
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029093
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164068
         W1a Well: minimal relaxation eigenvalue = 0.0463534
         W1a Well: maximal relaxation eigenvalue = 11.6786
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001701
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.212603
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057244
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071564
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.224477
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.777935, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.65e+05 2.14e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 1.09e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.02  3.17e-19  2.65e-34
        W1b     0.496         1  1.57e-19  1.32e-34
         P1  3.15e+18  6.36e+18         1  8.37e-16
         P2  3.77e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.04  1.04e-22  8.68e-38
        W1b      0.49         1  5.08e-23  4.25e-38
         P1  9.64e+21  1.97e+22         1  8.37e-16
         P2  1.15e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.781731, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194918, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.7       1.1    0.0249     0.975
          1       338      4.12         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.543       1.1    -0.018        -1
          1      15.7      4.12        -1     0.018
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38243, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18032, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33997, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.91     0.596    0.0484     0.952
          1      80.8      3.69         1   -0.0252
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.596   -0.0358    -0.999
          1      3.75      3.69    -0.999    0.0358
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34233, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15559, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.51     0.463    0.0666     0.933
          1      47.4      3.56         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.463   -0.0501    -0.999
          1       2.2      3.56    -0.999    0.0501
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.62355, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.630362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.66     0.369    0.0881     0.912
          1      30.1      3.36         1   -0.0479
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0769     0.369   -0.0678    -0.998
          1      1.39      3.36    -0.998    0.0678
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.630729, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011942, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001908, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013895, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.306     0.108     0.892
          1      20.7      3.05         1   -0.0601
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0528     0.306   -0.0851    -0.996
          1      0.96      3.05    -0.996    0.0851
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013919, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001467
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000412
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032492
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168757
         W1a Well: minimal relaxation eigenvalue = 0.0454509
         W1a Well: maximal relaxation eigenvalue = 19.3099
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001771
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209878
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056653
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059092
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.222675
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.768114, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.18e+05 2.48e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.25e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.28  2.98e-19  5.13e-34
        W1b     0.439         1  1.31e-19  2.25e-34
         P1  3.36e+18  7.66e+18         1  1.72e-15
         P2  1.95e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.31  9.87e-23   1.7e-37
        W1b     0.433         1  4.27e-23  7.36e-38
         P1  1.01e+22  2.34e+22         1  1.72e-15
         P2  5.88e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.771884, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16789, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204431, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.14    0.0285     0.972
          1       367      4.84         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.598      1.14   -0.0194        -1
          1      16.7      4.84        -1    0.0194
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40214, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16418, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184156, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3544, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.36     0.626    0.0552     0.945
          1      86.1      4.05         1   -0.0256
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.198     0.626   -0.0387    -0.999
          1      3.91      4.05    -0.999    0.0387
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35709, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16498, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182538, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35336, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.79     0.488    0.0762     0.924
          1      49.7      3.89         1   -0.0362
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.488   -0.0545    -0.999
          1      2.26      3.89    -0.999    0.0545
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35568, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.575242, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001955, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.582134, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.391     0.102     0.898
          1      30.9      3.68         1   -0.0497
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0832     0.391   -0.0748    -0.997
          1      1.41      3.68    -0.997    0.0748
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.582504, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011986, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001947, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013981, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25     0.327     0.127     0.873
          1      20.9      3.37         1   -0.0636
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0566     0.327   -0.0956    -0.995
          1     0.952      3.37    -0.995    0.0956
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014006, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001326
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000404
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032292
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157944
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 16.6298
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001765
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203013
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056393
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060911
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211916
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.741019, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.49e+05 2.88e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.42e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.57  2.76e-19  9.54e-34
        W1b      0.39         1  1.08e-19  3.72e-34
         P1  3.62e+18  9.28e+18         1  3.45e-15
         P2  1.05e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.6  9.42e-23  3.25e-37
        W1b     0.385         1  3.62e-23  1.25e-37
         P1  1.06e+22  2.76e+22         1  3.45e-15
         P2  3.08e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.745049, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1268, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186906, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.4       1.2    0.0316     0.968
          1       402      5.08         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.653       1.2   -0.0204        -1
          1      18.2      5.08        -1    0.0204
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12414, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175572, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.76     0.668    0.0602      0.94
          1        95      4.35         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216     0.668     -0.04    -0.999
          1      4.31      4.35    -0.999      0.04
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30792, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12517, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176495, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30774, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.06     0.526    0.0818     0.918
          1      55.2      4.19         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.526   -0.0556    -0.998
          1       2.5      4.19    -0.998    0.0556
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31012, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.740079, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.746736, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.425     0.107     0.893
          1      34.7      3.95         1   -0.0469
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0913     0.425    -0.075    -0.997
          1      1.57      3.95    -0.997     0.075
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.747107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011577, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001847, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.38     0.359     0.132     0.868
          1      23.7      3.59         1   -0.0591
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0627     0.359   -0.0942    -0.996
          1      1.07      3.59    -0.996    0.0942
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013492, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001407
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029426
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164314
         W1a Well: minimal relaxation eigenvalue = 0.0453442
         W1a Well: maximal relaxation eigenvalue = 9.77346
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001625
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188356
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055694
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060613
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216312
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.733042, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265    1e+05 3.34e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.62e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.88  2.61e-19  1.76e-33
        W1b     0.348         1  9.07e-20  6.11e-34
         P1  3.83e+18   1.1e+19         1  6.73e-15
         P2  5.69e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.91  9.01e-23  6.07e-37
        W1b     0.343         1  3.09e-23  2.08e-37
         P1  1.11e+22  3.23e+22         1  6.73e-15
         P2  1.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.736783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12751, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35319, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.7      1.27     0.035     0.965
          1       445      5.05         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.712      1.27   -0.0214        -1
          1      20.2      5.05        -1    0.0214
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35567, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12831, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176718, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.21     0.718    0.0645     0.936
          1       107      4.66         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.236     0.718   -0.0406    -0.999
          1      4.84      4.66    -0.999    0.0406
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176547, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30836, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.35      0.57    0.0856     0.914
          1      63.1      4.47         1   -0.0325
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152      0.57   -0.0551    -0.998
          1      2.86      4.47    -0.998    0.0551
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31071, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.717828, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.724537, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.467     0.109     0.891
          1      40.4      4.18         1   -0.0427
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.467   -0.0722    -0.997
          1      1.83      4.18    -0.997    0.0722
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.724913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011598, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001882, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013524, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.56     0.396      0.13      0.87
          1      28.1      3.76         1   -0.0521
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0705     0.396    -0.088    -0.996
          1      1.27      3.76    -0.996     0.088
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013548, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001373
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029163
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16474
         W1a Well: minimal relaxation eigenvalue = 0.0446386
         W1a Well: maximal relaxation eigenvalue = 17.2723
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001599
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.196564
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057555
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073739
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219951
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.760314, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.63e+05 3.86e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 1.85e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.21  2.47e-19  3.17e-33
        W1b     0.312         1   7.7e-20  9.87e-34
         P1  4.05e+18   1.3e+19         1  1.28e-14
         P2  3.16e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  8.64e-23  1.11e-36
        W1b     0.308         1  2.66e-23  3.41e-37
         P1  1.16e+22  3.76e+22         1  1.28e-14
         P2  9.02e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.763841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14231, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.203244, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.9       1.4    0.0379     0.962
          1       479      5.97         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.755       1.4    -0.022        -1
          1      21.4      5.97        -1     0.022
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36398, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14129, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179226, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32694, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.64      0.78     0.071     0.929
          1       113      5.09         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252      0.78   -0.0426    -0.999
          1      5.04      5.09    -0.999    0.0426
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3293, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14196, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180488, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32818, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.63     0.616    0.0954     0.905
          1      65.6      4.89         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.616   -0.0588    -0.998
          1      2.93      4.89    -0.998    0.0588
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33051, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.66792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.674678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.41     0.502     0.124     0.876
          1      41.2       4.6         1    -0.044
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.108     0.502   -0.0785    -0.997
          1      1.84       4.6    -0.997    0.0785
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.675031, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011769, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001887, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0137, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.67     0.427      0.15      0.85
          1      28.2      4.17         1   -0.0549
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0744     0.427   -0.0979    -0.995
          1      1.26      4.17    -0.995    0.0979
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013728, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001424
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000406
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029203
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159935
         W1a Well: minimal relaxation eigenvalue = 0.0445813
         W1a Well: maximal relaxation eigenvalue = 12.4447
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00169
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195507
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053751
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06168
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211068
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.729008, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 9.28e+04 4.45e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22  2.1e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  2.31e-19  5.52e-33
        W1b      0.28         1  6.48e-20  1.55e-33
         P1  4.32e+18  1.54e+19         1  2.39e-14
         P2  1.81e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.61  8.31e-23  1.98e-36
        W1b     0.277         1   2.3e-23  5.49e-37
         P1   1.2e+22  4.35e+22         1  2.39e-14
         P2  5.04e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.732714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10223, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195584, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31264, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.7      1.44    0.0423     0.958
          1       527      5.96         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.836      1.44   -0.0233        -1
          1      23.5      5.96        -1    0.0233
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31507, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10073, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27911, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.21     0.818    0.0766     0.923
          1       126      5.46         1   -0.0232
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.277     0.818   -0.0439    -0.999
          1      5.61      5.46    -0.999    0.0439
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28143, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09973, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172626, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27819, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.01     0.655     0.101     0.899
          1      74.1      5.23         1   -0.0314
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.179     0.655   -0.0591    -0.998
          1       3.3      5.23    -0.998    0.0591
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2805, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824103, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.83067, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.68     0.541     0.127     0.873
          1      47.4      4.88         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.119     0.541    -0.077    -0.997
          1      2.11      4.88    -0.997     0.077
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.831036, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011374, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001836, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.87     0.464     0.151     0.849
          1      32.8      4.38         1   -0.0497
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0834     0.464   -0.0935    -0.996
          1      1.46      4.38    -0.996    0.0935
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013277, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001395
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000405
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030051
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165567
         W1a Well: minimal relaxation eigenvalue = 0.0436457
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001674
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192122
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053751
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070128
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.213232
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.742901, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.56e+05 5.12e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.38e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.96   2.2e-19  9.57e-33
        W1b     0.253         1  5.57e-20  2.42e-33
         P1  4.54e+18   1.8e+19         1  4.35e-14
         P2  1.04e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         4  8.01e-23  3.48e-36
        W1b      0.25         1     2e-23  8.69e-37
         P1  1.25e+22     5e+22         1  4.35e-14
         P2  2.87e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.746679, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10922, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.183317, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31728, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.7      1.52    0.0466     0.953
          1       568       7.3         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.905      1.52   -0.0246        -1
          1      24.8       7.3        -1    0.0246
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31971, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1104, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29021, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.85     0.865    0.0856     0.914
          1       133      5.97         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.865    -0.047    -0.999
          1      5.81      5.97    -0.999     0.047
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29257, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11125, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17433, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29151, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.4     0.692     0.114     0.886
          1      76.6      5.72         1   -0.0325
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.692   -0.0645    -0.998
          1      3.34      5.72    -0.998    0.0645
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29383, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793298, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001849, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.800033, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.91     0.572     0.147     0.853
          1      47.6      5.37         1   -0.0434
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.572   -0.0861    -0.996
          1      2.08      5.37    -0.996    0.0861
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.8004, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001867, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         2     0.494     0.177     0.823
          1      32.1      4.87         1   -0.0545
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0875     0.494    -0.108    -0.994
          1       1.4      4.87    -0.994     0.108
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013383, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001432
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031928
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161208
         W1a Well: minimal relaxation eigenvalue = 0.0438766
         W1a Well: maximal relaxation eigenvalue = 13.9334
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001705
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192571
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053949
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063349
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.207027
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.728003, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 9.28e+04 5.89e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55  2.7e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  2.07e-19  1.61e-32
        W1b     0.229         1  4.75e-20  3.68e-33
         P1  4.82e+18  2.11e+19         1  7.75e-14
         P2  6.22e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  7.74e-23     6e-36
        W1b     0.226         1  1.75e-23  1.36e-36
         P1  1.29e+22  5.72e+22         1  7.75e-14
         P2  1.67e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.731709, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28298, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      22.3      1.61    0.0503      0.95
          1       628         7         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.98      1.61   -0.0253        -1
          1      27.6         7        -1    0.0253
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07896, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25349, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.4     0.928    0.0896      0.91
          1       149      6.38         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.325     0.928    -0.047    -0.999
          1      6.55      6.38    -0.999     0.047
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07826, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169953, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.78     0.748     0.116     0.884
          1      87.6      6.09         1   -0.0302
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.21     0.748   -0.0629    -0.998
          1      3.85      6.09    -0.998    0.0629
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.901657, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005313, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911711, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.2     0.624     0.146     0.854
          1      55.8      5.67         1    -0.039
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.14     0.624   -0.0813    -0.997
          1      2.45      5.67    -0.997    0.0813
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011102, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00179, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012943, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.24      0.54     0.171     0.829
          1      38.5      5.07         1   -0.0473
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0984      0.54   -0.0984    -0.995
          1      1.69      5.07    -0.995    0.0984
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01297, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001394
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02901
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161711
         W1a Well: minimal relaxation eigenvalue = 0.0413519
         W1a Well: maximal relaxation eigenvalue = 26.2311
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001795
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204151
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052689
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071048
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204952
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.741636, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.57e+05 6.76e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.05e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.81  1.98e-19  2.69e-32
        W1b     0.208         1  4.12e-20  5.59e-33
         P1  5.04e+18  2.42e+19         1  1.35e-13
         P2  3.72e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.87  7.49e-23  1.01e-35
        W1b     0.205         1  1.54e-23  2.08e-36
         P1  1.34e+22   6.5e+22         1  1.35e-13
         P2  9.86e+34   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.745371, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08318, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191274, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28996, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.7       1.7    0.0553     0.945
          1       687      10.9         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.06       1.7   -0.0267        -1
          1      28.4      10.9        -1    0.0267
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29247, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08414, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2612, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.44     0.975     0.101     0.899
          1       160      7.06         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.349     0.975   -0.0514    -0.999
          1       6.6      7.06    -0.999    0.0514
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26356, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0839, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171251, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26097, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.4     0.783     0.135     0.865
          1      90.1      6.71         1   -0.0325
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223     0.783   -0.0711    -0.997
          1      3.73      6.71    -0.997    0.0711
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.881417, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890121, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.55     0.652     0.175     0.825
          1      54.5      6.31         1   -0.0442
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.147     0.652   -0.0964    -0.995
          1      2.25      6.31    -0.995    0.0964
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890483, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011173, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00181, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.42     0.571     0.214     0.786
          1      35.8      5.76         1   -0.0567
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0999     0.571    -0.123    -0.992
          1      1.48      5.76    -0.992     0.123
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013054, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001326
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000405
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029334
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163303
         W1a Well: minimal relaxation eigenvalue = 0.0432471
         W1a Well: maximal relaxation eigenvalue = 14.6962
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001726
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199133
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052911
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072229
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.210248
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.744771, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 9.79e+04 7.75e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.45e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.27   1.9e-19  4.42e-32
        W1b      0.19         1   3.6e-20  8.37e-33
         P1  5.26e+18  2.78e+19         1  2.32e-13
         P2  2.26e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.34  7.26e-23  1.69e-35
        W1b     0.187         1  1.36e-23  3.16e-36
         P1  1.38e+22  7.36e+22         1  2.32e-13
         P2  5.93e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.748521, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09592, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195133, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.2      1.84    0.0583     0.942
          1       747       8.1         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      1.84    -0.027        -1
          1      32.3       8.1        -1     0.027
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09589, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171968, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27349, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.7      1.06     0.102     0.898
          1       177       7.4         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.376      1.06   -0.0496    -0.999
          1      7.64       7.4    -0.999    0.0496
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27583, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09492, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172712, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.64     0.859     0.132     0.868
          1       104      7.06         1   -0.0288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.244     0.859   -0.0659    -0.998
          1      4.48      7.06    -0.998    0.0659
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27558, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.832765, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.839449, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.79      0.72     0.163     0.837
          1      65.9      6.55         1    -0.037
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.164      0.72   -0.0846    -0.996
          1      2.85      6.55    -0.996    0.0846
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.839811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011234, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001816, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013094, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.67     0.628      0.19      0.81
          1      45.4      5.85         1   -0.0446
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.628    -0.102    -0.995
          1      1.97      5.85    -0.995     0.102
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013118, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001437
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000401
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028241
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153859
         W1a Well: minimal relaxation eigenvalue = 0.043148
         W1a Well: maximal relaxation eigenvalue = 9.68424
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001669
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19908
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052259
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062432
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205744
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.718981, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.69e+05 8.86e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 3.88e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.77   1.8e-19  7.06e-32
        W1b     0.173         1  3.12e-20  1.22e-32
         P1  5.55e+18   3.2e+19         1  3.92e-13
         P2  1.42e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.84  7.05e-23  2.76e-35
        W1b     0.171         1  1.21e-23  4.73e-36
         P1  1.42e+22  8.29e+22         1  3.92e-13
         P2  3.62e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.722502, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.3      1.96    0.0621     0.938
          1       818      8.67         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.96   -0.0275        -1
          1      35.3      8.67        -1    0.0275
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26806, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167604, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2338, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.43      1.14     0.106     0.894
          1       198      7.93         1   -0.0206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.407      1.14   -0.0495    -0.999
          1      8.53      7.93    -0.999    0.0495
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23627, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06231, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20107, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.15     0.928     0.134     0.866
          1       118      7.52         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.265     0.928   -0.0645    -0.998
          1      5.09      7.52    -0.998    0.0645
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20291, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.973138, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.017722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993365, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.17     0.783     0.163     0.837
          1      76.4      6.91         1   -0.0337
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.18     0.783   -0.0807    -0.997
          1       3.3      6.91    -0.997    0.0807
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.993752, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.98     0.683     0.186     0.814
          1      53.5      6.08         1   -0.0396
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.683   -0.0946    -0.996
          1      2.31      6.08    -0.996    0.0946
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016002, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001387
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028734
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161141
         W1a Well: minimal relaxation eigenvalue = 0.0426313
         W1a Well: maximal relaxation eigenvalue = 15.4781
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001667
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.194402
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052566
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066926
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.207861
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.729239, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 1.04e+05 1.01e+15
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.37e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.3  1.73e-19  1.12e-31
        W1b     0.159         1  2.75e-20  1.79e-32
         P1  5.77e+18  3.63e+19         1  6.49e-13
         P2  8.89e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.38  6.86e-23  4.45e-35
        W1b     0.157         1  1.08e-23  6.99e-36
         P1  1.46e+22  9.29e+22         1  6.49e-13
         P2  2.24e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.733246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06938, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27045, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.1      2.04    0.0678     0.932
          1       888      9.46         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.33      2.04    -0.029        -1
          1      37.9      9.46        -1     0.029
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27295, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168777, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2467, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.3      1.19     0.117     0.883
          1       210      8.61         1    -0.021
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.44      1.19   -0.0527    -0.999
          1      8.94      8.61    -0.999    0.0527
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24908, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16898, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24609, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.69      0.97     0.149     0.851
          1       123      8.18         1   -0.0277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.285      0.97   -0.0694    -0.998
          1      5.23      8.18    -0.998    0.0694
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.925064, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.937282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.5     0.821     0.182     0.818
          1      77.8      7.56         1   -0.0354
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.821   -0.0885    -0.996
          1      3.32      7.56    -0.996    0.0885
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.937643, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011053, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00179, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012885, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.18     0.721     0.211     0.789
          1      53.5      6.71         1   -0.0425
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.136     0.721    -0.106    -0.994
          1      2.28      6.71    -0.994     0.106
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012909, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00142
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.938254
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160335
         W1a Well: minimal relaxation eigenvalue = 0.0406043
         W1a Well: maximal relaxation eigenvalue = 25.4688
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001557
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188171
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051084
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062289
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198777
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.61634, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.78e+04 1.15e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 4.91e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.85  1.65e-19  1.75e-31
        W1b     0.146         1  2.41e-20  2.55e-32
         P1  6.06e+18  4.15e+19         1  1.06e-12
         P2  5.72e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.94  6.68e-23  7.08e-35
        W1b     0.144         1  9.63e-24  1.02e-35
         P1   1.5e+22  1.04e+23         1  1.06e-12
         P2  1.41e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 1.62006, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04017, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177308, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24297, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      35.3      2.15    0.0732     0.927
          1       962      13.7         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      2.15   -0.0302        -1
          1      39.1      13.7        -1    0.0302
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04461, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21582, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.6      1.25     0.129     0.871
          1       224      9.49         1   -0.0217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.471      1.25   -0.0566    -0.998
          1      9.09      9.49    -0.998    0.0566
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21818, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0452, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164674, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21534, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.45      1.01     0.168     0.832
          1       127      8.98         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.303      1.01    -0.077    -0.997
          1      5.15      8.98    -0.997     0.077
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2181, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00718, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015986, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02786, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.92     0.859     0.212     0.788
          1      76.9      8.39         1   -0.0394
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.2     0.859    -0.102    -0.995
          1      3.12      8.39    -0.995     0.102
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02833, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012331, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001758, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.39     0.764     0.254     0.746
          1      50.5      7.58         1   -0.0497
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.764    -0.129    -0.992
          1      2.05      7.58    -0.992     0.129
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014322, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001295
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02805
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159105
         W1a Well: minimal relaxation eigenvalue = 0.042072
         W1a Well: maximal relaxation eigenvalue = 15.9099
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001682
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188645
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050211
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069171
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202052
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714326, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.2e+05 1.32e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.52e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.43  1.59e-19  2.71e-31
        W1b     0.135         1  2.14e-20  3.64e-32
         P1  6.28e+18  4.67e+19         1   1.7e-12
         P2  3.69e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.53  6.52e-23  1.11e-34
        W1b     0.133         1  8.66e-24  1.47e-35
         P1  1.53e+22  1.15e+23         1   1.7e-12
         P2  9.02e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.718058, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04385, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184467, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24139, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.9      2.25    0.0776     0.922
          1  1.06e+03        11         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.55      2.25   -0.0308        -1
          1      44.6        11        -1    0.0308
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24385, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165412, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21914, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.2      1.33     0.131     0.869
          1       250      9.91         1   -0.0203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.513      1.33   -0.0553    -0.998
          1      10.5      9.91    -0.998    0.0553
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22152, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04785, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164598, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71727, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.91      1.09     0.165     0.835
          1       146      9.38         1   -0.0266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.333      1.09   -0.0724    -0.997
          1      6.13      9.38    -0.997    0.0724
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.71965, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.50618, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.512403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.33     0.932     0.201     0.799
          1      92.2      8.65         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.932   -0.0916    -0.996
          1      3.88      8.65    -0.996    0.0916
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.512764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010766, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001747, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012562, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.78     0.825      0.23      0.77
          1      63.2      7.64         1   -0.0403
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.159     0.825    -0.109    -0.994
          1      2.66      7.64    -0.994     0.109
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012586, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001398
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029428
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16198
         W1a Well: minimal relaxation eigenvalue = 0.0420327
         W1a Well: maximal relaxation eigenvalue = 10.5703
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001791
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.201998
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050851
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056633
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201256
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.719685, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 6.71e+04  1.5e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 6.18e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.05  1.54e-19  4.14e-31
        W1b     0.124         1  1.91e-20  5.14e-32
         P1   6.5e+18  5.23e+19         1  2.69e-12
         P2  2.42e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.15  6.37e-23  1.72e-34
        W1b     0.123         1  7.82e-24   2.1e-35
         P1  1.57e+22  1.28e+23         1  2.69e-12
         P2  5.83e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.723432, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05245, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17649, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        40      2.37    0.0823     0.918
          1  1.15e+03      11.7         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.68      2.37   -0.0316        -1
          1      48.3      11.7        -1    0.0316
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04983, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165954, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22183, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.41     0.135     0.865
          1       278      10.6         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.557      1.41   -0.0551    -0.998
          1      11.7      10.6    -0.998    0.0551
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22419, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05088, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16578, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22234, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.64      1.17     0.167     0.833
          1       166      9.94         1   -0.0249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.363      1.17   -0.0704    -0.998
          1      6.97      9.94    -0.998    0.0704
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.98641, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014557, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.89         1     0.198     0.802
          1       107      9.06         1   -0.0306
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.248         1   -0.0865    -0.996
          1      4.52      9.06    -0.996    0.0865
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001764, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.24      0.89     0.222     0.778
          1        75      7.86         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.178      0.89      -0.1    -0.995
          1      3.15      7.86    -0.995       0.1
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013421, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001334
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029181
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159092
         W1a Well: minimal relaxation eigenvalue = 0.0416422
         W1a Well: maximal relaxation eigenvalue = 13.8216
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00174
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185581
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050124
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064596
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201075
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706706, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.47e+05  1.7e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 6.92e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.7  1.47e-19  6.18e-31
        W1b     0.115         1  1.69e-20  7.11e-32
         P1  6.79e+18  5.91e+19         1   4.2e-12
         P2  1.62e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  6.24e-23  2.62e-34
        W1b     0.114         1  7.08e-24  2.98e-35
         P1   1.6e+22  1.41e+23         1   4.2e-12
         P2  3.82e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.710205, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03347, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2405, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      42.1      2.64    0.0853     0.915
          1  1.25e+03      12.7         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      2.64   -0.0316    -0.999
          1      51.9      12.7    -0.999    0.0316
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24293, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03247, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163514, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20159, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        14      1.54     0.142     0.858
          1       296      11.4         1    -0.019
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.584      1.54    -0.056    -0.998
          1      12.3      11.4    -0.998     0.056
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20395, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163409, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20217, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.16      1.27     0.176     0.824
          1       174      10.8         1   -0.0246
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.381      1.27   -0.0724    -0.997
          1      7.26      10.8    -0.997    0.0724
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20454, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03365, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.018144, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05673, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.23      1.08     0.211     0.789
          1       111      9.88         1   -0.0308
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.259      1.08   -0.0904    -0.996
          1      4.63      9.88    -0.996    0.0904
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05722, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014571, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016524, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.47     0.956      0.24      0.76
          1      76.7      8.62         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.956    -0.106    -0.994
          1      3.19      8.62    -0.994     0.106
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016567, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001354
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000453
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028809
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16307
         W1a Well: minimal relaxation eigenvalue = 0.039915
         W1a Well: maximal relaxation eigenvalue = 24.9138
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001679
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192188
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050724
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071898
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.206283
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.730075, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 8.22e+04 1.93e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 7.74e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.37  1.43e-19  9.23e-31
        W1b     0.107         1  1.52e-20  9.85e-32
         P1  7.01e+18  6.57e+19         1  6.47e-12
         P2  1.08e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.49  6.11e-23  3.95e-34
        W1b     0.105         1  6.44e-24  4.16e-35
         P1  1.64e+22  1.55e+23         1  6.47e-12
         P2  2.53e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.733804, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03985, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175587, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.2      2.68    0.0935     0.906
          1  1.38e+03      14.4         1    -0.011
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.93      2.68   -0.0337    -0.999
          1        55      14.4    -0.999    0.0337
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04072, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164204, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21057, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.8      1.57     0.159     0.841
          1       315      12.5         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.632      1.57   -0.0615    -0.998
          1      12.6      12.5    -0.998    0.0615
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21294, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03991, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2099, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.2      1.29     0.201     0.799
          1       178      11.9         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.406      1.29   -0.0821    -0.997
          1      7.11      11.9    -0.997    0.0821
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21251, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016682, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03797, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.76      1.11     0.248     0.752
          1       108        11         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.27      1.11    -0.107    -0.994
          1      4.32        11    -0.994     0.107
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03844, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013354, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015319, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.69         1     0.291     0.709
          1      71.1      9.82         1   -0.0439
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187         1    -0.133    -0.991
          1      2.84      9.82    -0.991     0.133
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01536, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001369
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028047
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153317
         W1a Well: minimal relaxation eigenvalue = 0.0411961
         W1a Well: maximal relaxation eigenvalue = 12.7339
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001685
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19105
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04857
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060237
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194872
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.69393, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.89e+05 2.18e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 8.64e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.37e-19  1.35e-30
        W1b    0.0992         1  1.36e-20  1.34e-31
         P1   7.3e+18  7.35e+19         1  9.83e-12
         P2  7.42e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2     6e-23  5.89e-34
        W1b     0.098         1  5.87e-24  5.78e-35
         P1  1.67e+22   1.7e+23         1  9.83e-12
         P2   1.7e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.697674, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00702, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177792, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20931, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      50.7      2.79    0.0974     0.903
          1  1.48e+03      14.7         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.79    -0.034    -0.999
          1        61      14.7    -0.999     0.034
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2118, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00728, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.8      1.68     0.158     0.842
          1       355      13.1         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.69      1.68   -0.0588    -0.998
          1      14.6      13.1    -0.998    0.0588
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.175, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00898, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160168, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17472, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9       1.4     0.192     0.808
          1       210      12.3         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.45       1.4   -0.0749    -0.997
          1      8.66      12.3    -0.997    0.0749
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17708, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00839, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13895, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.46      1.21     0.227     0.773
          1       135      11.1         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.307      1.21    -0.092    -0.996
          1      5.55      11.1    -0.996     0.092
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13959, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.024492, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001685, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.026565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.39      1.08     0.254     0.746
          1        93      9.59         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.222      1.08    -0.107    -0.994
          1      3.83      9.59    -0.994     0.107
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.026623, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001311
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00039
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028622
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166108
         W1a Well: minimal relaxation eigenvalue = 0.0400853
         W1a Well: maximal relaxation eigenvalue = 22.7706
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001735
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175813
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047727
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07623
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.208932
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.720704, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 1.05e+05 2.47e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 9.63e+16
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.33e-19  1.97e-30
        W1b    0.0924         1  1.23e-20  1.82e-31
         P1  7.51e+18  8.12e+19         1  1.48e-11
         P2  5.09e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11  5.89e-23  8.69e-34
        W1b    0.0913         1  5.38e-24  7.94e-35
         P1   1.7e+22  1.86e+23         1  1.48e-11
         P2  1.15e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.72481, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173826, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      56.1      2.93     0.104     0.896
          1  1.63e+03      16.1         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.25      2.93   -0.0354    -0.999
          1      65.2      16.1    -0.999    0.0354
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22295, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01806, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161837, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18528, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.4      1.75     0.173     0.827
          1       373      14.2         1   -0.0193
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.736      1.75   -0.0634    -0.998
          1        15      14.2    -0.998    0.0634
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18765, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01781, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16177, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.8      1.45     0.216     0.784
          1       213      13.4         1   -0.0254
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.475      1.45   -0.0834    -0.997
          1      8.52      13.4    -0.997    0.0834
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18759, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.073755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.91      1.25     0.262     0.738
          1       130      12.3         1   -0.0328
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.317      1.25    -0.107    -0.994
          1      5.22      12.3    -0.994     0.107
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001717, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.55      1.14     0.302     0.698
          1      86.1      10.9         1     -0.04
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.222      1.14    -0.131    -0.991
          1      3.45      10.9    -0.991     0.131
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021851, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001333
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000389
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02921
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163787
         W1a Well: minimal relaxation eigenvalue = 0.0406634
         W1a Well: maximal relaxation eigenvalue = 14.244
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.0016
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180434
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048128
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070791
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205763
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715097, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.81e+05 2.79e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.07e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6   1.3e-19  2.84e-30
        W1b    0.0863         1  1.12e-20  2.45e-31
         P1  7.71e+18  8.94e+19         1  2.19e-11
         P2  3.52e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.7  5.79e-23  1.27e-33
        W1b    0.0852         1  4.93e-24  1.08e-34
         P1  1.73e+22  2.03e+23         1  2.19e-11
         P2  7.88e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.71889, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03108, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.235, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      57.6      3.27     0.105     0.895
          1  1.74e+03        17         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.34      3.27   -0.0346    -0.999
          1      70.6        17    -0.999    0.0346
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23749, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02549, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161252, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19216, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.1      1.93      0.17      0.83
          1       413      15.1         1   -0.0176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.778      1.93   -0.0599    -0.998
          1      16.8      15.1    -0.998    0.0599
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19453, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02664, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161753, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19398, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.5       1.6     0.207     0.793
          1       243      14.1         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509       1.6   -0.0764    -0.997
          1      9.89      14.1    -0.997    0.0764
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19631, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02498, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.038206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.56      1.38     0.244     0.756
          1       155      12.8         1   -0.0278
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.348      1.38   -0.0942    -0.996
          1      6.29      12.8    -0.996    0.0942
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.069, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017197, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001703, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.2      1.23     0.273     0.727
          1       106        11         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252      1.23     -0.11    -0.994
          1      4.31        11    -0.994      0.11
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019268, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001284
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000386
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030029
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161309
         W1a Well: minimal relaxation eigenvalue = 0.0383822
         W1a Well: maximal relaxation eigenvalue = 17.6661
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001773
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.158817
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046146
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057708
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196845
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.66778, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301  6.4e+04 8.84e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 2.97e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        21  1.01e-19  6.62e-29
        W1b    0.0476         1  4.78e-21  3.15e-30
         P1  9.95e+18  2.09e+20         1  6.58e-10
         P2  1.51e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      21.3  5.14e-23  3.38e-32
        W1b     0.047         1  2.41e-24  1.59e-33
         P1  1.95e+22  4.14e+23         1  6.58e-10
         P2  2.96e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.671798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.980618, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165989, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16847, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       126      5.15     0.164     0.836
          1  3.87e+03      32.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.84      5.15   -0.0426    -0.999
          1       149      32.8    -0.999    0.0426
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17093, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.973549, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155455, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13438, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.1      3.16     0.245     0.755
          1       908      28.5         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.58      3.16   -0.0706    -0.998
          1      34.8      28.5    -0.998    0.0706
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13702, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.97513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13566, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.8      2.69     0.289     0.711
          1       526      26.2         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.03      2.69   -0.0884    -0.996
          1      20.2      26.2    -0.996    0.0884
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13799, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.974635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155379, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13549, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.3      2.37     0.332     0.668
          1       327      23.1         1   -0.0236
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.703      2.37    -0.108    -0.994
          1      12.6      23.1    -0.994     0.108
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.129614, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.135579, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.3      2.17     0.366     0.634
          1       217        19         1   -0.0274
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.511      2.17    -0.125    -0.992
          1      8.33        19    -0.992     0.125
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.135939, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001261
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000372
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027933
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160281
         W1a Well: minimal relaxation eigenvalue = 0.0368009
         W1a Well: maximal relaxation eigenvalue = 14.9793
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00178
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.166088
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043739
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070469
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.189377
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.674817, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.47e+05 2.53e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 7.44e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.5  8.47e-20  7.81e-28
        W1b    0.0298         1  2.53e-21  2.33e-29
         P1  1.18e+19  3.96e+20         1  9.23e-09
         P2  1.28e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.9  4.87e-23   4.5e-31
        W1b    0.0295         1  1.44e-24  1.33e-32
         P1  2.05e+22  6.96e+23         1  9.23e-09
         P2  2.22e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.678665, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.936886, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169137, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1266, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       260      8.13     0.218     0.782
          1  8.15e+03      57.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.56      8.13    -0.048    -0.999
          1       300      57.4    -0.999     0.048
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12902, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.932948, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149121, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08737, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      84.1      5.16     0.303     0.697
          1  1.93e+03      47.5         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       3.1      5.16   -0.0749    -0.997
          1      70.9      47.5    -0.997    0.0749
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08972, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.932342, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08723, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      55.3      4.47     0.345     0.655
          1  1.12e+03      41.8         1   -0.0157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.04      4.47   -0.0905    -0.996
          1      41.1      41.8    -0.996    0.0905
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08953, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.933637, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149445, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0882, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      38.5         4     0.382     0.618
          1       688      34.4         1   -0.0185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.42         4    -0.106    -0.994
          1      25.3      34.4    -0.994     0.106
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09054, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.319423, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.325188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.5      3.67     0.411     0.589
          1       443      25.6         1   -0.0208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.05      3.67     -0.12    -0.993
          1      16.3      25.6    -0.993      0.12
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.325552, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001187
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000368
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027606
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15065
         W1a Well: minimal relaxation eigenvalue = 0.0349897
         W1a Well: maximal relaxation eigenvalue = 20.7817
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001887
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.157559
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.042457
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062839
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.179181
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.637203, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.22e+05 6.65e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138 1.72e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      48.8  7.54e-20  5.72e-27
        W1b    0.0205         1  1.55e-21  1.17e-28
         P1  1.33e+19  6.47e+20         1  7.59e-08
         P2  1.75e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      49.4  4.82e-23  3.66e-30
        W1b    0.0203         1  9.77e-25  7.42e-32
         P1  2.07e+22  1.02e+24         1  7.59e-08
         P2  2.73e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.6406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.919159, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158156, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08946, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       488      14.1     0.256     0.744
          1  1.56e+04      91.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.1      14.1   -0.0491    -0.999
          1       545      91.2    -0.999    0.0491
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00241076
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000753, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09459, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.911177, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144484, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06097, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       154      8.83     0.344     0.656
          1  3.52e+03      72.1         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.38      8.83   -0.0749    -0.997
          1       123      72.1    -0.997    0.0749
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06338, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.911535, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145263, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06206, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      99.8      7.57     0.389     0.611
          1  1.96e+03      62.1         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.49      7.57   -0.0908    -0.996
          1      68.6      62.1    -0.996    0.0908
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06439, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.911399, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06197, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      68.4      6.76     0.432     0.568
          1  1.14e+03      49.5         1   -0.0156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.39      6.76    -0.108    -0.994
          1        40      49.5    -0.994     0.108
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06431, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.44014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.445772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        50       6.2     0.469     0.531
          1       690      35.1         1   -0.0181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75       6.2    -0.125    -0.992
          1      24.1      35.1    -0.992     0.125
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.446131, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001181
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029621
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.148375
         W1a Well: minimal relaxation eigenvalue = 0.0334303
         W1a Well: maximal relaxation eigenvalue = 23.764
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002046
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1536
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041397
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07081
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.177702
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.637701, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237  1.4e+05 1.63e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 3.74e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      66.3  6.97e-20  2.96e-26
        W1b    0.0151         1  1.05e-21  4.46e-28
         P1  1.43e+19  9.52e+20         1  4.24e-07
         P2  3.38e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      67.2  4.91e-23  2.08e-29
        W1b    0.0149         1  7.31e-25   3.1e-31
         P1  2.04e+22  1.37e+24         1  4.24e-07
         P2   4.8e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.641296, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.884026, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       984      20.4     0.308     0.692
          1   2.7e+04       112         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.9      20.4   -0.0547    -0.999
          1       903       112    -0.999    0.0547
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00298922
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000621, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05069, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880885, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141178, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       306      13.2     0.403     0.597
          1  5.97e+03      84.1         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.2      13.2   -0.0825    -0.997
          1       199      84.1    -0.997    0.0825
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02951, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.881523, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       198      11.6      0.45      0.55
          1  3.24e+03      69.3         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.61      11.6   -0.0999    -0.995
          1       108      69.3    -0.995    0.0999
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02968, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880945, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140469, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       135      10.6     0.495     0.505
          1  1.81e+03      51.8         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       4.5      10.6     -0.12    -0.993
          1      60.6      51.8    -0.993      0.12
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.586569, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001482, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.592047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      97.6      9.89     0.535     0.465
          1  1.04e+03      33.7         1   -0.0173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.26      9.89     -0.14     -0.99
          1      34.7      33.7     -0.99      0.14
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.592415, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001255
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00036
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027954
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146168
         W1a Well: minimal relaxation eigenvalue = 0.0324287
         W1a Well: maximal relaxation eigenvalue = 23.6011
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002216
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.144049
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04054
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055486
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.173199
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.603835, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 2.31e+04 3.74e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 7.66e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.8  6.63e-20  1.18e-25
        W1b    0.0117         1  7.73e-22  1.37e-27
         P1  1.51e+19  1.29e+21         1  1.78e-06
         P2   8.5e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      86.9   5.1e-23  9.05e-29
        W1b    0.0115         1  5.87e-25  1.04e-30
         P1  1.96e+22   1.7e+24         1  1.78e-06
         P2  1.11e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.607453, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02342, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+03      31.6     0.347     0.653
          1  4.04e+04       112         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.4      31.6   -0.0573    -0.998
          1  1.31e+03       112    -0.998    0.0573
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00328321
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02717, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.863744, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138313, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00721, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       563      20.8     0.439     0.561
          1   8.7e+03      78.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.3      20.8   -0.0842    -0.996
          1       282      78.5    -0.996    0.0842
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00959, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.86483, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138555, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00846, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       364      18.3     0.485     0.515
          1  4.62e+03      61.2         1    -0.011
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.8      18.3    -0.101    -0.995
          1       150      61.2    -0.995     0.101
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01082, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138282, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       248      16.8     0.529     0.471
          1   2.5e+03      42.4         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.05      16.8     -0.12    -0.993
          1      80.9      42.4    -0.993      0.12
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0088, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.676, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002332, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.682377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       181      15.6     0.571     0.429
          1  1.36e+03        25         1   -0.0155
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.85      15.6    -0.142     -0.99
          1      44.2        25     -0.99     0.142
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.682743, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001143
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00036
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028377
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.141918
         W1a Well: minimal relaxation eigenvalue = 0.0317692
         W1a Well: maximal relaxation eigenvalue = 21.0497
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002157
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.147745
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04041
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066912
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.15899
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.600772, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.64e+04 8.17e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.49e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       107  6.43e-20  3.82e-25
        W1b   0.00937         1  6.03e-22  3.58e-27
         P1  1.55e+19  1.66e+21         1  5.94e-06
         P2  2.62e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       108  5.36e-23  3.19e-28
        W1b   0.00926         1  4.96e-25  2.95e-30
         P1  1.87e+22  2.01e+24         1  5.94e-06
         P2  3.14e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.604138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.848468, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157856, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01778, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.11e+03      54.5     0.368     0.632
          1  5.26e+04      96.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.7      54.5   -0.0563    -0.998
          1  1.67e+03      96.7    -0.998    0.0563
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00316433
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000599, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.847349, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137239, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9897, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       937      35.5     0.448     0.552
          1  1.11e+04      62.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.8      35.5   -0.0784    -0.997
          1       351      62.6    -0.997    0.0784
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00614209
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000557, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.993298, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.847796, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       603      30.9     0.488     0.512
          1  5.75e+03      46.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      19.1      30.9   -0.0918    -0.996
          1       183      46.3    -0.996    0.0918
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.992423, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.846131, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       411      27.6     0.528     0.472
          1  3.02e+03      30.2         1   -0.0105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.1      27.6    -0.108    -0.994
          1      95.9      30.2    -0.994     0.108
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990767, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.740049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0061, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.750167, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       299      24.9      0.57      0.43
          1   1.6e+03      16.8         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       9.5      24.9    -0.128    -0.992
          1      50.7      16.8    -0.992     0.128
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.750536, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001102
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026842
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144724
         W1a Well: minimal relaxation eigenvalue = 0.0185831
         W1a Well: maximal relaxation eigenvalue = 36.1758
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002107
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137953
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040011
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065507
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.157555
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.588449, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.57e+05  1.7e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 2.79e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       129  6.34e-20  1.06e-24
        W1b   0.00777         1  4.93e-22  8.23e-27
         P1  1.58e+19  2.03e+21         1  1.67e-05
         P2  9.45e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       130  5.69e-23   9.5e-28
        W1b   0.00768         1  4.37e-25   7.3e-30
         P1  1.76e+22  2.29e+24         1  1.67e-05
         P2  1.05e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.592339, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820096, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.150761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.989648, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.58e+03      74.4     0.426     0.574
          1  1.04e+05      67.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       178      74.4   -0.0652    -0.998
          1  1.93e+03      67.4    -0.998    0.0652
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00425541
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000597, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.993399, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.83027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970808, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.8e+03      49.4     0.524     0.476
          1  2.14e+04      44.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52      49.4   -0.0967    -0.995
          1       398      44.3    -0.995    0.0967
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.991 0.009
         well projection threshold  = 0.2
         partition projection error = 0.00935344
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000559, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974573, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.831007, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13496, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970773, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+03      44.1     0.576     0.424
          1   1.1e+04      34.2         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.3      44.1    -0.119    -0.993
          1       204      34.2    -0.993     0.119
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.986 0.014
         well projection threshold  = 0.2
         partition projection error = 0.0141563
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974341, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.831184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134213, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970214, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.13e+03      41.3     0.631     0.369
          1  5.64e+03      23.9         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        21      41.3    -0.149    -0.989
          1       105      23.9    -0.989     0.149
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.97285, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81488, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0126, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.831506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       775      39.8     0.689     0.311
          1  2.93e+03      14.7         1   -0.0173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      14.4      39.8    -0.192    -0.981
          1      54.4      14.7    -0.981     0.192
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.831991, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000124
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002739
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028181
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139795
         W1a Well: minimal relaxation eigenvalue = 0.0294345
         W1a Well: maximal relaxation eigenvalue = 27.1693
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002183
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132385
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.0398
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05785
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154597
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.569842, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 4.34e+04 3.39e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.03e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       151  6.31e-20  2.58e-24
        W1b   0.00661         1  4.17e-22   1.7e-26
         P1  1.58e+19   2.4e+21         1  4.08e-05
         P2  3.88e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       153  6.07e-23  2.48e-27
        W1b   0.00653         1  3.97e-25  1.62e-29
         P1  1.65e+22  2.52e+24         1  4.08e-05
         P2  4.03e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.573772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818983, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.973321, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+04       117     0.467     0.533
          1  7.13e+04      44.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       299       117   -0.0711    -0.997
          1   2.1e+03      44.2    -0.997    0.0711
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.975625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824474, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.99e+03      78.2     0.563     0.437
          1  1.46e+04      27.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      88.1      78.2    -0.104    -0.995
          1       429      27.5    -0.995     0.104
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0108607
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.965065, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823951, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13138, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.96027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+03      68.9     0.615     0.385
          1   7.4e+03      20.4         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.8      68.9    -0.129    -0.992
          1       218      20.4    -0.992     0.129
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.962601, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807385, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13259, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.944866, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.27e+03        62     0.677     0.323
          1  3.78e+03      14.1         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      37.3        62    -0.168    -0.986
          1       111      14.1    -0.986     0.168
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.947224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.049701, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878177, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       895      55.2     0.752     0.248
          1  1.95e+03      10.3         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      26.3      55.2     -0.24    -0.971
          1      57.3      10.3    -0.971      0.24
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.878697, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000184
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006146
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000346
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026679
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137364
         W1a Well: minimal relaxation eigenvalue = 0.0292226
         W1a Well: maximal relaxation eigenvalue = 25.0455
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002136
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135376
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03879
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061491
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.156205
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.576725, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 9.41e+04 6.52e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 8.74e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       174  6.37e-20  5.68e-24
        W1b   0.00574         1  3.65e-22  3.26e-26
         P1  1.57e+19  2.74e+21         1  8.91e-05
         P2  1.76e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       176  6.51e-23   5.8e-27
        W1b   0.00567         1  3.69e-25  3.29e-29
         P1  1.54e+22  2.71e+24         1  8.91e-05
         P2  1.72e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.580222, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819941, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.981975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.61e+04       192     0.526     0.474
          1  7.38e+04      36.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       470       192   -0.0837    -0.996
          1  2.16e+03      36.8    -0.996    0.0837
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.98427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820269, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.63e+03       127     0.622     0.378
          1   1.5e+04      23.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       135       127    -0.123    -0.992
          1       438      23.7    -0.992     0.123
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.985 0.015
         well projection threshold  = 0.2
         partition projection error = 0.0152379
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000601, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.961219, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820185, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956911, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.9e+03       110     0.678     0.322
          1   7.6e+03      19.1         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      84.8       110    -0.157    -0.988
          1       222      19.1    -0.988     0.157
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959323, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821798, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132515, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959073, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.92e+03      95.7     0.749     0.251
          1  3.88e+03      16.5         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        56      95.7     -0.22    -0.975
          1       113      16.5    -0.975      0.22
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.961422, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820665, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.053076, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878154, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.32e+03      76.1     0.845     0.155
          1  2.02e+03      21.8         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      38.6      76.1    -0.381    -0.924
          1      58.9      21.8    -0.924     0.381
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.878676, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000175
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006341
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02734
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138455
         W1a Well: minimal relaxation eigenvalue = 0.019451
         W1a Well: maximal relaxation eigenvalue = 35.6595
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002307
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135743
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039256
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055804
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154651
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.572692, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 2.06e+04 1.21e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.48e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       198  6.44e-20  1.14e-23
        W1b   0.00506         1  3.26e-22  5.78e-26
         P1  1.55e+19  3.07e+21         1  0.000177
         P2  8.76e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       200     7e-23  1.24e-26
        W1b     0.005         1   3.5e-25   6.2e-29
         P1  1.43e+22  2.86e+24         1  0.000177
         P2  8.07e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.576197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14671, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.980649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.86e+04       281     0.615     0.385
          1  1.13e+05      33.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       752       281    -0.113    -0.994
          1  2.19e+03      33.5    -0.994     0.113
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.982954, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131678, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.953162, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+04       180     0.723     0.277
          1  2.29e+04      26.1         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       205       180    -0.183    -0.983
          1       445      26.1    -0.983     0.183
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.951678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.34e+03       152     0.785     0.215
          1  1.16e+04      26.6         1   -0.0185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       123       152    -0.252    -0.968
          1       226      26.6    -0.968     0.252
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.937 0.063
         well projection threshold  = 0.2
         partition projection error = 0.0633824
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000614, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955365, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.951033, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.93e+03       123     0.859     0.141
          1  6.01e+03      36.5         1   -0.0309
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      76.4       123    -0.399    -0.917
          1       117      36.5    -0.917     0.399
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.953649, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.074334, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886467, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.41e+03      66.8     0.934    0.0657
          1  3.32e+03      79.3         1    -0.072
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.9      66.8    -0.711    -0.703
          1      64.6      79.3    -0.703     0.711
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887022, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000225
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007539
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001143
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030665
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147479
         W1a Well: minimal relaxation eigenvalue = 0.00167849
         W1a Well: maximal relaxation eigenvalue = 49.8239
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002142
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129405
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037769
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062521
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151496
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.582339, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.74e+05 2.19e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.43e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       221  6.55e-20  2.13e-23
        W1b   0.00453         1  2.97e-22  9.66e-26
         P1  1.53e+19  3.37e+21         1  0.000326
         P2  4.69e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       223  7.54e-23  2.45e-26
        W1b   0.00448         1  3.37e-25   1.1e-28
         P1  1.33e+22  2.96e+24         1  0.000326
         P2  4.07e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.586441, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794356, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147024, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955892, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.27e+05       369     0.749     0.251
          1  1.31e+06      49.5         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.22e+03       369    -0.197     -0.98
          1  2.21e+03      49.5     -0.98     0.197
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128994, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+05       213     0.865     0.135
          1  2.73e+05      64.5         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       318       213    -0.395    -0.919
          1       458      64.5    -0.919     0.395
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795936, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128418, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929007, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+05       143     0.917    0.0829
          1  1.44e+05       104         1   -0.0501
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       179       143    -0.597    -0.802
          1       241       104    -0.802     0.597
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931216, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128338, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927742, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.81e+04      69.1     0.955     0.045
          1  8.05e+04       164         1   -0.0961
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      97.4      69.1    -0.819    -0.574
          1       135       164    -0.574     0.819
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929938, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.791395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.117612, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913274, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.04e+04      29.2     0.974     0.026
          1   4.9e+04       201         1     -0.17
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        51      29.2     -0.93    -0.368
          1      82.2       201    -0.368      0.93
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913803, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000267
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.009528
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002202
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031269
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133906
         W1a Well: minimal relaxation eigenvalue = 0.0233994
         W1a Well: maximal relaxation eigenvalue = 33.2244
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002271
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137888
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037606
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.052561
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14892
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.568529, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 6.22e+04 3.85e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 3.89e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       244  6.69e-20  3.75e-23
        W1b    0.0041         1  2.74e-22  1.54e-25
         P1   1.5e+19  3.65e+21         1  0.000561
         P2  2.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       247  8.13e-23  4.56e-26
        W1b   0.00405         1  3.29e-25  1.85e-28
         P1  1.23e+22  3.04e+24         1  0.000561
         P2  2.19e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.572226, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786722, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141929, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.97e+04       308     0.925    0.0745
          1  9.96e+04       278         1   -0.0509
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.87e+03       308    -0.622    -0.783
          1  2.33e+03       278    -0.783     0.622
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.949773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786268, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126388, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917208, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.75e+04      33.8     0.977    0.0227
          1  2.56e+04       368         1    -0.177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       410      33.8     -0.94    -0.341
          1       600       368    -0.341      0.94
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919379, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127052, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917481, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.89e+03      13.7     0.985    0.0151
          1  1.56e+04       344         1    -0.267
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       208      13.7    -0.973    -0.233
          1       366       344    -0.233     0.973
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.946 0.054
         well projection threshold  = 0.2
         partition projection error = 0.0289819
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000651, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.921458, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128333, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919204, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.49e+03      6.32     0.989    0.0107
          1  1.01e+04       318         1     -0.38
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105      6.32    -0.986    -0.166
          1       236       318    -0.166     0.986
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.972 0.028
         well projection threshold  = 0.2
         partition projection error = 0.0105784
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000569, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922778, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787383, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126632, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918643, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.26e+03      2.97     0.992         0
          1  6.89e+03       292         1    -0.517
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        53      2.97    -0.992    -0.123
          1       161       292    -0.123     0.992
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920904, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002185
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.03936
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002653
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030522
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13274
         W1a Well: minimal relaxation eigenvalue = 0.00775347
         W1a Well: maximal relaxation eigenvalue = 42.2807
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002007
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129966
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038283
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060857
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.15059
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.601204, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.48e+04 6.61e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276  6.1e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       267  6.85e-20  6.26e-23
        W1b   0.00375         1  2.57e-22  2.35e-25
         P1  1.46e+19  3.89e+21         1  0.000914
         P2   1.6e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       270  8.76e-23  8.01e-26
        W1b   0.00371         1  3.25e-25  2.97e-28
         P1  1.14e+22  3.08e+24         1  0.000914
         P2  1.25e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.605312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.782265, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143313, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940135, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.63e+05        61     0.981    0.0192
          1   3.7e+05  1.04e+03         1    -0.192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03        61    -0.953    -0.304
          1  2.87e+03  1.04e+03    -0.304     0.953
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94241, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784593, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126518, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.915893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.31e+04      14.4     0.988    0.0121
          1  9.38e+04       694         1    -0.306
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       412      14.4    -0.981    -0.196
          1       727       694    -0.196     0.981
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918093, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126157, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.915872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.67e+04      8.65      0.99    0.0101
          1  5.42e+04       598         1    -0.368
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       207      8.65    -0.986    -0.164
          1       420       598    -0.164     0.986
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918041, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784008, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127371, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916161, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.34e+04      5.46     0.992         0
          1  3.25e+04       529         1    -0.442
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       104      5.46    -0.991    -0.137
          1       252       529    -0.137     0.991
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12681, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917519, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.71e+03      3.47     0.993         0
          1  2.04e+04       481         1    -0.532
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52      3.47    -0.993    -0.114
          1       158       481    -0.114     0.993
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.987 0.013
         well projection threshold  = 0.2
         partition projection error = 0.00285013
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000621, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92118, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002066
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.050618
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002956
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030909
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134307
         W1a Well: minimal relaxation eigenvalue = 0.000545536
         W1a Well: maximal relaxation eigenvalue = 51.7734
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002196
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124222
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037224
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063531
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.148832
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.609448, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 1.11e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 9.37e+20
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       289  7.03e-20  9.98e-23
        W1b   0.00346         1  2.43e-22  3.45e-25
         P1  1.42e+19  4.11e+21         1   0.00142
         P2     1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       293  9.45e-23  1.34e-25
        W1b   0.00342         1  3.23e-25  4.59e-28
         P1  1.06e+22   3.1e+24         1   0.00142
         P2  7.45e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.613308, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780057, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.935266, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.74e+06      6.69     0.993         0
          1  8.57e+06  1.27e+03         1    -0.469
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03      6.69    -0.992    -0.124
          1  4.67e+03  1.27e+03    -0.124     0.992
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.937521, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.781641, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125312, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911726, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.48e+05       3.7     0.994         0
          1  2.21e+06       853         1    -0.554
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       408       3.7    -0.994    -0.105
          1   1.2e+03       853    -0.105     0.994
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914166, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780453, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909105, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.74e+05      3.07     0.994         0
          1  1.27e+06       759         1    -0.596
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204      3.07    -0.995   -0.0982
          1       694       759   -0.0982     0.995
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911416, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.781155, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125549, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911458, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.87e+05      2.59     0.995         0
          1  7.51e+05       711         1    -0.641
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       102      2.59    -0.996   -0.0913
          1       410       711   -0.0913     0.996
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913596, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780345, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124482, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.37e+04      2.16     0.995         0
          1  4.57e+05       701         1    -0.693
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.1      2.16    -0.996   -0.0845
          1       250       701   -0.0845     0.996
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911842, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002362
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.079937
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0033
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02997
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130335
         W1a Well: minimal relaxation eigenvalue = 0.0200784
         W1a Well: maximal relaxation eigenvalue = 34.677
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002135
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125855
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036823
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058054
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14614
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.627303, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.2e+05 1.82e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.41e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       311  7.23e-20  1.53e-22
        W1b   0.00321         1  2.32e-22  4.92e-25
         P1  1.38e+19   4.3e+21         1   0.00212
         P2  6.53e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       315  1.02e-22  2.16e-25
        W1b   0.00318         1  3.23e-25  6.85e-28
         P1  9.82e+21  3.09e+24         1   0.00212
         P2  4.64e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.631396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140255, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.921829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.98e+04      2.03     0.996         0
          1  3.82e+05  1.61e+03         1    -0.711
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     2e+03      2.03    -0.997   -0.0794
          1  7.67e+03  1.61e+03   -0.0794     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.924096, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767835, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123584, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895925, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     2e+04      1.25     0.996         0
          1  1.07e+05  1.14e+03         1    -0.809
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       401      1.25    -0.998   -0.0699
          1  2.15e+03  1.14e+03   -0.0699     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898084, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767955, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125636, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898315, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+04     0.944     0.996         0
          1  6.62e+04  1.01e+03         1    -0.868
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       201     0.944    -0.998   -0.0652
          1  1.33e+03  1.01e+03   -0.0652     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 7.39594e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902208, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123497, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     5e+03     0.651     0.997         0
          1   4.3e+04       903         1    -0.939
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       100     0.651    -0.998   -0.0603
          1       863       903   -0.0603     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 1.35093e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000545, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898112, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76771, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895001, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.5e+03     0.404     0.997         0
          1  2.91e+04       779    -0.983         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      50.3     0.404    -0.998   -0.0556
          1       585       779   -0.0556     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 9.30507e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000547, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898683, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002401
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118565
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.02755
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031689
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135671
         W1a Well: minimal relaxation eigenvalue = 0.00908652
         W1a Well: maximal relaxation eigenvalue = 40.8989
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002107
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124717
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037197
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057193
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147292
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.696883, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.66e+04 2.93e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41 2.09e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       333  7.45e-20  2.27e-22
        W1b   0.00301         1  2.24e-22  6.82e-25
         P1  1.34e+19  4.47e+21         1   0.00305
         P2   4.4e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       337   1.1e-22  3.34e-25
        W1b   0.00297         1  3.26e-25  9.93e-28
         P1  9.12e+21  3.07e+24         1   0.00305
         P2  2.99e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.700685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766709, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.16e+05      1.21     0.996         0
          1  1.14e+06  2.71e+03         1    -0.854
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.96e+03      1.21    -0.998   -0.0641
          1  1.04e+04  2.71e+03   -0.0641     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918885, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766893, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895984, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.32e+04     0.858     0.997         0
          1  2.97e+05  1.82e+03         1    -0.912
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       392     0.858    -0.998     -0.06
          1   2.7e+03  1.82e+03     -0.06     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898128, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76695, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895115, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.16e+04     0.723     0.997         0
          1  1.75e+05  1.59e+03         1    -0.947
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       196     0.723    -0.998   -0.0578
          1  1.59e+03  1.59e+03   -0.0578     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897228, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768224, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123268, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896306, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.08e+04     0.577     0.997         0
          1  1.07e+05   1.4e+03         1    -0.991
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.2     0.577    -0.998   -0.0553
          1       974   1.4e+03   -0.0553     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767339, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124556, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896615, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.41e+03     0.426     0.997         0
          1  6.86e+04  1.23e+03    -0.959         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.1     0.426    -0.999   -0.0525
          1       623  1.23e+03   -0.0525     0.999
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 4.95832e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000618, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900201, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002331
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124499
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.027898
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031437
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134952
         W1a Well: minimal relaxation eigenvalue = 0.00289402
         W1a Well: maximal relaxation eigenvalue = 46.8593
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002394
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128545
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037052
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054298
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143264
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.699458, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.35e+04 4.64e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.05e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       354  7.68e-20  3.27e-22
        W1b   0.00283         1  2.17e-22  9.23e-25
         P1   1.3e+19  4.61e+21         1   0.00425
         P2  3.06e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  1.18e-22  5.02e-25
        W1b   0.00279         1   3.3e-25   1.4e-27
         P1  8.47e+21  3.03e+24         1   0.00425
         P2  1.99e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.703448, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761227, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131675, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.63e+05     0.629     0.997         0
          1  5.75e+06  3.01e+03         1    -0.995
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.92e+03     0.629    -0.999   -0.0534
          1  1.66e+04  3.01e+03   -0.0534     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761894, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123488, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890102, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+05     0.529     0.997         0
          1  1.51e+06  2.12e+03     -0.97         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       384     0.529    -0.999   -0.0515
          1  4.36e+03  2.12e+03   -0.0515     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892298, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762728, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122352, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889604, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.63e+04     0.484     0.997         0
          1  8.81e+05  1.92e+03    -0.951         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       192     0.484    -0.999   -0.0505
          1  2.55e+03  1.92e+03   -0.0505     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892293, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123556, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890205, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.32e+04     0.429     0.997         0
          1  5.31e+05  1.79e+03    -0.929         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      95.9     0.429    -0.999   -0.0494
          1  1.54e+03  1.79e+03   -0.0494     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892345, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76306, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123952, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891726, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.66e+04     0.359     0.997         0
          1  3.31e+05  1.69e+03    -0.904         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        48     0.359    -0.999    -0.048
          1       957  1.69e+03    -0.048     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893867, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002561
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123104
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034374
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053753
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138129
         W1a Well: minimal relaxation eigenvalue = 0.000466789
         W1a Well: maximal relaxation eigenvalue = 51.268
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002018
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124052
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036545
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058818
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144733
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.731058, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 7.22e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.39e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       374  7.92e-20  4.58e-22
        W1b   0.00267         1  2.12e-22  1.22e-24
         P1  1.26e+19  4.72e+21         1   0.00577
         P2  2.19e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       379  1.27e-22  7.33e-25
        W1b   0.00264         1  3.35e-25  1.94e-27
         P1  7.88e+21  2.98e+24         1   0.00577
         P2  1.36e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.735322, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758574, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908692, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.01e+06     0.435     0.998         0
          1  4.79e+07  4.79e+03    -0.927         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.87e+03     0.435    -0.999   -0.0479
          1  2.24e+04  4.79e+03   -0.0479     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.910903, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123389, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885068, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.03e+05     0.384     0.998         0
          1  1.19e+07  3.21e+03     -0.91         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       375     0.384    -0.999    -0.047
          1  5.54e+03  3.21e+03    -0.047     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761938, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123178, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.01e+05     0.366     0.998         0
          1  6.69e+06  2.83e+03    -0.901         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       187     0.366    -0.999   -0.0465
          1  3.12e+03  2.83e+03   -0.0465     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891768, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759783, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123958, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888445, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.01e+05     0.347     0.998         0
          1  3.85e+06  2.58e+03    -0.891         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      93.7     0.347    -0.999    -0.046
          1   1.8e+03  2.58e+03    -0.046     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75978, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122435, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+05     0.323     0.998         0
          1  2.27e+06  2.44e+03    -0.879         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.9     0.323    -0.999   -0.0454
          1  1.06e+03  2.44e+03   -0.0454     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888852, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002335
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118947
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034438
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045723
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134848
         W1a Well: minimal relaxation eigenvalue = 0.00217979
         W1a Well: maximal relaxation eigenvalue = 47.9358
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00225
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126277
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036568
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058635
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141809
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714643, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.62e+04 1.11e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.23e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       394  8.21e-20  6.28e-22
        W1b   0.00254         1  2.08e-22  1.59e-24
         P1  1.22e+19   4.8e+21         1   0.00765
         P2  1.59e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       399  1.36e-22  1.04e-24
        W1b   0.00251         1  3.42e-25  2.62e-27
         P1  7.33e+21  2.93e+24         1   0.00765
         P2  9.58e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.718427, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759617, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135999, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906604, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.39e+05     0.306     0.998         0
          1  1.47e+07  6.26e+03    -0.877         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.83e+03     0.306    -0.999   -0.0441
          1   3.2e+04  6.26e+03   -0.0441     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.908846, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759789, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123034, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887316, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.68e+05     0.275     0.998         0
          1  3.66e+06  4.13e+03    -0.864         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       366     0.275    -0.999   -0.0435
          1  7.98e+03  4.13e+03   -0.0435     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889493, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760672, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122477, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887846, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.4e+04     0.262     0.998         0
          1  2.08e+06  3.56e+03    -0.857         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       183     0.262    -0.999   -0.0431
          1  4.54e+03  3.56e+03   -0.0431     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889985, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759889, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123059, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887413, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.2e+04     0.246     0.998         0
          1  1.22e+06  3.12e+03    -0.849         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      91.5     0.246    -0.999   -0.0427
          1  2.65e+03  3.12e+03   -0.0427     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760253, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123209, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888138, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.1e+04     0.226     0.998         0
          1  7.31e+05  2.75e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.8     0.226    -0.999   -0.0422
          1  1.59e+03  2.75e+03   -0.0422     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890293, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002305
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.116963
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034713
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042773
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134224
         W1a Well: minimal relaxation eigenvalue = 0.000509723
         W1a Well: maximal relaxation eigenvalue = 50.4489
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002187
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122804
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036516
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060345
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145524
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711571, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 1.67e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 8.72e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       414  8.48e-20  8.41e-22
        W1b   0.00242         1  2.05e-22  2.03e-24
         P1  1.18e+19  4.88e+21         1   0.00992
         P2  1.19e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       419  1.46e-22  1.45e-24
        W1b   0.00239         1   3.5e-25  3.47e-27
         P1  6.83e+21  2.86e+24         1   0.00992
         P2  6.89e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.715393, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758758, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140633, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.51e+06     0.269     0.998         0
          1  7.99e+07  1.07e+04    -0.847         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.79e+03     0.269    -0.999   -0.0416
          1  4.07e+04  1.07e+04   -0.0416     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918737, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758492, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124493, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887686, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.01e+05     0.248     0.998         0
          1  1.87e+07  6.77e+03    -0.841         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       357     0.248    -0.999   -0.0413
          1  9.54e+03  6.77e+03   -0.0413     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890134, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760753, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122128, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.51e+05     0.241     0.998         0
          1  1.02e+07  5.67e+03    -0.838         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       179     0.241    -0.999   -0.0412
          1  5.21e+03  5.67e+03   -0.0412     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.75e+05     0.235     0.998         0
          1  5.68e+06  4.85e+03    -0.835         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      89.4     0.235    -0.999    -0.041
          1   2.9e+03  4.85e+03    -0.041     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890003, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887722, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.77e+04     0.227     0.998         0
          1  3.22e+06  4.25e+03     -0.83         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      44.7     0.227    -0.999   -0.0408
          1  1.64e+03  4.25e+03   -0.0408     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889855, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002321
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121249
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03389
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041986
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136667
         W1a Well: minimal relaxation eigenvalue = 0.0151463
         W1a Well: maximal relaxation eigenvalue = 36.5563
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002165
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119846
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036565
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05993
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142551
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70959, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 4.13e+05  2.5e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.21e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       433  8.76e-20  1.11e-21
        W1b   0.00231         1  2.03e-22  2.56e-24
         P1  1.14e+19  4.94e+21         1    0.0126
         P2  9.04e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       438  1.57e-22  1.98e-24
        W1b   0.00228         1  3.58e-25  4.52e-27
         P1  6.37e+21  2.79e+24         1    0.0126
         P2  5.05e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.713434, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.749069, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12702, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+05     0.208     0.998         0
          1  4.37e+06  9.19e+03    -0.817         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.75e+03     0.208    -0.999   -0.0392
          1  6.62e+04  9.19e+03   -0.0392     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898115, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.748735, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.31e+04     0.185     0.998         0
          1  1.15e+06  6.01e+03    -0.806         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       349     0.185    -0.999   -0.0387
          1  1.75e+04  6.01e+03   -0.0387     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.875316, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.749015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1212, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.874859, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+04     0.171     0.998         0
          1  6.82e+05  4.96e+03      -0.8         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       175     0.171    -0.999   -0.0384
          1  1.03e+04  4.96e+03   -0.0384     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877006, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.748074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873202, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.77e+03     0.157     0.998         0
          1  4.15e+05   3.9e+03    -0.793         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      87.3     0.157    -0.999   -0.0381
          1  6.29e+03   3.9e+03   -0.0381     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.86656e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000638, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.752504, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123283, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.880512, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.88e+03     0.146     0.998         0
          1  2.57e+05   2.8e+03    -0.786         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      43.7     0.146    -0.999   -0.0378
          1  3.89e+03   2.8e+03   -0.0378     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000105283
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000573, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884312, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002446
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.116985
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034445
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039472
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131877
         W1a Well: minimal relaxation eigenvalue = 0.00887509
         W1a Well: maximal relaxation eigenvalue = 40.4422
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002278
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121733
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036886
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058546
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142807
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.700387, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.36e+05 3.68e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.65e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       451  9.06e-20  1.43e-21
        W1b   0.00222         1  2.01e-22  3.17e-24
         P1   1.1e+19  4.98e+21         1    0.0158
         P2  6.99e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       456  1.68e-22  2.65e-24
        W1b   0.00219         1  3.68e-25  5.81e-27
         P1  5.95e+21  2.72e+24         1    0.0158
         P2  3.77e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.704218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759463, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136743, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914654, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.92e+05     0.188     0.998         0
          1   9.4e+06  1.36e+04    -0.803         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.71e+03     0.188    -0.999   -0.0378
          1  8.34e+04  1.36e+04   -0.0378     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916955, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759467, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123549, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.84e+04     0.175     0.998         0
          1  2.34e+06  8.72e+03    -0.797         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       341     0.175    -0.999   -0.0375
          1  2.08e+04  8.72e+03   -0.0375     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123147, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886159, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.92e+04     0.167     0.998         0
          1  1.34e+06  7.22e+03    -0.793         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       171     0.167    -0.999   -0.0373
          1  1.19e+04  7.22e+03   -0.0373     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888348, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757108, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124437, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886254, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.61e+03     0.158     0.998         0
          1  7.91e+05   5.8e+03    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      85.3     0.158    -0.999   -0.0371
          1  7.02e+03   5.8e+03   -0.0371     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.8942e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000638, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889926, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759284, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122647, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.8865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.81e+03     0.149     0.998         0
          1  4.77e+05  4.35e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      42.7     0.149    -0.999   -0.0369
          1  4.23e+03  4.35e+03   -0.0369     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000103667
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000552, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889996, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002126
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122899
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034287
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036802
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132151
         W1a Well: minimal relaxation eigenvalue = 0.00478203
         W1a Well: maximal relaxation eigenvalue = 43.6492
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00209
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129213
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036594
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.048804
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144457
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701929, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.26e+05 5.35e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.24e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       469  9.36e-20  1.82e-21
        W1b   0.00213         1     2e-22  3.88e-24
         P1  1.07e+19  5.01e+21         1    0.0194
         P2   5.5e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       474   1.8e-22  3.49e-24
        W1b   0.00211         1  3.79e-25  7.37e-27
         P1  5.57e+21  2.64e+24         1    0.0194
         P2  2.86e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.705814, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758452, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1398, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908845, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.49e+05     0.176     0.998         0
          1  2.15e+07  2.26e+04    -0.793         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.67e+03     0.176    -0.999   -0.0366
          1  1.03e+05  2.26e+04   -0.0366     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758313, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886406, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.97e+04     0.168     0.998         0
          1  5.04e+06  1.42e+04     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       333     0.168    -0.999   -0.0365
          1  2.41e+04  1.42e+04   -0.0365     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888642, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759266, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123672, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887461, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.49e+04     0.163     0.998         0
          1  2.79e+06  1.17e+04    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       167     0.163    -0.999   -0.0364
          1  1.33e+04  1.17e+04   -0.0364     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889643, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759311, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123437, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+04     0.157     0.998         0
          1  1.58e+06  9.55e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      83.4     0.157    -0.999   -0.0362
          1  7.57e+03  9.55e+03   -0.0362     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889705, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758754, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123619, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886892, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.72e+03     0.151     0.998         0
          1  9.18e+05  7.53e+03    -0.781         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      41.7     0.151    -0.999   -0.0361
          1  4.39e+03  7.53e+03   -0.0361     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000101672
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000617, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890514, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 406.064, elapsed time[sec] = 8
