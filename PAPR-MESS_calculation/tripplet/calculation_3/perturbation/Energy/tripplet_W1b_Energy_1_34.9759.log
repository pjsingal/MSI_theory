Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.005955, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.007102, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.189493, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.004981, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.05812, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.43296, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.44484, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001272, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001832, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.49
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.111174, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002995, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.036168, elapsed time[sec] = 0
         effective power exponent at 409.49 kcal/mol = 11.8842
      interpolating states number/density done, cpu time[sec] = 1.20188, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.20693, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001205, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001781, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003585, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000805, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001368, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002947, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010589, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000832, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001954, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003607, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001061, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001839, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003277, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010364, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019081, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.01968, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.733999, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002935, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.017901, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.75122, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.77355, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.010874, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.010946, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.088625, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.3786, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.00012, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.38051, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000742, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.101877, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.044171, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.050184, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.010692, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000584, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.372962, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.004798, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.571825, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.45903, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.45977, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.17544, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001603, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.39436, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.59577, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.0573, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 2.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.00092, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00033, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.013012, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.013079, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  2.41542e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.87426e+38  1.86422e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.62356e+38   5.2428e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  2.18646e+38  5.34828e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  4.20247e+38  2.11307e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  9.11395e+38  1.56914e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  2.04507e+39  1.62226e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.57883e+39   2.0203e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  1.00673e+40  2.80584e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  2.15873e+40  4.15851e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100   4.5032e+40   6.4054e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  9.13498e+40  1.00857e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.80321e+41  1.60622e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.46766e+41  2.56925e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  6.50539e+41  4.10862e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.19227e+42  6.54818e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  2.13772e+42  1.03794e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.75476e+42    1.634e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  6.46873e+42  2.55251e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  1.09439e+43  3.95439e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.541, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001794
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000587
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.221967
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.21957
         W1a Well: minimal relaxation eigenvalue = 0.0683137
         W1a Well: maximal relaxation eigenvalue = 4.21349
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001775
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.275395
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079136
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089862
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.329353
         W1b Well: minimal relaxation eigenvalue = 0.0779046
         W1b Well: maximal relaxation eigenvalue = 1.14414
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.24348, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.47e+05 4.67e+11
        W1b  -2606  -2606 3.41e+04 4.42e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00118  2.12e-16  7.52e-57
        W1b       845         1  1.79e-13  6.36e-54
         P1  4.71e+15  5.58e+12         1  3.55e-41
         P2  1.33e+56  1.57e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000208  2.74e-20   9.7e-61
        W1b  4.81e+03         1  1.32e-16  4.67e-57
         P1  3.65e+19   7.6e+15         1  3.55e-41
         P2  1.03e+60  2.14e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.24783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79251, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.293876, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12309, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.29     0.048         0         1
          1      14.7      1.08         1   -0.0446
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0881     0.048  -0.00153        -1
          1         1      1.08        -1   0.00153
         *Z       ---       ---  3.35e+14  9.75e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.1258, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.80419, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.26536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.288    0.0123         0         1
          1      4.59     0.365         1    -0.109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0197    0.0123  -0.00373        -1
          1     0.313     0.365        -1   0.00373
         *Z       ---       ---  3.35e+14  9.75e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07952, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.245924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00298, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.255458, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.15   0.00573         0         1
          1      2.69     0.289         1    -0.198
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102   0.00573  -0.00681        -1
          1     0.184     0.289        -1   0.00681
         *Z       ---       ---  3.35e+14  9.75e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.255832, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019402, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002972, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022433, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0774   0.00237         0         1
          1       1.6     0.238         1    -0.337
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00529   0.00237   -0.0116        -1
          1      0.11     0.238        -1    0.0116
         *Z       ---       ---  3.35e+14  9.75e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022457, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002992, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0396  0.000876         0     0.999
          1     0.985     0.187         1    -0.501
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00271  0.000876   -0.0172        -1
          1    0.0673     0.187        -1    0.0172
         *Z       ---       ---  3.35e+14  9.75e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022442, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001859
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000579
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043552
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.214076
         W1a Well: minimal relaxation eigenvalue = 0.0670693
         W1a Well: maximal relaxation eigenvalue = 3.76037
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001685
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264139
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081232
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.103351
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.336806
         W1b Well: minimal relaxation eigenvalue = 0.0752696
         W1b Well: maximal relaxation eigenvalue = 1.1603
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.06984, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.74e+05 6.09e+11
        W1b  -2697  -2697 2.33e+04 5.44e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0015  1.25e-16  4.35e-55
        W1b       666         1  8.35e-14   2.9e-52
         P1  7.98e+15   1.2e+13         1  3.47e-39
         P2   2.3e+54  3.45e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00042  1.67e-20  5.81e-59
        W1b  2.38e+03         1  3.98e-17  1.38e-55
         P1  5.98e+19  2.51e+16         1  3.47e-39
         P2  1.72e+58  7.24e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.07367, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.82513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.30322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.15028, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.18    0.0548         0         1
          1      17.5      1.05         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0788    0.0548  -0.00136        -1
          1      1.17      1.05        -1   0.00136
         *Z       ---       ---  2.88e+14  7.44e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.15271, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.82641, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.268809, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.10299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.269    0.0145         0         1
          1      5.19     0.374         1   -0.0916
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.018    0.0145  -0.00355        -1
          1     0.348     0.374        -1   0.00355
         *Z       ---       ---  2.88e+14  7.44e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.10534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.186696, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003045, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.141   0.00687         0         1
          1      3.01     0.308         1    -0.173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00947   0.00687   -0.0067        -1
          1     0.202     0.308        -1    0.0067
         *Z       ---       ---  2.88e+14  7.44e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.196746, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019684, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003047, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022795, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0735   0.00292         0         1
          1      1.78     0.261         1    -0.304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00493   0.00292   -0.0118        -1
          1     0.119     0.261        -1    0.0118
         *Z       ---       ---  2.88e+14  7.44e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019685, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022782, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0379   0.00112         0     0.999
          1      1.09      0.21         1    -0.462
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00254   0.00112   -0.0179        -1
          1    0.0732      0.21        -1    0.0179
         *Z       ---       ---  2.88e+14  7.44e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022807, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001749
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000539
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045044
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.197237
         W1a Well: minimal relaxation eigenvalue = 0.0658303
         W1a Well: maximal relaxation eigenvalue = 4.83086
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001672
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.244188
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076483
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09575
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.313174
         W1b Well: minimal relaxation eigenvalue = 0.0729931
         W1b Well: maximal relaxation eigenvalue = 1.17334
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.99795, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.35e+05 7.87e+11
        W1b  -2760  -2760 1.76e+04 6.65e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00211  7.53e-17  1.69e-53
        W1b       474         1  3.57e-14  7.98e-51
         P1  1.33e+16   2.8e+13         1  2.24e-37
         P2  5.93e+52  1.25e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0008  1.07e-20  2.41e-57
        W1b  1.25e+03         1  1.34e-17  3.01e-54
         P1  9.31e+19  7.44e+16         1  2.24e-37
         P2  4.16e+56  3.32e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.00212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.6842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.26796, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98182, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15    0.0635         0         1
          1      19.9      1.12         1   -0.0301
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0759    0.0635  -0.00138        -1
          1      1.31      1.12        -1   0.00138
         *Z       ---       ---  2.48e+14  5.39e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98419, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.688, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.251092, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94652, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.27    0.0175         0         1
          1      5.78     0.394         1   -0.0806
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0177    0.0175  -0.00371        -1
          1      0.38     0.394        -1   0.00371
         *Z       ---       ---  2.48e+14  5.39e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.94903, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.531978, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.541088, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.143   0.00856         0         1
          1      3.32      0.33         1    -0.155
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00942   0.00856  -0.00712        -1
          1     0.219      0.33        -1   0.00712
         *Z       ---       ---  2.48e+14  5.39e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.541458, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021083, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0752   0.00378         0     0.999
          1      1.96     0.285         1    -0.277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00495   0.00378   -0.0127        -1
          1     0.129     0.285        -1    0.0127
         *Z       ---       ---  2.48e+14  5.39e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0391   0.00151         0     0.999
          1       1.2     0.235         1    -0.429
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00257   0.00151   -0.0197        -1
          1    0.0791     0.235        -1    0.0197
         *Z       ---       ---  2.48e+14  5.39e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021127, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001755
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000635
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043946
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.200091
         W1a Well: minimal relaxation eigenvalue = 0.0647287
         W1a Well: maximal relaxation eigenvalue = 3.73205
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001695
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.250706
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077443
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.107523
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.318744
         W1b Well: minimal relaxation eigenvalue = 0.070904
         W1b Well: maximal relaxation eigenvalue = 1.19503
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02376, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.71e+05 1.01e+12
        W1b  -2819  -2819 1.29e+04 8.11e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00299  4.89e-17  4.91e-52
        W1b       334         1  1.63e-14  1.64e-49
         P1  2.05e+16  6.12e+13         1     1e-35
         P2  2.04e+51  6.09e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00144   7.2e-21  7.23e-56
        W1b       693         1  4.99e-18  5.02e-53
         P1  1.39e+20     2e+17         1     1e-35
         P2  1.38e+55  1.99e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.02746, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69813, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.280301, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15    0.0735         0         1
          1      23.5      1.01         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0741    0.0735  -0.00144        -1
          1      1.52      1.01        -1   0.00144
         *Z       ---       ---  2.21e+14  4.04e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98827, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69814, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.251704, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9573, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.275    0.0212         0         1
          1      6.47     0.402         1   -0.0719
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178    0.0212  -0.00393        -1
          1     0.419     0.402        -1   0.00393
         *Z       ---       ---  2.21e+14  4.04e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.9596, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.508048, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002834, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.517237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.147    0.0107         0         1
          1      3.68      0.35         1     -0.14
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00954    0.0107  -0.00763        -1
          1     0.238      0.35        -1   0.00763
         *Z       ---       ---  2.21e+14  4.04e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.517624, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018355, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021227, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0783   0.00488         0     0.999
          1      2.16      0.31         1    -0.253
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00507   0.00488   -0.0138        -1
          1      0.14      0.31        -1    0.0138
         *Z       ---       ---  2.21e+14  4.04e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018285, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021172, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.041   0.00203         0     0.999
          1      1.32      0.26         1    -0.397
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00266   0.00203   -0.0217        -1
          1    0.0855      0.26        -1    0.0217
         *Z       ---       ---  2.21e+14  4.04e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021198, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001963
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000545
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041873
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.206938
         W1a Well: minimal relaxation eigenvalue = 0.0635922
         W1a Well: maximal relaxation eigenvalue = 5.85651
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00166
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.259139
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077875
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.097652
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.322337
         W1b Well: minimal relaxation eigenvalue = 0.0689114
         W1b Well: maximal relaxation eigenvalue = 1.22117
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03173, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.49e+05 1.29e+12
        W1b  -2882  -2882 9.74e+03 9.85e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0042  3.29e-17  1.08e-50
        W1b       238         1  7.84e-15  2.58e-48
         P1  3.04e+16  1.27e+14         1  3.28e-34
         P2  9.24e+49  3.88e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00248     5e-21  1.64e-54
        W1b       403         1  2.02e-18  6.62e-52
         P1     2e+20  4.96e+17         1  3.28e-34
         P2  6.08e+53  1.51e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.03565, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.71778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.287201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02631, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.085         0         1
          1      25.8      1.15         1    -0.023
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0724     0.085  -0.00149        -1
          1      1.64      1.15        -1   0.00149
         *Z       ---       ---  1.99e+14  3.08e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.02869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.71952, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.254995, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.281    0.0255         0         1
          1      7.06     0.434         1   -0.0643
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0179    0.0255  -0.00416        -1
          1     0.449     0.434        -1   0.00416
         *Z       ---       ---  1.99e+14  3.08e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.440462, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.153    0.0132         0     0.999
          1      4.01     0.378         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00971    0.0132  -0.00815        -1
          1     0.255     0.378        -1   0.00815
         *Z       ---       ---  1.99e+14  3.08e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.450173, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018574, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002918, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.082   0.00626         0     0.999
          1      2.35     0.337         1    -0.231
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00522   0.00626    -0.015        -1
          1     0.149     0.337        -1     0.015
         *Z       ---       ---  1.99e+14  3.08e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021488, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0435   0.00272         0     0.998
          1      1.44     0.287         1    -0.366
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00277   0.00272   -0.0237        -1
          1    0.0917     0.287        -1    0.0237
         *Z       ---       ---  1.99e+14  3.08e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021513, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001779
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000518
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054453
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199061
         W1a Well: minimal relaxation eigenvalue = 0.0624809
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001684
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.231176
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074213
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.106431
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.314245
         W1b Well: minimal relaxation eigenvalue = 0.0668181
         W1b Well: maximal relaxation eigenvalue = 1.25429
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00405, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.59e+05 1.65e+12
        W1b  -2976  -2976 5.84e+03 1.19e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00563  2.23e-17  1.81e-49
        W1b       178         1  3.97e-15  3.22e-47
         P1  4.48e+16  2.52e+14         1  8.12e-33
         P2  5.52e+48  3.11e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00409  3.59e-21  2.92e-53
        W1b       244         1  8.78e-19  7.13e-51
         P1  2.78e+20  1.14e+18         1  8.12e-33
         P2  3.43e+52   1.4e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.00774, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61145, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.266786, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9098, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.09    0.0975         0         1
          1      28.5      1.28         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.068    0.0975  -0.00145        -1
          1      1.78      1.28        -1   0.00145
         *Z       ---       ---   1.8e+14   2.4e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91217, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61633, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239704, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.279    0.0302         0         1
          1      7.72     0.468         1   -0.0565
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174    0.0302  -0.00424        -1
          1     0.482     0.468        -1   0.00424
         *Z       ---       ---   1.8e+14   2.4e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.86554, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.679784, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002723, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.68885, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154     0.016         0     0.999
          1      4.37     0.408         1    -0.112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0096     0.016  -0.00842        -1
          1     0.273     0.408        -1   0.00842
         *Z       ---       ---   1.8e+14   2.4e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.689211, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017448, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020206, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0837   0.00782         0     0.999
          1      2.56     0.367         1    -0.209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00523   0.00782   -0.0156        -1
          1      0.16     0.367        -1    0.0156
         *Z       ---       ---   1.8e+14   2.4e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020229, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020166, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0449   0.00353         0     0.998
          1      1.57     0.317         1    -0.336
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00281   0.00353   -0.0252        -1
          1    0.0983     0.317        -1    0.0252
         *Z       ---       ---   1.8e+14   2.4e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02019, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001696
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000517
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044617
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.198687
         W1a Well: minimal relaxation eigenvalue = 0.0615737
         W1a Well: maximal relaxation eigenvalue = 6.0739
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001756
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.246514
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.083316
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.086741
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.30292
         W1b Well: minimal relaxation eigenvalue = 0.0651447
         W1b Well: maximal relaxation eigenvalue = 1.28723
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.986626, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.39e+05 2.08e+12
        W1b  -3038  -3038 3.84e+03 1.44e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00797   1.6e-17  2.51e-48
        W1b       126         1  2.01e-15  3.15e-46
         P1  6.24e+16  4.97e+14         1  1.57e-31
         P2  3.98e+47  3.17e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00651  2.66e-21  4.16e-52
        W1b       154         1  4.08e-19  6.39e-50
         P1  3.76e+20  2.45e+18         1  1.57e-31
         P2   2.4e+51  1.56e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 0.99031, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62798, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.272355, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.113         0         1
          1      32.8      1.11         1   -0.0175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0686     0.113  -0.00156        -1
          1      2.02      1.11        -1   0.00156
         *Z       ---       ---  1.67e+14  1.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91923, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241948, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87816, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.294    0.0363         0         1
          1      8.55     0.477         1   -0.0515
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0181    0.0363  -0.00459        -1
          1     0.526     0.477        -1   0.00459
         *Z       ---       ---  1.67e+14  1.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.88044, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.669291, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002736, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.678188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.164    0.0198         0     0.999
          1      4.81     0.433         1    -0.102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0198  -0.00913        -1
          1     0.296     0.433        -1   0.00913
         *Z       ---       ---  1.67e+14  1.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.678545, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0908      0.01         0     0.998
          1      2.81     0.397         1    -0.191
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00559      0.01    -0.017        -1
          1     0.173     0.397        -1     0.017
         *Z       ---       ---  1.67e+14  1.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020455, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017592, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0494   0.00471         0     0.998
          1      1.72     0.349         1    -0.309
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00304   0.00471   -0.0275        -1
          1     0.106     0.349        -1    0.0275
         *Z       ---       ---  1.67e+14  1.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020411, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001744
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000492
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044042
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.185375
         W1a Well: minimal relaxation eigenvalue = 0.0606607
         W1a Well: maximal relaxation eigenvalue = 4.42925
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001787
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.247391
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071887
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083163
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.291665
         W1b Well: minimal relaxation eigenvalue = 0.0636023
         W1b Well: maximal relaxation eigenvalue = 1.35543
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.947103, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.24e+05 2.62e+12
        W1b  -3110  -3110 2.37e+03 1.73e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0112  1.15e-17   2.8e-47
        W1b      89.2         1  1.03e-15  2.49e-45
         P1  8.68e+16  9.74e+14         1  2.43e-30
         P2  3.58e+46  4.01e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.01  2.01e-21  4.89e-51
        W1b      99.8         1  2.01e-19  4.88e-49
         P1  4.96e+20  4.98e+18         1  2.43e-30
         P2  2.04e+50  2.05e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.951056, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52753, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253687, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8138, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.16     0.129         0         1
          1      37.2      1.01         1   -0.0161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0702     0.129   -0.0017        -1
          1      2.26      1.01        -1    0.0017
         *Z       ---       ---  1.54e+14  1.45e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81614, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76573, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.315    0.0433         0     0.999
          1      9.41     0.499         1   -0.0474
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0191    0.0433  -0.00502        -1
          1     0.571     0.499        -1   0.00502
         *Z       ---       ---  1.54e+14  1.45e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.76798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.890606, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899106, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.179    0.0243         0     0.999
          1      5.27     0.464         1   -0.0938
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0108    0.0243  -0.00993        -1
          1      0.32     0.464        -1   0.00993
         *Z       ---       ---  1.54e+14  1.45e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899485, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016546, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002584, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019184, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       0.1    0.0127         0     0.998
          1      3.07     0.432         1    -0.175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00607    0.0127   -0.0185        -1
          1     0.186     0.432        -1    0.0185
         *Z       ---       ---  1.54e+14  1.45e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019208, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0165, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002581, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019141, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0552   0.00623         0     0.997
          1      1.89     0.384         1    -0.283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00335   0.00623     -0.03        -1
          1     0.115     0.384        -1      0.03
         *Z       ---       ---  1.54e+14  1.45e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019166, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001677
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000509
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037958
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.188044
         W1a Well: minimal relaxation eigenvalue = 0.0597142
         W1a Well: maximal relaxation eigenvalue = 6.74834
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001665
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.242972
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070589
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083093
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.287727
         W1b Well: minimal relaxation eigenvalue = 0.0622991
         W1b Well: maximal relaxation eigenvalue = 1.46082
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.933103, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.69e+05 3.27e+12
        W1b  -3171  -3171 1.41e+03 2.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0159   8.7e-18  2.69e-46
        W1b        63         1  5.48e-16   1.7e-44
         P1  1.15e+17  1.82e+15         1  3.09e-29
         P2  3.71e+45   5.9e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.015  1.56e-21  4.83e-50
        W1b      66.8         1  1.04e-19  3.23e-48
         P1   6.4e+20  9.59e+18         1  3.09e-29
         P2  2.07e+49   3.1e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.936792, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53967, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.257592, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81402, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.24     0.148         0         1
          1      40.8      1.11         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0742     0.148  -0.00194        -1
          1      2.44      1.11        -1   0.00194
         *Z       ---       ---  1.45e+14  1.15e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54413, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.231238, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.347    0.0516         0     0.999
          1      10.2     0.542         1   -0.0446
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0516  -0.00562        -1
          1     0.611     0.542        -1   0.00562
         *Z       ---       ---  1.45e+14  1.15e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.78477, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.88393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.199    0.0297         0     0.999
          1      5.73     0.504         1   -0.0872
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0119    0.0297    -0.011        -1
          1     0.342     0.504        -1     0.011
         *Z       ---       ---  1.45e+14  1.15e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002641, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019359, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.113    0.0161         0     0.997
          1      3.35     0.471         1    -0.162
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00675    0.0161   -0.0204        -1
          1       0.2     0.471        -1    0.0204
         *Z       ---       ---  1.45e+14  1.15e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019383, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016663, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002637, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01936, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0632   0.00822         0     0.996
          1      2.07     0.422         1    -0.261
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00377   0.00822   -0.0329    -0.999
          1     0.124     0.422    -0.999    0.0329
         *Z       ---       ---  1.45e+14  1.15e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019385, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00164
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000501
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041904
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.192162
         W1a Well: minimal relaxation eigenvalue = 0.0587158
         W1a Well: maximal relaxation eigenvalue = 10.7587
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00183
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.25179
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071286
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090368
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.296524
         W1b Well: minimal relaxation eigenvalue = 0.0611038
         W1b Well: maximal relaxation eigenvalue = 1.47695
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.96695, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.49e+05 4.08e+12
        W1b  -3233  -3233      960 2.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0222  6.72e-18  2.22e-45
        W1b        45         1  3.02e-16  9.98e-44
         P1  1.49e+17  3.31e+15         1  3.31e-28
         P2   4.5e+44     1e+43  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0218  1.24e-21  4.09e-49
        W1b      45.9         1  5.67e-20  1.88e-47
         P1  8.09e+20  1.76e+19         1  3.31e-28
         P2  2.45e+48  5.33e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.970635, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5703, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83536, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.35     0.169         0         1
          1      43.4      1.44         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0792     0.169  -0.00221        -1
          1      2.55      1.44        -1   0.00221
         *Z       ---       ---  1.38e+14  9.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.8377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56854, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.233255, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80909, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.386    0.0612         0     0.999
          1        11     0.608         1   -0.0423
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0227    0.0612  -0.00631        -1
          1     0.649     0.608        -1   0.00631
         *Z       ---       ---  1.38e+14  9.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81135, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.830635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002642, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.839299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.224    0.0361         0     0.998
          1      6.21     0.553         1   -0.0814
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0132    0.0361   -0.0121        -1
          1     0.365     0.553        -1    0.0121
         *Z       ---       ---  1.38e+14  9.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.839661, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016931, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019627, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.129    0.0201         0     0.997
          1      3.65     0.515         1    -0.149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00755    0.0201   -0.0223        -1
          1     0.214     0.515        -1    0.0223
         *Z       ---       ---  1.38e+14  9.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019651, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016894, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019587, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0729    0.0107         0     0.995
          1      2.27     0.464         1     -0.24
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00428    0.0107   -0.0358    -0.999
          1     0.133     0.464    -0.999    0.0358
         *Z       ---       ---  1.38e+14  9.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019611, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00166
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000489
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040918
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.183711
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001681
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.231674
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.069214
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.101793
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.285695
         W1b Well: minimal relaxation eigenvalue = 0.0599774
         W1b Well: maximal relaxation eigenvalue = 1.71413
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.935247, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.69e+05 5.05e+12
        W1b  -3321  -3321      396 2.96e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0306  5.16e-18  1.55e-44
        W1b      32.6         1  1.68e-16  5.07e-43
         P1  1.94e+17  5.94e+15         1  3.01e-27
         P2  6.43e+43  1.97e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.031  9.97e-22  3.01e-48
        W1b      32.3         1  3.22e-20   9.7e-47
         P1     1e+21  3.11e+19         1  3.01e-27
         P2  3.33e+47  1.03e+46  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.938936, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48985, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235154, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7464, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.46     0.192         0         1
          1      47.7      1.54         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0847     0.192  -0.00249        -1
          1      2.76      1.54        -1   0.00249
         *Z       ---       ---  1.31e+14  7.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.74871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.49041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222958, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72043, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.429    0.0718         0     0.999
          1      12.1     0.655         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0248    0.0718  -0.00703        -1
          1     0.698     0.655        -1   0.00703
         *Z       ---       ---  1.31e+14  7.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72267, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00852, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002533, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01679, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.252    0.0434         0     0.998
          1      6.79       0.6         1   -0.0762
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0146    0.0434   -0.0133        -1
          1     0.393       0.6        -1    0.0133
         *Z       ---       ---  1.31e+14  7.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01715, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016092, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002537, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018683, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146    0.0249         0     0.996
          1      3.99     0.562         1    -0.138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00846    0.0249   -0.0242        -1
          1     0.231     0.562        -1    0.0242
         *Z       ---       ---  1.31e+14  7.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018707, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002534, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0841    0.0138         0     0.993
          1      2.49      0.51         1    -0.221
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00487    0.0138   -0.0387    -0.999
          1     0.144      0.51    -0.999    0.0387
         *Z       ---       ---  1.31e+14  7.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018649, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001605
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000481
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042004
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.185155
         W1a Well: minimal relaxation eigenvalue = 0.0572581
         W1a Well: maximal relaxation eigenvalue = 6.11952
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001699
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.234698
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070263
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.102554
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.279721
         W1b Well: minimal relaxation eigenvalue = 0.0590965
         W1b Well: maximal relaxation eigenvalue = 1.83743
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3339 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.93642, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20051e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.49e+05 6.24e+12
        W1b  -3339  -3339      294 3.52e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3339 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0425  4.13e-18  9.83e-44
        W1b      23.5         1  9.71e-17  2.31e-42
         P1  2.42e+17  1.03e+16         1  2.38e-26
         P2  1.02e+43  4.32e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0431  8.17e-22  1.95e-47
        W1b      23.2         1   1.9e-20  4.52e-46
         P1  1.22e+21  5.27e+19         1  2.38e-26
         P2  5.14e+46  2.21e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.940094, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.4907, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.251366, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.66     0.216         0     0.999
          1      55.4      1.08         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0948     0.216  -0.00296        -1
          1      3.17      1.08        -1   0.00296
         *Z       ---       ---  1.26e+14  6.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.76618, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.49297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222936, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72279, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.491     0.084         0     0.998
          1      13.4     0.671         1   -0.0391
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0281     0.084  -0.00806        -1
          1     0.766     0.671        -1   0.00806
         *Z       ---       ---  1.26e+14  6.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72508, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.993481, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00183, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.29     0.052         0     0.997
          1      7.49     0.643         1   -0.0724
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0166     0.052   -0.0149        -1
          1     0.429     0.643        -1    0.0149
         *Z       ---       ---  1.26e+14  6.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00219, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016139, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002514, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.17    0.0308         0     0.995
          1       4.4     0.612         1    -0.129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00975    0.0308   -0.0267        -1
          1     0.252     0.612        -1    0.0267
         *Z       ---       ---  1.26e+14  6.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01873, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01611, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018691, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0992    0.0177         0     0.991
          1      2.76     0.559         1    -0.204
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00568    0.0177   -0.0421    -0.999
          1     0.158     0.559    -0.999    0.0421
         *Z       ---       ---  1.26e+14  6.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018715, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001726
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000489
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043548
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.185744
         W1a Well: minimal relaxation eigenvalue = 0.0563928
         W1a Well: maximal relaxation eigenvalue = 9.76691
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001673
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.240929
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070197
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085953
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.287871
         W1b Well: minimal relaxation eigenvalue = 0.0582568
         W1b Well: maximal relaxation eigenvalue = 3.23461
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.936225, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.24e+05 7.67e+12
        W1b  -3359  -3359      112 4.17e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.058  3.35e-18  5.55e-43
        W1b      17.2         1  5.78e-17  9.57e-42
         P1  2.98e+17  1.73e+16         1  1.65e-25
         P2   1.8e+42  1.04e+41  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0587  6.79e-22  1.12e-46
        W1b        17         1  1.16e-20  1.92e-45
         P1  1.47e+21  8.64e+19         1  1.65e-25
         P2   8.9e+45  5.22e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.940049, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.50141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.248777, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77926, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.88     0.242         0     0.999
          1      58.8      1.43         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.106     0.242  -0.00349        -1
          1      3.32      1.43        -1   0.00349
         *Z       ---       ---  1.22e+14  5.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.78155, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.224211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73291, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.564    0.0976         0     0.998
          1      14.5     0.747         1   -0.0382
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0318    0.0976  -0.00919        -1
          1     0.817     0.747        -1   0.00919
         *Z       ---       ---  1.22e+14  5.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.73515, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.962149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970527, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.335    0.0617         0     0.996
          1      8.15     0.705         1   -0.0691
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0189    0.0617   -0.0166        -1
          1      0.46     0.705        -1    0.0166
         *Z       ---       ---  1.22e+14  5.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.970889, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016238, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002532, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018824, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.199    0.0375         0     0.993
          1      4.82      0.67         1    -0.121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0112    0.0375   -0.0292        -1
          1     0.272      0.67        -1    0.0292
         *Z       ---       ---  1.22e+14  5.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018847, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018769, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.117    0.0224    0.0109     0.989
          1      3.04     0.614         1    -0.189
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0066    0.0224   -0.0456    -0.999
          1     0.171     0.614    -0.999    0.0456
         *Z       ---       ---  1.22e+14  5.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018795, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001615
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000467
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041032
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173568
         W1a Well: minimal relaxation eigenvalue = 0.0557725
         W1a Well: maximal relaxation eigenvalue = 6.3968
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001738
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22529
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066849
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074862
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.268097
         W1b Well: minimal relaxation eigenvalue = 0.0574655
         W1b Well: maximal relaxation eigenvalue = 1.83981
         W1b Well:       grid size = 222
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3330 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.871062, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 222
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60567e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.81e+05 9.39e+12
        W1b  -3330  -3330      365 4.94e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3330 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0777   2.7e-18  2.76e-42
        W1b      12.9         1  3.48e-17  3.55e-41
         P1   3.7e+17  2.87e+16         1  1.02e-24
         P2  3.62e+41  2.81e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0786  5.73e-22  5.85e-46
        W1b      12.7         1  7.29e-21  7.45e-45
         P1  1.75e+21  1.37e+20         1  1.02e-24
         P2  1.71e+45  1.34e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.874724, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40656, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.220596, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.65274, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.13     0.269         0     0.999
          1      66.7      1.19         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.119     0.269  -0.00408        -1
          1      3.72      1.19        -1   0.00408
         *Z       ---       ---  1.18e+14  4.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.65507, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40826, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.210933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62564, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.643     0.112         0     0.997
          1        16      0.79         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0359     0.112   -0.0104        -1
          1     0.891      0.79        -1    0.0104
         *Z       ---       ---  1.18e+14  4.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.62788, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20308, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.010368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.385    0.0723         0     0.995
          1      8.97     0.764         1   -0.0662
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0215    0.0723   -0.0185        -1
          1       0.5     0.764        -1    0.0185
         *Z       ---       ---  1.18e+14  4.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0152, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002404, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0451         0     0.991
          1      5.31     0.731         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0128    0.0451   -0.0318    -0.999
          1     0.296     0.731    -0.999    0.0318
         *Z       ---       ---  1.18e+14  4.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017681, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015118, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002395, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.137    0.0278    0.0134     0.987
          1      3.36     0.673         1    -0.175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00764    0.0278   -0.0488    -0.999
          1     0.188     0.673    -0.999    0.0488
         *Z       ---       ---  1.18e+14  4.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017589, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001554
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000471
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037233
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.178653
         W1a Well: minimal relaxation eigenvalue = 0.0549719
         W1a Well: maximal relaxation eigenvalue = 10.0621
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001822
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.227821
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06621
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.096055
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.26933
         W1b Well: minimal relaxation eigenvalue = 0.0566893
         W1b Well: maximal relaxation eigenvalue = 2.01958
         W1b Well:       grid size = 222
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3344 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.896415, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 222
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40304e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.54e+05 1.15e+13
        W1b  -3344  -3344      288 5.82e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3344 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.102  2.26e-18  1.28e-41
        W1b      9.79         1  2.21e-17  1.25e-40
         P1  4.43e+17  4.52e+16         1  5.66e-24
         P2  7.82e+40  7.99e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.103  4.89e-22  2.77e-45
        W1b      9.66         1  4.72e-21  2.67e-44
         P1  2.05e+21  2.12e+20         1  5.66e-24
         P2  3.61e+44  3.74e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.900296, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41547, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.237606, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66927, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.4     0.298         0     0.998
          1        72      1.42         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.132     0.298   -0.0047        -1
          1      3.96      1.42        -1    0.0047
         *Z       ---       ---  1.15e+14  3.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67159, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41304, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63257, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.73     0.128         0     0.996
          1      17.4     0.875         1   -0.0366
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0401     0.128   -0.0117        -1
          1     0.955     0.875        -1    0.0117
         *Z       ---       ---  1.15e+14  3.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63486, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17912, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007757, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.44     0.084         0     0.994
          1       9.8     0.838         1   -0.0634
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0242     0.084   -0.0203        -1
          1     0.538     0.838        -1    0.0203
         *Z       ---       ---  1.15e+14  3.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1929, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015309, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0024, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01776, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.265    0.0537    0.0108     0.989
          1      5.83     0.801         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0146    0.0537   -0.0342    -0.999
          1     0.321     0.801    -0.999    0.0342
         *Z       ---       ---  1.15e+14  3.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017785, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015261, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002399, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017711, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.16    0.0342    0.0164     0.984
          1      3.72     0.738         1    -0.163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0342    -0.052    -0.999
          1     0.204     0.738    -0.999     0.052
         *Z       ---       ---  1.15e+14  3.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017736, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00166
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00046
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041926
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168671
         W1a Well: minimal relaxation eigenvalue = 0.0541168
         W1a Well: maximal relaxation eigenvalue = 13.6688
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001802
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.221048
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063447
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082258
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.257195
         W1b Well: minimal relaxation eigenvalue = 0.0559492
         W1b Well: maximal relaxation eigenvalue = 1.93916
         W1b Well:       grid size = 217
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3335 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.855892, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 217
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28322e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.57e+05 1.39e+13
        W1b  -3335  -3335      360 6.86e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3335 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.133  1.87e-18  5.32e-41
        W1b      7.54         1  1.41e-17  4.01e-40
         P1  5.35e+17  7.09e+16         1  2.85e-23
         P2  1.88e+40  2.49e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.134  4.22e-22   1.2e-44
        W1b      7.45         1  3.14e-21  8.94e-44
         P1  2.37e+21  3.18e+20         1  2.85e-23
         P2  8.33e+43  1.12e+43  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.859483, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33845, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.220761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58871, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.71     0.329         0     0.998
          1      77.2      1.86         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.146     0.329  -0.00539        -1
          1      4.18      1.86        -1   0.00539
         *Z       ---       ---  1.12e+14  3.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.59105, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202736, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55059, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.831     0.145         0     0.995
          1      18.9     0.978         1   -0.0359
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.045     0.145   -0.0131        -1
          1      1.02     0.978        -1    0.0131
         *Z       ---       ---  1.12e+14  3.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32634, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.025865, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.503    0.0967         0     0.992
          1      10.7     0.923         1   -0.0609
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0967   -0.0222        -1
          1     0.579     0.923        -1    0.0222
         *Z       ---       ---  1.12e+14  3.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002284, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022486, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.305    0.0632    0.0132     0.987
          1       6.4     0.879         1    -0.101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0632   -0.0368    -0.999
          1     0.347     0.879    -0.999    0.0368
         *Z       ---       ---  1.12e+14  3.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014467, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002282, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0168, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.186    0.0414    0.0197      0.98
          1      4.11     0.811         1    -0.152
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.01    0.0414   -0.0552    -0.998
          1     0.222     0.811    -0.998    0.0552
         *Z       ---       ---  1.12e+14  3.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016824, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001659
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000457
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040907
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173556
         W1a Well: minimal relaxation eigenvalue = 0.0537563
         W1a Well: maximal relaxation eigenvalue = 7.27034
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001806
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22245
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06392
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084454
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.254532
         W1b Well: minimal relaxation eigenvalue = 0.0552459
         W1b Well: maximal relaxation eigenvalue = 2.06374
         W1b Well:       grid size = 217
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3344 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.861058, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 217
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16597e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.31e+05 1.69e+13
        W1b  -3344  -3344      314 8.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3344 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.17   1.6e-18  2.09e-40
        W1b       5.9         1  9.42e-18  1.23e-39
         P1  6.26e+17  1.06e+17         1  1.31e-22
         P2  4.79e+39  8.12e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.172  3.68e-22   4.8e-44
        W1b      5.82         1  2.14e-21   2.8e-43
         P1  2.72e+21  4.67e+20         1  1.31e-22
         P2  2.08e+43  3.57e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.864651, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34663, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.228856, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59491, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.02     0.361         0     0.997
          1      88.2      1.34         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.361   -0.0061        -1
          1      4.74      1.34        -1    0.0061
         *Z       ---       ---  1.11e+14  2.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.59724, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34454, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55391, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.933     0.163         0     0.994
          1      20.9      1.02         1   -0.0351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0502     0.163   -0.0144        -1
          1      1.12      1.02        -1    0.0144
         *Z       ---       ---  1.11e+14  2.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.025197, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36598, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.568     0.111         0      0.99
          1      11.8     0.995         1   -0.0584
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.111    -0.024        -1
          1     0.636     0.995        -1     0.024
         *Z       ---       ---  1.11e+14  2.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3665, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019154, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002283, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021777, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.347     0.074    0.0159     0.984
          1       7.1     0.955         1   -0.0951
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0187     0.074   -0.0391    -0.999
          1     0.382     0.955    -0.999    0.0391
         *Z       ---       ---  1.11e+14  2.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014567, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002267, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016884, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.214    0.0497    0.0232     0.977
          1      4.58     0.884         1     -0.14
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0497   -0.0577    -0.998
          1     0.246     0.884    -0.998    0.0577
         *Z       ---       ---  1.11e+14  2.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016908, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001694
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000458
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034529
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177734
         W1a Well: minimal relaxation eigenvalue = 0.0530077
         W1a Well: maximal relaxation eigenvalue = 11.4029
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001598
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209559
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063824
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.704604
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260993
         W1b Well: minimal relaxation eigenvalue = 0.0545744
         W1b Well: maximal relaxation eigenvalue = 2.25593
         W1b Well:       grid size = 217
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3351 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.4719, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 217
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08158e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 1.05e+05 2.04e+13
        W1b  -3351  -3351      266 9.44e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3351 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.214  1.38e-18  7.61e-40
        W1b      4.67         1  6.43e-18  3.55e-39
         P1  7.26e+17  1.56e+17         1  5.53e-22
         P2  1.31e+39  2.81e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.217  3.23e-22  1.79e-43
        W1b      4.61         1  1.49e-21  8.24e-43
         P1  3.09e+21  6.71e+20         1  5.53e-22
         P2  5.59e+42  1.21e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 1.47555, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39417, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221923, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64371, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.39     0.396         0     0.997
          1      93.9      1.81         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.18     0.396  -0.00686        -1
          1      4.98      1.81        -1   0.00686
         *Z       ---       ---   1.1e+14  2.37e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64615, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40196, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.05     0.183         0     0.993
          1      22.7      1.13         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.183   -0.0159        -1
          1      1.21      1.13        -1    0.0159
         *Z       ---       ---   1.1e+14  2.37e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.62146, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34781, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.02393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.645     0.126    0.0119     0.988
          1      12.9      1.09         1   -0.0562
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0342     0.126    -0.026        -1
          1     0.685      1.09        -1     0.026
         *Z       ---       ---   1.1e+14  2.37e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.378, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020157, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.396    0.0856    0.0189     0.981
          1       7.8      1.05         1   -0.0901
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021    0.0856   -0.0417    -0.999
          1     0.414      1.05    -0.999    0.0417
         *Z       ---       ---   1.1e+14  2.37e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002279, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246     0.059    0.0273     0.973
          1      5.06     0.969         1    -0.131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.013     0.059   -0.0606    -0.998
          1     0.268     0.969    -0.998    0.0606
         *Z       ---       ---   1.1e+14  2.37e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016939, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001541
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000449
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.916297
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.178339
         W1a Well: minimal relaxation eigenvalue = 0.0524324
         W1a Well: maximal relaxation eigenvalue = 10.7298
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001866
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228439
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064436
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083148
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.250313
         W1b Well: minimal relaxation eigenvalue = 0.0539343
         W1b Well: maximal relaxation eigenvalue = 3.08424
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.74183, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.27e+05 2.45e+13
        W1b  -3366  -3366      156  1.1e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.268  1.18e-18  2.55e-39
        W1b      3.73         1  4.38e-18   9.5e-39
         P1  8.51e+17  2.28e+17         1  2.17e-21
         P2  3.93e+38  1.05e+38  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.271  2.87e-22  6.21e-43
        W1b      3.69         1  1.06e-21  2.29e-42
         P1  3.49e+21  9.44e+20         1  2.17e-21
         P2  1.61e+42  4.36e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 1.74555, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33624, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230705, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58135, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.81     0.433         0     0.996
          1       105      1.67         1    -0.015
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.2     0.433  -0.00777        -1
          1      5.48      1.67        -1   0.00777
         *Z       ---       ---  1.08e+14  2.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33877, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54956, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.19     0.204         0     0.991
          1      24.9      1.23         1   -0.0339
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0623     0.204   -0.0175        -1
          1      1.31      1.23        -1    0.0175
         *Z       ---       ---  1.08e+14  2.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.5519, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22228, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.204538, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43385, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.73     0.142    0.0144     0.986
          1      14.2      1.19         1   -0.0543
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0383     0.142   -0.0281        -1
          1     0.745      1.19        -1    0.0281
         *Z       ---       ---  1.08e+14  2.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43625, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.096377, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002222, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104025, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.452    0.0987    0.0224     0.978
          1      8.61      1.14         1   -0.0855
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0237    0.0987   -0.0442    -0.999
          1     0.452      1.14    -0.999    0.0442
         *Z       ---       ---  1.08e+14  2.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.104414, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013903, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002226, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016178, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.283    0.0695    0.0318     0.968
          1      5.62      1.06         1    -0.123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0148    0.0695   -0.0633    -0.998
          1     0.295      1.06    -0.998    0.0633
         *Z       ---       ---  1.08e+14  2.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016204, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001616
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000446
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032169
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174405
         W1a Well: minimal relaxation eigenvalue = 0.0519977
         W1a Well: maximal relaxation eigenvalue = 6.87135
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001823
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.210363
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.0623
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078956
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.25592
         W1b Well: minimal relaxation eigenvalue = 0.0533072
         W1b Well: maximal relaxation eigenvalue = 3.91616
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.834494, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 1.02e+05 2.94e+13
        W1b  -3370  -3370      112 1.29e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.332  1.03e-18  8.16e-39
        W1b      3.02         1  3.11e-18  2.46e-38
         P1  9.69e+17  3.21e+17         1  7.91e-21
         P2  1.22e+38  4.06e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.334  2.57e-22  2.03e-42
        W1b      2.99         1  7.67e-22  6.07e-42
         P1   3.9e+21   1.3e+21         1  7.91e-21
         P2  4.93e+41  1.65e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.838519, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.224439, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59303, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.24     0.474         0     0.995
          1       116      1.63         1   -0.0149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.22     0.474  -0.00859        -1
          1      6.03      1.63        -1   0.00859
         *Z       ---       ---  1.07e+14  1.86e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.59606, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.203073, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54999, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.33     0.227    0.0109     0.989
          1      27.5      1.33         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0691     0.227   -0.0191        -1
          1      1.43      1.33        -1    0.0191
         *Z       ---       ---  1.07e+14  1.86e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55233, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34251, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145498, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49397, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.82     0.161     0.017     0.983
          1      15.7       1.3         1   -0.0522
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0427     0.161   -0.0301        -1
          1     0.816       1.3        -1    0.0301
         *Z       ---       ---  1.07e+14  1.86e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4946, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.033585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.036317, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.511     0.113     0.026     0.974
          1      9.55      1.24         1   -0.0807
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.113   -0.0464    -0.999
          1     0.497      1.24    -0.999    0.0464
         *Z       ---       ---  1.07e+14  1.86e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.036379, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013907, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016159, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.323    0.0814    0.0363     0.964
          1      6.27      1.15         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0168    0.0814   -0.0653    -0.998
          1     0.326      1.15    -0.998    0.0653
         *Z       ---       ---  1.07e+14  1.86e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016183, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001608
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000433
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032712
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.171858
         W1a Well: minimal relaxation eigenvalue = 0.0512682
         W1a Well: maximal relaxation eigenvalue = 11.7432
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001742
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209045
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.061266
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081545
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.239865
         W1b Well: minimal relaxation eigenvalue = 0.0526602
         W1b Well: maximal relaxation eigenvalue = 2.77422
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.816231, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.43e+05 3.52e+13
        W1b  -3364  -3364      209  1.5e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.403  8.96e-19  2.43e-38
        W1b      2.48         1  2.22e-18  6.02e-38
         P1  1.12e+18   4.5e+17         1  2.71e-20
         P2  4.12e+37  1.66e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.409  2.31e-22  6.26e-42
        W1b      2.45         1  5.65e-22  1.53e-41
         P1  4.33e+21  1.77e+21         1  2.71e-20
         P2   1.6e+41  6.53e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.819977, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.27812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21648, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5234, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.67     0.513         0     0.994
          1       126      1.92         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.239     0.513  -0.00937        -1
          1      6.44      1.92        -1   0.00937
         *Z       ---       ---  1.06e+14  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52585, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28227, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48464, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.48      0.25    0.0128     0.987
          1      29.9      1.46         1   -0.0323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0756      0.25   -0.0205        -1
          1      1.53      1.46        -1    0.0205
         *Z       ---       ---  1.06e+14  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48697, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2821, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196094, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.914     0.179    0.0199      0.98
          1      17.1      1.42         1   -0.0503
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0469     0.179   -0.0319    -0.999
          1     0.878      1.42    -0.999    0.0319
         *Z       ---       ---  1.06e+14  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.178635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002134, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.18605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.128      0.03      0.97
          1      10.5      1.36         1   -0.0767
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0293     0.128   -0.0487    -0.999
          1     0.537      1.36    -0.999    0.0487
         *Z       ---       ---  1.06e+14  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.186421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013311, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002126, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015484, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.365    0.0936    0.0414     0.959
          1      6.91      1.26         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0187    0.0936    -0.068    -0.998
          1     0.354      1.26    -0.998     0.068
         *Z       ---       ---  1.06e+14  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015509, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001565
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000445
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034015
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174271
         W1a Well: minimal relaxation eigenvalue = 0.0509017
         W1a Well: maximal relaxation eigenvalue = 7.43617
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001699
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.207633
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059992
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076597
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.24458
         W1b Well: minimal relaxation eigenvalue = 0.0520984
         W1b Well: maximal relaxation eigenvalue = 2.78001
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.817253, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.15e+05  4.2e+13
        W1b  -3364  -3364      218 1.74e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.489  7.98e-19  6.97e-38
        W1b      2.05         1  1.63e-18  1.43e-37
         P1  1.25e+18  6.12e+17         1  8.73e-20
         P2  1.44e+37  7.01e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.495   2.1e-22  1.83e-41
        W1b      2.02         1  4.23e-22  3.69e-41
         P1  4.77e+21  2.36e+21         1  8.73e-20
         P2  5.47e+40  2.71e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.820928, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.219187, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51837, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.19     0.555         0     0.993
          1       139      1.83         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.264     0.555   -0.0103        -1
          1      7.09      1.83        -1    0.0103
         *Z       ---       ---  1.06e+14  1.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52077, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28589, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195537, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48786, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.65     0.275    0.0152     0.985
          1        33      1.58         1   -0.0316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0837     0.275   -0.0221        -1
          1      1.68      1.58        -1    0.0221
         *Z       ---       ---  1.06e+14  1.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49021, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194579, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48629, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.199    0.0231     0.977
          1      18.9      1.54         1   -0.0485
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0521     0.199   -0.0338    -0.999
          1     0.964      1.54    -0.999    0.0338
         *Z       ---       ---  1.06e+14  1.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.180016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002112, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.187415, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.644     0.145    0.0342     0.966
          1      11.6      1.48         1   -0.0725
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0328     0.145   -0.0506    -0.999
          1     0.593      1.48    -0.999    0.0506
         *Z       ---       ---  1.06e+14  1.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.187793, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013349, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015513, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.415     0.108    0.0464     0.954
          1      7.73      1.37         1   -0.0996
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0211     0.108   -0.0694    -0.998
          1     0.394      1.37    -0.998    0.0694
         *Z       ---       ---  1.06e+14  1.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015539, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001598
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000447
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033706
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168882
         W1a Well: minimal relaxation eigenvalue = 0.0502875
         W1a Well: maximal relaxation eigenvalue = 10.8633
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001643
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213921
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059164
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.080799
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.242641
         W1b Well: minimal relaxation eigenvalue = 0.0515439
         W1b Well: maximal relaxation eigenvalue = 2.85541
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.818937, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.72e+05    5e+13
        W1b  -3365  -3365      218 2.02e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.587  7.16e-19   1.9e-37
        W1b       1.7         1  1.22e-18  3.25e-37
         P1   1.4e+18  8.19e+17         1  2.66e-19
         P2  5.25e+36  3.08e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.594  1.91e-22  5.08e-41
        W1b      1.68         1  3.22e-22  8.55e-41
         P1  5.23e+21  3.11e+21         1  2.66e-19
         P2  1.97e+40  1.17e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.822658, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.205343, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51117, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.77     0.599         0     0.991
          1       151      2.16         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.29     0.599   -0.0113        -1
          1      7.58      2.16        -1    0.0113
         *Z       ---       ---  1.06e+14  1.39e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29248, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196093, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4955, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.301    0.0179     0.982
          1        36      1.73         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0923     0.301   -0.0238        -1
          1      1.81      1.73        -1    0.0238
         *Z       ---       ---  1.06e+14  1.39e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29271, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49494, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14      0.22    0.0268     0.973
          1      20.7      1.68         1    -0.047
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0575      0.22    -0.036    -0.999
          1      1.04      1.68    -0.999     0.036
         *Z       ---       ---  1.06e+14  1.39e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49727, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.169354, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002133, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.176796, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.723     0.162    0.0392     0.961
          1      12.8      1.61         1   -0.0695
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0364     0.162   -0.0532    -0.999
          1     0.643      1.61    -0.999    0.0532
         *Z       ---       ---  1.06e+14  1.39e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.177172, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013418, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00213, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015598, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.468     0.123    0.0525     0.947
          1      8.52      1.49         1   -0.0945
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0235     0.123   -0.0722    -0.997
          1     0.429      1.49    -0.997    0.0722
         *Z       ---       ---  1.06e+14  1.39e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015622, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001547
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00043
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028893
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162613
         W1a Well: minimal relaxation eigenvalue = 0.0491988
         W1a Well: maximal relaxation eigenvalue = 19.0868
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001656
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.200277
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056887
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077459
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.235352
         W1b Well: minimal relaxation eigenvalue = 0.0510099
         W1b Well: maximal relaxation eigenvalue = 2.23439
         W1b Well:       grid size = 205
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3334 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.781787, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 205
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.35789e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.47e+05 5.93e+13
        W1b  -3334  -3334      420 2.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3334 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.699  6.35e-19  4.88e-37
        W1b      1.43         1  9.08e-19  6.99e-37
         P1  1.58e+18   1.1e+18         1  7.69e-19
         P2  2.05e+36  1.43e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.708  1.75e-22  1.35e-40
        W1b      1.41         1  2.48e-22  1.91e-40
         P1   5.7e+21  4.03e+21         1  7.69e-19
         P2  7.41e+39  5.24e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.785488, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204734, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46368, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.5     0.643    0.0102      0.99
          1       161      3.22         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.32     0.643   -0.0124        -1
          1      7.92      3.22        -1    0.0124
         *Z       ---       ---  1.06e+14  1.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46608, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23719, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18939, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43277, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.07     0.328    0.0212     0.979
          1      38.8      1.95         1    -0.031
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.102     0.328   -0.0259        -1
          1      1.91      1.95        -1    0.0259
         *Z       ---       ---  1.06e+14  1.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23755, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18851, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.29     0.242    0.0315     0.969
          1      22.3      1.86         1   -0.0465
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0634     0.242   -0.0388    -0.999
          1       1.1      1.86    -0.999    0.0388
         *Z       ---       ---  1.06e+14  1.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43439, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.345634, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002065, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.352819, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.815     0.179    0.0457     0.954
          1      13.7      1.78         1   -0.0685
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0401     0.179   -0.0572    -0.998
          1     0.675      1.78    -0.998    0.0572
         *Z       ---       ---  1.06e+14  1.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.353175, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012867, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002044, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014959, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.528     0.138    0.0614     0.939
          1      9.13      1.65         1   -0.0935
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.026     0.138   -0.0779    -0.997
          1     0.449      1.65    -0.997    0.0779
         *Z       ---       ---  1.06e+14  1.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014983, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001443
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000441
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033782
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166402
         W1a Well: minimal relaxation eigenvalue = 0.0493603
         W1a Well: maximal relaxation eigenvalue = 9.42937
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001708
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.200079
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058197
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079305
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.235289
         W1b Well: minimal relaxation eigenvalue = 0.0504936
         W1b Well: maximal relaxation eigenvalue = 2.24087
         W1b Well:       grid size = 205
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3330 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.792458, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 205
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37473e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.13e+05 7.02e+13
        W1b  -3330  -3330      442  2.7e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3330 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.826  5.76e-19  1.22e-36
        W1b      1.21         1  6.97e-19  1.48e-36
         P1  1.74e+18  1.43e+18         1  2.12e-18
         P2  8.19e+35  6.76e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.836  1.62e-22  3.43e-40
        W1b       1.2         1  1.94e-22   4.1e-40
         P1  6.18e+21  5.17e+21         1  2.12e-18
         P2  2.92e+39  2.44e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.796151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23942, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.1     0.692     0.012     0.988
          1       182      2.35         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.35     0.692   -0.0133        -1
          1      8.99      2.35        -1    0.0133
         *Z       ---       ---  1.07e+14  1.17e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48089, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23735, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.26     0.359    0.0241     0.976
          1      43.3      2.05         1   -0.0299
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.112     0.359   -0.0272        -1
          1      2.14      2.05        -1    0.0272
         *Z       ---       ---  1.07e+14  1.17e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43484, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1906, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43578, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.42     0.267    0.0351     0.965
          1      25.1         2         1    -0.044
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.07     0.267     -0.04    -0.999
          1      1.24         2    -0.999      0.04
         *Z       ---       ---  1.07e+14  1.17e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43814, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.32771, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002043, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.335057, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.906     0.202    0.0496      0.95
          1      15.6      1.91         1   -0.0632
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0447     0.202   -0.0573    -0.998
          1      0.77      1.91    -0.998    0.0573
         *Z       ---       ---  1.07e+14  1.17e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.335427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012905, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002032, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014984, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.595     0.157    0.0647     0.935
          1      10.5      1.76         1   -0.0837
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0294     0.157   -0.0759    -0.997
          1     0.519      1.76    -0.997    0.0759
         *Z       ---       ---  1.07e+14  1.17e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015008, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001531
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000421
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031024
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164416
         W1a Well: minimal relaxation eigenvalue = 0.0487517
         W1a Well: maximal relaxation eigenvalue = 13.2322
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001582
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.200174
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056416
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070728
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.222142
         W1b Well: minimal relaxation eigenvalue = 0.0499796
         W1b Well: maximal relaxation eigenvalue = 2.36107
         W1b Well:       grid size = 202
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3343 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.763761, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 202
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.5816e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 1.02e+05 8.29e+13
        W1b  -3343  -3343      391 3.12e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3343 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.969  5.17e-19  2.89e-36
        W1b      1.03         1  5.34e-19  2.98e-36
         P1  1.93e+18  1.87e+18         1  5.58e-18
         P2  3.46e+35  3.36e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.981   1.5e-22  8.38e-40
        W1b      1.02         1  1.53e-22  8.54e-40
         P1  6.67e+21  6.54e+21         1  5.58e-18
         P2  1.19e+39  1.17e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.767461, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43327, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.85     0.744    0.0139     0.986
          1       197      2.76         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.383     0.744   -0.0144        -1
          1       9.6      2.76        -1    0.0144
         *Z       ---       ---  1.06e+14  1.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20091, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.51      0.39    0.0278     0.972
          1        47      2.25         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.122      0.39    -0.029        -1
          1      2.29      2.25        -1     0.029
         *Z       ---       ---  1.06e+14  1.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20145, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39136, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.293      0.04      0.96
          1      27.3      2.18         1   -0.0429
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0768     0.293   -0.0422    -0.999
          1      1.33      2.18    -0.999    0.0422
         *Z       ---       ---  1.06e+14  1.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39367, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.469967, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001985, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476929, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.223     0.056     0.944
          1        17      2.08         1   -0.0612
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0492     0.223   -0.0601    -0.998
          1     0.828      2.08    -0.998    0.0601
         *Z       ---       ---  1.06e+14  1.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.477304, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012447, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001982, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.665     0.176    0.0725     0.927
          1      11.5      1.92         1   -0.0807
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0324     0.176   -0.0792    -0.997
          1     0.559      1.92    -0.997    0.0792
         *Z       ---       ---  1.06e+14  1.08e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.0145, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001458
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000419
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028812
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16282
         W1a Well: minimal relaxation eigenvalue = 0.0485115
         W1a Well: maximal relaxation eigenvalue = 7.55643
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001645
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1921
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055891
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07383
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.231079
         W1b Well: minimal relaxation eigenvalue = 0.049496
         W1b Well: maximal relaxation eigenvalue = 2.35155
         W1b Well:       grid size = 202
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3336 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.763518, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 202
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.63e+05 9.76e+13
        W1b  -3336  -3336      429 3.59e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3336 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.13  4.74e-19  6.68e-36
        W1b     0.886         1   4.2e-19  5.92e-36
         P1  2.11e+18  2.38e+18         1  1.41e-17
         P2   1.5e+35  1.69e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.14   1.4e-22  1.97e-39
        W1b     0.875         1  1.22e-22  1.72e-39
         P1  7.16e+21  8.19e+21         1  1.41e-17
         P2  5.08e+38  5.81e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.767494, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.19792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.205814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41738, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.62     0.798    0.0161     0.984
          1       219      2.66         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.418     0.798   -0.0154        -1
          1      10.6      2.66        -1    0.0154
         *Z       ---       ---  1.08e+14  1.01e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41982, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.19886, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183691, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38848, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.76     0.423    0.0314     0.969
          1      52.2      2.42         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.134     0.423   -0.0305        -1
          1      2.53      2.42        -1    0.0305
         *Z       ---       ---  1.08e+14  1.01e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39081, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2008, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39037, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.74     0.321    0.0444     0.956
          1      30.4      2.36         1   -0.0412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0845     0.321   -0.0437    -0.999
          1      1.48      2.36    -0.999    0.0437
         *Z       ---       ---  1.08e+14  1.01e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39273, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.479866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00198, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.486847, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.12     0.248    0.0609     0.939
          1      19.1      2.24         1   -0.0574
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0544     0.248   -0.0609    -0.998
          1     0.928      2.24    -0.998    0.0609
         *Z       ---       ---  1.08e+14  1.01e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.487218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012451, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001975, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014473, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.747     0.198    0.0772     0.923
          1        13      2.06         1   -0.0741
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0363     0.198   -0.0785    -0.997
          1     0.632      2.06    -0.997    0.0785
         *Z       ---       ---  1.08e+14  1.01e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014497, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001546
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000428
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029752
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167368
         W1a Well: minimal relaxation eigenvalue = 0.0479634
         W1a Well: maximal relaxation eigenvalue = 11.0685
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001689
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19655
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057404
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074479
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227903
         W1b Well: minimal relaxation eigenvalue = 0.0490287
         W1b Well: maximal relaxation eigenvalue = 2.3781
         W1b Well:       grid size = 202
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3330 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.772755, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 202
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90971e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.22e+05 1.15e+14
        W1b  -3330  -3330      460 4.12e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3330 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.31  4.36e-19  1.49e-35
        W1b     0.765         1  3.34e-19  1.14e-35
         P1  2.29e+18     3e+18         1  3.42e-17
         P2   6.7e+34  8.76e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.32  1.31e-22  4.47e-39
        W1b     0.755         1  9.86e-23  3.37e-39
         P1  7.66e+21  1.01e+22         1  3.42e-17
         P2  2.24e+38  2.96e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.776471, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20957, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.209725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43677, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.52     0.853    0.0185     0.981
          1       238      2.96         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.457     0.853   -0.0165        -1
          1      11.4      2.96        -1    0.0165
         *Z       ---       ---  1.09e+14  9.49e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43924, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20919, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183919, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39907, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.06     0.457    0.0357     0.964
          1      56.7      2.64         1   -0.0283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.147     0.457   -0.0324    -0.999
          1      2.72      2.64    -0.999    0.0324
         *Z       ---       ---  1.09e+14  9.49e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.93     0.349    0.0501      0.95
          1        33      2.57         1   -0.0403
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0925     0.349    -0.046    -0.999
          1      1.58      2.57    -0.999     0.046
         *Z       ---       ---  1.09e+14  9.49e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.44172, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001993, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.44874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.24     0.271    0.0681     0.932
          1      20.8      2.44         1   -0.0559
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0597     0.271   -0.0638    -0.998
          1     0.996      2.44    -0.998    0.0638
         *Z       ---       ---  1.09e+14  9.49e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.449113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012546, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014593, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.831     0.219     0.086     0.914
          1      14.1      2.24         1   -0.0719
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0399     0.219    -0.082    -0.997
          1     0.678      2.24    -0.997     0.082
         *Z       ---       ---  1.09e+14  9.49e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014618, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001452
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000414
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029012
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161696
         W1a Well: minimal relaxation eigenvalue = 0.0475024
         W1a Well: maximal relaxation eigenvalue = 11.9635
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001658
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195197
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054443
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066705
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.22261
         W1b Well: minimal relaxation eigenvalue = 0.0485698
         W1b Well: maximal relaxation eigenvalue = 2.3904
         W1b Well:       grid size = 199
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3324 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.748575, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 199
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.26e+05 1.34e+14
        W1b  -3324  -3324      492 4.73e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3324 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.51  3.98e-19  3.18e-35
        W1b     0.664         1  2.64e-19  2.11e-35
         P1  2.52e+18  3.79e+18         1     8e-17
         P2  3.14e+34  4.74e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.52  1.23e-22  9.81e-39
        W1b     0.656         1  8.04e-23  6.43e-39
         P1  8.15e+21  1.24e+22         1     8e-17
         P2  1.02e+38  1.55e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.752263, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18855, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37619, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.5     0.912    0.0212     0.979
          1       261      3.23         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.499     0.912   -0.0176        -1
          1      12.4      3.23        -1    0.0176
         *Z       ---       ---  1.09e+14  8.89e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16651, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178383, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.37     0.493    0.0403      0.96
          1        62      2.88         1   -0.0279
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.16     0.493   -0.0342    -0.999
          1      2.94      2.88    -0.999    0.0342
         *Z       ---       ---  1.09e+14  8.89e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35354, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1674, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178495, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.13     0.379    0.0559     0.944
          1      36.1      2.79         1   -0.0393
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.379   -0.0482    -0.999
          1      1.72      2.79    -0.999    0.0482
         *Z       ---       ---  1.09e+14  8.89e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.603421, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.610271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.38     0.297    0.0753     0.925
          1      22.7      2.65         1    -0.054
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0655     0.297   -0.0662    -0.998
          1      1.08      2.65    -0.998    0.0662
         *Z       ---       ---  1.09e+14  8.89e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.610638, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012109, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014069, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.925     0.242    0.0942     0.906
          1      15.5      2.43         1    -0.069
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0439     0.242   -0.0844    -0.996
          1     0.737      2.43    -0.996    0.0844
         *Z       ---       ---  1.09e+14  8.89e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014093, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001446
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034135
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160711
         W1a Well: minimal relaxation eigenvalue = 0.0472471
         W1a Well: maximal relaxation eigenvalue = 8.06801
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001633
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199459
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055124
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072365
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.224214
         W1b Well: minimal relaxation eigenvalue = 0.0481031
         W1b Well: maximal relaxation eigenvalue = 4.73798
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.764634, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.89e+04 1.57e+14
        W1b  -3383  -3383      128 5.42e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.72  3.69e-19  6.67e-35
        W1b      0.58         1  2.14e-19  3.87e-35
         P1  2.71e+18  4.67e+18         1  1.81e-16
         P2   1.5e+34  2.59e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.75  1.16e-22  2.09e-38
        W1b     0.573         1  6.62e-23   1.2e-38
         P1  8.65e+21  1.51e+22         1  1.81e-16
         P2  4.79e+37  8.36e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.768344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17731, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39309, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.4     0.993    0.0236     0.976
          1       286      3.42         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.538     0.993   -0.0184        -1
          1      13.5      3.42        -1    0.0184
         *Z       ---       ---   1.1e+14  8.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180802, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36334, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.68     0.539    0.0443     0.956
          1      68.6      3.11         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.174     0.539   -0.0353    -0.999
          1      3.24      3.11    -0.999    0.0353
         *Z       ---       ---   1.1e+14  8.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36566, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17874, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180413, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36547, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.34     0.416    0.0606     0.939
          1      40.3      3.01         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.416   -0.0491    -0.999
          1       1.9      3.01    -0.999    0.0491
         *Z       ---       ---   1.1e+14  8.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36834, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.563518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001967, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.570344, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.329    0.0801      0.92
          1      25.6      2.85         1   -0.0505
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.072     0.329   -0.0662    -0.998
          1      1.21      2.85    -0.998    0.0662
         *Z       ---       ---   1.1e+14  8.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.570714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012189, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001961, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014195, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03      0.27    0.0985     0.901
          1      17.6       2.6         1   -0.0634
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0488      0.27    -0.083    -0.997
          1     0.832       2.6    -0.997     0.083
         *Z       ---       ---   1.1e+14  8.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014219, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001363
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000425
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032005
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159182
         W1a Well: minimal relaxation eigenvalue = 0.0456433
         W1a Well: maximal relaxation eigenvalue = 22.2072
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001619
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.186824
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053459
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081394
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214714
         W1b Well: minimal relaxation eigenvalue = 0.0476846
         W1b Well: maximal relaxation eigenvalue = 2.8594
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.74588, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 1.02e+05 1.84e+14
        W1b  -3364  -3364      314  6.2e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.96  3.39e-19  1.34e-34
        W1b     0.509         1  1.73e-19  6.82e-35
         P1  2.95e+18  5.79e+18         1  3.95e-16
         P2  7.47e+33  1.47e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.99  1.09e-22  4.32e-38
        W1b     0.503         1   5.5e-23  2.17e-38
         P1  9.15e+21  1.82e+22         1  3.95e-16
         P2  2.32e+37  4.61e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.749548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11819, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195119, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33652, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.9      1.04    0.0271     0.973
          1       307      4.78         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.589      1.04   -0.0199        -1
          1        14      4.78        -1    0.0199
         *Z       ---       ---  1.11e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33895, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13685, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175418, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31795, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.15      0.57    0.0515     0.948
          1        72      3.49         1   -0.0277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.189      0.57   -0.0387    -0.999
          1      3.29      3.49    -0.999    0.0387
         *Z       ---       ---  1.11e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32029, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174634, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32079, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.62     0.441    0.0715     0.928
          1      41.2      3.34         1   -0.0392
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.12     0.441   -0.0549    -0.998
          1      1.88      3.34    -0.998    0.0549
         *Z       ---       ---  1.11e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32311, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.69815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001893, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.704867, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.69     0.349    0.0969     0.903
          1      25.3      3.17         1   -0.0547
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0771     0.349   -0.0764    -0.997
          1      1.16      3.17    -0.997    0.0764
         *Z       ---       ---  1.11e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.705238, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011828, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001903, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013776, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.288     0.123     0.877
          1        17      2.93         1   -0.0713
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0514     0.288   -0.0995    -0.995
          1     0.774      2.93    -0.995    0.0995
         *Z       ---       ---  1.11e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013801, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001402
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000414
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030309
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15878
         W1a Well: minimal relaxation eigenvalue = 0.0463534
         W1a Well: maximal relaxation eigenvalue = 11.6786
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001588
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195452
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05403
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065557
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.218194
         W1b Well: minimal relaxation eigenvalue = 0.0472759
         W1b Well: maximal relaxation eigenvalue = 2.70725
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3352 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.741364, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.58417e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16049e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.65e+05 2.14e+14
        W1b  -3352  -3352      381 7.08e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3352 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.23  3.17e-19  2.65e-34
        W1b     0.449         1  1.42e-19  1.19e-34
         P1  3.15e+18  7.02e+18         1  8.37e-16
         P2  3.77e+33  8.39e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.25  1.04e-22  8.68e-38
        W1b     0.444         1   4.6e-23  3.85e-38
         P1  9.64e+21  2.17e+22         1  8.37e-16
         P2  1.15e+37   2.6e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.74531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12648, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194838, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34135, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.8      1.11    0.0301      0.97
          1       341       4.1         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.642      1.11   -0.0208        -1
          1      15.8       4.1        -1    0.0208
         *Z       ---       ---  1.13e+14  7.57e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34373, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13729, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176272, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.46     0.616    0.0552     0.945
          1      81.3      3.67         1   -0.0262
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.616   -0.0391    -0.999
          1      3.77      3.67    -0.999    0.0391
         *Z       ---       ---  1.13e+14  7.57e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32176, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14137, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32285, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.84     0.482    0.0743     0.926
          1      47.7      3.54         1    -0.036
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.131     0.482   -0.0537    -0.999
          1      2.21      3.54    -0.999    0.0537
         *Z       ---       ---  1.13e+14  7.57e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32516, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.685859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.692579, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.85     0.387    0.0967     0.903
          1      30.3      3.35         1   -0.0481
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.086     0.387   -0.0716    -0.997
          1       1.4      3.35    -0.997    0.0716
         *Z       ---       ---  1.13e+14  7.57e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.692953, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001882, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.26     0.322     0.118     0.882
          1      20.9      3.05         1   -0.0598
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0586     0.322   -0.0889    -0.996
          1     0.967      3.05    -0.996    0.0889
         *Z       ---       ---  1.13e+14  7.57e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01378, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001458
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000421
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028553
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157571
         W1a Well: minimal relaxation eigenvalue = 0.0454509
         W1a Well: maximal relaxation eigenvalue = 19.3099
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001556
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19808
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054652
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073976
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214042
         W1b Well: minimal relaxation eigenvalue = 0.0468747
         W1b Well: maximal relaxation eigenvalue = 2.6818
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3341 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.745276, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.18e+05 2.48e+14
        W1b  -3341  -3341      442 8.08e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3341 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.51  2.98e-19  5.13e-34
        W1b     0.398         1  1.19e-19  2.04e-34
         P1  3.36e+18  8.44e+18         1  1.72e-15
         P2  1.95e+33   4.9e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.54  9.87e-23   1.7e-37
        W1b     0.393         1  3.88e-23  6.68e-38
         P1  1.01e+22  2.58e+22         1  1.72e-15
         P2  5.88e+36   1.5e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.749144, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14994, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199074, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37468, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.3      1.18    0.0338     0.966
          1       369      4.83         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.697      1.18   -0.0221        -1
          1      16.8      4.83        -1    0.0221
         *Z       ---       ---  1.15e+14  7.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37712, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14987, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176539, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33238, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.94     0.656    0.0623     0.938
          1      86.6      4.03         1   -0.0265
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.656   -0.0419    -0.999
          1      3.93      4.03    -0.999    0.0419
         *Z       ---       ---  1.15e+14  7.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33472, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33354, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.13     0.514    0.0844     0.916
          1      49.9      3.88         1   -0.0367
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.142     0.514   -0.0581    -0.998
          1      2.27      3.88    -0.998    0.0581
         *Z       ---       ---  1.15e+14  7.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33589, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.648477, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001911, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.655514, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.03     0.413     0.111     0.889
          1      31.1      3.68         1   -0.0498
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0925     0.413   -0.0787    -0.997
          1      1.41      3.68    -0.997    0.0787
         *Z       ---       ---  1.15e+14  7.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.655896, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013859, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.347     0.137     0.863
          1      21.1      3.38         1   -0.0633
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0625     0.347   -0.0998    -0.995
          1     0.957      3.38    -0.995    0.0998
         *Z       ---       ---  1.15e+14  7.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013885, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001458
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028346
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161999
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 16.6298
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001629
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.194824
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053766
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07032
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21472
         W1b Well: minimal relaxation eigenvalue = 0.0464656
         W1b Well: maximal relaxation eigenvalue = 3.59345
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.742297, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.49e+05 2.88e+14
        W1b  -3378  -3378      235  9.2e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.82  2.76e-19  9.54e-34
        W1b     0.354         1   9.8e-20  3.38e-34
         P1  3.62e+18  1.02e+19         1  3.45e-15
         P2  1.05e+33  2.96e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.86  9.42e-23  3.25e-37
        W1b      0.35         1   3.3e-23  1.14e-37
         P1  1.06e+22  3.03e+22         1  3.45e-15
         P2  3.08e+36  8.79e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.746293, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11653, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182752, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31478, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.6      1.27    0.0371     0.963
          1       404      5.08         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.752      1.27   -0.0229        -1
          1      18.3      5.08        -1    0.0229
         *Z       ---       ---  1.16e+14   6.9e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31719, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1173, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173634, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29679, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.36     0.708    0.0674     0.933
          1      95.6      4.34         1   -0.0256
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.243     0.708    -0.043    -0.999
          1      4.33      4.34    -0.999     0.043
         *Z       ---       ---  1.16e+14   6.9e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11602, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171979, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29388, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.41     0.557    0.0901      0.91
          1      55.5      4.18         1   -0.0351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.155     0.557   -0.0589    -0.998
          1      2.52      4.18    -0.998    0.0589
         *Z       ---       ---  1.16e+14   6.9e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29618, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.782274, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001866, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.789283, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.452     0.117     0.883
          1      34.9      3.95         1   -0.0469
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.452   -0.0785    -0.997
          1      1.58      3.95    -0.997    0.0785
         *Z       ---       ---  1.16e+14   6.9e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.789713, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001873, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013491, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.381     0.142     0.858
          1      23.8      3.61         1   -0.0586
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.069     0.381   -0.0979    -0.995
          1      1.08      3.61    -0.995    0.0979
         *Z       ---       ---  1.16e+14   6.9e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013515, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001392
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029612
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158787
         W1a Well: minimal relaxation eigenvalue = 0.0453442
         W1a Well: maximal relaxation eigenvalue = 9.77346
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001655
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.190606
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052791
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065301
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216154
         W1b Well: minimal relaxation eigenvalue = 0.0460945
         W1b Well: maximal relaxation eigenvalue = 3.03248
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.731705, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265    1e+05 3.34e+14
        W1b  -3365  -3365      337 1.05e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.16  2.61e-19  1.76e-33
        W1b     0.317         1  8.27e-20  5.57e-34
         P1  3.83e+18  1.21e+19         1  6.73e-15
         P2  5.69e+32   1.8e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       3.2  9.01e-23  6.07e-37
        W1b     0.313         1  2.82e-23   1.9e-37
         P1  1.11e+22  3.55e+22         1  6.73e-15
         P2  1.65e+36  5.27e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.735372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12069, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33164, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.1      1.34    0.0408     0.959
          1       448      5.03         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.819      1.34   -0.0239        -1
          1      20.3      5.03        -1    0.0239
         *Z       ---       ---  1.18e+14  6.64e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33411, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17188, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29845, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.85     0.759    0.0719     0.928
          1       107      4.65         1   -0.0246
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.265     0.759   -0.0436    -0.999
          1      4.87      4.65    -0.999    0.0436
         *Z       ---       ---  1.18e+14  6.64e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30077, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12115, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17173, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29852, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.74     0.604    0.0939     0.906
          1      63.5      4.47         1   -0.0328
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.169     0.604   -0.0583    -0.998
          1      2.88      4.47    -0.998    0.0583
         *Z       ---       ---  1.18e+14  6.64e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761398, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001857, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.76798, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.47     0.494     0.118     0.882
          1      40.7      4.19         1   -0.0426
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.112     0.494   -0.0754    -0.997
          1      1.85      4.19    -0.997    0.0754
         *Z       ---       ---  1.18e+14  6.64e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.768344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013485, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.71      0.42      0.14      0.86
          1      28.3      3.79         1   -0.0515
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0774      0.42   -0.0912    -0.996
          1      1.28      3.79    -0.996    0.0912
         *Z       ---       ---  1.18e+14  6.64e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013509, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001448
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000411
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028797
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16397
         W1a Well: minimal relaxation eigenvalue = 0.0446386
         W1a Well: maximal relaxation eigenvalue = 17.2723
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001729
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191428
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052607
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065271
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.206268
         W1b Well: minimal relaxation eigenvalue = 0.0457295
         W1b Well: maximal relaxation eigenvalue = 2.93744
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3352 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.727173, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 4.09537e+21
      MasterEquation::Barrier::truncate: effective weight = 1.42012e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.63e+05 3.86e+14
        W1b  -3352  -3352      410 1.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3352 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.52  2.47e-19  3.17e-33
        W1b     0.284         1  7.02e-20  9.01e-34
         P1  4.05e+18  1.42e+19         1  1.28e-14
         P2  3.16e+32  1.11e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.56  8.64e-23  1.11e-36
        W1b     0.281         1  2.43e-23  3.11e-37
         P1  1.16e+22  4.12e+22         1  1.28e-14
         P2  9.02e+35  3.21e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.73108, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196408, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33342, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.9      1.42    0.0451     0.955
          1       482      5.95         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.888      1.42   -0.0252        -1
          1      21.5      5.95        -1    0.0252
         *Z       ---       ---   1.2e+14   6.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12563, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30499, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.42     0.804    0.0803      0.92
          1       114      5.07         1   -0.0248
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.287     0.804   -0.0465    -0.999
          1      5.08      5.07    -0.999    0.0465
         *Z       ---       ---   1.2e+14   6.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30731, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12626, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173355, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30548, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.09      0.64     0.106     0.894
          1      66.1      4.88         1   -0.0336
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.183      0.64    -0.063    -0.998
          1      2.95      4.88    -0.998     0.063
         *Z       ---       ---   1.2e+14   6.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30777, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.749599, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001865, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.75677, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.69     0.525     0.135     0.865
          1      41.5       4.6         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.12     0.525    -0.083    -0.997
          1      1.85       4.6    -0.997     0.083
         *Z       ---       ---   1.2e+14   6.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.757125, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011659, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001863, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.84     0.449     0.162     0.838
          1      28.4      4.19         1   -0.0549
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0822     0.449    -0.103    -0.995
          1      1.27      4.19    -0.995     0.103
         *Z       ---       ---   1.2e+14   6.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013592, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001432
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000402
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028313
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153192
         W1a Well: minimal relaxation eigenvalue = 0.0445813
         W1a Well: maximal relaxation eigenvalue = 12.4447
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00182
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.189659
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051457
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061783
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.206967
         W1b Well: minimal relaxation eigenvalue = 0.0453581
         W1b Well: maximal relaxation eigenvalue = 3.48307
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.709958, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 9.28e+04 4.45e+14
        W1b  -3376  -3376      281 1.35e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.91  2.31e-19  5.52e-33
        W1b     0.256         1  5.93e-20  1.41e-33
         P1  4.32e+18  1.69e+19         1  2.39e-14
         P2  1.81e+32  7.07e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.95  8.31e-23  1.98e-36
        W1b     0.253         1   2.1e-23  5.02e-37
         P1   1.2e+22  4.76e+22         1  2.39e-14
         P2  5.04e+35  1.99e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.71363, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189471, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29857, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      21.5      1.51     0.049     0.951
          1       531      5.95         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.96      1.51   -0.0261        -1
          1      23.7      5.95        -1    0.0261
         *Z       ---       ---  1.22e+14  6.16e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30098, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09765, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169147, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27259, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.97     0.865    0.0852     0.915
          1       127      5.45         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.311     0.865   -0.0471    -0.999
          1      5.65      5.45    -0.999    0.0471
         *Z       ---       ---  1.22e+14  6.16e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09729, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.168587, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27189, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.46     0.693      0.11      0.89
          1      74.6      5.23         1   -0.0317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.693   -0.0625    -0.998
          1      3.33      5.23    -0.998    0.0625
         *Z       ---       ---  1.22e+14  6.16e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27422, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.850822, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002168, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.857743, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.95     0.573     0.138     0.862
          1      47.7       4.9         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.132     0.573   -0.0804    -0.997
          1      2.13       4.9    -0.997    0.0804
         *Z       ---       ---  1.22e+14  6.16e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.858104, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011386, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.05     0.491     0.161     0.839
          1      33.1      4.42         1   -0.0493
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0914     0.491    -0.097    -0.995
          1      1.48      4.42    -0.995     0.097
         *Z       ---       ---  1.22e+14  6.16e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013276, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001447
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000404
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029195
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160892
         W1a Well: minimal relaxation eigenvalue = 0.0436457
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001571
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191352
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051016
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060263
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209027
         W1b Well: minimal relaxation eigenvalue = 0.0450162
         W1b Well: maximal relaxation eigenvalue = 3.16365
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.719359, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.56e+05 5.12e+14
        W1b  -3362  -3362      376 1.52e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.32   2.2e-19  9.57e-33
        W1b     0.231         1   5.1e-20  2.22e-33
         P1  4.54e+18  1.96e+19         1  4.35e-14
         P2  1.04e+32  4.51e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  8.01e-23  3.48e-36
        W1b     0.229         1  1.83e-23  7.96e-37
         P1  1.25e+22  5.46e+22         1  4.35e-14
         P2  2.87e+35  1.26e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.723044, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10185, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192806, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      23.9      1.59     0.054     0.946
          1       573       7.3         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.04      1.59   -0.0275        -1
          1        25       7.3        -1    0.0275
         *Z       ---       ---  1.24e+14  5.97e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10277, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169573, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.278, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.69     0.912    0.0952     0.905
          1       134      5.96         1   -0.0244
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.336     0.912   -0.0506    -0.999
          1      5.85      5.96    -0.999    0.0506
         *Z       ---       ---  1.24e+14  5.97e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28031, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169819, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27925, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.89      0.73     0.125     0.875
          1        77      5.72         1    -0.033
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.214      0.73   -0.0684    -0.998
          1      3.36      5.72    -0.998    0.0684
         *Z       ---       ---  1.24e+14  5.97e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28154, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.827342, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.833885, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.21     0.605     0.159     0.841
          1      47.8      5.39         1   -0.0436
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.14     0.605   -0.0903    -0.996
          1      2.09      5.39    -0.996    0.0903
         *Z       ---       ---  1.24e+14  5.97e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.834261, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013254, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.2     0.523      0.19      0.81
          1      32.3      4.91         1   -0.0543
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0959     0.523    -0.112    -0.994
          1      1.41      4.91    -0.994     0.112
         *Z       ---       ---  1.24e+14  5.97e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013278, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001368
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000397
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029334
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151433
         W1a Well: minimal relaxation eigenvalue = 0.0438766
         W1a Well: maximal relaxation eigenvalue = 13.9334
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001582
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.177055
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050664
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069417
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.203356
         W1b Well: minimal relaxation eigenvalue = 0.044665
         W1b Well: maximal relaxation eigenvalue = 3.50127
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698672, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 9.28e+04 5.89e+14
        W1b  -3376  -3376      301 1.72e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.76  2.07e-19  1.61e-32
        W1b      0.21         1  4.36e-20  3.37e-33
         P1  4.82e+18   2.3e+19         1  7.75e-14
         P2  6.22e+31  2.96e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.82  7.74e-23     6e-36
        W1b     0.207         1   1.6e-23  1.24e-36
         P1  1.29e+22  6.23e+22         1  7.75e-14
         P2  1.67e+35  8.04e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.702605, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07011, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18577, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26867, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.6       1.7    0.0581     0.942
          1       633      6.99         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.12       1.7   -0.0282        -1
          1      27.8      6.99        -1    0.0282
         *Z       ---       ---  1.26e+14  5.77e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07517, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165332, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24604, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.28     0.981    0.0993     0.901
          1       150      6.38         1   -0.0231
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.363     0.981   -0.0504    -0.999
          1      6.59      6.38    -0.999    0.0504
         *Z       ---       ---  1.26e+14  5.77e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24837, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16523, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24495, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.31     0.791     0.127     0.873
          1      88.3       6.1         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.233     0.791   -0.0665    -0.998
          1      3.87       6.1    -0.998    0.0665
         *Z       ---       ---  1.26e+14  5.77e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24724, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007709, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.52      0.66     0.157     0.843
          1      56.2      5.69         1   -0.0391
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.155      0.66    -0.085    -0.996
          1      2.47      5.69    -0.996     0.085
         *Z       ---       ---  1.26e+14  5.77e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.942273, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001777, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012895, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.46     0.572     0.183     0.817
          1      38.8      5.12         1    -0.047
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.108     0.572    -0.102    -0.995
          1       1.7      5.12    -0.995     0.102
         *Z       ---       ---  1.26e+14  5.77e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012918, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001389
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000407
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031871
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153406
         W1a Well: minimal relaxation eigenvalue = 0.0413519
         W1a Well: maximal relaxation eigenvalue = 26.2311
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001647
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178337
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050432
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065533
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201696
         W1b Well: minimal relaxation eigenvalue = 0.0443399
         W1b Well: maximal relaxation eigenvalue = 3.24175
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698798, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.57e+05 6.76e+14
        W1b  -3359  -3359      401 1.95e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.23  1.98e-19  2.69e-32
        W1b     0.191         1  3.79e-20  5.13e-33
         P1  5.04e+18  2.64e+19         1  1.35e-13
         P2  3.72e+31  1.95e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       5.3  7.49e-23  1.01e-35
        W1b     0.189         1  1.41e-23  1.91e-36
         P1  1.34e+22  7.08e+22         1  1.35e-13
         P2  9.86e+34  5.23e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.702445, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0735, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149581, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      29.4      1.78    0.0636     0.936
          1       693      10.9         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.78   -0.0297        -1
          1      28.7      10.9        -1    0.0297
         *Z       ---       ---  1.28e+14  5.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2402, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00735, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16756, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17851, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.45      1.03     0.112     0.888
          1       161      7.07         1   -0.0241
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.391      1.03   -0.0551    -0.998
          1      6.65      7.07    -0.998    0.0551
         *Z       ---       ---  1.28e+14  5.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18096, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166603, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24809, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         6     0.826     0.147     0.853
          1      90.6      6.72         1    -0.033
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.248     0.826   -0.0752    -0.997
          1      3.75      6.72    -0.997    0.0752
         *Z       ---       ---  1.28e+14  5.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25037, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.91     0.689     0.189     0.811
          1      54.7      6.33         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.689    -0.101    -0.995
          1      2.26      6.33    -0.995     0.101
         *Z       ---       ---  1.28e+14  5.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011707, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001817, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013671, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.64     0.605     0.229     0.771
          1      35.9      5.81         1   -0.0567
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.109     0.605    -0.129    -0.992
          1      1.49      5.81    -0.992     0.129
         *Z       ---       ---  1.28e+14  5.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013705, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001323
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000402
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032502
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152463
         W1a Well: minimal relaxation eigenvalue = 0.0432471
         W1a Well: maximal relaxation eigenvalue = 14.6962
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00159
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17861
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050288
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067951
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202946
         W1b Well: minimal relaxation eigenvalue = 0.044022
         W1b Well: maximal relaxation eigenvalue = 3.17489
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3341 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702088, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 5.15579e+21
      MasterEquation::Barrier::truncate: effective weight = 1.95278e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 9.79e+04 7.75e+14
        W1b  -3341  -3341      484  2.2e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3341 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.74   1.9e-19  4.42e-32
        W1b     0.174         1  3.31e-20   7.7e-33
         P1  5.26e+18  3.02e+19         1  2.32e-13
         P2  2.26e+31   1.3e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.81  7.26e-23  1.69e-35
        W1b     0.172         1  1.25e-23  2.91e-36
         P1  1.38e+22     8e+22         1  2.32e-13
         P2  5.93e+34  3.44e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.706074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186992, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29086, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      30.5      1.88     0.068     0.932
          1       755      8.07         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.32      1.88   -0.0305        -1
          1      32.6      8.07        -1    0.0305
         *Z       ---       ---  1.31e+14  5.48e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0817, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166116, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25337, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.84       1.1     0.114     0.886
          1       178      7.39         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.425       1.1   -0.0537    -0.999
          1      7.71      7.39    -0.999    0.0537
         *Z       ---       ---  1.31e+14  5.48e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25566, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08228, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25445, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.31     0.895     0.144     0.856
          1       105      7.06         1   -0.0294
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.273     0.895   -0.0703    -0.998
          1      4.52      7.06    -0.998    0.0703
         *Z       ---       ---  1.31e+14  5.48e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.899525, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004486, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908748, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.2     0.754     0.177     0.823
          1      66.5      6.58         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.754   -0.0892    -0.996
          1      2.87      6.58    -0.996    0.0892
         *Z       ---       ---  1.31e+14  5.48e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.909107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01118, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001785, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.94     0.659     0.204     0.796
          1      45.9       5.9         1   -0.0447
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.659    -0.106    -0.994
          1      1.98       5.9    -0.994     0.106
         *Z       ---       ---  1.31e+14  5.48e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001414
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028604
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149382
         W1a Well: minimal relaxation eigenvalue = 0.043148
         W1a Well: maximal relaxation eigenvalue = 9.68424
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001616
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178416
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049435
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060859
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200513
         W1b Well: minimal relaxation eigenvalue = 0.0437037
         W1b Well: maximal relaxation eigenvalue = 3.25636
         W1b Well:       grid size = 189
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3346 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.684233, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 189
      MasterEquation::Barrier::truncate: real weight = 5.42437e+21
      MasterEquation::Barrier::truncate: effective weight = 2.10402e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.69e+05 8.86e+14
        W1b  -3346  -3346      476 2.48e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3346 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.27   1.8e-19  7.06e-32
        W1b      0.16         1  2.87e-20  1.13e-32
         P1  5.55e+18  3.48e+19         1  3.92e-13
         P2  1.42e+31  8.88e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.35  7.05e-23  2.76e-35
        W1b     0.158         1  1.11e-23  4.35e-36
         P1  1.42e+22     9e+22         1  3.92e-13
         P2  3.62e+34   2.3e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.68792, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        33      1.99    0.0726     0.927
          1       826      8.63         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      1.99   -0.0312        -1
          1      35.6      8.63        -1    0.0312
         *Z       ---       ---  1.33e+14  5.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163115, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21549, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.7      1.18     0.119     0.881
          1       200      7.92         1   -0.0215
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.461      1.18   -0.0538    -0.999
          1      8.61      7.92    -0.999    0.0538
         *Z       ---       ---  1.33e+14  5.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2178, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05155, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22016, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.89     0.963     0.147     0.853
          1       119      7.52         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.297     0.963   -0.0689    -0.998
          1      5.14      7.52    -0.998    0.0689
         *Z       ---       ---  1.33e+14  5.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22242, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.99063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00983, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.63     0.816     0.176     0.824
          1      77.2      6.94         1   -0.0341
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.2     0.816   -0.0851    -0.996
          1      3.33      6.94    -0.996    0.0851
         *Z       ---       ---  1.33e+14  5.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01028, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011614, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001756, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.28     0.715     0.199     0.801
          1      54.1      6.14         1   -0.0397
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.142     0.715   -0.0989    -0.995
          1      2.34      6.14    -0.995    0.0989
         *Z       ---       ---  1.33e+14  5.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013559, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001303
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000403
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029394
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156117
         W1a Well: minimal relaxation eigenvalue = 0.0426313
         W1a Well: maximal relaxation eigenvalue = 15.4781
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001615
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175345
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049935
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071779
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197769
         W1b Well: minimal relaxation eigenvalue = 0.0434016
         W1b Well: maximal relaxation eigenvalue = 3.2494
         W1b Well:       grid size = 189
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3326 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698071, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 189
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 1.04e+05 1.01e+15
        W1b  -3326  -3326      556 2.79e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3326 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.83  1.73e-19  1.12e-31
        W1b     0.146         1  2.54e-20  1.65e-32
         P1  5.77e+18  3.94e+19         1  6.49e-13
         P2  8.89e+30  6.07e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.91  6.86e-23  4.45e-35
        W1b     0.145         1  9.92e-24  6.44e-36
         P1  1.46e+22  1.01e+23         1  6.49e-13
         P2  2.24e+34  1.55e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.701773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05861, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170907, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25217, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.1       2.1    0.0786     0.921
          1       897      9.44         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.54       2.1   -0.0326    -0.999
          1      38.2      9.44    -0.999    0.0326
         *Z       ---       ---  1.36e+14  5.22e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25463, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05807, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163115, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22667, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.6      1.24      0.13      0.87
          1       212      8.61         1   -0.0218
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.496      1.24   -0.0569    -0.998
          1      9.02      8.61    -0.998    0.0569
         *Z       ---       ---  1.36e+14  5.22e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22903, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05947, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163147, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2281, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.47      1.01     0.162     0.838
          1       124      8.19         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.318      1.01   -0.0739    -0.997
          1      5.28      8.19    -0.997    0.0739
         *Z       ---       ---  1.36e+14  5.22e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23043, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.98092, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.013181, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.998819, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.98      0.86     0.197     0.803
          1      78.5       7.6         1   -0.0358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.212      0.86   -0.0932    -0.996
          1      3.35       7.6    -0.996    0.0932
         *Z       ---       ---  1.36e+14  5.22e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.999233, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011092, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001757, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012961, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.5     0.758     0.225     0.775
          1        54      6.78         1   -0.0426
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.149     0.758    -0.111    -0.994
          1       2.3      6.78    -0.994     0.111
         *Z       ---       ---  1.36e+14  5.22e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012992, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001372
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00039
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027847
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154972
         W1a Well: minimal relaxation eigenvalue = 0.0406043
         W1a Well: maximal relaxation eigenvalue = 25.4688
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001485
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.172636
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047903
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069764
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196059
         W1b Well: minimal relaxation eigenvalue = 0.043102
         W1b Well: maximal relaxation eigenvalue = 3.2824
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3320 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.686139, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.78e+04 1.15e+15
        W1b  -3320  -3320      583 3.13e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3320 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.42  1.65e-19  1.75e-31
        W1b     0.135         1  2.22e-20  2.35e-32
         P1  6.06e+18   4.5e+19         1  1.06e-12
         P2  5.72e+30  4.25e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.51  6.68e-23  7.08e-35
        W1b     0.133         1   8.9e-24  9.42e-36
         P1   1.5e+22  1.12e+23         1  1.06e-12
         P2  1.41e+34  1.06e+35  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.689786, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03385, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        41      2.21    0.0849     0.915
          1       971      13.7         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.67      2.21    -0.034    -0.999
          1      39.4      13.7    -0.999     0.034
         *Z       ---       ---  1.39e+14  5.08e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1997, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.1       1.3     0.144     0.856
          1       226       9.5         1   -0.0226
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.532       1.3   -0.0614    -0.998
          1      9.17       9.5    -0.998    0.0614
         *Z       ---       ---  1.39e+14  5.08e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1603, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19963, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.33      1.06     0.184     0.816
          1       128      9.01         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.338      1.06   -0.0822    -0.997
          1      5.19      9.01    -0.997    0.0822
         *Z       ---       ---  1.39e+14  5.08e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20192, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03471, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.033494, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.45     0.901     0.229     0.771
          1      77.4      8.44         1     -0.04
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.221     0.901    -0.108    -0.994
          1      3.14      8.44    -0.994     0.108
         *Z       ---       ---  1.39e+14  5.08e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015325, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.72     0.806     0.271     0.729
          1      50.9      7.66         1   -0.0502
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.151     0.806    -0.135    -0.991
          1      2.07      7.66    -0.991     0.135
         *Z       ---       ---  1.39e+14  5.08e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017382, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001366
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029745
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152491
         W1a Well: minimal relaxation eigenvalue = 0.042072
         W1a Well: maximal relaxation eigenvalue = 15.9099
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001565
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.182593
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04999
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062604
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.1994
         W1b Well: minimal relaxation eigenvalue = 0.04279
         W1b Well: maximal relaxation eigenvalue = 4.17112
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.693704, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.2e+05 1.32e+15
        W1b  -3386  -3386      288 3.52e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.04  1.59e-19  2.71e-31
        W1b     0.124         1  1.98e-20  3.37e-32
         P1  6.28e+18  5.05e+19         1   1.7e-12
         P2  3.69e+30  2.97e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.14  6.52e-23  1.11e-34
        W1b     0.123         1  8.01e-24  1.36e-35
         P1  1.53e+22  1.25e+23         1   1.7e-12
         P2  9.02e+33  7.34e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.697368, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04254, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24107, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      42.1      2.38    0.0881     0.912
          1  1.07e+03        11         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.77      2.38   -0.0341    -0.999
          1      45.1        11    -0.999    0.0341
         *Z       ---       ---  1.42e+14     5e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24351, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04316, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161619, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21039, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.6      1.41     0.144     0.856
          1       252      9.94         1   -0.0209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.572      1.41    -0.059    -0.998
          1      10.6      9.94    -0.998     0.059
         *Z       ---       ---  1.42e+14     5e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21273, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02862, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160042, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.74      1.16     0.178     0.822
          1       147      9.44         1    -0.027
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.368      1.16   -0.0763    -0.997
          1      6.19      9.44    -0.997    0.0763
         *Z       ---       ---  1.42e+14     5e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02347, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016454, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04462, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.85     0.985     0.214     0.786
          1        93      8.73         1   -0.0339
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.246     0.985   -0.0957    -0.995
          1      3.91      8.73    -0.995    0.0957
         *Z       ---       ---  1.42e+14     5e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0451, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.13     0.872     0.244     0.756
          1      63.8      7.76         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.174     0.872    -0.113    -0.994
          1      2.68      7.76    -0.994     0.113
         *Z       ---       ---  1.42e+14     5e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015019, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001423
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027922
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153656
         W1a Well: minimal relaxation eigenvalue = 0.0420327
         W1a Well: maximal relaxation eigenvalue = 10.5703
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001581
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.174055
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049691
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069398
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.192233
         W1b Well: minimal relaxation eigenvalue = 0.042515
         W1b Well: maximal relaxation eigenvalue = 3.73081
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.684167, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 6.71e+04  1.5e+15
        W1b  -3367  -3367      406 3.94e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.7  1.54e-19  4.14e-31
        W1b     0.115         1  1.77e-20  4.76e-32
         P1   6.5e+18  5.65e+19         1  2.69e-12
         P2  2.42e+30   2.1e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.81  6.37e-23  1.72e-34
        W1b     0.114         1  7.24e-24  1.95e-35
         P1  1.57e+22  1.38e+23         1  2.69e-12
         P2  5.83e+33  5.13e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.688118, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04534, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181948, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24832, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      45.7      2.49    0.0934     0.907
          1  1.16e+03      11.7         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.92      2.49   -0.0349    -0.999
          1      48.8      11.7    -0.999    0.0349
         *Z       ---       ---  1.45e+14  4.92e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04555, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162615, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2138, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.8      1.49     0.148     0.852
          1       281      10.6         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.621      1.49   -0.0588    -0.998
          1      11.8      10.6    -0.998    0.0588
         *Z       ---       ---  1.45e+14  4.92e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04537, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162048, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.56      1.23      0.18      0.82
          1       167      9.99         1   -0.0252
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.402      1.23   -0.0742    -0.997
          1      7.04      9.99    -0.997    0.0742
         *Z       ---       ---  1.45e+14  4.92e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21538, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015671, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03067, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.47      1.06     0.211     0.789
          1       109      9.15         1   -0.0308
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272      1.06   -0.0903    -0.996
          1      4.56      9.15    -0.996    0.0903
         *Z       ---       ---  1.45e+14  4.92e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03115, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014276, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.63     0.938     0.235     0.765
          1      75.9      7.99         1   -0.0354
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.195     0.938    -0.104    -0.995
          1      3.19      7.99    -0.995     0.104
         *Z       ---       ---  1.45e+14  4.92e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014317, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00133
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00039
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032605
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150772
         W1a Well: minimal relaxation eigenvalue = 0.0416422
         W1a Well: maximal relaxation eigenvalue = 13.8216
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001523
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.164453
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048067
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070672
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.190569
         W1b Well: minimal relaxation eigenvalue = 0.042237
         W1b Well: maximal relaxation eigenvalue = 3.62992
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3350 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.673742, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 186
      MasterEquation::Barrier::truncate: real weight = 7.19989e+21
      MasterEquation::Barrier::truncate: effective weight = 3.02317e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.47e+05  1.7e+15
        W1b  -3350  -3350      488 4.42e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3350 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.38  1.47e-19  6.18e-31
        W1b     0.107         1  1.57e-20  6.59e-32
         P1  6.79e+18  6.37e+19         1   4.2e-12
         P2  1.62e+30  1.52e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       9.5  6.24e-23  2.62e-34
        W1b     0.105         1  6.56e-24  2.76e-35
         P1   1.6e+22  1.52e+23         1   4.2e-12
         P2  3.82e+33  3.63e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.677318, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00058, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171503, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19609, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      49.8      2.61       0.1       0.9
          1  1.26e+03      12.6         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.07      2.61   -0.0362    -0.999
          1      52.6      12.6    -0.999    0.0362
         *Z       ---       ---  1.48e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19846, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.887591, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.157127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05039, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        16      1.56     0.159     0.841
          1       300      11.4         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.668      1.56   -0.0615    -0.998
          1      12.5      11.4    -0.998    0.0615
         *Z       ---       ---  1.48e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05277, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00165, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155925, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16291, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.3       1.3     0.194     0.806
          1       176      10.8         1   -0.0256
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.431       1.3   -0.0783    -0.997
          1      7.35      10.8    -0.997    0.0783
         *Z       ---       ---  1.48e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16522, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00294, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16546, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.96      1.12     0.229     0.771
          1       113      9.92         1   -0.0316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.29      1.12   -0.0964    -0.995
          1      4.69      9.92    -0.995    0.0964
         *Z       ---       ---  1.48e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.058149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.064272, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.95     0.994     0.257     0.743
          1      77.8      8.72         1   -0.0369
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.206     0.994    -0.112    -0.994
          1      3.24      8.72    -0.994     0.112
         *Z       ---       ---  1.48e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.064641, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001341
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03652
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160899
         W1a Well: minimal relaxation eigenvalue = 0.039915
         W1a Well: maximal relaxation eigenvalue = 24.9138
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001526
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.177204
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046932
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065592
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.203059
         W1b Well: minimal relaxation eigenvalue = 0.04197
         W1b Well: maximal relaxation eigenvalue = 3.58621
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3327 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706784, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 186
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 8.22e+04 1.93e+15
        W1b  -3327  -3327      573 4.94e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3327 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.43e-19  9.23e-31
        W1b     0.099         1  1.41e-20  9.13e-32
         P1  7.01e+18  7.08e+19         1  6.47e-12
         P2  1.08e+30  1.09e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2  6.11e-23  3.95e-34
        W1b    0.0978         1  5.97e-24  3.86e-35
         P1  1.64e+22  1.67e+23         1  6.47e-12
         P2  2.53e+33  2.59e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.710346, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.995221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169359, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18753, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        56      2.73     0.107     0.893
          1  1.39e+03      14.4         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.24      2.73   -0.0379    -0.999
          1      55.6      14.4    -0.999    0.0379
         *Z       ---       ---  1.51e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18994, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01137, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.156149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17298, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.9      1.63     0.175     0.825
          1       318      12.5         1    -0.021
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.713      1.63   -0.0665    -0.998
          1      12.7      12.5    -0.998    0.0665
         *Z       ---       ---  1.51e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01177, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155934, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.173, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.4      1.35     0.219     0.781
          1       180      11.9         1   -0.0277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.454      1.35   -0.0877    -0.996
          1      7.18      11.9    -0.996    0.0877
         *Z       ---       ---  1.51e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01676, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.062691, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08451, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.48      1.16     0.266     0.734
          1       109      11.1         1   -0.0359
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299      1.16    -0.113    -0.994
          1      4.36      11.1    -0.994     0.113
         *Z       ---       ---  1.51e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08507, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019571, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021617, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.15      1.05      0.31      0.69
          1      71.8      9.95         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.206      1.05     -0.14     -0.99
          1      2.87      9.95     -0.99      0.14
         *Z       ---       ---  1.51e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021695, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001335
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000387
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029127
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.148851
         W1a Well: minimal relaxation eigenvalue = 0.0411961
         W1a Well: maximal relaxation eigenvalue = 12.7339
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001514
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.169106
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047609
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06164
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20334
         W1b Well: minimal relaxation eigenvalue = 0.0416804
         W1b Well: maximal relaxation eigenvalue = 4.7819
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.676091, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.89e+05 2.18e+15
        W1b  -3395  -3395      266 5.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.9  1.37e-19  1.35e-30
        W1b    0.0921         1  1.26e-20  1.24e-31
         P1   7.3e+18  7.92e+19         1  9.83e-12
         P2  7.42e+29  8.06e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11     6e-23  5.89e-34
        W1b     0.091         1  5.46e-24  5.36e-35
         P1  1.67e+22  1.83e+23         1  9.83e-12
         P2   1.7e+33  1.86e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.679702, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.985548, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166859, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      57.6      2.96      0.11      0.89
          1   1.5e+03      14.8         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.37      2.96   -0.0373    -0.999
          1      61.6      14.8    -0.999    0.0373
         *Z       ---       ---  1.54e+14  4.68e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17354, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00632, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155531, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.6      1.78     0.171     0.829
          1       359      13.2         1    -0.019
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.766      1.78   -0.0625    -0.998
          1      14.8      13.2    -0.998    0.0625
         *Z       ---       ---  1.54e+14  4.68e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16949, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155745, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16548, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        12      1.48     0.206     0.794
          1       212      12.4         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.496      1.48   -0.0786    -0.997
          1      8.74      12.4    -0.997    0.0786
         *Z       ---       ---  1.54e+14  4.68e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16806, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00433, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15648, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16631, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.16      1.28     0.241     0.759
          1       136      11.3         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.336      1.28   -0.0957    -0.995
          1      5.61      11.3    -0.995    0.0957
         *Z       ---       ---  1.54e+14  4.68e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16862, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.031502, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001726, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.037497, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.86      1.14     0.268     0.732
          1      94.2      9.79         1   -0.0337
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.241      1.14     -0.11    -0.994
          1      3.88      9.79    -0.994      0.11
         *Z       ---       ---  1.54e+14  4.68e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.03787, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001409
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000389
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032118
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164675
         W1a Well: minimal relaxation eigenvalue = 0.0400853
         W1a Well: maximal relaxation eigenvalue = 22.7706
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001541
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.171533
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047113
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070841
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.203123
         W1b Well: minimal relaxation eigenvalue = 0.0414337
         W1b Well: maximal relaxation eigenvalue = 4.10986
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.705826, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 1.05e+05 2.47e+15
        W1b  -3373  -3373      406 6.17e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6  1.33e-19  1.97e-30
        W1b    0.0859         1  1.14e-20  1.69e-31
         P1  7.51e+18  8.74e+19         1  1.48e-11
         P2  5.09e+29  5.92e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.8  5.89e-23  8.69e-34
        W1b    0.0849         1     5e-24  7.38e-35
         P1   1.7e+22     2e+23         1  1.48e-11
         P2  1.15e+33  1.36e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.709426, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.999558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      64.1      3.06     0.118     0.882
          1  1.65e+03      16.1         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.57      3.06   -0.0391    -0.999
          1        66      16.1    -0.999    0.0391
         *Z       ---       ---  1.58e+14  4.63e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20436, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157526, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17438, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.5      1.84     0.188     0.812
          1       377      14.2         1   -0.0199
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.821      1.84   -0.0677    -0.998
          1      15.1      14.2    -0.998    0.0677
         *Z       ---       ---  1.58e+14  4.63e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01055, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15801, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.1      1.53     0.232     0.768
          1       215      13.5         1   -0.0259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.525      1.53    -0.088    -0.996
          1      8.61      13.5    -0.996     0.088
         *Z       ---       ---  1.58e+14  4.63e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.11674, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13444, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.68      1.32     0.278     0.722
          1       131      12.5         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.348      1.32    -0.112    -0.994
          1      5.26      12.5    -0.994     0.112
         *Z       ---       ---  1.58e+14  4.63e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13504, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.025358, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001712, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.027466, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.05       1.2     0.319     0.681
          1      86.9      11.1         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.242       1.2    -0.136    -0.991
          1      3.48      11.1    -0.991     0.136
         *Z       ---       ---  1.58e+14  4.63e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.027527, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001347
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000388
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031061
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163939
         W1a Well: minimal relaxation eigenvalue = 0.0406634
         W1a Well: maximal relaxation eigenvalue = 14.244
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001608
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178166
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047551
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063791
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201076
         W1b Well: minimal relaxation eigenvalue = 0.041185
         W1b Well: maximal relaxation eigenvalue = 3.91695
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3348 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701883, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 9.20413e+21
      MasterEquation::Barrier::truncate: effective weight = 4.07517e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.81e+05 2.79e+15
        W1b  -3348  -3348      512 6.89e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3348 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      12.4   1.3e-19  2.84e-30
        W1b    0.0803         1  1.04e-20  2.28e-31
         P1  7.71e+18   9.6e+19         1  2.19e-11
         P2  3.52e+29  4.38e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      12.6  5.79e-23  1.27e-33
        W1b    0.0793         1  4.59e-24  1.01e-34
         P1  1.73e+22  2.18e+23         1  2.19e-11
         P2  7.88e+32  9.94e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.705764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.999759, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176203, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19328, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      68.2      3.21     0.123     0.877
          1  1.76e+03      16.9         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.77      3.21   -0.0396    -0.999
          1      71.5      16.9    -0.999    0.0396
         *Z       ---       ---  1.62e+14  4.59e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19573, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01375, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17646, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      21.9      1.95     0.189     0.811
          1       419      15.1         1   -0.0187
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.891      1.95    -0.066    -0.998
          1        17      15.1    -0.998     0.066
         *Z       ---       ---  1.62e+14  4.59e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17884, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01334, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157072, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17597, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.2      1.63     0.227     0.773
          1       247      14.2         1   -0.0236
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.576      1.63   -0.0828    -0.997
          1        10      14.2    -0.997    0.0828
         *Z       ---       ---  1.62e+14  4.59e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17833, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00974, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13855, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.58      1.42     0.263     0.737
          1       157      12.9         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.39      1.42    -0.101    -0.995
          1      6.39      12.9    -0.995     0.101
         *Z       ---       ---  1.62e+14  4.59e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.026191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02828, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.87      1.28     0.292     0.708
          1       108      11.1         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.279      1.28    -0.116    -0.993
          1      4.39      11.1    -0.993     0.116
         *Z       ---       ---  1.62e+14  4.59e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.028337, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001317
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000381
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02793
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160651
         W1a Well: minimal relaxation eigenvalue = 0.0383822
         W1a Well: maximal relaxation eigenvalue = 17.6661
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001991
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.161706
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045265
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070094
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.193475
         W1b Well: minimal relaxation eigenvalue = 0.0388977
         W1b Well: maximal relaxation eigenvalue = 6.26171
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.675647, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301  6.4e+04 8.84e+15
        W1b  -3410  -3410      281 1.95e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      22.4  1.01e-19  6.62e-29
        W1b    0.0447         1  4.49e-21  2.96e-30
         P1  9.95e+18  2.23e+20         1  6.58e-10
         P2  1.51e+28  3.38e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      22.7  5.14e-23  3.38e-32
        W1b    0.0441         1  2.27e-24  1.49e-33
         P1  1.95e+22  4.41e+23         1  6.58e-10
         P2  2.96e+31   6.7e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.679209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.955183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161413, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14031, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       142      5.48      0.18      0.82
          1  3.93e+03      33.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.46      5.48   -0.0462    -0.999
          1       151      33.2    -0.999    0.0462
         *Z       ---       ---  2.05e+14  4.33e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14292, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.970608, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12654, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      45.3      3.37     0.261     0.739
          1       920      28.9         1   -0.0157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.74      3.37   -0.0743    -0.997
          1      35.3      28.9    -0.997    0.0743
         *Z       ---       ---  2.05e+14  4.33e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.970141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150899, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12643, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      29.3      2.85     0.305     0.695
          1       533      26.7         1   -0.0196
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.12      2.85   -0.0922    -0.996
          1      20.4      26.7    -0.996    0.0922
         *Z       ---       ---  2.05e+14  4.33e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.970941, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15017, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.9      2.52     0.346     0.654
          1       331      23.7         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.764      2.52    -0.111    -0.994
          1      12.7      23.7    -0.994     0.111
         *Z       ---       ---  2.05e+14  4.33e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.189704, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001645, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.195643, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.4      2.29      0.38      0.62
          1       220      19.8         1   -0.0274
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.551      2.29    -0.128    -0.992
          1      8.46      19.8    -0.992     0.128
         *Z       ---       ---  2.05e+14  4.33e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.196013, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001278
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000372
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027584
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144939
         W1a Well: minimal relaxation eigenvalue = 0.0368009
         W1a Well: maximal relaxation eigenvalue = 14.9793
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00188
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.157758
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043894
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077053
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.181343
         W1b Well: minimal relaxation eigenvalue = 0.0370557
         W1b Well: maximal relaxation eigenvalue = 5.64254
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.649013, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.47e+05 2.53e+16
        W1b  -3358  -3358      576 5.09e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      35.4  8.47e-20  7.81e-28
        W1b    0.0282         1  2.39e-21   2.2e-29
         P1  1.18e+19  4.19e+20         1  9.23e-09
         P2  1.28e+27  4.54e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      35.9  4.87e-23   4.5e-31
        W1b    0.0279         1  1.36e-24  1.25e-32
         P1  2.05e+22  7.36e+23         1  9.23e-09
         P2  2.22e+30  7.98e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.652972, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.915062, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1004, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       293      8.64     0.236     0.764
          1  8.32e+03      58.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.8      8.64   -0.0519    -0.999
          1       306      58.8    -0.999    0.0519
         *Z       ---       ---  2.62e+14   4.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10318, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929586, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144714, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07954, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      92.6       5.5     0.319     0.681
          1  1.96e+03        49         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.41       5.5   -0.0785    -0.997
          1      72.3        49    -0.997    0.0785
         *Z       ---       ---  2.62e+14   4.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.924846, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144842, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07489, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      60.3      4.75      0.36      0.64
          1  1.14e+03      43.5         1   -0.0158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.22      4.75   -0.0939    -0.996
          1        42      43.5    -0.996    0.0939
         *Z       ---       ---  2.62e+14   4.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.928331, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07817, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.6      4.25     0.396     0.604
          1       703      36.2         1   -0.0185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.53      4.25    -0.109    -0.994
          1      25.9      36.2    -0.994     0.109
         *Z       ---       ---  2.62e+14   4.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08048, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.381715, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001565, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.387462, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      30.6      3.88     0.423     0.577
          1       455      27.4         1   -0.0207
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      3.88    -0.122    -0.992
          1      16.8      27.4    -0.992     0.122
         *Z       ---       ---  2.62e+14   4.4e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.387827, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001231
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000378
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027428
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146588
         W1a Well: minimal relaxation eigenvalue = 0.0349897
         W1a Well: maximal relaxation eigenvalue = 20.7817
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00212
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15922
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041844
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061974
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.177493
         W1b Well: minimal relaxation eigenvalue = 0.0355148
         W1b Well: maximal relaxation eigenvalue = 5.59952
         W1b Well:       grid size = 174
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3334 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.631196, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 174
      MasterEquation::Barrier::truncate: real weight = 6.89671e+22
      MasterEquation::Barrier::truncate: effective weight = 4.37749e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.22e+05 6.65e+16
        W1b  -3334  -3334      928 1.24e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3334 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      51.3  7.54e-20  5.72e-27
        W1b    0.0195         1  1.47e-21  1.12e-28
         P1  1.33e+19   6.8e+20         1  7.59e-08
         P2  1.75e+26  8.96e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      51.9  4.82e-23  3.66e-30
        W1b    0.0193         1  9.29e-25  7.06e-32
         P1  2.07e+22  1.08e+24         1  7.59e-08
         P2  2.73e+29  1.42e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.63481, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.886016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160171, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       587      13.4      0.29      0.71
          1  1.62e+04      91.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      20.6      13.4   -0.0569    -0.998
          1       566      91.4    -0.998    0.0569
         *Z       ---       ---  3.36e+14   4.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00324051
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000728, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07092, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.899195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14097, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04533, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       182      8.69      0.38      0.62
          1  3.69e+03      73.5         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.36      8.69   -0.0854    -0.996
          1       129      73.5    -0.996    0.0854
         *Z       ---       ---  3.36e+14   4.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0477, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.899203, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140887, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04525, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       117       7.6     0.425     0.575
          1  2.06e+03      63.6         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.09       7.6    -0.103    -0.995
          1      72.2      63.6    -0.995     0.103
         *Z       ---       ---  3.36e+14   4.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04759, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.900193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140792, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04616, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      79.6       6.9     0.467     0.533
          1  1.21e+03      51.1         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.79       6.9    -0.122    -0.993
          1      42.4      51.1    -0.993     0.122
         *Z       ---       ---  3.36e+14   4.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.516207, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001517, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.521818, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      57.7      6.42     0.502     0.498
          1       737      36.4         1   -0.0197
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.02      6.42    -0.139     -0.99
          1      25.8      36.4     -0.99     0.139
         *Z       ---       ---  3.36e+14   4.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.52219, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001233
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000374
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027362
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.142457
         W1a Well: minimal relaxation eigenvalue = 0.0334303
         W1a Well: maximal relaxation eigenvalue = 23.764
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002083
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.150392
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041249
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063585
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.16087
         W1b Well: minimal relaxation eigenvalue = 0.0341798
         W1b Well: maximal relaxation eigenvalue = 8.20532
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.601991, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237  1.4e+05 1.63e+17
        W1b  -3379  -3379      600 2.83e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      69.5  6.97e-20  2.96e-26
        W1b    0.0144         1     1e-21  4.26e-28
         P1  1.43e+19  9.96e+20         1  4.24e-07
         P2  3.38e+25  2.35e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      70.3  4.91e-23  2.08e-29
        W1b    0.0142         1  6.98e-25  2.96e-31
         P1  2.04e+22  1.43e+24         1  4.24e-07
         P2   4.8e+28  3.37e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.605562, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.858621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15383, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.1e+03      21.9     0.328     0.672
          1  2.82e+04       120         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      36.9      21.9   -0.0585    -0.998
          1       942       120    -0.998    0.0585
         *Z       ---       ---  4.31e+14  5.17e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00341678
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000635, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.8763, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136581, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01796, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       334      14.2     0.417     0.583
          1  6.22e+03      91.5         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.2      14.2   -0.0855    -0.996
          1       208      91.5    -0.996    0.0855
         *Z       ---       ---  4.31e+14  5.17e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02036, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.878241, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02079, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       214      12.4     0.462     0.538
          1  3.38e+03      76.4         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      7.14      12.4    -0.102    -0.995
          1       113      76.4    -0.995     0.102
         *Z       ---       ---  4.31e+14  5.17e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02314, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.87855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136793, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0205, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       144      11.3     0.505     0.495
          1  1.89e+03      58.3         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.82      11.3    -0.122    -0.993
          1      63.3      58.3    -0.993     0.122
         *Z       ---       ---  4.31e+14  5.17e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.646512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001484, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.652032, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       104      10.5     0.543     0.457
          1  1.09e+03      38.9         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.46      10.5    -0.141     -0.99
          1      36.4      38.9     -0.99     0.141
         *Z       ---       ---  4.31e+14  5.17e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.652402, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001263
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000361
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028636
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140076
         W1a Well: minimal relaxation eigenvalue = 0.0324287
         W1a Well: maximal relaxation eigenvalue = 23.6011
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002039
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.142849
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040259
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062964
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.160129
         W1b Well: minimal relaxation eigenvalue = 0.0330547
         W1b Well: maximal relaxation eigenvalue = 8.21747
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.590879, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 2.31e+04 3.74e+17
        W1b  -3368  -3368      855 6.14e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      89.5  6.63e-20  1.18e-25
        W1b    0.0112         1  7.41e-22  1.32e-27
         P1  1.51e+19  1.35e+21         1  1.78e-06
         P2   8.5e+24   7.6e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      90.6   5.1e-23  9.05e-29
        W1b     0.011         1  5.63e-25  9.99e-31
         P1  1.96e+22  1.78e+24         1  1.78e-06
         P2  1.11e+28     1e+30  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.594745, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.845032, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.153708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01016, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.06e+03      33.7     0.368     0.632
          1  4.28e+04       123         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      66.8      33.7   -0.0613    -0.998
          1  1.39e+03       123    -0.998    0.0613
         *Z       ---       ---   5.5e+14  5.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00376275
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01395, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.85813, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.997362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       619      22.2     0.455     0.545
          1  9.22e+03      87.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      20.1      22.2   -0.0878    -0.996
          1       299      87.6    -0.996    0.0878
         *Z       ---       ---   5.5e+14  5.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.999694, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.857934, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133995, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.996765, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       395      19.6     0.498     0.502
          1   4.9e+03      69.3         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.8      19.6    -0.104    -0.995
          1       159      69.3    -0.995     0.104
         *Z       ---       ---   5.5e+14  5.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.999149, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.858391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.99783, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       267      17.9      0.54      0.46
          1  2.66e+03      48.9         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.67      17.9    -0.123    -0.992
          1      86.1      48.9    -0.992     0.123
         *Z       ---       ---   5.5e+14  5.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0002, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.72386, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004518, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.732403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       193      16.6     0.579     0.421
          1  1.46e+03      29.5         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.25      16.6    -0.144     -0.99
          1      47.3      29.5     -0.99     0.144
         *Z       ---       ---   5.5e+14  5.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.733005, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.4e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001214
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027004
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140998
         W1a Well: minimal relaxation eigenvalue = 0.0317692
         W1a Well: maximal relaxation eigenvalue = 21.0497
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002119
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.139294
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03988
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067894
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.158554
         W1b Well: minimal relaxation eigenvalue = 0.0319721
         W1b Well: maximal relaxation eigenvalue = 14.4265
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.589482, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.64e+04 8.17e+17
        W1b  -3481  -3481      266 1.27e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       111  6.43e-20  3.82e-25
        W1b   0.00902         1   5.8e-22  3.45e-27
         P1  1.55e+19  1.72e+21         1  5.94e-06
         P2  2.62e+24   2.9e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       112  5.36e-23  3.19e-28
        W1b   0.00891         1  4.77e-25  2.84e-30
         P1  1.87e+22  2.09e+24         1  5.94e-06
         P2  3.14e+27  3.52e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.592875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14208, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987069, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.44e+03      60.3     0.384     0.616
          1  5.64e+04       111         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       109      60.3   -0.0591    -0.998
          1  1.79e+03       111    -0.998    0.0591
         *Z       ---       ---     7e+14  6.65e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00349401
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000603, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990835, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.843892, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132483, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.981193, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+03      39.4     0.455     0.545
          1  1.18e+04      73.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      31.8      39.4    -0.079    -0.997
          1       376      73.2    -0.997     0.079
         *Z       ---       ---     7e+14  6.65e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00624206
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000555, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.985011, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.843805, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.98194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       633      34.2      0.49      0.51
          1  6.16e+03      55.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      20.1      34.2   -0.0908    -0.996
          1       196      55.2    -0.996    0.0908
         *Z       ---       ---     7e+14  6.65e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.984298, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.848508, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133802, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       425      30.4     0.525     0.475
          1  3.24e+03      36.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.5      30.4    -0.104    -0.995
          1       103      36.8    -0.995     0.104
         *Z       ---       ---     7e+14  6.65e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.989768, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784462, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.010119, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.798601, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       304      27.3     0.562     0.438
          1  1.72e+03        21         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.67      27.3    -0.121    -0.993
          1      54.5        21    -0.993     0.121
         *Z       ---       ---     7e+14  6.65e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.799021, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 7.3e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001267
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026426
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136637
         W1a Well: minimal relaxation eigenvalue = 0.0185831
         W1a Well: maximal relaxation eigenvalue = 36.1758
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002236
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137256
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038983
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062339
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154199
         W1b Well: minimal relaxation eigenvalue = 0.0312
         W1b Well: maximal relaxation eigenvalue = 10.0243
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.571799, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.57e+05  1.7e+18
        W1b  -3372  -3372  1.1e+03 2.53e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       133  6.34e-20  1.06e-24
        W1b    0.0075         1  4.75e-22  7.94e-27
         P1  1.58e+19   2.1e+21         1  1.67e-05
         P2  9.45e+23  1.26e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       135  5.69e-23   9.5e-28
        W1b   0.00741         1  4.21e-25  7.04e-30
         P1  1.76e+22  2.37e+24         1  1.67e-05
         P2  1.05e+27  1.42e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.575436, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813786, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148253, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.980927, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.08e+04      78.9     0.448     0.552
          1  1.13e+05      76.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       201      78.9     -0.07    -0.998
          1  2.09e+03      76.3    -0.998      0.07
         *Z       ---       ---  8.85e+14  7.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.983265, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131181, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.965172, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.09e+03      52.9      0.54      0.46
          1  2.32e+04        51         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.4      52.9    -0.101    -0.995
          1       432        51    -0.995     0.101
         *Z       ---       ---  8.85e+14  7.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.990 0.010
         well projection threshold  = 0.2
         partition projection error = 0.0102298
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.830962, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131299, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.967286, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.9e+03      47.2     0.589     0.411
          1  1.19e+04        40         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      35.3      47.2    -0.123    -0.992
          1       221        40    -0.992     0.123
         *Z       ---       ---  8.85e+14  7.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.985 0.015
         well projection threshold  = 0.2
         partition projection error = 0.0151733
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000542, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.971096, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.830067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130943, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.96578, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.22e+03      44.1     0.642     0.358
          1  6.12e+03      28.4         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      22.8      44.1    -0.153    -0.988
          1       114      28.4    -0.988     0.153
         *Z       ---       ---  8.85e+14  7.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.839382, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.013951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.857661, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       831      42.6     0.697     0.303
          1  3.18e+03      17.7         1   -0.0172
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      15.5      42.6    -0.195    -0.981
          1      59.1      17.7    -0.981     0.195
         *Z       ---       ---  8.85e+14  7.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.858168, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000138
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.003546
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029924
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132744
         W1a Well: minimal relaxation eigenvalue = 0.0294345
         W1a Well: maximal relaxation eigenvalue = 27.1693
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002104
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.140841
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038502
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045944
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.156956
         W1b Well: minimal relaxation eigenvalue = 0.0303952
         W1b Well: maximal relaxation eigenvalue = 13.2144
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.563419, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 4.34e+04 3.39e+18
        W1b  -3416  -3416      751 4.85e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       156  6.31e-20  2.58e-24
        W1b   0.00639         1  4.03e-22  1.65e-26
         P1  1.58e+19  2.48e+21         1  4.08e-05
         P2  3.88e+23  6.07e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       158  6.07e-23  2.48e-27
        W1b   0.00632         1  3.84e-25  1.57e-29
         P1  1.65e+22  2.61e+24         1  4.08e-05
         P2  4.03e+26  6.39e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.567124, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144897, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.971475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.14e+04       127     0.485     0.515
          1  7.76e+04      51.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       334       127   -0.0752    -0.997
          1  2.28e+03      51.3    -0.997    0.0752
         *Z       ---       ---  1.11e+15  8.88e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.97378, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820442, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129543, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954696, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.25e+03      85.5     0.572     0.428
          1  1.58e+04      32.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      95.6      85.5    -0.106    -0.994
          1       466      32.5    -0.994     0.106
         *Z       ---       ---  1.11e+15  8.88e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0112648
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000618, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958303, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821196, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129971, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.95611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.03e+03      75.2     0.619     0.381
          1  8.05e+03      24.4         1   -0.0104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.7      75.2    -0.129    -0.992
          1       237      24.4    -0.992     0.129
         *Z       ---       ---  1.11e+15  8.88e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958493, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818626, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129114, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.952878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.34e+03      67.5     0.675     0.325
          1  4.12e+03        17         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      39.4      67.5    -0.164    -0.986
          1       121        17    -0.986     0.164
         *Z       ---       ---  1.11e+15  8.88e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81956, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.074074, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897956, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       934        60     0.745     0.255
          1  2.12e+03      11.9         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      27.5        60    -0.227    -0.974
          1      62.4      11.9    -0.974     0.227
         *Z       ---       ---  1.11e+15  8.88e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898498, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000214
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007642
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000843
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027608
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137175
         W1a Well: minimal relaxation eigenvalue = 0.0292226
         W1a Well: maximal relaxation eigenvalue = 25.0455
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002195
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134157
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038402
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05752
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154388
         W1b Well: minimal relaxation eigenvalue = 0.02963
         W1b Well: maximal relaxation eigenvalue = 17.2069
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.572158, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 9.41e+04 6.52e+18
        W1b  -3489  -3489      447    9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       180  6.37e-20  5.68e-24
        W1b   0.00556         1  3.54e-22  3.16e-26
         P1  1.57e+19  2.82e+21         1  8.91e-05
         P2  1.76e+23  3.17e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       182  6.51e-23   5.8e-27
        W1b   0.00549         1  3.58e-25  3.19e-29
         P1  1.54e+22   2.8e+24         1  8.91e-05
         P2  1.72e+26  3.14e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.575993, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820574, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.82e+04       206     0.546     0.454
          1  8.06e+04        42         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       531       206   -0.0895    -0.996
          1  2.35e+03        42    -0.996    0.0895
         *Z       ---       ---  1.39e+15  1.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.991213, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819868, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12926, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.95403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   5.1e+03       138     0.634     0.366
          1  1.64e+04      27.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       149       138    -0.128    -0.992
          1       479      27.4    -0.992     0.128
         *Z       ---       ---  1.39e+15  1.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.984 0.016
         well projection threshold  = 0.2
         partition projection error = 0.0163428
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000632, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.957929, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818577, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129039, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.952377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.16e+03       119     0.685     0.315
          1   8.3e+03      22.1         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      92.3       119     -0.16    -0.987
          1       243      22.1    -0.987      0.16
         *Z       ---       ---  1.39e+15  1.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.954745, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820417, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129431, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954553, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.06e+03       104      0.75      0.25
          1  4.24e+03      18.7         1   -0.0167
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      60.3       104    -0.218    -0.976
          1       124      18.7    -0.976     0.218
         *Z       ---       ---  1.39e+15  1.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.956914, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820883, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.062172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887495, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.41e+03        84     0.839     0.161
          1   2.2e+03      22.6         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      41.2        84    -0.361    -0.932
          1      64.2      22.6    -0.932     0.361
         *Z       ---       ---  1.39e+15  1.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888047, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000156
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006787
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000466
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03031
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133959
         W1a Well: minimal relaxation eigenvalue = 0.019451
         W1a Well: maximal relaxation eigenvalue = 35.6595
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00221
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13063
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038116
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061461
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152546
         W1b Well: minimal relaxation eigenvalue = 0.0289879
         W1b Well: maximal relaxation eigenvalue = 18.4973
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.568804, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 2.06e+04 1.21e+19
        W1b  -3493  -3493      492 1.62e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       203  6.44e-20  1.14e-23
        W1b   0.00491         1  3.17e-22  5.61e-26
         P1  1.55e+19  3.16e+21         1  0.000177
         P2  8.76e+22  1.78e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       206     7e-23  1.24e-26
        W1b   0.00486         1   3.4e-25  6.02e-29
         P1  1.43e+22  2.94e+24         1  0.000177
         P2  8.07e+25  1.66e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.572317, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815935, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14367, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.978959, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.37e+04       300     0.637     0.363
          1  1.23e+05      38.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       851       300    -0.122    -0.993
          1   2.4e+03      38.8    -0.993     0.122
         *Z       ---       ---  1.73e+15  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.981236, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816182, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128324, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949352, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.17e+04       194     0.734     0.266
          1   2.5e+04      30.1         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       227       194     -0.19    -0.982
          1       487      30.1    -0.982      0.19
         *Z       ---       ---  1.73e+15  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816105, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127932, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.92e+03       164     0.791     0.209
          1  1.27e+04      30.2         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       135       164    -0.257    -0.967
          1       247      30.2    -0.967     0.257
         *Z       ---       ---  1.73e+15  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.934 0.066
         well projection threshold  = 0.2
         partition projection error = 0.0658313
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000596, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.952811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814782, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127176, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.946628, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.24e+03       134     0.859     0.141
          1  6.57e+03      39.5         1     -0.03
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      82.5       134    -0.394    -0.919
          1       128      39.5    -0.919     0.394
         *Z       ---       ---  1.73e+15  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.948947, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.803524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.085984, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893868, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.6e+03      77.4     0.931    0.0692
          1   3.6e+03      80.4         1   -0.0661
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      50.5      77.4    -0.686    -0.728
          1        70      80.4    -0.728     0.686
         *Z       ---       ---  1.73e+15  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89444, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000251
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.008551
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028775
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132656
         W1a Well: minimal relaxation eigenvalue = 0.00167849
         W1a Well: maximal relaxation eigenvalue = 49.8239
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002203
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136932
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036754
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045627
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145615
         W1b Well: minimal relaxation eigenvalue = 0.0284295
         W1b Well: maximal relaxation eigenvalue = 19.57
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.551039, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.74e+05 2.19e+19
        W1b  -3467  -3467      628 2.84e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       227  6.55e-20  2.13e-23
        W1b    0.0044         1  2.89e-22  9.39e-26
         P1  1.53e+19  3.47e+21         1  0.000326
         P2  4.69e+22  1.06e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       230  7.54e-23  2.45e-26
        W1b   0.00435         1  3.28e-25  1.07e-28
         P1  1.33e+22  3.05e+24         1  0.000326
         P2  4.07e+25  9.36e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.55453, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.791463, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145188, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.952254, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.06e+05       408     0.761     0.239
          1  1.44e+06      59.4         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.35e+03       408    -0.207    -0.978
          1  2.42e+03      59.4    -0.978     0.207
         *Z       ---       ---  2.13e+15  1.41e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.954552, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.791503, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125606, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.921666, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.04e+05       239     0.862     0.138
          1  2.98e+05      70.2         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       342       239    -0.384    -0.923
          1       500      70.2    -0.923     0.384
         *Z       ---       ---  2.13e+15  1.41e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.923872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792268, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125803, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922858, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.14e+05       169      0.91    0.0897
          1  1.55e+05       104         1   -0.0447
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       191       169    -0.558     -0.83
          1       261       104     -0.83     0.558
         *Z       ---       ---  2.13e+15  1.41e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792633, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125703, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923091, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.23e+04      91.1     0.949    0.0512
          1  8.54e+04       162         1   -0.0816
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105      91.1    -0.776    -0.631
          1       143       162    -0.631     0.776
         *Z       ---       ---  2.13e+15  1.41e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925316, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797125, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12688, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928601, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.28e+04      40.4      0.97    0.0296
          1  5.06e+04       206         1    -0.145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.1      40.4    -0.909    -0.417
          1        85       206    -0.417     0.909
         *Z       ---       ---  2.13e+15  1.41e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930806, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002756
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.025502
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002397
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030794
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130246
         W1a Well: minimal relaxation eigenvalue = 0.0233994
         W1a Well: maximal relaxation eigenvalue = 33.2244
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 26 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002098
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127852
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037447
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057816
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149988
         W1b Well: minimal relaxation eigenvalue = 0.0279864
         W1b Well: maximal relaxation eigenvalue = 16.9161
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.579939, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 6.22e+04 3.85e+19
        W1b  -3415  -3415 1.29e+03 4.86e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       250  6.69e-20  3.75e-23
        W1b   0.00399         1  2.67e-22   1.5e-25
         P1   1.5e+19  3.75e+21         1  0.000561
         P2  2.67e+22  6.68e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       253  8.13e-23  4.56e-26
        W1b   0.00395         1  3.21e-25   1.8e-28
         P1  1.23e+22  3.12e+24         1  0.000561
         P2  2.19e+25  5.56e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.584299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133892, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.950709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.88e+04       273     0.938    0.0624
          1  1.11e+05       347         1     -0.06
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.08e+03       273    -0.688    -0.725
          1   2.6e+03       347    -0.725     0.688
         *Z       ---       ---  2.61e+15  1.65e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.953052, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785889, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123378, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.92e+04      34.8     0.978    0.0218
          1  2.85e+04       397         1    -0.179
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       449      34.8    -0.943    -0.333
          1       667       397    -0.333     0.943
         *Z       ---       ---  2.61e+15  1.65e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916012, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125422, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920175, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.72e+03      15.2     0.985    0.0149
          1  1.72e+04       369         1    -0.264
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       228      15.2    -0.972    -0.233
          1       403       369    -0.233     0.972
         *Z       ---       ---  2.61e+15  1.65e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.946 0.054
         well projection threshold  = 0.2
         partition projection error = 0.0293542
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000631, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.923883, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124834, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.91e+03      7.26     0.989    0.0107
          1   1.1e+04       342         1     -0.37
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115      7.26    -0.986    -0.168
          1       258       342    -0.168     0.986
         *Z       ---       ---  2.61e+15  1.65e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.972 0.028
         well projection threshold  = 0.2
         partition projection error = 0.0111892
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00055, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92882, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795237, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925619, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.48e+03      3.47     0.992         0
          1  7.46e+03       313         1    -0.502
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        58      3.47    -0.992    -0.125
          1       175       313    -0.125     0.992
         *Z       ---       ---  2.61e+15  1.65e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927934, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002109
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.078298
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003232
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03097
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131261
         W1a Well: minimal relaxation eigenvalue = 0.00775347
         W1a Well: maximal relaxation eigenvalue = 42.2807
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002162
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.130567
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037301
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056795
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149345
         W1b Well: minimal relaxation eigenvalue = 0.0275649
         W1b Well: maximal relaxation eigenvalue = 15.0208
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3333 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.634171, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 162
      MasterEquation::Barrier::truncate: real weight = 1.86487e+25
      MasterEquation::Barrier::truncate: effective weight = 2.36807e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.48e+04 6.61e+19
        W1b  -3333  -3333 2.61e+03 8.14e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3333 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       273  6.85e-20  6.26e-23
        W1b   0.00366         1   2.5e-22  2.29e-25
         P1  1.46e+19  3.99e+21         1  0.000914
         P2   1.6e+22  4.37e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       277  8.76e-23  8.01e-26
        W1b   0.00361         1  3.17e-25  2.89e-28
         P1  1.14e+22  3.16e+24         1  0.000914
         P2  1.25e+25  3.46e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.638259, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13185, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.93648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.9e+05      20.5     0.987    0.0131
          1   4.9e+05       796         1    -0.275
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.25e+03      20.5    -0.977    -0.215
          1   3.8e+03       796    -0.215     0.977
         *Z       ---       ---  3.18e+15  1.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.939141, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788954, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124198, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917769, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.83e+04      8.17     0.991         0
          1  1.31e+05       574         1    -0.389
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       452      8.17    -0.988    -0.153
          1  1.02e+03       574    -0.153     0.988
         *Z       ---       ---  3.18e+15  1.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788752, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918364, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.92e+04      5.96     0.992         0
          1  7.83e+04       527         1    -0.451
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       227      5.96    -0.991    -0.133
          1       607       527    -0.133     0.991
         *Z       ---       ---  3.18e+15  1.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920767, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123855, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919861, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.47e+04      4.31     0.993         0
          1  4.85e+04       504         1    -0.524
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       114      4.31    -0.993    -0.115
          1       376       504    -0.115     0.993
         *Z       ---       ---  3.18e+15  1.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.921996, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.789439, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124076, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918294, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.35e+03      2.91     0.994         0
          1  3.16e+04       493         1    -0.614
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        57      2.91    -0.995   -0.0981
          1       245       493   -0.0981     0.995
         *Z       ---       ---  3.18e+15  1.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.990 0.010
         well projection threshold  = 0.2
         partition projection error = 0.00143073
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000666, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922172, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002051
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.116205
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003828
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028494
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134777
         W1a Well: minimal relaxation eigenvalue = 0.000545536
         W1a Well: maximal relaxation eigenvalue = 51.7734
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002133
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127304
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037986
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059089
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.148428
         W1b Well: minimal relaxation eigenvalue = 0.0268176
         W1b Well: maximal relaxation eigenvalue = 24.6935
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.672479, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 1.11e+20
        W1b  -3516  -3516      606 1.33e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       296  7.03e-20  9.98e-23
        W1b   0.00338         1  2.37e-22  3.37e-25
         P1  1.42e+19  4.21e+21         1   0.00142
         P2     1e+22  2.97e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       300  9.45e-23  1.34e-25
        W1b   0.00334         1  3.15e-25  4.48e-28
         P1  1.06e+22  3.17e+24         1   0.00142
         P2  7.45e+24  2.23e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.676376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141445, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.943035, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.08e+06      7.33     0.993         0
          1  9.53e+06  1.42e+03         1    -0.468
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.23e+03      7.33    -0.992    -0.123
          1   5.2e+03  1.42e+03    -0.123     0.992
         *Z       ---       ---  3.86e+15  2.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78979, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124849, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919552, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.18e+05      4.31     0.994         0
          1  2.38e+06       952         1    -0.541
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       446      4.31    -0.994    -0.107
          1   1.3e+03       952    -0.107     0.994
         *Z       ---       ---  3.86e+15  2.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92171, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788696, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124464, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917934, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.09e+05      3.63     0.994         0
          1  1.35e+06       840         1    -0.578
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       223      3.63    -0.995      -0.1
          1       739       840      -0.1     0.995
         *Z       ---       ---  3.86e+15  2.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920068, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78829, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124334, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917193, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.05e+05      3.11     0.995         0
          1  7.87e+05       774         1    -0.619
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112      3.11    -0.996   -0.0935
          1       429       774   -0.0935     0.996
         *Z       ---       ---  3.86e+15  2.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91936, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788102, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917049, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.02e+05      2.64     0.995         0
          1  4.71e+05       751         1    -0.666
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.9      2.64    -0.996    -0.087
          1       257       751    -0.087     0.996
         *Z       ---       ---  3.86e+15  2.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919177, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002286
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.116002
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003578
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027421
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131559
         W1a Well: minimal relaxation eigenvalue = 0.0200784
         W1a Well: maximal relaxation eigenvalue = 34.677
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002317
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126522
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037643
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059184
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146439
         W1b Well: minimal relaxation eigenvalue = 0.0266588
         W1b Well: maximal relaxation eigenvalue = 19.002
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.666, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.2e+05 1.82e+20
        W1b  -3393  -3393 2.09e+03 2.15e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       318  7.23e-20  1.53e-22
        W1b   0.00314         1  2.27e-22  4.81e-25
         P1  1.38e+19   4.4e+21         1   0.00212
         P2  6.53e+21  2.08e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       322  1.02e-22  2.16e-25
        W1b    0.0031         1  3.16e-25   6.7e-28
         P1  9.82e+21  3.16e+24         1   0.00212
         P2  4.64e+24  1.49e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.670262, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7723, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139922, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923742, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+05      2.22     0.996         0
          1   4.3e+05  1.72e+03         1     -0.71
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.19e+03      2.22    -0.997   -0.0787
          1  8.64e+03  1.72e+03   -0.0787     0.997
         *Z       ---       ---  4.66e+15  2.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926006, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123036, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.18e+04      1.42     0.996         0
          1  1.18e+05  1.23e+03         1    -0.801
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       439      1.42    -0.998   -0.0698
          1  2.37e+03  1.23e+03   -0.0698     0.998
         *Z       ---       ---  4.66e+15  2.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774827, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122097, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901466, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+04      1.08     0.996         0
          1  7.22e+04   1.1e+03         1    -0.858
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       219      1.08    -0.998   -0.0652
          1  1.45e+03   1.1e+03   -0.0652     0.998
         *Z       ---       ---  4.66e+15  2.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772274, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122715, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899723, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.47e+03     0.748     0.997         0
          1  4.63e+04       977         1    -0.928
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       110     0.748    -0.998   -0.0603
          1       930       977   -0.0603     0.998
         *Z       ---       ---  4.66e+15  2.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 1.87187e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000645, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903597, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773265, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122481, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900296, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.74e+03     0.461     0.997         0
          1  3.11e+04       840    -0.993         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        55     0.461    -0.998   -0.0556
          1       625       840   -0.0556     0.998
         *Z       ---       ---  4.66e+15  2.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 1.48755e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000585, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903832, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002243
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126118
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034388
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037574
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131869
         W1a Well: minimal relaxation eigenvalue = 0.00908652
         W1a Well: maximal relaxation eigenvalue = 40.8989
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002604
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125624
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037209
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05792
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145965
         W1b Well: minimal relaxation eigenvalue = 0.0257168
         W1b Well: maximal relaxation eigenvalue = 28.21
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714129, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.66e+04 2.93e+20
        W1b  -3561  -3561      549 3.39e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       340  7.45e-20  2.27e-22
        W1b   0.00294         1  2.19e-22  6.68e-25
         P1  1.34e+19  4.57e+21         1   0.00305
         P2   4.4e+21   1.5e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       344   1.1e-22  3.34e-25
        W1b   0.00291         1  3.19e-25  9.72e-28
         P1  9.12e+21  3.14e+24         1   0.00305
         P2  2.99e+24  1.03e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.718222, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77266, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+05      1.32     0.997         0
          1  1.29e+06  2.96e+03         1    -0.852
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.14e+03      1.32    -0.998   -0.0635
          1  1.17e+04  2.96e+03   -0.0635     0.998
         *Z       ---       ---   5.6e+15  3.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773597, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.72e+04     0.971     0.997         0
          1  3.26e+05  2.01e+03         1    -0.905
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       429     0.971    -0.998   -0.0598
          1  2.96e+03  2.01e+03   -0.0598     0.998
         *Z       ---       ---   5.6e+15  3.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903088, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773168, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122232, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900148, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+04     0.824     0.997         0
          1   1.9e+05  1.75e+03         1    -0.938
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       214     0.824    -0.998   -0.0577
          1  1.72e+03  1.75e+03   -0.0577     0.998
         *Z       ---       ---   5.6e+15  3.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90233, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77317, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122374, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900072, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.18e+04      0.66     0.997         0
          1  1.15e+05  1.54e+03         1     -0.98
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107      0.66    -0.998   -0.0552
          1  1.04e+03  1.54e+03   -0.0552     0.998
         *Z       ---       ---   5.6e+15  3.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773671, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.91e+03     0.486     0.997         0
          1  7.24e+04  1.35e+03    -0.969         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.7     0.486    -0.999   -0.0525
          1       658  1.35e+03   -0.0525     0.999
         *Z       ---       ---   5.6e+15  3.04e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 2.8003e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000621, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905114, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002411
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.112282
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034755
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037422
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132103
         W1a Well: minimal relaxation eigenvalue = 0.00289402
         W1a Well: maximal relaxation eigenvalue = 46.8593
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002303
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133315
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036389
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056768
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140096
         W1b Well: minimal relaxation eigenvalue = 0.0258978
         W1b Well: maximal relaxation eigenvalue = 20.9402
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.700957, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.35e+04 4.64e+20
        W1b  -3396  -3396 2.51e+03 5.27e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       361  7.68e-20  3.27e-22
        W1b   0.00277         1  2.13e-22  9.04e-25
         P1   1.3e+19  4.71e+21         1   0.00425
         P2  3.06e+21  1.11e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       366  1.18e-22  5.02e-25
        W1b   0.00274         1  3.23e-25  1.37e-27
         P1  8.47e+21   3.1e+24         1   0.00425
         P2  1.99e+24  7.28e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.705014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129374, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914235, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.24e+05     0.695     0.997         0
          1  6.45e+06  3.23e+03         1    -0.992
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.09e+03     0.695    -0.999    -0.053
          1  1.87e+04  3.23e+03    -0.053     0.999
         *Z       ---       ---  6.69e+15  3.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770104, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121943, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896725, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.45e+05     0.595     0.997         0
          1  1.66e+06  2.29e+03    -0.976         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       419     0.595    -0.999   -0.0513
          1  4.79e+03  2.29e+03   -0.0513     0.999
         *Z       ---       ---  6.69e+15  3.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769307, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895373, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.24e+04     0.547     0.997         0
          1  9.58e+05  2.06e+03    -0.958         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       209     0.547    -0.999   -0.0503
          1  2.77e+03  2.06e+03   -0.0503     0.999
         *Z       ---       ---  6.69e+15  3.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897529, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768166, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122528, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89542, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.62e+04     0.487     0.997         0
          1  5.71e+05  1.92e+03    -0.936         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105     0.487    -0.999   -0.0492
          1  1.65e+03  1.92e+03   -0.0492     0.999
         *Z       ---       ---  6.69e+15  3.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897588, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12143, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894177, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+04     0.409     0.997         0
          1  3.53e+05  1.81e+03    -0.911         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      52.4     0.409    -0.999   -0.0479
          1  1.02e+03  1.81e+03   -0.0479     0.999
         *Z       ---       ---  6.69e+15  3.52e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896348, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002341
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1231
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034472
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03696
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131393
         W1a Well: minimal relaxation eigenvalue = 0.000466789
         W1a Well: maximal relaxation eigenvalue = 51.268
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002356
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128488
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036384
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.131585
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14346
         W1b Well: minimal relaxation eigenvalue = 0.0249942
         W1b Well: maximal relaxation eigenvalue = 28.7048
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.783338, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 7.22e+20
        W1b  -3551  -3551      826 8.07e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       382  7.92e-20  4.58e-22
        W1b   0.00262         1  2.08e-22   1.2e-24
         P1  1.26e+19  4.82e+21         1   0.00577
         P2  2.19e+21  8.35e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       386  1.27e-22  7.33e-25
        W1b   0.00259         1  3.29e-25   1.9e-27
         P1  7.88e+21  3.04e+24         1   0.00577
         P2  1.36e+24  5.27e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.787184, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137914, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923687, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.38e+06     0.476     0.998         0
          1  5.37e+07  5.19e+03    -0.929         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03     0.476    -0.999   -0.0475
          1  2.51e+04  5.19e+03   -0.0475     0.999
         *Z       ---       ---  7.96e+15  4.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925968, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768595, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894246, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.76e+05     0.426     0.998         0
          1   1.3e+07  3.51e+03    -0.914         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       409     0.426    -0.999   -0.0467
          1  6.07e+03  3.51e+03   -0.0467     0.999
         *Z       ---       ---  7.96e+15  4.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89645, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893739, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.38e+05     0.409     0.998         0
          1  7.24e+06  3.08e+03    -0.906         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204     0.409    -0.999   -0.0463
          1  3.38e+03  3.08e+03   -0.0463     0.999
         *Z       ---       ---  7.96e+15  4.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896114, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121862, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894951, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.19e+05     0.389     0.998         0
          1  4.12e+06  2.79e+03    -0.896         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       102     0.389    -0.999   -0.0458
          1  1.92e+03  2.79e+03   -0.0458     0.999
         *Z       ---       ---  7.96e+15  4.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766917, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.121519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892951, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.1e+05     0.364     0.998         0
          1  2.39e+06  2.62e+03    -0.886         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.1     0.364    -0.999   -0.0453
          1  1.12e+03  2.62e+03   -0.0453     0.999
         *Z       ---       ---  7.96e+15  4.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895123, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002304
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120056
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034847
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037498
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134836
         W1a Well: minimal relaxation eigenvalue = 0.00217979
         W1a Well: maximal relaxation eigenvalue = 47.9358
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002304
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125999
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03666
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051425
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146125
         W1b Well: minimal relaxation eigenvalue = 0.0246839
         W1b Well: maximal relaxation eigenvalue = 28.6881
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.705222, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.62e+04 1.11e+21
        W1b  -3547  -3547 1.03e+03 1.22e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       402  8.21e-20  6.28e-22
        W1b   0.00249         1  2.04e-22  1.56e-24
         P1  1.22e+19   4.9e+21         1   0.00765
         P2  1.59e+21   6.4e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       407  1.36e-22  1.04e-24
        W1b   0.00246         1  3.35e-25  2.57e-27
         P1  7.33e+21  2.98e+24         1   0.00765
         P2  9.58e+23   3.9e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.709312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766962, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.92322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.15e+05     0.326     0.998         0
          1  1.66e+07  6.63e+03    -0.877         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     2e+03     0.326    -0.999   -0.0437
          1  3.61e+04  6.63e+03   -0.0437     0.999
         *Z       ---       ---  9.44e+15  4.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925487, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764266, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121306, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890266, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+05     0.296     0.998         0
          1  4.05e+06  4.43e+03    -0.866         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       399     0.296    -0.999   -0.0432
          1  8.82e+03  4.43e+03   -0.0432     0.999
         *Z       ---       ---  9.44e+15  4.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892438, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768917, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121323, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.16e+04     0.283     0.998         0
          1  2.28e+06  3.82e+03    -0.859         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       200     0.283    -0.999   -0.0428
          1  4.98e+03  3.82e+03   -0.0428     0.999
         *Z       ---       ---  9.44e+15  4.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89687, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766852, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893179, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.58e+04     0.266     0.998         0
          1  1.32e+06  3.33e+03    -0.851         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      99.8     0.266    -0.999   -0.0424
          1  2.88e+03  3.33e+03   -0.0424     0.999
         *Z       ---       ---  9.44e+15  4.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766988, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121671, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893184, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.29e+04     0.244     0.998         0
          1  7.86e+05  2.93e+03    -0.841         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.9     0.244    -0.999   -0.0419
          1  1.71e+03  2.93e+03   -0.0419     0.999
         *Z       ---       ---  9.44e+15  4.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895343, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002222
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.117386
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034364
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037425
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132263
         W1a Well: minimal relaxation eigenvalue = 0.000509723
         W1a Well: maximal relaxation eigenvalue = 50.4489
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 46 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002308
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128715
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036248
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051099
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143292
         W1b Well: minimal relaxation eigenvalue = 0.0250088
         W1b Well: maximal relaxation eigenvalue = 20.441
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3327 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698089, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 159
      MasterEquation::Barrier::truncate: real weight = 3.2226e+26
      MasterEquation::Barrier::truncate: effective weight = 5.51849e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 1.67e+21
        W1b  -3327  -3327 5.59e+03 1.82e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3327  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       421  8.48e-20  8.41e-22
        W1b   0.00237         1  2.01e-22     2e-24
         P1  1.18e+19  4.97e+21         1   0.00992
         P2  1.19e+21  5.01e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       426  1.46e-22  1.45e-24
        W1b   0.00234         1  3.43e-25  3.41e-27
         P1  6.83e+21  2.91e+24         1   0.00992
         P2  6.89e+23  2.94e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.702147, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759117, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136424, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913713, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.82e+06     0.264     0.998         0
          1  1.07e+08  6.61e+03    -0.842         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.95e+03     0.264    -0.999    -0.041
          1  5.47e+04  6.61e+03    -0.041     0.999
         *Z       ---       ---  1.11e+16  5.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915986, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761982, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12036, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886843, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.64e+05     0.253     0.998         0
          1  2.65e+07  4.76e+03    -0.835         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       390     0.253    -0.999   -0.0406
          1  1.35e+04  4.76e+03   -0.0406     0.999
         *Z       ---       ---  1.11e+16  5.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761212, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121043, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88696, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.82e+05     0.247     0.998         0
          1  1.49e+07  4.34e+03    -0.831         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       195     0.247    -0.999   -0.0405
          1  7.58e+03  4.34e+03   -0.0405     0.999
         *Z       ---       ---  1.11e+16  5.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889134, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883068, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.91e+05     0.238     0.998         0
          1   8.5e+06  4.05e+03    -0.827         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      97.4     0.238    -0.999   -0.0402
          1  4.33e+03  4.05e+03   -0.0402     0.999
         *Z       ---       ---  1.11e+16  5.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762285, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887828, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.55e+04     0.225     0.998         0
          1  4.95e+06  3.82e+03    -0.821         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.7     0.225    -0.999     -0.04
          1  2.53e+03  3.82e+03     -0.04     0.999
         *Z       ---       ---  1.11e+16  5.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889989, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00233
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.109936
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034141
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038255
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131257
         W1a Well: minimal relaxation eigenvalue = 0.0151463
         W1a Well: maximal relaxation eigenvalue = 36.5563
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00222
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128947
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036634
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056461
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.137348
         W1b Well: minimal relaxation eigenvalue = 0.0243784
         W1b Well: maximal relaxation eigenvalue = 27.1049
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.690324, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 4.13e+05  2.5e+21
        W1b  -3468  -3468 2.25e+03 2.67e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       440  8.76e-20  1.11e-21
        W1b   0.00227         1  1.99e-22  2.51e-24
         P1  1.14e+19  5.03e+21         1    0.0126
         P2  9.04e+20  3.98e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       446  1.57e-22  1.98e-24
        W1b   0.00224         1  3.52e-25  4.44e-27
         P1  6.37e+21  2.84e+24         1    0.0126
         P2  5.05e+23  2.25e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.6942, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13564, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+05     0.222     0.998         0
          1  4.87e+06  9.68e+03    -0.817         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   1.9e+03     0.222    -0.999   -0.0389
          1  7.37e+04  9.68e+03   -0.0389     0.999
         *Z       ---       ---  1.31e+16  6.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.51e+04     0.197     0.998         0
          1  1.26e+06  6.38e+03    -0.807         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       380     0.197    -0.999   -0.0384
          1   1.9e+04  6.38e+03   -0.0384     0.999
         *Z       ---       ---  1.31e+16  6.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756988, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1198, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881446, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+04     0.181     0.998         0
          1  7.35e+05  5.26e+03    -0.801         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       190     0.181    -0.999   -0.0381
          1  1.11e+04  5.26e+03   -0.0381     0.999
         *Z       ---       ---  1.31e+16  6.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883615, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756121, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.11996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.880532, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.28e+03     0.165     0.998         0
          1  4.42e+05  4.15e+03    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      95.1     0.165    -0.999   -0.0378
          1   6.7e+03  4.15e+03   -0.0378     0.999
         *Z       ---       ---  1.31e+16  6.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.60167e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000654, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884188, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.755365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.11985, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.879907, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.14e+03     0.152     0.998         0
          1  2.71e+05     3e+03    -0.787         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.5     0.152    -0.999   -0.0375
          1   4.1e+03     3e+03   -0.0375     0.999
         *Z       ---       ---  1.31e+16  6.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.00010261
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000566, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883447, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002343
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.116403
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034176
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036353
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131455
         W1a Well: minimal relaxation eigenvalue = 0.00887509
         W1a Well: maximal relaxation eigenvalue = 40.4422
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002289
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1278
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036404
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050407
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.13851
         W1b Well: minimal relaxation eigenvalue = 0.0207361
         W1b Well: maximal relaxation eigenvalue = 34.2854
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.688832, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.36e+05 3.68e+21
        W1b  -3608  -3608      792 3.89e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       459  9.06e-20  1.43e-21
        W1b   0.00218         1  1.97e-22  3.12e-24
         P1   1.1e+19  5.07e+21         1    0.0158
         P2  6.99e+20  3.21e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       464  1.68e-22  2.65e-24
        W1b   0.00215         1  3.62e-25  5.71e-27
         P1  5.95e+21  2.76e+24         1    0.0158
         P2  3.77e+23  1.75e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.692909, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757265, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128158, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905084, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.09e+05       0.2     0.998         0
          1  1.04e+07  1.45e+04    -0.804         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.86e+03       0.2    -0.999   -0.0375
          1  9.23e+04  1.45e+04   -0.0375     0.999
         *Z       ---       ---  1.53e+16  7.15e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119649, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.18e+04     0.186     0.998         0
          1  2.53e+06  9.47e+03    -0.798         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       371     0.186    -0.999   -0.0372
          1  2.25e+04  9.47e+03   -0.0372     0.999
         *Z       ---       ---  1.53e+16  7.15e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883689, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120485, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881342, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.09e+04     0.177     0.998         0
          1  1.43e+06  7.85e+03    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       186     0.177    -0.999    -0.037
          1  1.27e+04  7.85e+03    -0.037     0.999
         *Z       ---       ---  1.53e+16  7.15e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883517, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756796, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119295, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.880577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.05e+04     0.166     0.998         0
          1  8.35e+05  6.34e+03    -0.789         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      92.8     0.166    -0.999   -0.0368
          1  7.41e+03  6.34e+03   -0.0368     0.999
         *Z       ---       ---  1.53e+16  7.15e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.882718, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120274, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.23e+03     0.156     0.998         0
          1  4.97e+05  4.81e+03    -0.784         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.4     0.156    -0.999   -0.0366
          1  4.41e+03  4.81e+03   -0.0366     0.999
         *Z       ---       ---  1.53e+16  7.15e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000101152
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000612, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88632, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002131
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.10813
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038002
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135005
         W1a Well: minimal relaxation eigenvalue = 0.00478203
         W1a Well: maximal relaxation eigenvalue = 43.6492
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002096
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118619
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036204
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05851
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141582
         W1b Well: minimal relaxation eigenvalue = 0.0241451
         W1b Well: maximal relaxation eigenvalue = 23.3161
         W1b Well:       grid size = 158
         W1b Well:      real depth = -3319 1/cm
         W1b Well: effective depth = -3331 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.686495, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 158
      MasterEquation::Barrier::truncate: real weight = 9.15547e+26
      MasterEquation::Barrier::truncate: effective weight = 1.74203e+24
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.26e+05 5.35e+21
        W1b  -3331  -3331 6.76e+03 5.59e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3331 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       477  9.36e-20  1.82e-21
        W1b    0.0021         1  1.96e-22  3.82e-24
         P1  1.07e+19  5.09e+21         1    0.0194
         P2   5.5e+20  2.62e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       482   1.8e-22  3.49e-24
        W1b   0.00207         1  3.73e-25  7.24e-27
         P1  5.57e+21  2.68e+24         1    0.0194
         P2  2.86e+23  1.38e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.690546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.750267, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136778, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898455, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+05      0.18     0.998         0
          1  2.82e+07   1.2e+04    -0.791         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.81e+03      0.18    -0.999   -0.0362
          1  1.35e+05   1.2e+04   -0.0362     0.999
         *Z       ---       ---  1.79e+16  8.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900733, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119033, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.874978, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.58e+04     0.174     0.998         0
          1  6.95e+06  7.93e+03    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       363     0.174    -0.999   -0.0361
          1  3.32e+04  7.93e+03   -0.0361     0.999
         *Z       ---       ---  1.79e+16  8.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877149, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.751772, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119064, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875507, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+04     0.169     0.998         0
          1  3.94e+06  6.55e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       181     0.169    -0.999    -0.036
          1  1.88e+04  6.55e+03    -0.036     0.999
         *Z       ---       ---  1.79e+16  8.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877661, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.750429, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.118899, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873787, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.9e+04     0.163     0.998         0
          1  2.28e+06  5.16e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.6     0.163    -0.999   -0.0358
          1  1.09e+04  5.16e+03   -0.0358     0.999
         *Z       ---       ---  1.79e+16  8.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.875956, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.749254, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119458, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873373, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.48e+03     0.156     0.998         0
          1  1.33e+06  3.71e+03    -0.779         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.3     0.156    -0.999   -0.0357
          1  6.35e+03  3.71e+03   -0.0357     0.999
         *Z       ---       ---  1.79e+16  8.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.00010185
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000627, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876968, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 402.057, elapsed time[sec] = 8
