Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.006251, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.007365, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.129948, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002836, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.035751, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.32942, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.34149, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001201, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001791, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.115178, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003491, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.037455, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.23741, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.24232, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001161, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.002001, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.005729, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000816, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001385, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002997, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.012858, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000852, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.002001, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003709, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000754, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001313, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002813, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010124, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019474, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.020084, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0.1
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.753071, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003273, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.018286, elapsed time[sec] = 0
         effective power exponent at 399.898 kcal/mol = 9.01407
      interpolating states number/density done, cpu time[sec] = 1.79255, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.81523, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.011072, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.011236, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.091362, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.56169, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000116, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.56314, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000753, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.102343, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.044142, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.050845, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.011007, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.00059, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.37425, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.00482, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.5773, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.65139, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.65219, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.177817, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001397, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.39492, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.59703, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.2509, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000901, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000323, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010784, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010833, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  3.99522e+51  7.16371e+38  1.47797e+34  3.30169e+46
     200  3.87426e+38  2.39757e+42  4.20573e+36  5.78341e+35  6.21905e+37
     300  1.62356e+38   6.2003e+39  2.66938e+36  4.25758e+36  6.95471e+35
     400  2.18646e+38  6.06528e+38  4.17222e+36  1.67836e+37  2.85836e+35
     500  4.20247e+38  2.33681e+38  8.42533e+36  4.94985e+37  3.68706e+35
     600  9.11395e+38  1.70642e+38  1.83532e+37   1.2478e+38  7.13924e+35
     700  2.04507e+39  1.74317e+38  4.04463e+37  2.85316e+38   1.6066e+36
     800  4.57883e+39  2.15146e+38  8.78947e+37  6.09251e+38  3.78644e+36
     900  1.00673e+40  2.96719e+38  1.86391e+38  1.23428e+39  8.92065e+36
    1000  2.15873e+40  4.37313e+38  3.84242e+38  2.39496e+39  2.05678e+37
    1100   4.5032e+40  6.70523e+38  7.69432e+38    4.479e+39  4.59845e+37
    1200  9.13498e+40  1.05177e+39  1.49762e+39   8.1102e+39  9.93706e+37
    1300  1.80321e+41  1.66961e+39  2.83701e+39  1.42682e+40  2.07486e+38
    1400  3.46766e+41  2.66328e+39  5.23856e+39   2.4458e+40  4.19068e+38
    1500  6.50539e+41   4.2488e+39  9.44382e+39  4.09462e+40  8.20174e+38
    1600  1.19227e+42   6.7574e+39  1.66473e+40  6.70845e+40  1.55852e+39
    1700  2.13772e+42  1.06912e+40  2.87368e+40  1.07748e+41  2.88128e+39
    1800  3.75476e+42  1.68032e+40  4.86438e+40  1.69917e+41   5.1923e+39
    1900  6.46873e+42  2.62102e+40  8.08464e+40  2.63449e+41  9.13766e+39
    2000  1.09439e+43  4.05515e+40  1.32082e+41  4.02083e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.7081, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4205 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001814
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000559
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0529
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.230049
         W1a Well: minimal relaxation eigenvalue = 0.0683217
         W1a Well: maximal relaxation eigenvalue = 3.65732
         W1a Well:       grid size = 203
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002219
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.294862
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.083346
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.187694
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.341254
         W1b Well: minimal relaxation eigenvalue = 0.0780258
         W1b Well: maximal relaxation eigenvalue = 1.14093
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2627 1/cm
         B8 Barrier:        grid size = 194
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1227 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 33 1/cm
         B2 Barrier:        grid size = 273
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.2203, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 2.99472e+24
      MasterEquation::Barrier::truncate: effective weight = 2.43358e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1227 1.59e+05 4.88e+11
        W1b  -2627  -2627 3.62e+04 4.74e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1227 6.43e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     34 4.11e+13
         B2  -2627 3.09e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000968  2.12e-16  7.53e-57
        W1b  1.03e+03         1  2.19e-13  7.78e-54
         P1  4.71e+15  4.56e+12         1  3.55e-41
         P2  1.33e+56  1.28e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000162  2.74e-20   9.7e-61
        W1b  6.19e+03         1  1.69e-16     6e-57
         P1  3.65e+19  5.91e+15         1  3.55e-41
         P2  1.03e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.22478, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.91135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.309562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.25924, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683217
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.08    0.0439         0         1
          1      14.8      1.05         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.074    0.0439  -0.00127        -1
          1      1.01      1.05        -1   0.00127
         *Z       ---       ---  3.81e+14  1.22e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.26227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.90578, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.285579, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19943, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683217
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.243    0.0107         0         1
          1       4.6     0.371         1    -0.111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0166    0.0107  -0.00344        -1
          1     0.315     0.371        -1   0.00344
         *Z       ---       ---  3.81e+14  1.22e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.20184, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.126672, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.136681, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683217
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00484         0         1
          1       2.7     0.297         1    -0.206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00863   0.00484   -0.0064        -1
          1     0.185     0.297        -1    0.0064
         *Z       ---       ---  3.81e+14  1.22e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.137058, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003067, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022982, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683217
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0652   0.00196         0         1
          1      1.62     0.244         1     -0.35
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00446   0.00196   -0.0109        -1
          1      0.11     0.244        -1    0.0109
         *Z       ---       ---  3.81e+14  1.22e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01985, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003062, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022973, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683217
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0334  0.000712         0         1
          1     0.995     0.191         1    -0.516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00228  0.000712    -0.016        -1
          1     0.068     0.191        -1     0.016
         *Z       ---       ---  3.81e+14  1.22e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022997, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4414 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001982
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000592
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037935
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.228266
         W1a Well: minimal relaxation eigenvalue = 0.0669828
         W1a Well: maximal relaxation eigenvalue = 7.05419
         W1a Well:       grid size = 204
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1502 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002063
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.283386
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.085875
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.095904
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.340302
         W1b Well: minimal relaxation eigenvalue = 0.0756349
         W1b Well: maximal relaxation eigenvalue = 1.16017
         W1b Well:       grid size = 245
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2691 1/cm
         B8 Barrier:        grid size = 194
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1212 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 6 1/cm
         B2 Barrier:        grid size = 271
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3445 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.10018, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 245
      MasterEquation::Barrier::truncate: real weight = 1.26913e+24
      MasterEquation::Barrier::truncate: effective weight = 1.24831e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1502  -1212 1.86e+05 6.36e+11
        W1b  -2691  -2691 2.82e+04 5.82e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1212  8.5e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      7 5.31e+13
         B2  -2691 4.24e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00134  1.25e-16  4.35e-55
        W1b       744         1  9.34e-14  3.24e-52
         P1  7.97e+15  1.07e+13         1  3.47e-39
         P2   2.3e+54  3.09e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000331  1.67e-20  5.81e-59
        W1b  3.02e+03         1  5.06e-17  1.76e-55
         P1  5.98e+19  1.98e+16         1  3.47e-39
         P2  1.72e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.10419, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.9287, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.306209, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.25748, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0669828
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.05    0.0508         0         1
          1      16.5      1.24         1   -0.0344
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0703    0.0508  -0.00126        -1
          1      1.11      1.24        -1   0.00126
         *Z       ---       ---  3.25e+14  8.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.26002, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.9204, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.292181, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22075, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0669828
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0129         0         1
          1      5.11     0.403         1   -0.0969
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0161    0.0129  -0.00355        -1
          1     0.342     0.403        -1   0.00355
         *Z       ---       ---  3.25e+14  8.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.2232, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.109107, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003122, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.119188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0669828
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00604         0         1
          1      2.98     0.322         1    -0.184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00845   0.00604  -0.00675        -1
          1       0.2     0.322        -1   0.00675
         *Z       ---       ---  3.25e+14  8.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.119565, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.020014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003105, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023183, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0669828
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0656   0.00253         0         1
          1      1.78     0.269         1     -0.32
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00439   0.00253   -0.0117        -1
          1     0.119     0.269        -1    0.0117
         *Z       ---       ---  3.25e+14  8.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023207, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019972, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023164, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0669828
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0338  0.000957         0     0.999
          1       1.1     0.214         1    -0.482
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226  0.000957   -0.0176        -1
          1    0.0734     0.214        -1    0.0176
         *Z       ---       ---  3.25e+14  8.87e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023189, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4622 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001802
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000545
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036405
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.211914
         W1a Well: minimal relaxation eigenvalue = 0.0658366
         W1a Well: maximal relaxation eigenvalue = 4.73503
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001814
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.288093
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.080172
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079268
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.320041
         W1b Well: minimal relaxation eigenvalue = 0.0733346
         W1b Well: maximal relaxation eigenvalue = 1.16682
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2755 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 33 1/cm
         B2 Barrier:        grid size = 260
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3437 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04348, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 5.93179e+23
      MasterEquation::Barrier::truncate: effective weight = 6.96119e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1237 1.41e+05 8.22e+11
        W1b  -2755  -2755 2.11e+04 7.11e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 1.11e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     34 6.79e+13
         B2  -2755 5.77e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00187  7.53e-17  1.69e-53
        W1b       536         1  4.03e-14  9.03e-51
         P1  1.33e+16  2.48e+13         1  2.24e-37
         P2  5.93e+52  1.11e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000636  1.07e-20  2.41e-57
        W1b  1.57e+03         1  1.69e-17  3.78e-54
         P1  9.31e+19  5.92e+16         1  2.24e-37
         P2  4.16e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.04767, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76981, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.291513, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.08301, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658366
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02    0.0587         0         1
          1      19.9       1.1         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067    0.0587  -0.00126        -1
          1      1.31       1.1        -1   0.00126
         *Z       ---       ---  2.78e+14  6.43e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.08545, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76944, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.268348, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658366
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.239    0.0156         0         1
          1      5.78     0.401         1    -0.085
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0156  -0.00367        -1
          1      0.38     0.401        -1   0.00367
         *Z       ---       ---  2.78e+14  6.43e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.04851, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.474818, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002878, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.484346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658366
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.127   0.00751         0         1
          1      3.33     0.338         1    -0.165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00751  -0.00712        -1
          1     0.219     0.338        -1   0.00712
         *Z       ---       ---  2.78e+14  6.43e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.484712, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018463, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002856, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658366
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0665   0.00327         0     0.999
          1      1.97     0.291         1    -0.292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00438   0.00327   -0.0126        -1
          1      0.13     0.291        -1    0.0126
         *Z       ---       ---  2.78e+14  6.43e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021402, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018387, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021294, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658366
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0345   0.00128         0     0.999
          1      1.21     0.238         1    -0.448
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00227   0.00128   -0.0193        -1
          1    0.0795     0.238        -1    0.0193
         *Z       ---       ---  2.78e+14  6.43e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021319, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4831 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001945
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00055
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035301
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.211434
         W1a Well: minimal relaxation eigenvalue = 0.0646134
         W1a Well: maximal relaxation eigenvalue = 7.90147
         W1a Well:       grid size = 198
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001963
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.274049
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.08139
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.092579
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.326954
         W1b Well: minimal relaxation eigenvalue = 0.0712176
         W1b Well: maximal relaxation eigenvalue = 1.19055
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2817 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1216 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 30 1/cm
         B2 Barrier:        grid size = 258
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04915, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 3.05881e+23
      MasterEquation::Barrier::truncate: effective weight = 3.98065e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1216 1.76e+05 1.06e+12
        W1b  -2817  -2817 1.61e+04 8.66e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1216 1.45e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     31 8.64e+13
         B2  -2817 7.78e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00262  4.89e-17  4.91e-52
        W1b       381         1  1.86e-14  1.87e-49
         P1  2.05e+16  5.36e+13         1     1e-35
         P2  2.04e+51  5.34e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00116   7.2e-21  7.23e-56
        W1b       863         1  6.21e-18  6.24e-53
         P1  1.39e+20  1.61e+17         1     1e-35
         P2  1.38e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.05308, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.78916, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.305387, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12094, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1    0.0678         0         1
          1      21.9      1.29         1   -0.0253
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0649    0.0678   -0.0013        -1
          1      1.42      1.29        -1    0.0013
         *Z       ---       ---  2.46e+14  4.81e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.12342, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.67815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.271464, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95778, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0188         0         1
          1      6.31     0.436         1   -0.0757
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00388        -1
          1     0.408     0.436        -1   0.00388
         *Z       ---       ---  2.46e+14  4.81e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.96028, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.510933, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.520477, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0646134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.13   0.00936         0         1
          1      3.63     0.365         1    -0.149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0084   0.00936  -0.00761        -1
          1     0.234     0.365        -1   0.00761
         *Z       ---       ---  2.46e+14  4.81e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.520854, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018698, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002874, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02163, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0689   0.00421         0     0.999
          1      2.14     0.317         1    -0.268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00445   0.00421   -0.0137        -1
          1     0.138     0.317        -1    0.0137
         *Z       ---       ---  2.46e+14  4.81e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021656, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018639, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0361   0.00173         0     0.999
          1      1.32     0.263         1    -0.416
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00233   0.00173   -0.0213        -1
          1    0.0851     0.263        -1    0.0213
         *Z       ---       ---  2.46e+14  4.81e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021601, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5039 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001811
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000551
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039451
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.213387
         W1a Well: minimal relaxation eigenvalue = 0.0635964
         W1a Well: maximal relaxation eigenvalue = 5.67799
         W1a Well:       grid size = 198
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1495 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001765
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.274797
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081438
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094345
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.328791
         W1b Well: minimal relaxation eigenvalue = 0.0692173
         W1b Well: maximal relaxation eigenvalue = 1.22453
         W1b Well:       grid size = 240
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2880 1/cm
         B8 Barrier:        grid size = 190
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1231 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 23 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.05922, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 240
      MasterEquation::Barrier::truncate: real weight = 1.70906e+23
      MasterEquation::Barrier::truncate: effective weight = 2.3883e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1495  -1231 1.52e+05 1.35e+12
        W1b  -2880  -2880 1.16e+04 1.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1231 1.87e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     24 1.09e+14
         B2  -2880 1.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00367  3.29e-17  1.08e-50
        W1b       273         1  8.98e-15  2.95e-48
         P1  3.04e+16  1.11e+14         1  3.28e-34
         P2  9.24e+49  3.39e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00201     5e-21  1.64e-54
        W1b       497         1  2.49e-18  8.17e-52
         P1     2e+20  4.02e+17         1  3.28e-34
         P2  6.08e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.06314, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.81161, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.274924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12035, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635964
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.996     0.078         0         1
          1      25.7      1.12         1   -0.0221
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0634     0.078  -0.00134        -1
          1      1.64      1.12        -1   0.00134
         *Z       ---       ---  2.21e+14  3.66e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.1228, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.81399, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.27122, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09301, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635964
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.247    0.0227         0         1
          1      7.03     0.438         1   -0.0676
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0227  -0.00409        -1
          1     0.447     0.438        -1   0.00409
         *Z       ---       ---  2.21e+14  3.66e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0954, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.38196, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002884, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.391593, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635964
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134    0.0116         0         1
          1      3.99     0.383         1    -0.134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00853    0.0116  -0.00811        -1
          1     0.254     0.383        -1   0.00811
         *Z       ---       ---  2.21e+14  3.66e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.391962, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018882, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002876, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021816, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635964
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.072   0.00541         0     0.999
          1      2.34     0.341         1    -0.245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00458   0.00541   -0.0148        -1
          1     0.149     0.341        -1    0.0148
         *Z       ---       ---  2.21e+14  3.66e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021746, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635964
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0381   0.00231         0     0.999
          1      1.44     0.289         1    -0.385
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00242   0.00231   -0.0233        -1
          1    0.0915     0.289        -1    0.0233
         *Z       ---       ---  2.21e+14  3.66e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021771, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5248 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001765
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000522
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039067
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.202119
         W1a Well: minimal relaxation eigenvalue = 0.0624802
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 193
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001758
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.257318
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078232
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09662
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.315556
         W1b Well: minimal relaxation eigenvalue = 0.0670801
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2977 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 33 1/cm
         B2 Barrier:        grid size = 248
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3431 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0143, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 1.01248e+23
      MasterEquation::Barrier::truncate: effective weight = 1.56984e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1226 1.59e+05 1.71e+12
        W1b  -2977  -2977 6.97e+03 1.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.41e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     34 1.37e+14
         B2  -2977 1.39e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00486  2.23e-17  1.81e-49
        W1b       206         1  4.59e-15  3.73e-47
         P1  4.48e+16  2.18e+14         1  8.12e-33
         P2  5.52e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00335  3.59e-21  2.92e-53
        W1b       299         1  1.07e-18  8.71e-51
         P1  2.78e+20  9.31e+17         1  8.12e-33
         P2  3.43e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.01816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.284279, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.941    0.0891         0         1
          1      28.3      1.27         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00129        -1
          1      1.77      1.27        -1   0.00129
         *Z       ---       ---  1.99e+14  2.86e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.002, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.259677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96256, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0267         0         1
          1      7.65     0.471         1   -0.0592
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0152    0.0267  -0.00413        -1
          1     0.478     0.471        -1   0.00413
         *Z       ---       ---  1.99e+14  2.86e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.9649, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.642842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.6523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134     0.014         0     0.999
          1      4.34     0.412         1    -0.119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014  -0.00832        -1
          1     0.271     0.412        -1   0.00832
         *Z       ---       ---  1.99e+14  2.86e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.65267, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002786, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020541, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0728   0.00674         0     0.999
          1      2.54     0.369         1    -0.222
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00674   -0.0154        -1
          1     0.159     0.369        -1    0.0154
         *Z       ---       ---  1.99e+14  2.86e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020565, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017658, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020484, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.039     0.003         0     0.998
          1      1.56     0.317         1    -0.354
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244     0.003   -0.0246        -1
          1    0.0977     0.317        -1    0.0246
         *Z       ---       ---  1.99e+14  2.86e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020508, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5456 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001842
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000523
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039018
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.198698
         W1a Well: minimal relaxation eigenvalue = 0.0615715
         W1a Well: maximal relaxation eigenvalue = 6.10829
         W1a Well:       grid size = 193
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001741
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.257389
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078991
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094773
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.316565
         W1b Well: minimal relaxation eigenvalue = 0.0653548
         W1b Well: maximal relaxation eigenvalue = 1.26266
         W1b Well:       grid size = 236
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3040 1/cm
         B8 Barrier:        grid size = 186
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1239 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 20 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3436 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.19491, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 236
      MasterEquation::Barrier::truncate: real weight = 6.39919e+22
      MasterEquation::Barrier::truncate: effective weight = 1.03541e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1239 1.37e+05 2.16e+12
        W1b  -3040  -3040 5.11e+03 1.53e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1239 3.08e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     21  1.7e+14
         B2  -3040 1.83e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00684   1.6e-17  2.51e-48
        W1b       146         1  2.35e-15  3.67e-46
         P1  6.24e+16  4.26e+14         1  1.57e-31
         P2  3.98e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00537  2.66e-21  4.16e-52
        W1b       186         1  4.95e-19  7.76e-50
         P1  3.76e+20  2.02e+18         1  1.57e-31
         P2   2.4e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.19908, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.70644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.289149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.954     0.103         0         1
          1      32.4       1.1         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103  -0.00137        -1
          1         2       1.1        -1   0.00137
         *Z       ---       ---  1.84e+14  2.22e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.03006, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.71112, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.259102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97777, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254    0.0322         0         1
          1      8.45     0.479         1   -0.0536
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322  -0.00444        -1
          1      0.52     0.479        -1   0.00444
         *Z       ---       ---  1.84e+14  2.22e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.412595, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002763, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.421771, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.142    0.0173         0     0.999
          1      4.75     0.435         1    -0.109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00876    0.0173  -0.00898        -1
          1     0.293     0.435        -1   0.00898
         *Z       ---       ---  1.84e+14  2.22e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.422151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017852, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020662, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0786   0.00863         0     0.999
          1      2.78     0.398         1    -0.203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00863   -0.0168        -1
          1     0.171     0.398        -1    0.0168
         *Z       ---       ---  1.84e+14  2.22e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020687, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002748, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020609, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0427     0.004         0     0.998
          1      1.71     0.347         1    -0.326
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263     0.004   -0.0269        -1
          1     0.105     0.347        -1    0.0269
         *Z       ---       ---  1.84e+14  2.22e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020634, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5665 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001701
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000498
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03594
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.189645
         W1a Well: minimal relaxation eigenvalue = 0.0606557
         W1a Well: maximal relaxation eigenvalue = 4.51499
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001787
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.255825
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074033
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089006
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.290309
         W1b Well: minimal relaxation eigenvalue = 0.0637583
         W1b Well: maximal relaxation eigenvalue = 1.34006
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3113 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1213 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 3 1/cm
         B2 Barrier:        grid size = 240
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3455 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.958862, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 4.29613e+22
      MasterEquation::Barrier::truncate: effective weight = 7.39239e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1213 1.85e+05 2.72e+12
        W1b  -3113  -3113 3.01e+03 1.84e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1213 3.91e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      4 2.11e+14
         B2  -3113  2.4e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00957  1.15e-17   2.8e-47
        W1b       105         1   1.2e-15  2.92e-45
         P1  8.68e+16  8.31e+14         1  2.43e-30
         P2  3.58e+46  3.42e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00832  2.01e-21  4.89e-51
        W1b       120         1  2.42e-19  5.88e-49
         P1  4.96e+20  4.13e+18         1  2.43e-30
         P2  2.04e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.963547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.270148, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88641, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606557
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.983     0.118         0         1
          1      36.8     0.989         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0596     0.118  -0.00147        -1
          1      2.23     0.989        -1   0.00147
         *Z       ---       ---  1.69e+14  1.73e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.88886, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60462, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244507, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85641, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606557
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.271    0.0384         0         1
          1      9.28     0.499         1   -0.0491
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0164    0.0384  -0.00481        -1
          1     0.563     0.499        -1   0.00481
         *Z       ---       ---  1.69e+14  1.73e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.870541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.879261, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606557
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154    0.0213         0     0.999
          1      5.19     0.464         1   -0.0993
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00932    0.0213  -0.00971        -1
          1     0.315     0.464        -1   0.00971
         *Z       ---       ---  1.69e+14  1.73e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.87964, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016726, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019374, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606557
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.086     0.011         0     0.998
          1      3.03     0.431         1    -0.186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00522     0.011   -0.0182        -1
          1     0.184     0.431        -1    0.0182
         *Z       ---       ---  1.69e+14  1.73e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019398, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016709, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002596, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01936, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606557
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0474    0.0053         0     0.997
          1      1.86      0.38         1      -0.3
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00288    0.0053   -0.0293        -1
          1     0.113      0.38        -1    0.0293
         *Z       ---       ---  1.69e+14  1.73e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019386, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5873 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001795
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000502
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041502
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.187149
         W1a Well: minimal relaxation eigenvalue = 0.0597027
         W1a Well: maximal relaxation eigenvalue = 6.94408
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1498 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001881
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.239873
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07513
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.107684
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.285823
         W1b Well: minimal relaxation eigenvalue = 0.062435
         W1b Well: maximal relaxation eigenvalue = 1.48514
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3175 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1225 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 22 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.961114, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 3.00785e+22
      MasterEquation::Barrier::truncate: effective weight = 5.32983e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1498  -1225 1.62e+05 3.39e+12
        W1b  -3175  -3175 1.58e+03  2.2e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1225 4.94e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     23  2.6e+14
         B2  -3175 3.13e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0136   8.7e-18  2.69e-46
        W1b      73.7         1  6.41e-16  1.98e-44
         P1  1.15e+17  1.56e+15         1  3.09e-29
         P2  3.71e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0125  1.56e-21  4.83e-50
        W1b      79.9         1  1.25e-19  3.86e-48
         P1   6.4e+20  8.01e+18         1  3.09e-29
         P2  2.07e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.964927, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58894, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253785, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597027
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.135         0         1
          1      40.1       1.1         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.063     0.135  -0.00167        -1
          1      2.39       1.1        -1   0.00167
         *Z       ---       ---  1.59e+14  1.36e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.86482, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.245415, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84785, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597027
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.299     0.046         0     0.999
          1      10.1     0.539         1   -0.0461
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046  -0.00537        -1
          1       0.6     0.539        -1   0.00537
         *Z       ---       ---  1.59e+14  1.36e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85017, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.842525, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002678, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.851418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597027
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0262         0     0.999
          1      5.63     0.501         1   -0.0921
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102    0.0262   -0.0107        -1
          1     0.336     0.501        -1    0.0107
         *Z       ---       ---  1.59e+14  1.36e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.851786, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016902, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00265, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597027
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0974    0.0139         0     0.998
          1      3.29     0.467         1    -0.171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00581    0.0139     -0.02        -1
          1     0.196     0.467        -1      0.02
         *Z       ---       ---  1.59e+14  1.36e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019632, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016822, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019528, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597027
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0544   0.00703         0     0.996
          1      2.03     0.416         1    -0.277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00703   -0.0322    -0.999
          1     0.121     0.416    -0.999    0.0322
         *Z       ---       ---  1.59e+14  1.36e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019553, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6082 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001663
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000506
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037265
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.189507
         W1a Well: minimal relaxation eigenvalue = 0.0589038
         W1a Well: maximal relaxation eigenvalue = 4.92837
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1478 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001744
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264946
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075927
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.098943
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.286244
         W1b Well: minimal relaxation eigenvalue = 0.061186
         W1b Well: maximal relaxation eigenvalue = 1.5224
         W1b Well:       grid size = 233
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3238 1/cm
         B8 Barrier:        grid size = 183
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 1 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3438 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.976487, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 233
      MasterEquation::Barrier::truncate: real weight = 2.21275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.02023e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1478  -1238  1.4e+05 4.23e+12
        W1b  -3238  -3238 1.21e+03 2.63e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 6.21e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      2  3.2e+14
         B2  -3238 4.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0189  6.72e-18  2.22e-45
        W1b      52.8         1  3.55e-16  1.17e-43
         P1  1.49e+17  2.82e+15         1  3.31e-28
         P2  4.51e+44  8.53e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0183  1.24e-21  4.09e-49
        W1b      54.6         1  6.75e-20  2.23e-47
         P1  8.09e+20  1.48e+19         1  3.31e-28
         P2  2.45e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.980313, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.275563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589038
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.155         0         1
          1      45.1     0.967         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0667     0.155  -0.00188        -1
          1      2.66     0.967        -1   0.00188
         *Z       ---       ---  1.51e+14   1.1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.89819, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85985, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589038
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.329    0.0546         0     0.999
          1        11     0.566         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0194    0.0546  -0.00595        -1
          1     0.649     0.566        -1   0.00595
         *Z       ---       ---  1.51e+14   1.1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.86216, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.806749, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002665, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.815523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589038
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.192    0.0319         0     0.998
          1      6.15     0.537         1   -0.0855
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0319   -0.0118        -1
          1     0.362     0.537        -1    0.0118
         *Z       ---       ---  1.51e+14   1.1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.815894, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002644, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019762, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589038
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.11    0.0175         0     0.997
          1      3.59     0.506         1    -0.158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00649    0.0175   -0.0218        -1
          1     0.211     0.506        -1    0.0218
         *Z       ---       ---  1.51e+14   1.1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019786, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002643, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019751, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589038
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0625   0.00921         0     0.995
          1      2.22     0.456         1    -0.255
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00368   0.00921    -0.035    -0.999
          1     0.131     0.456    -0.999     0.035
         *Z       ---       ---  1.51e+14   1.1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019775, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6290 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001639
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000482
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032441
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.187267
         W1a Well: minimal relaxation eigenvalue = 0.0580661
         W1a Well: maximal relaxation eigenvalue = 5.19309
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001853
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.254646
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074454
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075985
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.288669
         W1b Well: minimal relaxation eigenvalue = 0.060029
         W1b Well: maximal relaxation eigenvalue = 1.66466
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3328 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1227 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 32 1/cm
         B2 Barrier:        grid size = 232
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3453 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.936626, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.6762e+22
      MasterEquation::Barrier::truncate: effective weight = 3.20552e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1227 1.57e+05 5.23e+12
        W1b  -3328  -3328      516 3.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1227 7.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     33  3.9e+14
         B2  -3328 5.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0261  5.16e-18  1.55e-44
        W1b      38.3         1  1.98e-16  5.95e-43
         P1  1.94e+17  5.06e+15         1  3.01e-27
         P2  6.43e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  9.97e-22  3.01e-48
        W1b      38.2         1  3.81e-20  1.15e-46
         P1     1e+21  2.63e+19         1  3.01e-27
         P2  3.33e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.940513, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55622, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.248725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83621, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0580661
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.22     0.176         0         1
          1      49.8     0.974         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0711     0.176  -0.00213        -1
          1      2.89     0.974        -1   0.00213
         *Z       ---       ---  1.42e+14   8.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83862, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55834, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.238632, elapsed time[sec] = 1
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80415, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0580661
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.365    0.0644         0     0.999
          1        12     0.607         1   -0.0409
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0212    0.0644  -0.00661        -1
          1     0.697     0.607        -1   0.00661
         *Z       ---       ---  1.42e+14   8.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.80655, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.989554, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00254, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.998097, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0580661
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.215    0.0385         0     0.998
          1       6.7      0.58         1   -0.0797
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0129        -1
          1     0.389      0.58        -1    0.0129
         *Z       ---       ---  1.42e+14   8.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.998468, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016239, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002541, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018834, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0580661
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.125    0.0218         0     0.996
          1      3.92      0.55         1    -0.146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00727    0.0218   -0.0236        -1
          1     0.227      0.55        -1    0.0236
         *Z       ---       ---  1.42e+14   8.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018858, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00252, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018765, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0580661
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0721    0.0119         0     0.994
          1      2.43     0.498         1    -0.235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419    0.0119   -0.0379    -0.999
          1     0.141     0.498    -0.999    0.0379
         *Z       ---       ---  1.42e+14   8.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018789, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6499 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00159
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000486
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041237
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.18937
         W1a Well: minimal relaxation eigenvalue = 0.0572154
         W1a Well: maximal relaxation eigenvalue = 7.88261
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1499 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001913
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264697
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075004
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.091805
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.299386
         W1b Well: minimal relaxation eigenvalue = 0.0591049
         W1b Well: maximal relaxation eigenvalue = 2.54818
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 6 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.984648, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 1.32112e+22
      MasterEquation::Barrier::truncate: effective weight = 2.58873e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1499  -1241 1.35e+05 6.46e+12
        W1b  -3391  -3391      155 3.73e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 9.66e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      7 4.75e+14
         B2  -3391 6.69e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0362  4.13e-18  9.83e-44
        W1b      27.6         1  1.14e-16  2.72e-42
         P1  2.42e+17  8.77e+15         1  2.38e-26
         P2  1.02e+43  3.68e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0366  8.17e-22  1.95e-47
        W1b      27.3         1  2.23e-20  5.32e-46
         P1  1.22e+21  4.48e+19         1  2.38e-26
         P2  5.14e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.988497, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57619, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.257466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85209, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.38     0.199         0         1
          1      53.5      1.15         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.079     0.199   -0.0025        -1
          1      3.06      1.15        -1    0.0025
         *Z       ---       ---  1.37e+14   7.2e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85451, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239003, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82031, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.418    0.0756         0     0.999
          1        13     0.663         1   -0.0395
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0239    0.0756  -0.00752        -1
          1     0.744     0.663        -1   0.00752
         *Z       ---       ---  1.37e+14   7.2e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82267, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.947928, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002557, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956573, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0463         0     0.997
          1      7.27     0.631         1   -0.0754
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0463   -0.0144        -1
          1     0.416     0.631        -1    0.0144
         *Z       ---       ---  1.37e+14   7.2e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.956948, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016415, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019024, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146     0.027         0     0.995
          1      4.27     0.598         1    -0.137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.027    -0.026        -1
          1     0.244     0.598        -1     0.026
         *Z       ---       ---  1.37e+14   7.2e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019048, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016371, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0852    0.0154         0     0.992
          1      2.67     0.545         1    -0.217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00487    0.0154   -0.0412    -0.999
          1     0.153     0.545    -0.999    0.0412
         *Z       ---       ---  1.37e+14   7.2e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019004, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6707 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000487
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033264
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.188212
         W1a Well: minimal relaxation eigenvalue = 0.0565306
         W1a Well: maximal relaxation eigenvalue = 5.60426
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1477 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001914
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.250064
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074083
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082726
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.298914
         W1b Well: minimal relaxation eigenvalue = 0.0582574
         W1b Well: maximal relaxation eigenvalue = 1.84433
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3369 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1212 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 19 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3456 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.950423, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.06866e+22
      MasterEquation::Barrier::truncate: effective weight = 2.14311e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1477  -1212 1.85e+05 7.93e+12
        W1b  -3369  -3369      337 4.42e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1212  1.2e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     20 5.75e+14
         B2  -3369 8.53e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0494  3.35e-18  5.55e-43
        W1b      20.2         1  6.78e-17  1.12e-41
         P1  2.98e+17  1.47e+16         1  1.65e-25
         P2   1.8e+42  8.91e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0501  6.79e-22  1.12e-46
        W1b      19.9         1  1.35e-20  2.24e-45
         P1  1.47e+21  7.38e+19         1  1.65e-25
         P2   8.9e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.95431, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56277, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.249481, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83423, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0565306
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.56     0.223         0     0.999
          1      59.6      1.06         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0882     0.223  -0.00294        -1
          1      3.37      1.06        -1   0.00294
         *Z       ---       ---  1.32e+14  5.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56956, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240686, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0565306
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.478     0.088         0     0.998
          1      14.2     0.706         1   -0.0384
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.027     0.088  -0.00854        -1
          1     0.805     0.706        -1   0.00854
         *Z       ---       ---  1.32e+14  5.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.965395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002556, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974017, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0565306
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.286    0.0551         0     0.996
          1      7.96     0.682         1   -0.0717
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0162    0.0551    -0.016        -1
          1      0.45     0.682        -1     0.016
         *Z       ---       ---  1.32e+14  5.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974392, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016352, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018974, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0565306
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.17    0.0332         0     0.994
          1      4.68     0.651         1    -0.128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00962    0.0332   -0.0284        -1
          1     0.265     0.651        -1    0.0284
         *Z       ---       ---  1.32e+14  5.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018999, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01631, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018927, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0565306
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       0.1    0.0195         0      0.99
          1      2.93     0.596         1    -0.201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00568    0.0195   -0.0446    -0.999
          1     0.166     0.596    -0.999    0.0446
         *Z       ---       ---  1.32e+14  5.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018951, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6916 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001637
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000471
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036865
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.184417
         W1a Well: minimal relaxation eigenvalue = 0.0557136
         W1a Well: maximal relaxation eigenvalue = 8.62797
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1502 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001756
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.240773
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071719
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085606
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.283087
         W1b Well: minimal relaxation eigenvalue = 0.0574468
         W1b Well: maximal relaxation eigenvalue = 2.20891
         W1b Well:       grid size = 224
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3388 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 16 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.924702, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 224
      MasterEquation::Barrier::truncate: real weight = 8.92773e+21
      MasterEquation::Barrier::truncate: effective weight = 1.87042e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1502  -1226  1.6e+05 9.72e+12
        W1b  -3388  -3388      218 5.22e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 1.48e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     17 6.94e+14
         B2  -3388 1.08e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0666   2.7e-18  2.76e-42
        W1b        15         1  4.06e-17  4.15e-41
         P1   3.7e+17  2.46e+16         1  1.02e-24
         P2  3.62e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0675  5.73e-22  5.85e-46
        W1b      14.8         1  8.49e-21  8.67e-45
         P1  1.75e+21  1.18e+20         1  1.02e-24
         P2  1.71e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.928547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.254789, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.249         0     0.999
          1      64.5      1.22         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0988     0.249  -0.00346        -1
          1      3.59      1.22        -1   0.00346
         *Z       ---       ---  1.27e+14  4.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.77113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.229765, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72189, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.549     0.102         0     0.998
          1      15.5     0.774         1   -0.0375
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102  -0.00969        -1
          1     0.861     0.774        -1   0.00969
         *Z       ---       ---  1.27e+14  4.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72426, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14087, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002512, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1493, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0651         0     0.995
          1      8.66     0.744         1   -0.0685
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0651   -0.0177        -1
          1     0.483     0.744        -1    0.0177
         *Z       ---       ---  1.27e+14  4.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14967, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002426, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017959, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.198    0.0402         0     0.992
          1      5.12      0.71         1     -0.12
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0402   -0.0309        -1
          1     0.285      0.71        -1    0.0309
         *Z       ---       ---  1.27e+14  4.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017983, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015432, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002413, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017896, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.118    0.0245    0.0122     0.988
          1      3.23     0.652         1    -0.186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0066    0.0245    -0.048    -0.999
          1      0.18     0.652    -0.999     0.048
         *Z       ---       ---  1.27e+14  4.93e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017921, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7124 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001618
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000471
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031223
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182214
         W1a Well: minimal relaxation eigenvalue = 0.0551013
         W1a Well: maximal relaxation eigenvalue = 6.05015
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001682
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.252185
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07091
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064524
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.282707
         W1b Well: minimal relaxation eigenvalue = 0.0567029
         W1b Well: maximal relaxation eigenvalue = 1.86464
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3357 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 27 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.905776, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.61188e+21
      MasterEquation::Barrier::truncate: effective weight = 1.62703e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1241 1.33e+05 1.18e+13
        W1b  -3357  -3357      415 6.15e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.81e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     28 8.34e+14
         B2  -3357 1.36e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0882  2.26e-18  1.28e-41
        W1b      11.3         1  2.56e-17  1.45e-40
         P1  4.43e+17  3.91e+16         1  5.66e-24
         P2  7.82e+40   6.9e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0892  4.89e-22  2.77e-45
        W1b      11.2         1  5.48e-21   3.1e-44
         P1  2.05e+21  1.83e+20         1  5.66e-24
         P2  3.61e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.909889, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48128, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.252853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75342, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551013
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.277         0     0.999
          1      71.7      1.11         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.111     0.277  -0.00404        -1
          1      3.95      1.11        -1   0.00404
         *Z       ---       ---  1.24e+14  4.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.75585, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.4844, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.227095, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71845, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551013
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.627     0.117         0     0.997
          1      16.9     0.829         1   -0.0367
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0346     0.117   -0.0109        -1
          1     0.933     0.829        -1    0.0109
         *Z       ---       ---  1.24e+14  4.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72081, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15667, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003146, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16569, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551013
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.38    0.0761         0     0.994
          1       9.5     0.806         1   -0.0656
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021    0.0761   -0.0195        -1
          1     0.523     0.806        -1    0.0195
         *Z       ---       ---  1.24e+14  4.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16607, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017916, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551013
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0482         0      0.99
          1      5.62     0.773         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0127    0.0482   -0.0335    -0.999
          1      0.31     0.773    -0.999    0.0335
         *Z       ---       ---  1.24e+14  4.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01794, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015417, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002404, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017873, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551013
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.139    0.0303     0.015     0.985
          1      3.57     0.712         1    -0.173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00766    0.0303   -0.0512    -0.999
          1     0.196     0.712    -0.999    0.0512
         *Z       ---       ---  1.24e+14  4.18e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017897, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7333 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001636
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000456
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033818
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174558
         W1a Well: minimal relaxation eigenvalue = 0.0544098
         W1a Well: maximal relaxation eigenvalue = 6.5693
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1487 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001804
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.221415
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068097
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087086
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.263568
         W1b Well: minimal relaxation eigenvalue = 0.0559404
         W1b Well: maximal relaxation eigenvalue = 2.99098
         W1b Well:       grid size = 219
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3398 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1242 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 31 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3447 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.870243, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 219
      MasterEquation::Barrier::truncate: real weight = 6.64064e+21
      MasterEquation::Barrier::truncate: effective weight = 1.4818e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1487  -1242 1.33e+05 1.44e+13
        W1b  -3398  -3398      142 7.24e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1242 2.22e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     32 9.99e+14
         B2  -3398 1.72e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.115  1.87e-18  5.32e-41
        W1b      8.71         1  1.63e-17  4.63e-40
         P1  5.35e+17  6.14e+16         1  2.85e-23
         P2  1.88e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.116  4.22e-22   1.2e-44
        W1b       8.6         1  3.63e-21  1.03e-43
         P1  2.37e+21  2.76e+20         1  2.85e-23
         P2  8.33e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.874055, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40734, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241448, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544098
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.26     0.307         0     0.998
          1      78.3      1.18         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.307  -0.00462        -1
          1      4.26      1.18        -1   0.00462
         *Z       ---       ---  1.21e+14  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67459, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41424, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217346, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544098
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.711     0.133         0     0.996
          1      18.5     0.902         1   -0.0358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133   -0.0121        -1
          1         1     0.902        -1    0.0121
         *Z       ---       ---  1.21e+14  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64058, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31386, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.020452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3401, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544098
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.434    0.0882         0     0.993
          1      10.4     0.878         1   -0.0627
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236    0.0882   -0.0212        -1
          1     0.565     0.878        -1    0.0212
         *Z       ---       ---  1.21e+14  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34053, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015144, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002317, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017639, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544098
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.265    0.0571     0.012     0.988
          1      6.17     0.843         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0571   -0.0359    -0.999
          1     0.336     0.843    -0.999    0.0359
         *Z       ---       ---  1.21e+14  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017025, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544098
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.162     0.037    0.0181     0.982
          1      3.94     0.778         1     -0.16
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00879     0.037   -0.0542    -0.999
          1     0.214     0.778    -0.999    0.0542
         *Z       ---       ---  1.21e+14  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017049, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7541 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001598
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000465
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033414
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.178174
         W1a Well: minimal relaxation eigenvalue = 0.0536683
         W1a Well: maximal relaxation eigenvalue = 10.0631
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00181
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.239985
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067875
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082954
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.266073
         W1b Well: minimal relaxation eigenvalue = 0.0552529
         W1b Well: maximal relaxation eigenvalue = 1.93589
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1259 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -9 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3459 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.890666, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.89343e+21
      MasterEquation::Barrier::truncate: effective weight = 1.34103e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1259 1.08e+05 1.74e+13
        W1b  -3359  -3359      420 8.49e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1259 2.71e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -9 1.19e+15
         B2  -3359 2.14e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.148   1.6e-18  2.09e-40
        W1b      6.78         1  1.08e-17  1.41e-39
         P1  6.26e+17  9.24e+16         1  1.31e-22
         P2  4.79e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.149  3.68e-22   4.8e-44
        W1b       6.7         1  2.46e-21  3.22e-43
         P1  2.72e+21  4.06e+20         1  1.31e-22
         P2  2.08e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.894468, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40702, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240918, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67868, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.56     0.338         0     0.998
          1      83.4      1.54         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00526        -1
          1      4.48      1.54        -1   0.00526
         *Z       ---       ---  1.19e+14  3.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.6811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218443, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.809      0.15         0     0.995
          1        20     0.994         1   -0.0351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0135        -1
          1      1.08     0.994        -1    0.0135
         *Z       ---       ---  1.19e+14  3.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64332, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3037, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01989, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.496     0.101         0     0.991
          1      11.3      0.96         1   -0.0602
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101   -0.0231        -1
          1     0.607      0.96        -1    0.0231
         *Z       ---       ---  1.19e+14  3.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32977, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014986, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00231, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017469, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.304     0.067    0.0145     0.985
          1      6.77      0.92         1      -0.1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163     0.067   -0.0384    -0.999
          1     0.363      0.92    -0.999    0.0384
         *Z       ---       ---  1.19e+14  3.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017504, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014639, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00232, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.188    0.0446    0.0216     0.978
          1      4.35      0.85         1    -0.149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0446   -0.0572    -0.998
          1     0.233      0.85    -0.998    0.0572
         *Z       ---       ---  1.19e+14  3.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7750 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001645
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000461
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035636
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179691
         W1a Well: minimal relaxation eigenvalue = 0.0531607
         W1a Well: maximal relaxation eigenvalue = 6.8809
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1481 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001705
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.24306
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067313
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071778
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.267843
         W1b Well: minimal relaxation eigenvalue = 0.0545698
         W1b Well: maximal relaxation eigenvalue = 2.01274
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 220
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3470 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.886078, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.3286e+21
      MasterEquation::Barrier::truncate: effective weight = 1.23927e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1481  -1226  1.6e+05  2.1e+13
        W1b  -3368  -3368      381 9.95e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 3.29e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.42e+15
         B2  -3368 2.67e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.187  1.38e-18  7.61e-40
        W1b      5.35         1  7.37e-18  4.07e-39
         P1  7.26e+17  1.36e+17         1  5.53e-22
         P2  1.31e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.189  3.23e-22  1.79e-43
        W1b      5.28         1  1.71e-21  9.44e-43
         P1  3.09e+21  5.86e+20         1  5.53e-22
         P2  5.59e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.890202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67326, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.85     0.371         0     0.997
          1      93.7      1.32         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.371  -0.00595        -1
          1      4.98      1.32        -1   0.00595
         *Z       ---       ---  1.17e+14  2.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67567, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.414, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217261, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63799, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.909     0.169         0     0.994
          1        22      1.07         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0483     0.169   -0.0148        -1
          1      1.17      1.07        -1    0.0148
         *Z       ---       ---  1.17e+14  2.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64034, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30927, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.020706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33576, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.56     0.116    0.0107     0.989
          1      12.4      1.04         1   -0.0578
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.116    -0.025        -1
          1     0.661      1.04        -1     0.025
         *Z       ---       ---  1.17e+14  2.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015317, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002328, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017827, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.347     0.078    0.0173     0.983
          1      7.47         1         1   -0.0942
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184     0.078   -0.0407    -0.999
          1     0.397         1    -0.999    0.0407
         *Z       ---       ---  1.17e+14  2.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014627, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01699, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0532    0.0252     0.975
          1      4.82     0.927         1    -0.139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0532   -0.0598    -0.998
          1     0.256     0.927    -0.998    0.0598
         *Z       ---       ---  1.17e+14  2.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017013, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7959 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001473
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000447
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029746
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1782
         W1a Well: minimal relaxation eigenvalue = 0.0525758
         W1a Well: maximal relaxation eigenvalue = 6.31884
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001768
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.231752
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064951
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083216
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260633
         W1b Well: minimal relaxation eigenvalue = 0.0538946
         W1b Well: maximal relaxation eigenvalue = 2.20415
         W1b Well:       grid size = 214
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 8 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3436 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.869282, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 214
      MasterEquation::Barrier::truncate: real weight = 4.88601e+21
      MasterEquation::Barrier::truncate: effective weight = 1.1805e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1210 1.89e+05 2.53e+13
        W1b  -3383  -3383      301 1.16e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.99e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      9 1.68e+15
         B2  -3383 3.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.234  1.18e-18  2.55e-39
        W1b      4.28         1  5.03e-18  1.09e-38
         P1  8.51e+17  1.99e+17         1  2.17e-21
         P2  3.93e+38  9.18e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.237  2.87e-22  6.21e-43
        W1b      4.22         1  1.21e-21  2.62e-42
         P1  3.49e+21  8.27e+20         1  2.17e-21
         P2  1.61e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.873044, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35034, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.218005, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5833, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0525758
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.18     0.407         0     0.997
          1       102      1.42         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.167     0.407  -0.00662        -1
          1      5.37      1.42        -1   0.00662
         *Z       ---       ---  1.15e+14  2.38e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.5857, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208101, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56884, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525758
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.189         0     0.992
          1      24.1      1.16         1   -0.0335
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0536     0.189   -0.0162        -1
          1      1.27      1.16        -1    0.0162
         *Z       ---       ---  1.15e+14  2.38e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.57118, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35228, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124419, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48288, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525758
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.632     0.131    0.0128     0.987
          1      13.6      1.14         1   -0.0554
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0332     0.131   -0.0268        -1
          1     0.717      1.14        -1    0.0268
         *Z       ---       ---  1.15e+14  2.38e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4835, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.031455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.034179, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525758
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.394    0.0901    0.0203      0.98
          1      8.23      1.09         1   -0.0889
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0901   -0.0429    -0.999
          1     0.433      1.09    -0.999    0.0429
         *Z       ---       ---  1.15e+14  2.38e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.034242, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013998, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002196, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525758
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0629    0.0293     0.971
          1      5.34      1.01         1    -0.129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.013    0.0629   -0.0622    -0.998
          1     0.281      1.01    -0.998    0.0622
         *Z       ---       ---  1.15e+14  2.38e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016273, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8167 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001476
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000457
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032258
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.176839
         W1a Well: minimal relaxation eigenvalue = 0.0519504
         W1a Well: maximal relaxation eigenvalue = 8.36922
         W1a Well:       grid size = 179
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1499 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001789
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.224275
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063693
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.708769
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.251475
         W1b Well: minimal relaxation eigenvalue = 0.0532627
         W1b Well: maximal relaxation eigenvalue = 2.35854
         W1b Well:       grid size = 214
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3389 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 12 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.47789, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 214
      MasterEquation::Barrier::truncate: real weight = 4.55941e+21
      MasterEquation::Barrier::truncate: effective weight = 1.12228e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1499  -1229 1.56e+05 3.03e+13
        W1b  -3389  -3389      274 1.36e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 4.82e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     13 1.98e+15
         B2  -3389 4.09e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.289  1.03e-18  8.16e-39
        W1b      3.46         1  3.57e-18  2.82e-38
         P1  9.69e+17   2.8e+17         1  7.91e-21
         P2  1.22e+38  3.54e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.294  2.57e-22  2.03e-42
        W1b       3.4         1  8.73e-22  6.91e-42
         P1   3.9e+21  1.15e+21         1  7.91e-21
         P2  4.93e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 1.48198, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35862, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217409, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60269, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519504
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.54     0.443         0     0.996
          1       111      1.56         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.184     0.443  -0.00738        -1
          1      5.78      1.56        -1   0.00738
         *Z       ---       ---  1.14e+14  2.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.36477, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.209598, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58095, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519504
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14      0.21         0     0.991
          1      26.2      1.27         1   -0.0328
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0594      0.21   -0.0176        -1
          1      1.36      1.27        -1    0.0176
         *Z       ---       ---  1.14e+14  2.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.58328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.36489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.089502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46057, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519504
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.711     0.147    0.0152     0.985
          1      14.9      1.24         1   -0.0533
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0369     0.147   -0.0287        -1
          1     0.775      1.24        -1    0.0287
         *Z       ---       ---  1.14e+14  2.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46117, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.026613, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.029312, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519504
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.446     0.103    0.0238     0.976
          1      9.04      1.19         1   -0.0842
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0232     0.103   -0.0452    -0.999
          1      0.47      1.19    -0.999    0.0452
         *Z       ---       ---  1.14e+14  2.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.029374, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014057, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002231, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016337, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519504
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.283    0.0735    0.0337     0.966
          1       5.9       1.1         1    -0.121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0147    0.0735   -0.0647    -0.998
          1     0.307       1.1    -0.998    0.0647
         *Z       ---       ---  1.14e+14  2.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016363, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8375 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001522
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000438
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030182
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168948
         W1a Well: minimal relaxation eigenvalue = 0.051435
         W1a Well: maximal relaxation eigenvalue = 7.01779
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1481 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001709
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218716
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062435
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070571
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.241097
         W1b Well: minimal relaxation eigenvalue = 0.0526892
         W1b Well: maximal relaxation eigenvalue = 2.25722
         W1b Well:       grid size = 210
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3385 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 31 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.812199, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 210
      MasterEquation::Barrier::truncate: real weight = 4.29071e+21
      MasterEquation::Barrier::truncate: effective weight = 1.09571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1481  -1256 1.12e+05 3.63e+13
        W1b  -3385  -3385      313 1.58e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 5.79e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     32 2.34e+15
         B2  -3385 5.03e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.356  8.96e-19  2.43e-38
        W1b      2.81         1  2.52e-18  6.81e-38
         P1  1.12e+18  3.97e+17         1  2.71e-20
         P2  4.12e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.36  2.31e-22  6.26e-42
        W1b      2.77         1  6.41e-22  1.74e-41
         P1  4.33e+21  1.56e+21         1  2.71e-20
         P2   1.6e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.81595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29566, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.227582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.051435
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.99     0.482         0     0.995
          1       122      1.62         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.205     0.482  -0.00827        -1
          1      6.27      1.62        -1   0.00827
         *Z       ---       ---  1.13e+14  1.89e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53877, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5022, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.051435
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.29     0.233    0.0114     0.989
          1      28.7      1.38         1   -0.0323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664     0.233   -0.0193        -1
          1      1.48      1.38        -1    0.0193
         *Z       ---       ---  1.13e+14  1.89e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50457, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29798, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5054, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.051435
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.805     0.166     0.018     0.982
          1      16.4      1.35         1   -0.0516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0414     0.166   -0.0308        -1
          1     0.843      1.35        -1    0.0308
         *Z       ---       ---  1.13e+14  1.89e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50776, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.129058, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002136, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.136512, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.051435
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.507     0.118    0.0277     0.972
          1      9.98      1.29         1   -0.0799
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.118   -0.0477    -0.999
          1     0.513      1.29    -0.999    0.0477
         *Z       ---       ---  1.13e+14  1.89e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.136887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002124, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01558, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.051435
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.325    0.0856    0.0386     0.961
          1      6.56       1.2         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167    0.0856   -0.0672    -0.998
          1     0.337       1.2    -0.998    0.0672
         *Z       ---       ---  1.13e+14  1.89e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015605, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8584 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00157
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000449
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034915
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.17022
         W1a Well: minimal relaxation eigenvalue = 0.0508342
         W1a Well: maximal relaxation eigenvalue = 9.50229
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001686
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213642
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062216
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076558
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.245169
         W1b Well: minimal relaxation eigenvalue = 0.0521123
         W1b Well: maximal relaxation eigenvalue = 2.31348
         W1b Well:       grid size = 210
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 33 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.823285, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 210
      MasterEquation::Barrier::truncate: real weight = 4.10248e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06585e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1220 1.71e+05 4.33e+13
        W1b  -3386  -3386      313 1.83e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 6.95e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     34 2.75e+15
         B2  -3386 6.17e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.433  7.98e-19  6.97e-38
        W1b      2.31         1  1.85e-18  1.61e-37
         P1  1.25e+18  5.42e+17         1  8.73e-20
         P2  1.44e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.438   2.1e-22  1.83e-41
        W1b      2.28         1  4.78e-22  4.18e-41
         P1  4.77e+21  2.09e+21         1  8.73e-20
         P2  5.47e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.827082, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.227501, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54695, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0508342
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.45     0.522         0     0.994
          1       132      1.85         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.522  -0.00911        -1
          1      6.73      1.85        -1   0.00911
         *Z       ---       ---  1.13e+14  1.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54939, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30295, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.203232, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5129, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0508342
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.44     0.256    0.0135     0.986
          1      31.3      1.51         1   -0.0317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0733     0.256   -0.0208        -1
          1      1.59      1.51        -1    0.0208
         *Z       ---       ---  1.13e+14  1.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51528, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30533, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51391, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0508342
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.903     0.185    0.0211     0.979
          1      17.9      1.47         1   -0.0498
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0459     0.185   -0.0327    -0.999
          1     0.911      1.47    -0.999    0.0327
         *Z       ---       ---  1.13e+14  1.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51626, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.098585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00215, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.105989, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0508342
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.133    0.0319     0.968
          1        11      1.41         1   -0.0761
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.133     -0.05    -0.999
          1     0.557      1.41    -0.999      0.05
         *Z       ---       ---  1.13e+14  1.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.106371, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002136, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0508342
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.369    0.0985    0.0439     0.956
          1      7.24       1.3         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0985   -0.0697    -0.998
          1     0.368       1.3    -0.998    0.0697
         *Z       ---       ---  1.13e+14  1.71e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015697, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8792 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001575
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000446
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029745
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174864
         W1a Well: minimal relaxation eigenvalue = 0.0497583
         W1a Well: maximal relaxation eigenvalue = 18.7189
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1532 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001636
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208938
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063526
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08251
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.249095
         W1b Well: minimal relaxation eigenvalue = 0.0515527
         W1b Well: maximal relaxation eigenvalue = 2.39127
         W1b Well:       grid size = 210
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3388 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 34 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.828645, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 210
      MasterEquation::Barrier::truncate: real weight = 3.94469e+21
      MasterEquation::Barrier::truncate: effective weight = 1.04354e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1532  -1241 1.33e+05 5.14e+13
        W1b  -3388  -3388      307 2.12e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 8.31e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     35 3.21e+15
         B2  -3388 7.54e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.521  7.16e-19   1.9e-37
        W1b      1.92         1  1.37e-18  3.66e-37
         P1   1.4e+18  7.27e+17         1  2.66e-19
         P2  5.25e+36  2.73e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.527  1.91e-22  5.08e-41
        W1b       1.9         1  3.63e-22  9.64e-41
         P1  5.23e+21  2.76e+21         1  2.66e-19
         P2  1.97e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.832398, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31192, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.229579, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55562, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497583
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.99     0.565         0     0.993
          1       141      2.68         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.248     0.565     -0.01        -1
          1      7.02      2.68        -1      0.01
         *Z       ---       ---  1.13e+14  1.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55814, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31692, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204291, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52766, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497583
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.62     0.281     0.016     0.984
          1      33.8       1.7         1   -0.0313
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0808     0.281   -0.0226        -1
          1      1.68       1.7        -1    0.0226
         *Z       ---       ---  1.13e+14  1.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53009, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.31539, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497583
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.204    0.0247     0.975
          1      19.4      1.62         1   -0.0487
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0507     0.204   -0.0351    -0.999
          1     0.963      1.62    -0.999    0.0351
         *Z       ---       ---  1.13e+14  1.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.05528, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002156, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062799, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497583
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.646     0.149    0.0371     0.963
          1      11.8      1.55         1    -0.074
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0322     0.149   -0.0533    -0.999
          1     0.589      1.55    -0.999    0.0533
         *Z       ---       ---  1.13e+14  1.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.063178, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013577, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002152, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015777, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497583
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.418     0.112     0.051     0.949
          1      7.82      1.44         1    -0.103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0208     0.112   -0.0743    -0.997
          1     0.389      1.44    -0.997    0.0743
         *Z       ---       ---  1.13e+14  1.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015801, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 9001 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001469
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000442
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03312
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163509
         W1a Well: minimal relaxation eigenvalue = 0.0498413
         W1a Well: maximal relaxation eigenvalue = 9.06393
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1499 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001649
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21501
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06077
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.080031
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.22801
         W1b Well: minimal relaxation eigenvalue = 0.0510114
         W1b Well: maximal relaxation eigenvalue = 2.16963
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1258 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 1 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.800814, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.84423e+21
      MasterEquation::Barrier::truncate: effective weight = 1.05205e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1499  -1258 1.08e+05  6.1e+13
        W1b  -3359  -3359      464 2.46e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1258 9.91e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      2 3.76e+15
         B2  -3359 9.18e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.622  6.35e-19  4.88e-37
        W1b      1.61         1  1.02e-18  7.86e-37
         P1  1.58e+18  9.79e+17         1  7.69e-19
         P2  2.05e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.629  1.75e-22  1.35e-40
        W1b      1.59         1  2.79e-22  2.14e-40
         P1   5.7e+21  3.59e+21         1  7.69e-19
         P2  7.41e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.804599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24612, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.205682, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47364, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.48     0.609         0     0.991
          1       159      2.06         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.273     0.609   -0.0109        -1
          1       7.9      2.06        -1    0.0109
         *Z       ---       ---  1.12e+14  1.42e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47604, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25483, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194831, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45574, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.79     0.308    0.0186     0.981
          1      37.5      1.79         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0892     0.308    -0.024        -1
          1      1.87      1.79        -1     0.024
         *Z       ---       ---  1.12e+14  1.42e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25527, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.227    0.0281     0.972
          1      21.6      1.74         1   -0.0464
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0562     0.227   -0.0366    -0.999
          1      1.08      1.74    -0.999    0.0366
         *Z       ---       ---  1.12e+14  1.42e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.29067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.297944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.721     0.168    0.0411     0.959
          1      13.3      1.67         1   -0.0689
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0359     0.168   -0.0543    -0.999
          1     0.664      1.67    -0.999    0.0543
         *Z       ---       ---  1.12e+14  1.42e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.298313, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01295, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00209, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015087, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.473     0.128    0.0551     0.945
          1      8.89      1.54         1   -0.0937
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236     0.128   -0.0737    -0.997
          1     0.443      1.54    -0.997    0.0737
         *Z       ---       ---  1.12e+14  1.42e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015112, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9209 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001492
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000435
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029289
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168319
         W1a Well: minimal relaxation eigenvalue = 0.049117
         W1a Well: maximal relaxation eigenvalue = 14.6254
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001612
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208042
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060505
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08125
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234563
         W1b Well: minimal relaxation eigenvalue = 0.0504949
         W1b Well: maximal relaxation eigenvalue = 2.21057
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3356 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 208
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.80175, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.7655e+21
      MasterEquation::Barrier::truncate: effective weight = 1.04771e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1222 1.67e+05 7.22e+13
        W1b  -3356  -3356      476 2.83e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 1.18e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 4.38e+15
         B2  -3356 1.11e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.737  5.76e-19  1.22e-36
        W1b      1.36         1  7.82e-19  1.66e-36
         P1  1.74e+18  1.28e+18         1  2.12e-18
         P2  8.19e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.746  1.62e-22  3.43e-40
        W1b      1.34         1  2.17e-22   4.6e-40
         P1  6.18e+21  4.61e+21         1  2.12e-18
         P2  2.92e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.805514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25746, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50534, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049117
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.1     0.656    0.0101      0.99
          1       171      2.62         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.3     0.656   -0.0118        -1
          1      8.38      2.62        -1    0.0118
         *Z       ---       ---  1.13e+14  1.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26043, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197377, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049117
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         2     0.336    0.0216     0.978
          1      40.7      1.96         1     -0.03
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0981     0.336   -0.0258        -1
          1         2      1.96        -1    0.0258
         *Z       ---       ---  1.13e+14  1.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46631, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26057, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195408, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46235, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049117
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.26     0.249    0.0324     0.968
          1      23.4       1.9         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0619     0.249   -0.0389    -0.999
          1      1.15       1.9    -0.999    0.0389
         *Z       ---       ---  1.13e+14  1.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46496, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.244022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00209, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.251303, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049117
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807     0.186     0.047     0.953
          1      14.5      1.82         1   -0.0669
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0397     0.186   -0.0573    -0.998
          1      0.71      1.82    -0.998    0.0573
         *Z       ---       ---  1.13e+14  1.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.251669, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013034, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002079, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015159, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049117
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.531     0.144    0.0626     0.937
          1      9.66      1.68         1   -0.0906
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.144   -0.0776    -0.997
          1     0.474      1.68    -0.997    0.0776
         *Z       ---       ---  1.13e+14  1.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015184, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9418 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001462
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000437
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031224
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162882
         W1a Well: minimal relaxation eigenvalue = 0.0489539
         W1a Well: maximal relaxation eigenvalue = 7.44832
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1481 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001592
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.207327
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058483
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076004
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.229415
         W1b Well: minimal relaxation eigenvalue = 0.0499825
         W1b Well: maximal relaxation eigenvalue = 2.31807
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 31 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.784384, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.72903e+21
      MasterEquation::Barrier::truncate: effective weight = 1.07161e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1481  -1228 1.56e+05 8.52e+13
        W1b  -3370  -3370      424 3.27e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228  1.4e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     32 5.09e+15
         B2  -3370 1.35e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.867  5.17e-19  2.89e-36
        W1b      1.15         1  5.97e-19  3.33e-36
         P1  1.93e+18  1.68e+18         1  5.58e-18
         P2  3.46e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.877   1.5e-22  8.38e-40
        W1b      1.14         1  1.71e-22  9.55e-40
         P1  6.67e+21  5.85e+21         1  5.58e-18
         P2  1.19e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.788129, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20428, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212084, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43737, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489539
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.71     0.706    0.0118     0.988
          1       191      2.31         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.328     0.706   -0.0128        -1
          1      9.33      2.31        -1    0.0128
         *Z       ---       ---  1.13e+14  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44005, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20988, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187444, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40345, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489539
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.2     0.367    0.0247     0.975
          1        45      2.11         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.108     0.367   -0.0272        -1
          1       2.2      2.11        -1    0.0272
         *Z       ---       ---  1.13e+14  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21121, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40545, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489539
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.275    0.0363     0.964
          1      26.1      2.05         1   -0.0434
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0683     0.275   -0.0404    -0.999
          1      1.28      2.05    -0.999    0.0404
         *Z       ---       ---  1.13e+14  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.431977, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002009, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.439, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489539
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.901     0.209    0.0514     0.949
          1      16.3      1.96         1   -0.0626
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0441     0.209   -0.0581    -0.998
          1     0.796      1.96    -0.998    0.0581
         *Z       ---       ---  1.13e+14  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.439378, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012493, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002003, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014542, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489539
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.599     0.164     0.067     0.933
          1        11       1.8         1   -0.0829
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0293     0.164   -0.0769    -0.997
          1     0.537       1.8    -0.997    0.0769
         *Z       ---       ---  1.13e+14  1.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014566, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9627 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001426
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000427
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03129
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164881
         W1a Well: minimal relaxation eigenvalue = 0.0484023
         W1a Well: maximal relaxation eigenvalue = 10.6995
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001738
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.20582
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059027
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07355
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.229375
         W1b Well: minimal relaxation eigenvalue = 0.0494975
         W1b Well: maximal relaxation eigenvalue = 2.3246
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1253 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3429 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.783058, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.7186e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08559e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1253 1.18e+05    1e+14
        W1b  -3365  -3365      455 3.76e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1253 1.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27  5.9e+15
         B2  -3365 1.63e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  4.74e-19  6.68e-36
        W1b     0.988         1  4.68e-19   6.6e-36
         P1  2.11e+18  2.14e+18         1  1.41e-17
         P2   1.5e+35  1.52e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.02   1.4e-22  1.97e-39
        W1b     0.976         1  1.36e-22  1.92e-39
         P1  7.16e+21  7.34e+21         1  1.41e-17
         P2  5.08e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.787137, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2162, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.211596, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44407, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.42     0.757    0.0137     0.986
          1       207      2.58         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.359     0.757   -0.0138        -1
          1        10      2.58        -1    0.0138
         *Z       ---       ---  1.14e+14  1.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4465, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21887, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41647, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.44     0.398    0.0283     0.972
          1      48.9       2.3         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.398   -0.0289        -1
          1      2.37       2.3        -1    0.0289
         *Z       ---       ---  1.14e+14  1.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41882, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21979, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.189561, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41527, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0484023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.55       0.3    0.0411     0.959
          1      28.4      2.23         1   -0.0423
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0749       0.3   -0.0425    -0.999
          1      1.37      2.23    -0.999    0.0425
         *Z       ---       ---  1.14e+14  1.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41762, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.406045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002034, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.41316, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1      0.23    0.0577     0.942
          1      17.7      2.13         1   -0.0604
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0485      0.23   -0.0607    -0.998
          1     0.857      2.13    -0.998    0.0607
         *Z       ---       ---  1.14e+14  1.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.413756, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014639, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.669     0.182    0.0746     0.925
          1        12      1.96         1   -0.0796
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0324     0.182   -0.0799    -0.997
          1     0.579      1.96    -0.997    0.0799
         *Z       ---       ---  1.14e+14  1.13e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014664, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9835 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001497
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000428
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033183
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170888
         W1a Well: minimal relaxation eigenvalue = 0.0466031
         W1a Well: maximal relaxation eigenvalue = 23.3538
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1539 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001704
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218495
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058854
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070332
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.23065
         W1b Well: minimal relaxation eigenvalue = 0.0490286
         W1b Well: maximal relaxation eigenvalue = 2.35949
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 20 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.801843, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.72029e+21
      MasterEquation::Barrier::truncate: effective weight = 1.10304e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1539  -1214 1.81e+05 1.18e+14
        W1b  -3359  -3359      480 4.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.95e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     21 6.83e+15
         B2  -3359 1.95e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.18  4.36e-19  1.49e-35
        W1b     0.851         1  3.71e-19  1.27e-35
         P1  2.29e+18  2.69e+18         1  3.42e-17
         P2   6.7e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.19  1.31e-22  4.47e-39
        W1b      0.84         1   1.1e-22  3.76e-39
         P1  7.66e+21  9.11e+21         1  3.42e-17
         P2  2.24e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.805639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.214914, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32684, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0466031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.41     0.811    0.0158     0.984
          1       215      5.58         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.392     0.811   -0.0148        -1
          1        10      5.58        -1    0.0148
         *Z       ---       ---  1.15e+14  1.06e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32941, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22398, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190224, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42041, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0466031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.77     0.429    0.0329     0.967
          1      52.1      2.65         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.429   -0.0314        -1
          1      2.43      2.65        -1    0.0314
         *Z       ---       ---  1.15e+14  1.06e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42276, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22083, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189342, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0466031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.75     0.324     0.048     0.952
          1      29.8      2.49         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0816     0.324   -0.0465    -0.999
          1      1.39      2.49    -0.999    0.0465
         *Z       ---       ---  1.15e+14  1.06e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.508741, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.515802, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0466031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.249    0.0684     0.932
          1      18.3      2.36         1   -0.0625
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0526     0.249   -0.0676    -0.998
          1     0.851      2.36    -0.998    0.0676
         *Z       ---       ---  1.15e+14  1.06e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.516169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012649, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014713, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0466031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.746     0.199    0.0902      0.91
          1      12.1      2.19         1   -0.0844
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0348     0.199   -0.0911    -0.996
          1     0.566      2.19    -0.996    0.0911
         *Z       ---       ---  1.15e+14  1.06e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014736, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10044 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001444
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000411
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032914
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162762
         W1a Well: minimal relaxation eigenvalue = 0.0476503
         W1a Well: maximal relaxation eigenvalue = 7.88867
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00167
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.212886
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05744
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075382
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.218998
         W1b Well: minimal relaxation eigenvalue = 0.0485693
         W1b Well: maximal relaxation eigenvalue = 2.3825
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3355 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1211 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -5 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.77994, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.75681e+21
      MasterEquation::Barrier::truncate: effective weight = 1.14762e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1211 1.86e+05 1.38e+14
        W1b  -3355  -3355      504 4.96e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1211  2.3e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -5 7.88e+15
         B2  -3355 2.34e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.36  3.98e-19  3.18e-35
        W1b     0.737         1  2.93e-19  2.34e-35
         P1  2.52e+18  3.41e+18         1     8e-17
         P2  3.14e+34  4.27e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.37  1.23e-22  9.81e-39
        W1b     0.728         1  8.93e-23  7.15e-39
         P1  8.15e+21  1.12e+22         1     8e-17
         P2  1.02e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.783738, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17772, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20435, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40924, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         9     0.868     0.018     0.982
          1       247      2.97         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.429     0.868   -0.0157        -1
          1      11.8      2.97        -1    0.0157
         *Z       ---       ---  1.15e+14  9.87e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17677, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182486, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36552, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.97     0.467     0.036     0.964
          1      58.9       2.7         1   -0.0275
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.467    -0.032    -0.999
          1      2.81       2.7    -0.999     0.032
         *Z       ---       ---  1.15e+14  9.87e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3679, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1782, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183943, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.368, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.89     0.358    0.0509     0.949
          1      34.4      2.62         1   -0.0395
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0902     0.358    -0.046    -0.999
          1      1.64      2.62    -0.999     0.046
         *Z       ---       ---  1.15e+14  9.87e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37034, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.540704, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001946, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.547554, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.24      0.28    0.0693     0.931
          1      21.7      2.49         1   -0.0549
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.059      0.28   -0.0638    -0.998
          1      1.03      2.49    -0.998    0.0638
         *Z       ---       ---  1.15e+14  9.87e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.547916, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012122, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.838     0.227    0.0872     0.913
          1      14.8      2.28         1   -0.0705
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0399     0.227   -0.0818    -0.997
          1     0.706      2.28    -0.997    0.0818
         *Z       ---       ---  1.15e+14  9.87e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014125, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10252 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001436
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000422
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032906
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160359
         W1a Well: minimal relaxation eigenvalue = 0.0471161
         W1a Well: maximal relaxation eigenvalue = 11.6644
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001579
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199907
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056945
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077001
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.212238
         W1b Well: minimal relaxation eigenvalue = 0.0481069
         W1b Well: maximal relaxation eigenvalue = 4.18935
         W1b Well:       grid size = 201
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1239 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.758389, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 201
      MasterEquation::Barrier::truncate: real weight = 3.79877e+21
      MasterEquation::Barrier::truncate: effective weight = 1.17834e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1239 1.37e+05 1.61e+14
        W1b  -3415  -3415      155 5.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1239  2.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 9.08e+15
         B2  -3415  2.8e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.56  3.69e-19  6.67e-35
        W1b     0.643         1  2.37e-19  4.29e-35
         P1  2.71e+18  4.22e+18         1  1.81e-16
         P2   1.5e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.58  1.16e-22  2.09e-38
        W1b     0.635         1  7.34e-23  1.33e-38
         P1  8.65e+21  1.36e+22         1  1.81e-16
         P2  4.79e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.762379, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1928, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.207046, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41659, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471161
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.84     0.942    0.0203      0.98
          1       270      3.27         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.464     0.942   -0.0166        -1
          1      12.7      3.27        -1    0.0166
         *Z       ---       ---  1.16e+14  9.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1934, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471161
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.26     0.506    0.0404      0.96
          1      63.9      2.94         1   -0.0271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.506   -0.0338    -0.999
          1      3.01      2.94    -0.999    0.0338
         *Z       ---       ---  1.16e+14  9.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3879, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.19208, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38345, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471161
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.08     0.389    0.0568     0.943
          1      37.2      2.85         1   -0.0387
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0981     0.389   -0.0482    -0.999
          1      1.75      2.85    -0.999    0.0482
         *Z       ---       ---  1.16e+14  9.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.502524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001971, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.509527, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471161
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.36     0.306     0.077     0.923
          1      23.4      2.71         1   -0.0536
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0642     0.306   -0.0667    -0.998
          1       1.1      2.71    -0.998    0.0667
         *Z       ---       ---  1.16e+14  9.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.509907, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00196, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014302, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471161
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.925      0.25    0.0967     0.903
          1        16      2.48         1   -0.0688
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0436      0.25   -0.0855    -0.996
          1     0.753      2.48    -0.996    0.0855
         *Z       ---       ---  1.16e+14  9.32e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014326, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10461 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001454
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000412
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033369
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163979
         W1a Well: minimal relaxation eigenvalue = 0.0467286
         W1a Well: maximal relaxation eigenvalue = 11.4668
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1508 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00172
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204763
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055446
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068762
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.210621
         W1b Well: minimal relaxation eigenvalue = 0.0476842
         W1b Well: maximal relaxation eigenvalue = 2.86005
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3398 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 31 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.756239, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.87296e+21
      MasterEquation::Barrier::truncate: effective weight = 1.23673e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1508  -1228 1.56e+05 1.88e+14
        W1b  -3398  -3398      313 6.49e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.17e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     32 1.04e+16
         B2  -3398 3.34e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.78  3.39e-19  1.34e-34
        W1b     0.563         1  1.91e-19  7.54e-35
         P1  2.95e+18  5.24e+18         1  3.95e-16
         P2  7.47e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.8  1.09e-22  4.32e-38
        W1b     0.556         1  6.08e-23   2.4e-38
         P1  9.15e+21  1.65e+22         1  3.95e-16
         P2  2.32e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.760014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15002, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18873, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35891, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467286
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.8     0.996    0.0231     0.977
          1       294      3.54         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.507     0.996   -0.0177        -1
          1      13.7      3.54        -1    0.0177
         *Z       ---       ---  1.17e+14  8.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181374, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33927, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467286
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.59     0.543    0.0452     0.955
          1      69.8      3.19         1   -0.0266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.543   -0.0355    -0.999
          1      3.26      3.19    -0.999    0.0355
         *Z       ---       ---  1.17e+14  8.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34166, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15257, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467286
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.3      0.42    0.0627     0.937
          1      40.8      3.09         1   -0.0377
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107      0.42   -0.0501    -0.999
          1      1.91      3.09    -0.999    0.0501
         *Z       ---       ---  1.17e+14  8.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.653643, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001923, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.660509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467286
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.51     0.334    0.0839     0.916
          1      25.7      2.92         1   -0.0516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0705     0.334   -0.0686    -0.998
          1       1.2      2.92    -0.998    0.0686
         *Z       ---       ---  1.17e+14  8.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.660888, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01186, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001922, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013829, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467286
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.275     0.104     0.896
          1      17.6      2.67         1   -0.0656
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0481     0.275   -0.0871    -0.996
          1     0.824      2.67    -0.996    0.0871
         *Z       ---       ---  1.17e+14  8.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013853, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10669 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001427
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000419
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031364
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166198
         W1a Well: minimal relaxation eigenvalue = 0.0456252
         W1a Well: maximal relaxation eigenvalue = 20.5405
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1542 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001634
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.201761
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05614
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066426
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.222207
         W1b Well: minimal relaxation eigenvalue = 0.0472746
         W1b Well: maximal relaxation eigenvalue = 2.72081
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3388 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1258 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 19 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3459 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.762584, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.95612e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28092e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1542  -1258 1.08e+05 2.19e+14
        W1b  -3388  -3388      376  7.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1258  3.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     20  1.2e+16
         B2  -3388 3.97e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.02  3.17e-19  2.65e-34
        W1b     0.496         1  1.57e-19  1.32e-34
         P1  3.15e+18  6.36e+18         1  8.37e-16
         P2  3.77e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.04  1.04e-22  8.68e-38
        W1b      0.49         1  5.08e-23  4.25e-38
         P1  9.64e+21  1.97e+22         1  8.37e-16
         P2  1.15e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.766336, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16207, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194464, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37292, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.1      1.06    0.0262     0.974
          1       318      4.34         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.553      1.06    -0.019        -1
          1      14.5      4.34        -1     0.019
         *Z       ---       ---  1.19e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37539, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181317, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34881, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         4      0.58    0.0514     0.949
          1      74.2      3.51         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.183      0.58   -0.0381    -0.999
          1      3.39      3.51    -0.999    0.0381
         *Z       ---       ---  1.19e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35119, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15872, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180268, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34476, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55      0.45    0.0718     0.928
          1      42.6      3.38         1   -0.0384
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116      0.45   -0.0544    -0.999
          1      1.94      3.38    -0.999    0.0544
         *Z       ---       ---  1.19e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34709, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.619539, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001925, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.626359, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.67     0.357    0.0974     0.903
          1      26.4      3.21         1   -0.0535
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.076     0.357   -0.0757    -0.997
          1       1.2      3.21    -0.997    0.0757
         *Z       ---       ---  1.19e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.626726, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011966, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013935, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.297     0.123     0.877
          1      17.7      2.96         1   -0.0695
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0513     0.297   -0.0983    -0.995
          1      0.81      2.96    -0.995    0.0983
         *Z       ---       ---  1.19e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01396, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10878 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.0015
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000493
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029463
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156486
         W1a Well: minimal relaxation eigenvalue = 0.0459797
         W1a Well: maximal relaxation eigenvalue = 11.937
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001764
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209387
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05589
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070787
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21724
         W1b Well: minimal relaxation eigenvalue = 0.0468733
         W1b Well: maximal relaxation eigenvalue = 2.69672
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3377 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1217 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 6 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3449 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.758068, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 4.06604e+21
      MasterEquation::Barrier::truncate: effective weight = 1.33557e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1217 1.74e+05 2.55e+14
        W1b  -3377  -3377      433 8.44e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1217 4.32e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      7 1.37e+16
         B2  -3377  4.7e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.28  2.98e-19  5.13e-34
        W1b     0.439         1  1.31e-19  2.25e-34
         P1  3.36e+18  7.66e+18         1  1.72e-15
         P2  1.95e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.31  9.87e-23   1.7e-37
        W1b     0.433         1  4.27e-23  7.36e-38
         P1  1.01e+22  2.34e+22         1  1.72e-15
         P2  5.88e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.761827, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36862, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459797
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.1      1.13     0.029     0.971
          1       350      4.17         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.601      1.13   -0.0198        -1
          1      16.1      4.17        -1    0.0198
         *Z       ---       ---   1.2e+14  7.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37104, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182586, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34197, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459797
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.33     0.625    0.0552     0.945
          1      83.3      3.74         1   -0.0257
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.625   -0.0387    -0.999
          1      3.83      3.74    -0.999    0.0387
         *Z       ---       ---   1.2e+14  7.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34432, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16468, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181064, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35178, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459797
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.78      0.49    0.0752     0.925
          1      48.8      3.61         1   -0.0357
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.128      0.49   -0.0538    -0.999
          1      2.24      3.61    -0.999    0.0538
         *Z       ---       ---   1.2e+14  7.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3541, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.612888, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00192, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.619669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459797
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.394    0.0987     0.901
          1      30.9      3.41         1    -0.048
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0844     0.394   -0.0723    -0.997
          1      1.42      3.41    -0.997    0.0723
         *Z       ---       ---   1.2e+14  7.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.620042, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011983, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013945, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459797
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.26      0.33      0.12      0.88
          1      21.3       3.1         1   -0.0601
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.058      0.33   -0.0904    -0.996
          1     0.979       3.1    -0.996    0.0904
         *Z       ---       ---   1.2e+14  7.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013968, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11086 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001429
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000411
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02969
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161099
         W1a Well: minimal relaxation eigenvalue = 0.0456783
         W1a Well: maximal relaxation eigenvalue = 10.0288
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1493 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001706
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19972
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055677
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06656
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.208979
         W1b Well: minimal relaxation eigenvalue = 0.046464
         W1b Well: maximal relaxation eigenvalue = 3.97127
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3417 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1271 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3491 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.740497, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 196
      MasterEquation::Barrier::truncate: real weight = 4.1845e+21
      MasterEquation::Barrier::truncate: effective weight = 1.41268e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1493  -1271 9.15e+04 2.95e+14
        W1b  -3417  -3417      199  9.6e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1271 5.03e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.57e+16
         B2  -3417 5.56e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.57  2.76e-19  9.54e-34
        W1b      0.39         1  1.08e-19  3.72e-34
         P1  3.62e+18  9.28e+18         1  3.45e-15
         P2  1.05e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.6  9.42e-23  3.25e-37
        W1b     0.385         1  3.62e-23  1.25e-37
         P1  1.06e+22  2.76e+22         1  3.45e-15
         P2  3.08e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.744548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13186, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34843, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456783
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.2      1.21     0.032     0.968
          1       384       4.4         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.649      1.21   -0.0207        -1
          1      17.5       4.4        -1    0.0207
         *Z       ---       ---  1.21e+14  7.58e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35087, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13349, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178043, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456783
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.73     0.675    0.0602      0.94
          1      91.6      4.05         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216     0.675   -0.0399    -0.999
          1      4.18      4.05    -0.999    0.0399
         *Z       ---       ---  1.21e+14  7.58e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31968, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13146, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176787, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31392, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456783
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.04     0.532     0.081     0.919
          1      53.9       3.9         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.532   -0.0549    -0.998
          1      2.46       3.9    -0.998    0.0549
         *Z       ---       ---  1.21e+14  7.58e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31624, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.713644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.720314, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456783
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.02     0.431     0.105     0.895
          1      34.4      3.67         1   -0.0457
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0923     0.431   -0.0729    -0.997
          1      1.57      3.67    -0.997    0.0729
         *Z       ---       ---  1.21e+14  7.58e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.720678, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011647, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00187, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456783
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.4     0.362     0.127     0.873
          1      23.8      3.32         1   -0.0565
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0639     0.362   -0.0901    -0.996
          1      1.09      3.32    -0.996    0.0901
         *Z       ---       ---  1.21e+14  7.58e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013585, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11295 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001413
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031894
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157027
         W1a Well: minimal relaxation eigenvalue = 0.044972
         W1a Well: maximal relaxation eigenvalue = 17.0679
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1530 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001716
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199248
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054658
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07213
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205968
         W1b Well: minimal relaxation eigenvalue = 0.0460915
         W1b Well: maximal relaxation eigenvalue = 3.17456
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3405 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1230 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3479 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.739295, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 196
      MasterEquation::Barrier::truncate: real weight = 4.33252e+21
      MasterEquation::Barrier::truncate: effective weight = 1.48254e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1530  -1230 1.54e+05 3.42e+14
        W1b  -3405  -3405      307 1.09e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1230 5.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 1.79e+16
         B2  -3405 6.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.88  2.61e-19  1.76e-33
        W1b     0.348         1  9.08e-20  6.11e-34
         P1  3.83e+18   1.1e+19         1  6.73e-15
         P2  5.69e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.91  9.01e-23  6.07e-37
        W1b     0.343         1  3.09e-23  2.08e-37
         P1  1.11e+22  3.23e+22         1  6.73e-15
         P2  1.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.74322, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13413, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201319, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35031, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.044972
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.7      1.28    0.0358     0.964
          1       415      5.13         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.707      1.28   -0.0219        -1
          1      18.7      5.13        -1    0.0219
         *Z       ---       ---  1.24e+14  7.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35291, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13465, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179097, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31962, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.044972
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.21     0.716    0.0674     0.933
          1      97.6      4.41         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.234     0.716   -0.0426    -0.999
          1      4.39      4.41    -0.999    0.0426
         *Z       ---       ---  1.24e+14  7.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178374, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32238, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.044972
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.34     0.565    0.0911     0.909
          1      56.6      4.24         1   -0.0349
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.15     0.565    -0.059    -0.998
          1      2.54      4.24    -0.998     0.059
         *Z       ---       ---  1.24e+14  7.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32471, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.703424, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001886, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.710178, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.044972
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.21     0.459     0.119     0.881
          1      35.5      4.01         1    -0.047
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0992     0.459   -0.0794    -0.997
          1      1.59      4.01    -0.997    0.0794
         *Z       ---       ---  1.24e+14  7.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.710548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011727, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013653, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.044972
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.389     0.145     0.855
          1      24.2      3.66         1   -0.0591
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0682     0.389   -0.0998    -0.995
          1      1.09      3.66    -0.995    0.0998
         *Z       ---       ---  1.24e+14  7.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013678, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11503 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001507
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000419
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029677
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156316
         W1a Well: minimal relaxation eigenvalue = 0.04499
         W1a Well: maximal relaxation eigenvalue = 10.2849
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1493 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001725
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191712
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054027
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073478
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211503
         W1b Well: minimal relaxation eigenvalue = 0.0457284
         W1b Well: maximal relaxation eigenvalue = 2.99866
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 26 1/cm
         B2 Barrier:        grid size = 197
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.735103, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 196
      MasterEquation::Barrier::truncate: real weight = 4.48804e+21
      MasterEquation::Barrier::truncate: effective weight = 1.55628e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1493  -1265    1e+05 3.95e+14
        W1b  -3393  -3393      381 1.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265 6.78e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     27 2.03e+16
         B2  -3393 7.73e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.21  2.47e-19  3.17e-33
        W1b     0.312         1   7.7e-20  9.87e-34
         P1  4.05e+18   1.3e+19         1  1.28e-14
         P2  3.16e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  8.64e-23  1.11e-36
        W1b     0.308         1  2.66e-23  3.41e-37
         P1  1.16e+22  3.76e+22         1  1.28e-14
         P2  9.02e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.73885, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13789, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188147, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35349, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.04499
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.1      1.36    0.0393     0.961
          1       458      5.09         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.768      1.36   -0.0228        -1
          1      20.6      5.09        -1    0.0228
         *Z       ---       ---  1.26e+14  7.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35594, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177946, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.04499
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.67     0.768    0.0719     0.928
          1       109      4.72         1   -0.0241
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.255     0.768   -0.0432    -0.999
          1      4.91      4.72    -0.999    0.0432
         *Z       ---       ---  1.26e+14  7.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32756, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14198, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177356, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32525, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.04499
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.66     0.612     0.095     0.905
          1      64.4      4.54         1   -0.0327
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.165     0.612   -0.0585    -0.998
          1       2.9      4.54    -0.998    0.0585
         *Z       ---       ---  1.26e+14  7.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32758, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.689715, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.001891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.696368, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.04499
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.44     0.502     0.121     0.879
          1      41.2      4.25         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.502   -0.0764    -0.997
          1      1.86      4.25    -0.997    0.0764
         *Z       ---       ---  1.26e+14  7.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.696734, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011744, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001887, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013676, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.04499
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.7     0.428     0.143     0.857
          1      28.6      3.84         1   -0.0522
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0766     0.428   -0.0931    -0.996
          1      1.29      3.84    -0.996    0.0931
         *Z       ---       ---  1.26e+14  7.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013701, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11712 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001381
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000407
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030586
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155251
         W1a Well: minimal relaxation eigenvalue = 0.0437731
         W1a Well: maximal relaxation eigenvalue = 21.4489
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001659
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192449
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053225
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07198
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.207652
         W1b Well: minimal relaxation eigenvalue = 0.0453524
         W1b Well: maximal relaxation eigenvalue = 4.04241
         W1b Well:       grid size = 194
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3419 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1235 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 12 1/cm
         B2 Barrier:        grid size = 195
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.729089, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 194
      MasterEquation::Barrier::truncate: real weight = 4.6749e+21
      MasterEquation::Barrier::truncate: effective weight = 1.6637e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1235 1.43e+05 4.56e+14
        W1b  -3419  -3419      218  1.4e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1235 7.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     13 2.31e+16
         B2  -3419 9.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  2.31e-19  5.52e-33
        W1b      0.28         1  6.48e-20  1.55e-33
         P1  4.32e+18  1.54e+19         1  2.39e-14
         P2  1.81e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.61  8.31e-23  1.98e-36
        W1b     0.277         1   2.3e-23  5.49e-37
         P1   1.2e+22  4.35e+22         1  2.39e-14
         P2  5.04e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.732821, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11217, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31947, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0437731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.9      1.45    0.0434     0.957
          1       492      6.42         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.828      1.45    -0.024        -1
          1      21.5      6.42        -1     0.024
         *Z       ---       ---  1.27e+14  6.74e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3219, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11338, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176297, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2954, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0437731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.26     0.818    0.0811     0.919
          1       114      5.18         1   -0.0247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.274     0.818   -0.0466    -0.999
          1      5.01      5.18    -0.999    0.0466
         *Z       ---       ---  1.27e+14  6.74e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29776, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0437731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.02     0.648     0.109     0.891
          1      65.4      4.98         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.176     0.648   -0.0647    -0.998
          1      2.86      4.98    -0.998    0.0647
         *Z       ---       ---  1.27e+14  6.74e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29654, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787358, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.793937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0437731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.65     0.531     0.142     0.858
          1      40.4      4.71         1   -0.0465
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.531   -0.0875    -0.996
          1      1.77      4.71    -0.996    0.0875
         *Z       ---       ---  1.27e+14  6.74e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.794298, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011429, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0437731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.81     0.455     0.174     0.826
          1      27.2      4.31         1   -0.0591
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0794     0.455    -0.111    -0.994
          1      1.19      4.31    -0.994     0.111
         *Z       ---       ---  1.27e+14  6.74e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013349, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11920 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001409
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000407
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03087
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157653
         W1a Well: minimal relaxation eigenvalue = 0.0442173
         W1a Well: maximal relaxation eigenvalue = 13.5154
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001704
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193353
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052745
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060476
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205774
         W1b Well: minimal relaxation eigenvalue = 0.0450121
         W1b Well: maximal relaxation eigenvalue = 3.29874
         W1b Well:       grid size = 194
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1273 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -9 1/cm
         B2 Barrier:        grid size = 195
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3484 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.718946, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 194
      MasterEquation::Barrier::truncate: real weight = 4.86958e+21
      MasterEquation::Barrier::truncate: effective weight = 1.75524e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1273 9.07e+04 5.24e+14
        W1b  -3406  -3406      326 1.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1273 9.07e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -9 2.62e+16
         B2  -3406 1.06e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.96   2.2e-19  9.57e-33
        W1b     0.253         1  5.57e-20  2.42e-33
         P1  4.54e+18   1.8e+19         1  4.35e-14
         P2  1.04e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         4  8.01e-23  3.48e-36
        W1b      0.25         1     2e-23  8.69e-37
         P1  1.25e+22     5e+22         1  4.35e-14
         P2  2.87e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.722718, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11457, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197922, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3331, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442173
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.4      1.53    0.0472     0.953
          1       541      6.05         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.9      1.53   -0.0249        -1
          1      23.9      6.05        -1    0.0249
         *Z       ---       ---   1.3e+14  6.52e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1146, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174451, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442173
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.76     0.874     0.085     0.915
          1       128      5.53         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.874   -0.0467    -0.999
          1      5.68      5.53    -0.999    0.0467
         *Z       ---       ---   1.3e+14  6.52e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2974, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11589, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174625, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29639, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442173
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.36     0.701     0.111     0.889
          1      75.4       5.3         1   -0.0317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.193     0.701   -0.0628    -0.998
          1      3.33       5.3    -0.998    0.0628
         *Z       ---       ---   1.3e+14  6.52e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2987, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771539, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001862, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.778071, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442173
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.91      0.58      0.14      0.86
          1        48      4.96         1   -0.0413
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129      0.58   -0.0818    -0.997
          1      2.12      4.96    -0.997    0.0818
         *Z       ---       ---   1.3e+14  6.52e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.778444, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001842, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013397, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442173
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.04     0.499     0.166     0.834
          1      33.1      4.47         1   -0.0503
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0901     0.499   -0.0996    -0.995
          1      1.47      4.47    -0.995    0.0996
         *Z       ---       ---   1.3e+14  6.52e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01342, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12129 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001387
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000403
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03013
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155694
         W1a Well: minimal relaxation eigenvalue = 0.0440413
         W1a Well: maximal relaxation eigenvalue = 9.59952
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001661
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191707
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052915
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059004
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204718
         W1b Well: minimal relaxation eigenvalue = 0.0446578
         W1b Well: maximal relaxation eigenvalue = 4.23378
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1235 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 193
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3503 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.71194, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 192
      MasterEquation::Barrier::truncate: real weight = 5.09715e+21
      MasterEquation::Barrier::truncate: effective weight = 1.88393e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1235 1.43e+05 6.03e+14
        W1b  -3423  -3423      218  1.8e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1235 1.05e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 2.97e+16
         B2  -3423 1.24e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  2.07e-19  1.61e-32
        W1b     0.229         1  4.75e-20  3.68e-33
         P1  4.82e+18  2.11e+19         1  7.75e-14
         P2  6.22e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  7.74e-23     6e-36
        W1b     0.226         1  1.75e-23  1.36e-36
         P1  1.29e+22  5.72e+22         1  7.75e-14
         P2  1.67e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.715973, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08129, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2794, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        22      1.64    0.0509     0.949
          1       595      6.44         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.97      1.64   -0.0256        -1
          1      26.2      6.44        -1    0.0256
         *Z       ---       ---  1.31e+14  6.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28183, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08336, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25786, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.34      0.94      0.09      0.91
          1       143      5.95         1   -0.0226
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.323      0.94   -0.0472    -0.999
          1      6.29      5.95    -0.999    0.0472
         *Z       ---       ---  1.31e+14  6.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26019, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169843, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26077, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.76     0.757     0.116     0.884
          1      84.7      5.68         1     -0.03
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.21     0.757   -0.0626    -0.998
          1      3.73      5.68    -0.998    0.0626
         *Z       ---       ---  1.31e+14  6.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26311, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.897278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906665, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.2      0.63     0.144     0.856
          1      54.6      5.28         1   -0.0384
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141      0.63     -0.08    -0.997
          1       2.4      5.28    -0.997      0.08
         *Z       ---       ---  1.31e+14  6.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90704, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440413
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.26     0.544     0.167     0.833
          1      38.1      4.72         1   -0.0459
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0997     0.544   -0.0955    -0.995
          1      1.68      4.72    -0.995    0.0955
         *Z       ---       ---  1.31e+14  6.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012992, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12337 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00138
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000405
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029155
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154819
         W1a Well: minimal relaxation eigenvalue = 0.0435243
         W1a Well: maximal relaxation eigenvalue = 14.7803
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1521 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00174
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193364
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052903
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070407
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197581
         W1b Well: minimal relaxation eigenvalue = 0.0443383
         W1b Well: maximal relaxation eigenvalue = 3.44086
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -45 1/cm
         B2 Barrier:        grid size = 193
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.716211, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 192
      MasterEquation::Barrier::truncate: real weight = 5.33422e+21
      MasterEquation::Barrier::truncate: effective weight = 1.99593e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1521  -1274 8.89e+04 6.92e+14
        W1b  -3406  -3406      337 2.03e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 1.21e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -45 3.36e+16
         B2  -3406 1.45e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.81  1.98e-19  2.69e-32
        W1b     0.208         1  4.12e-20  5.59e-33
         P1  5.04e+18  2.42e+19         1  1.35e-13
         P2  3.72e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.87  7.49e-23  1.01e-35
        W1b     0.205         1  1.54e-23  2.08e-36
         P1  1.34e+22   6.5e+22         1  1.35e-13
         P2  9.86e+34   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.719943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0902, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191261, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0435243
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      24.2      1.72    0.0557     0.944
          1       644      7.07         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.05      1.72   -0.0269        -1
          1      28.1      7.07        -1    0.0269
         *Z       ---       ---  1.34e+14  6.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09132, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17016, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0435243
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.03     0.989    0.0987     0.901
          1       152      6.43         1   -0.0228
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.35     0.989   -0.0499    -0.999
          1      6.62      6.43    -0.999    0.0499
         *Z       ---       ---  1.34e+14  6.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2699, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170898, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26763, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0435243
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.19     0.798     0.128     0.872
          1      88.9      6.15         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.798   -0.0668    -0.998
          1      3.87      6.15    -0.998    0.0668
         *Z       ---       ---  1.34e+14  6.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26996, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.859267, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002234, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.866353, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0435243
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.47     0.667      0.16      0.84
          1      56.3      5.75         1   -0.0396
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.151     0.667   -0.0865    -0.996
          1      2.45      5.75    -0.996    0.0865
         *Z       ---       ---  1.34e+14  6.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.866714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001789, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013094, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0435243
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.44     0.579     0.188     0.812
          1      38.8      5.17         1   -0.0481
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.106     0.579    -0.105    -0.994
          1      1.69      5.17    -0.994     0.105
         *Z       ---       ---  1.34e+14  6.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013118, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12546 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001452
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00041
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032462
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156595
         W1a Well: minimal relaxation eigenvalue = 0.0434272
         W1a Well: maximal relaxation eigenvalue = 10.1909
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1481 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001721
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.186337
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052021
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064262
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209749
         W1b Well: minimal relaxation eigenvalue = 0.0440231
         W1b Well: maximal relaxation eigenvalue = 3.23434
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3389 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1231 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 13 1/cm
         B2 Barrier:        grid size = 193
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.719764, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 192
      MasterEquation::Barrier::truncate: real weight = 5.60719e+21
      MasterEquation::Barrier::truncate: effective weight = 2.12374e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1481  -1231 1.51e+05 7.93e+14
        W1b  -3389  -3389      429 2.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1231 1.39e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     14 3.79e+16
         B2  -3389 1.69e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.28   1.9e-19  4.42e-32
        W1b      0.19         1   3.6e-20  8.37e-33
         P1  5.26e+18  2.78e+19         1  2.32e-13
         P2  2.26e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.34  7.26e-23  1.69e-35
        W1b     0.187         1  1.36e-23  3.16e-36
         P1  1.38e+22  7.36e+22         1  2.32e-13
         P2  5.93e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.723672, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09318, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180158, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29851, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0434272
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.4      1.81    0.0602      0.94
          1       706      7.47         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.14      1.81   -0.0279        -1
          1      30.6      7.47        -1    0.0279
         *Z       ---       ---  1.37e+14  5.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09234, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26972, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0434272
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.75      1.05     0.104     0.896
          1       169      6.89         1    -0.022
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.38      1.05   -0.0505    -0.999
          1      7.35      6.89    -0.999    0.0505
         *Z       ---       ---  1.37e+14  5.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09132, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170092, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0434272
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.68     0.858     0.132     0.868
          1       101      6.56         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.247     0.858   -0.0662    -0.998
          1      4.37      6.56    -0.998    0.0662
         *Z       ---       ---  1.37e+14  5.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26948, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.855022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002667, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.862369, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0434272
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.83     0.721     0.161     0.839
          1      64.9      6.08         1   -0.0365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.167     0.721   -0.0835    -0.997
          1      2.82      6.08    -0.997    0.0835
         *Z       ---       ---  1.37e+14  5.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.862734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013112, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0434272
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.72     0.628     0.186     0.814
          1      45.3      5.41         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.628   -0.0988    -0.995
          1      1.97      5.41    -0.995    0.0988
         *Z       ---       ---  1.37e+14  5.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01314, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12754 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001368
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000398
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028472
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15257
         W1a Well: minimal relaxation eigenvalue = 0.0428802
         W1a Well: maximal relaxation eigenvalue = 15.6958
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1526 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001648
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19316
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050919
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064973
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202457
         W1b Well: minimal relaxation eigenvalue = 0.0436993
         W1b Well: maximal relaxation eigenvalue = 3.35484
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1271 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 4 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.71039, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.89117e+21
      MasterEquation::Barrier::truncate: effective weight = 2.28508e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1526  -1271 9.28e+04 9.06e+14
        W1b  -3395  -3395      410 2.58e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1271 1.59e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      5 4.27e+16
         B2  -3395 1.97e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.77   1.8e-19  7.06e-32
        W1b     0.173         1  3.12e-20  1.22e-32
         P1  5.55e+18   3.2e+19         1  3.92e-13
         P2  1.42e+31  8.17e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.84  7.05e-23  2.76e-35
        W1b     0.171         1  1.21e-23  4.73e-36
         P1  1.42e+22  8.29e+22         1  3.92e-13
         P2  3.62e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.714146, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.064, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188932, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27018, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.7      1.92    0.0652     0.935
          1       763      8.17         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.23      1.92    -0.029        -1
          1      32.7      8.17        -1     0.029
         *Z       ---       ---  1.39e+14  5.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27262, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24059, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.52      1.11     0.113     0.887
          1       179      7.46         1   -0.0222
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.408      1.11   -0.0532    -0.999
          1      7.68      7.46    -0.999    0.0532
         *Z       ---       ---  1.39e+14  5.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24292, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06884, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167586, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24228, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.15     0.905     0.145     0.855
          1       105      7.13         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.264     0.905   -0.0706    -0.998
          1      4.48      7.13    -0.998    0.0706
         *Z       ---       ---  1.39e+14  5.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.936741, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.008732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.950165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.12     0.762      0.18      0.82
          1      66.1      6.64         1    -0.038
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.177     0.762   -0.0908    -0.996
          1      2.84      6.64    -0.996    0.0908
         *Z       ---       ---  1.39e+14  5.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001765, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012834, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.9     0.667      0.21      0.79
          1      45.4      5.96         1   -0.0459
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.124     0.667     -0.11    -0.994
          1      1.95      5.96    -0.994      0.11
         *Z       ---       ---  1.39e+14  5.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012857, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12963 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001418
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000403
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032078
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155747
         W1a Well: minimal relaxation eigenvalue = 0.0428316
         W1a Well: maximal relaxation eigenvalue = 10.814
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1485 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001767
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184633
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051251
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057153
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201425
         W1b Well: minimal relaxation eigenvalue = 0.0433984
         W1b Well: maximal relaxation eigenvalue = 3.30796
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3463 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.700108, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 6.2146e+21
      MasterEquation::Barrier::truncate: effective weight = 2.43897e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1485  -1226 1.59e+05 1.04e+15
        W1b  -3376  -3376      496  2.9e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 1.82e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 4.81e+16
         B2  -3376 2.28e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.3  1.73e-19  1.12e-31
        W1b     0.159         1  2.75e-20  1.79e-32
         P1  5.77e+18  3.63e+19         1  6.49e-13
         P2  8.89e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.38  6.86e-23  4.45e-35
        W1b     0.157         1  1.08e-23  6.99e-36
         P1  1.46e+22  9.29e+22         1  6.49e-13
         P2  2.24e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.704152, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26363, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428316
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.2      2.02    0.0696      0.93
          1       836      8.75         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.34      2.02   -0.0298        -1
          1      35.8      8.75        -1    0.0298
         *Z       ---       ---  1.42e+14  5.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26606, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167862, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24232, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428316
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.3      1.19     0.118     0.882
          1       201         8         1   -0.0213
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.443      1.19   -0.0533    -0.999
          1       8.6         8    -0.999    0.0533
         *Z       ---       ---  1.42e+14  5.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166028, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428316
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.72     0.971     0.148     0.852
          1       119      7.59         1   -0.0277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.288     0.971   -0.0692    -0.998
          1      5.11      7.59    -0.998    0.0692
         *Z       ---       ---  1.42e+14  5.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.943163, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.009839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428316
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.55     0.823     0.179     0.821
          1      76.9         7         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.195     0.823   -0.0867    -0.996
          1      3.29         7    -0.996    0.0867
         *Z       ---       ---  1.42e+14  5.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958086, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010995, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001781, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428316
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.25     0.723     0.204     0.796
          1      53.6      6.19         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.723    -0.102    -0.995
          1       2.3      6.19    -0.995     0.102
         *Z       ---       ---  1.42e+14  5.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012844, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13171 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001412
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000401
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028473
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153274
         W1a Well: minimal relaxation eigenvalue = 0.0423094
         W1a Well: maximal relaxation eigenvalue = 16.0171
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1524 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001735
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.174841
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051231
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066024
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200288
         W1b Well: minimal relaxation eigenvalue = 0.0430939
         W1b Well: maximal relaxation eigenvalue = 3.3514
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.691386, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.55073e+21
      MasterEquation::Barrier::truncate: effective weight = 2.6308e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1524  -1260 1.05e+05 1.18e+15
        W1b  -3373  -3373      519 3.26e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 2.08e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 5.41e+16
         B2  -3373 2.64e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.85  1.65e-19  1.75e-31
        W1b     0.146         1  2.41e-20  2.55e-32
         P1  6.06e+18  4.15e+19         1  1.06e-12
         P2  5.72e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.94  6.68e-23  7.08e-35
        W1b     0.144         1  9.63e-24  1.02e-35
         P1   1.5e+22  1.04e+23         1  1.06e-12
         P2  1.41e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.695132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04068, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178845, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24489, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0423094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        34      2.13    0.0751     0.925
          1       907      9.51         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.44      2.13    -0.031        -1
          1      38.4      9.51        -1     0.031
         *Z       ---       ---  1.44e+14  5.51e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04123, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0423094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2      1.25     0.128     0.872
          1       213      8.66         1   -0.0215
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.476      1.25   -0.0561    -0.998
          1      9.01      8.66    -0.998    0.0561
         *Z       ---       ---  1.44e+14  5.51e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21422, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16301, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20974, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0423094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.28      1.02     0.162     0.838
          1       124      8.24         1   -0.0283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.308      1.02   -0.0738    -0.997
          1      5.26      8.24    -0.997    0.0738
         *Z       ---       ---  1.44e+14  5.51e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21228, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01871, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016093, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0423094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.89     0.868     0.198     0.802
          1      78.5      7.64         1   -0.0361
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.868   -0.0942    -0.996
          1      3.32      7.64    -0.996    0.0942
         *Z       ---       ---  1.44e+14  5.51e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012649, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014598, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0423094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.46     0.766     0.229     0.771
          1      53.8      6.81         1   -0.0434
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.146     0.766    -0.113    -0.994
          1      2.28      6.81    -0.994     0.113
         *Z       ---       ---  1.44e+14  5.51e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014638, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13380 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00135
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0004
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028169
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153667
         W1a Well: minimal relaxation eigenvalue = 0.0422851
         W1a Well: maximal relaxation eigenvalue = 10.7179
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1482 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001656
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.182887
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050474
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070922
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.19731
         W1b Well: minimal relaxation eigenvalue = 0.0427478
         W1b Well: maximal relaxation eigenvalue = 8.20786
         W1b Well:       grid size = 189
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1216 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 30 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701151, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1482  -1216 1.79e+05 1.34e+15
        W1b  -3441  -3441       92 3.66e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1216 2.38e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     31 6.07e+16
         B2  -3441 3.05e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.44  1.59e-19  2.71e-31
        W1b     0.134         1  2.14e-20  3.64e-32
         P1  6.28e+18  4.67e+19         1   1.7e-12
         P2  3.69e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.53  6.52e-23  1.11e-34
        W1b     0.133         1  8.66e-24  1.47e-35
         P1  1.53e+22  1.15e+23         1   1.7e-12
         P2  9.02e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.704678, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188044, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2613, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0422851
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      35.5       2.4    0.0766     0.923
          1       994      10.2         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.5       2.4   -0.0304        -1
          1        42      10.2        -1    0.0304
         *Z       ---       ---  1.48e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26383, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05168, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164592, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0422851
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.9      1.39     0.129     0.871
          1       239      9.27         1   -0.0199
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.502      1.39   -0.0541    -0.999
          1      10.1      9.27    -0.999    0.0541
         *Z       ---       ---  1.48e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22449, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05106, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164789, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0422851
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.77      1.13     0.161     0.839
          1       142      8.76         1   -0.0257
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.329      1.13     -0.07    -0.998
          1      5.99      8.76    -0.998      0.07
         *Z       ---       ---  1.48e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.980957, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.999825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0422851
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.3      0.96     0.193     0.807
          1      91.3      8.05         1   -0.0321
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224      0.96   -0.0872    -0.996
          1      3.86      8.05    -0.996    0.0872
         *Z       ---       ---  1.48e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001743, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013229, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0422851
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.82     0.842     0.218     0.782
          1      63.6      7.08         1   -0.0376
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.161     0.842    -0.102    -0.995
          1      2.69      7.08    -0.995     0.102
         *Z       ---       ---  1.48e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013265, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13588 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001366
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0004
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030709
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153178
         W1a Well: minimal relaxation eigenvalue = 0.041694
         W1a Well: maximal relaxation eigenvalue = 17.3594
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1532 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001624
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185696
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050603
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0643
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195369
         W1b Well: minimal relaxation eigenvalue = 0.0425074
         W1b Well: maximal relaxation eigenvalue = 4.24589
         W1b Well:       grid size = 189
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3422 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3512 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.6972, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 189
      MasterEquation::Barrier::truncate: real weight = 7.32639e+21
      MasterEquation::Barrier::truncate: effective weight = 3.00929e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1532  -1261 1.04e+05 1.53e+15
        W1b  -3422  -3422      294  4.1e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 2.71e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1  6.8e+16
         B2  -3422 3.52e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.05  1.54e-19  4.14e-31
        W1b     0.124         1  1.91e-20  5.14e-32
         P1   6.5e+18  5.23e+19         1  2.69e-12
         P2  2.42e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.15  6.37e-23  1.72e-34
        W1b     0.123         1  7.82e-24   2.1e-35
         P1  1.57e+22  1.28e+23         1  2.69e-12
         P2  5.83e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.701241, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05682, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18695, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2579, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      39.8      2.41    0.0849     0.915
          1  1.07e+03        11         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.66      2.41   -0.0327    -0.999
          1      44.7        11    -0.999    0.0327
         *Z       ---       ---  1.51e+14  5.31e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26031, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04778, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.166276, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21947, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.41     0.143     0.857
          1       250      9.99         1   -0.0208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.548      1.41   -0.0588    -0.998
          1      10.4      9.99    -0.998    0.0588
         *Z       ---       ---  1.51e+14  5.31e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22187, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06624, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23725, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.52      1.16      0.18      0.82
          1       145       9.5         1   -0.0273
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.355      1.16   -0.0772    -0.997
          1      6.05       9.5    -0.997    0.0772
         *Z       ---       ---  1.51e+14  5.31e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23963, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.963174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.011098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97894, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.73     0.989     0.219     0.781
          1      91.2       8.8         1   -0.0348
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.239     0.989   -0.0984    -0.995
          1       3.8       8.8    -0.995    0.0984
         *Z       ---       ---  1.51e+14  5.31e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.97931, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010932, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001764, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012737, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.06     0.878     0.252     0.748
          1      62.1      7.83         1   -0.0419
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.169     0.878    -0.118    -0.993
          1      2.59      7.83    -0.993     0.118
         *Z       ---       ---  1.51e+14  5.31e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012761, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13797 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001279
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000396
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033043
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.14795
         W1a Well: minimal relaxation eigenvalue = 0.0331928
         W1a Well: maximal relaxation eigenvalue = 30.8615
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001604
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178416
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049315
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070989
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195396
         W1b Well: minimal relaxation eigenvalue = 0.0422303
         W1b Well: maximal relaxation eigenvalue = 3.8697
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1290 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3499 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.692634, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.77073e+21
      MasterEquation::Barrier::truncate: effective weight = 3.26286e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1290 7.28e+04 1.74e+15
        W1b  -3406  -3406      391 4.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1290 3.09e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 7.62e+16
         B2  -3406 4.06e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.69  1.47e-19  6.18e-31
        W1b     0.115         1  1.69e-20  7.11e-32
         P1  6.79e+18  5.91e+19         1   4.2e-12
         P2  1.62e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  6.24e-23  2.62e-34
        W1b     0.114         1  7.08e-24  2.98e-35
         P1   1.6e+22  1.41e+23         1   4.2e-12
         P2  3.82e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.696442, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03684, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184178, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0331928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        54      2.51    0.0919     0.908
          1  1.39e+03        15         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.79      2.51   -0.0343    -0.999
          1      46.1        15    -0.999    0.0343
         *Z       ---       ---  1.54e+14  5.21e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2356, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03785, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162137, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20555, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0331928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.7      1.47     0.159     0.841
          1       315      11.1         1   -0.0217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.586      1.47    -0.064    -0.998
          1      10.4      11.1    -0.998     0.064
         *Z       ---       ---  1.54e+14  5.21e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20791, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03755, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161908, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20481, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0331928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.3       1.2     0.205     0.795
          1       175      10.5         1   -0.0297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.375       1.2   -0.0872    -0.996
          1      5.81      10.5    -0.996    0.0872
         *Z       ---       ---  1.54e+14  5.21e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20715, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03353, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.017121, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05554, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0331928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.38      1.03     0.259     0.741
          1       104      9.83         1   -0.0401
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.245      1.03    -0.117    -0.993
          1      3.45      9.83    -0.993     0.117
         *Z       ---       ---  1.54e+14  5.21e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05604, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013594, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015551, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0331928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         5     0.935      0.31      0.69
          1      66.5      8.97         1   -0.0518
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.166     0.935    -0.151    -0.989
          1      2.21      8.97    -0.989     0.151
         *Z       ---       ---  1.54e+14  5.21e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015593, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 14005 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001371
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030668
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156639
         W1a Well: minimal relaxation eigenvalue = 0.0412154
         W1a Well: maximal relaxation eigenvalue = 17.2214
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1526 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001604
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183248
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04957
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063742
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196134
         W1b Well: minimal relaxation eigenvalue = 0.0419655
         W1b Well: maximal relaxation eigenvalue = 3.71339
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.696783, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 8.23341e+21
      MasterEquation::Barrier::truncate: effective weight = 3.49473e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1526  -1247 1.26e+05 1.97e+15
        W1b  -3386  -3386      488 5.13e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 3.51e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 8.51e+16
         B2  -3386 4.66e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.37  1.43e-19  9.23e-31
        W1b     0.107         1  1.52e-20  9.85e-32
         P1  7.01e+18  6.57e+19         1  6.47e-12
         P2  1.08e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.49  6.11e-23  3.95e-34
        W1b     0.105         1  6.44e-24  4.16e-35
         P1  1.64e+22  1.55e+23         1  6.47e-12
         P2  2.53e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.700806, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04421, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24146, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      47.1      2.64     0.096     0.904
          1  1.27e+03      12.8         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.94      2.64   -0.0347    -0.999
          1      52.4      12.8    -0.999    0.0347
         *Z       ---       ---  1.57e+14  5.13e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2439, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05439, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163874, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.5      1.57     0.159     0.841
          1       298      11.5         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.639      1.57   -0.0614    -0.998
          1      12.3      11.5    -0.998    0.0614
         *Z       ---       ---  1.57e+14  5.13e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22647, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04723, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164797, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21763, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.1       1.3     0.197     0.803
          1       173      10.9         1   -0.0262
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.414       1.3   -0.0799    -0.997
          1      7.14      10.9    -0.997    0.0799
         *Z       ---       ---  1.57e+14  5.13e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21999, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02116, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.78      1.12     0.237     0.763
          1       109        10         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.279      1.12    -0.101    -0.995
          1      4.49        10    -0.995     0.101
         *Z       ---       ---  1.57e+14  5.13e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02165, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012406, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014354, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412154
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.82     0.998      0.27      0.73
          1      74.1      8.86         1   -0.0395
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.998     -0.12    -0.993
          1      3.05      8.86    -0.993      0.12
         *Z       ---       ---  1.57e+14  5.13e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014399, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14214 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001262
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000391
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028517
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151873
         W1a Well: minimal relaxation eigenvalue = 0.0401195
         W1a Well: maximal relaxation eigenvalue = 23.418
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001614
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175747
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048503
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067417
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.190606
         W1b Well: minimal relaxation eigenvalue = 0.041699
         W1b Well: maximal relaxation eigenvalue = 3.65302
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3361 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1271 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3455 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.679963, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.75183e+21
      MasterEquation::Barrier::truncate: effective weight = 3.79439e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1271 9.28e+04 2.23e+15
        W1b  -3361  -3361      586 5.74e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1271 3.99e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 9.51e+16
         B2  -3361 5.35e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.37e-19  1.35e-30
        W1b    0.0992         1  1.36e-20  1.34e-31
         P1   7.3e+18  7.35e+19         1  9.83e-12
         P2  7.42e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2     6e-23  5.89e-34
        W1b     0.098         1  5.87e-24  5.78e-35
         P1  1.67e+22   1.7e+23         1  9.83e-12
         P2   1.7e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.683954, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01835, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179937, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21687, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0401195
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      52.1      2.77     0.103     0.897
          1  1.39e+03        14         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.77    -0.036    -0.999
          1      55.8        14    -0.999     0.036
         *Z       ---       ---   1.6e+14  5.04e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21932, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01721, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18201, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0401195
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.1      1.64     0.171     0.829
          1       318      12.5         1   -0.0205
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.684      1.64   -0.0649    -0.998
          1      12.8      12.5    -0.998    0.0649
         *Z       ---       ---   1.6e+14  5.04e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01671, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158986, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18124, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0401195
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        11      1.36     0.215     0.785
          1       181      11.8         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.44      1.36   -0.0859    -0.996
          1      7.25      11.8    -0.996    0.0859
         *Z       ---       ---   1.6e+14  5.04e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01496, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.099779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0401195
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.3      1.17     0.262     0.738
          1       110        11         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.293      1.17    -0.111    -0.994
          1      4.43        11    -0.994     0.111
         *Z       ---       ---   1.6e+14  5.04e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.021382, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023416, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0401195
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.09      1.06     0.305     0.695
          1      73.1      9.82         1   -0.0435
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.204      1.06    -0.137    -0.991
          1      2.93      9.82    -0.991     0.137
         *Z       ---       ---   1.6e+14  5.04e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023471, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14422 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00134
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000398
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029285
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164638
         W1a Well: minimal relaxation eigenvalue = 0.0408594
         W1a Well: maximal relaxation eigenvalue = 14.8044
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001573
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.177119
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047474
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068607
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194002
         W1b Well: minimal relaxation eigenvalue = 0.0414192
         W1b Well: maximal relaxation eigenvalue = 5.05076
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3434 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1225 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 21 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.697918, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1225  1.6e+05 2.52e+15
        W1b  -3434  -3434      251  6.4e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1225 4.53e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     22 1.06e+17
         B2  -3434 6.13e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.33e-19  1.97e-30
        W1b    0.0924         1  1.23e-20  1.82e-31
         P1  7.51e+18  8.12e+19         1  1.48e-11
         P2  5.09e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11  5.89e-23  8.69e-34
        W1b    0.0913         1  5.38e-24  7.94e-35
         P1   1.7e+22  1.86e+23         1  1.48e-11
         P2  1.15e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.7014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01427, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.670166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71066, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0408594
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      54.2      3.01     0.105     0.895
          1  1.51e+03      14.7         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.22      3.01   -0.0356    -0.999
          1      61.6      14.7    -0.999    0.0356
         *Z       ---       ---  1.64e+14  4.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7131, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160775, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18428, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0408594
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.9      1.79      0.17      0.83
          1       356      13.2         1   -0.0189
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.732      1.79    -0.062    -0.998
          1      14.5      13.2    -0.998     0.062
         *Z       ---       ---  1.64e+14  4.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18894, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0408594
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.7      1.48     0.208     0.792
          1       208      12.4         1   -0.0243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.477      1.48   -0.0797    -0.997
          1      8.51      12.4    -0.997    0.0797
         *Z       ---       ---  1.64e+14  4.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19127, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.613575, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001688, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.61969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0408594
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.95      1.28     0.247     0.753
          1       132      11.3         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.325      1.28    -0.099    -0.995
          1      5.39      11.3    -0.995     0.099
         *Z       ---       ---  1.64e+14  4.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.620054, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010538, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001696, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012279, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0408594
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.71      1.14     0.278     0.722
          1      90.3      9.88         1   -0.0356
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.233      1.14    -0.116    -0.993
          1      3.69      9.88    -0.993     0.116
         *Z       ---       ---  1.64e+14  4.98e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012303, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14631 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001341
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000391
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028962
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152719
         W1a Well: minimal relaxation eigenvalue = 0.0379487
         W1a Well: maximal relaxation eigenvalue = 27.5112
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1568 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001616
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180935
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04943
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059594
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.18712
         W1b Well: minimal relaxation eigenvalue = 0.0411793
         W1b Well: maximal relaxation eigenvalue = 4.25082
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1277 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -16 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3508 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.675573, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 186
      MasterEquation::Barrier::truncate: real weight = 9.89066e+21
      MasterEquation::Barrier::truncate: effective weight = 4.37914e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1568  -1277  8.7e+04 2.85e+15
        W1b  -3411  -3411      396 7.14e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1277 5.13e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -16 1.18e+17
         B2  -3411 7.02e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6   1.3e-19  2.84e-30
        W1b    0.0863         1  1.12e-20  2.45e-31
         P1  7.71e+18  8.94e+19         1  2.19e-11
         P2  3.52e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.7  5.79e-23  1.27e-33
        W1b    0.0852         1  4.93e-24  1.08e-34
         P1  1.73e+22  2.03e+23         1  2.19e-11
         P2  7.88e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.679548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03244, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22701, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0379487
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      63.3       3.1     0.114     0.886
          1  1.69e+03      16.6         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       2.4       3.1   -0.0377    -0.999
          1      64.3      16.6    -0.999    0.0377
         *Z       ---       ---  1.68e+14  4.93e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163203, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20141, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0379487
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.6      1.84     0.189     0.811
          1       383      14.3         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.783      1.84   -0.0682    -0.998
          1      14.5      14.3    -0.998    0.0682
         *Z       ---       ---  1.68e+14  4.93e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20378, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02648, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161342, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19338, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0379487
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.52     0.237     0.763
          1       215      13.6         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.502      1.52   -0.0908    -0.996
          1      8.16      13.6    -0.996    0.0908
         *Z       ---       ---  1.68e+14  4.93e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1962, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03012, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.054617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08973, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0379487
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.74      1.32      0.29      0.71
          1       129      12.7         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.332      1.32    -0.119    -0.993
          1       4.9      12.7    -0.993     0.119
         *Z       ---       ---  1.68e+14  4.93e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01598, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001702, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0379487
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.03      1.21     0.338     0.662
          1      83.8      11.4         1   -0.0441
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.229      1.21    -0.148    -0.989
          1      3.18      11.4    -0.989     0.148
         *Z       ---       ---  1.68e+14  4.93e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018018, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16716 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001304
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000381
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02917
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155024
         W1a Well: minimal relaxation eigenvalue = 0.0385715
         W1a Well: maximal relaxation eigenvalue = 14.0921
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1488 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001667
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.159772
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045095
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075049
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.190511
         W1b Well: minimal relaxation eigenvalue = 0.0389188
         W1b Well: maximal relaxation eigenvalue = 4.61341
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3375 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -45 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.670883, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.89035e+22
      MasterEquation::Barrier::truncate: effective weight = 9.57941e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1488  -1266  9.9e+04 9.01e+15
        W1b  -3375  -3375      593 2.02e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.66e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -45 3.26e+17
         B2  -3375  2.5e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        21  1.01e-19  6.62e-29
        W1b    0.0476         1  4.78e-21  3.15e-30
         P1  9.95e+18  2.09e+20         1  6.58e-10
         P2  1.51e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      21.3  5.14e-23  3.38e-32
        W1b     0.047         1  2.41e-24  1.59e-33
         P1  1.95e+22  4.14e+23         1  6.58e-10
         P2  2.96e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.674514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.975799, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16294, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0385715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       127      5.09      0.17      0.83
          1  3.62e+03      30.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.89      5.09   -0.0445    -0.999
          1       140      30.5    -0.999    0.0445
         *Z       ---       ---  2.11e+14  4.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16559, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.973623, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154015, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13287, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0385715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.4      3.15     0.249     0.751
          1       862      26.6         1   -0.0158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.6      3.15   -0.0723    -0.997
          1      33.2      26.6    -0.997    0.0723
         *Z       ---       ---  2.11e+14  4.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.971834, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154498, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13178, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0385715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      27.1      2.68     0.291     0.709
          1       507      24.4         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.05      2.68   -0.0892    -0.996
          1      19.5      24.4    -0.996    0.0892
         *Z       ---       ---  2.11e+14  4.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13431, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.974323, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.152773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13234, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0385715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.7      2.37      0.33      0.67
          1       321      21.4         1   -0.0234
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.721      2.37    -0.107    -0.994
          1      12.4      21.4    -0.994     0.107
         *Z       ---       ---  2.11e+14  4.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13464, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.149299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.155253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0385715
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.7      2.16     0.359     0.641
          1       216      17.6         1   -0.0266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.528      2.16    -0.121    -0.993
          1      8.34      17.6    -0.993     0.121
         *Z       ---       ---  2.11e+14  4.61e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.155621, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18801 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00134
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00038
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027736
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149573
         W1a Well: minimal relaxation eigenvalue = 0.0348288
         W1a Well: maximal relaxation eigenvalue = 27.5217
         W1a Well:       grid size = 163
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1574 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002035
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.160476
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04354
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067723
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.188452
         W1b Well: minimal relaxation eigenvalue = 0.0370393
         W1b Well: maximal relaxation eigenvalue = 6.87608
         W1b Well:       grid size = 178
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3448 1/cm
         B8 Barrier:        grid size = 161
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1324 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -74 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.653886, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1574  -1324 4.54e+04 2.57e+16
        W1b  -3448  -3448      343 5.25e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1324 4.85e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -74 8.18e+17
         B2  -3448 7.83e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.5  8.47e-20  7.81e-28
        W1b    0.0298         1  2.53e-21  2.33e-29
         P1  1.18e+19  3.96e+20         1  9.23e-09
         P2  1.28e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.9  4.87e-23   4.5e-31
        W1b    0.0295         1  1.44e-24  1.33e-32
         P1  2.05e+22  6.96e+23         1  9.23e-09
         P2  2.22e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.657772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.943756, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170747, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0348288
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       265       8.5     0.222     0.778
          1  7.83e+03      57.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.22       8.5   -0.0493    -0.999
          1       273      57.1    -0.999    0.0493
         *Z       ---       ---   2.7e+14  4.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12863, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.944242, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150366, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0348288
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      83.9      5.22     0.319     0.681
          1  1.77e+03      47.5         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.92      5.22   -0.0807    -0.997
          1      61.8      47.5    -0.997    0.0807
         *Z       ---       ---   2.7e+14  4.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10211, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.945741, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0995, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0348288
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      53.8      4.45     0.373     0.627
          1       991      43.5         1   -0.0177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.87      4.45    -0.102    -0.995
          1      34.5      43.5    -0.995     0.102
         *Z       ---       ---   2.7e+14  4.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10187, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.944045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148216, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09759, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0348288
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        36         4     0.427     0.573
          1       585      38.3         1   -0.0222
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.25         4    -0.128    -0.992
          1      20.4      38.3    -0.992     0.128
         *Z       ---       ---   2.7e+14  4.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0999, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.288069, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001591, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.293879, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0348288
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.4      3.76     0.474     0.526
          1       366      31.4         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.883      3.76    -0.154    -0.988
          1      12.8      31.4    -0.988     0.154
         *Z       ---       ---   2.7e+14  4.66e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.294243, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20886 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001302
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000375
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03006
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156661
         W1a Well: minimal relaxation eigenvalue = 0.035238
         W1a Well: maximal relaxation eigenvalue = 17.2092
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001937
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.158644
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.042817
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069685
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.183284
         W1b Well: minimal relaxation eigenvalue = 0.0354896
         W1b Well: maximal relaxation eigenvalue = 7.2501
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3439 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -103 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.657421, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1214 1.81e+05 6.76e+16
        W1b  -3439  -3439      460 1.27e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.29e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -103  1.9e+18
         B2  -3439 2.22e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      48.8  7.54e-20  5.72e-27
        W1b    0.0205         1  1.55e-21  1.17e-28
         P1  1.33e+19  6.47e+20         1  7.59e-08
         P2  1.75e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      49.4  4.82e-23  3.66e-30
        W1b    0.0203         1  9.77e-25  7.42e-32
         P1  2.07e+22  1.02e+24         1  7.59e-08
         P2  2.73e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.660849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.900442, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07612, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.035238
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       495      13.6     0.267     0.733
          1  1.47e+04      87.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.4      13.6   -0.0521    -0.999
          1       518      87.3    -0.999    0.0521
         *Z       ---       ---  3.45e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00271872
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000739, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0813, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.906612, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14364, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05539, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.035238
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       157      8.59     0.356     0.644
          1  3.39e+03      69.1         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.54      8.59   -0.0788    -0.997
          1       119      69.1    -0.997    0.0788
         *Z       ---       ---  3.45e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0583, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.902718, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145114, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05298, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.035238
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       103      7.42     0.399     0.601
          1  1.92e+03      59.2         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.63      7.42   -0.0945    -0.996
          1      67.5      59.2    -0.996    0.0945
         *Z       ---       ---  3.45e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.906948, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14327, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05538, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.035238
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      71.4      6.64     0.438     0.562
          1  1.14e+03      46.8         1    -0.016
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.52      6.64    -0.111    -0.994
          1        40      46.8    -0.994     0.111
         *Z       ---       ---  3.45e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.470982, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00152, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.476615, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.035238
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      52.7      6.08     0.469     0.531
          1       698      32.8         1   -0.0181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.86      6.08    -0.126    -0.992
          1      24.6      32.8    -0.992     0.126
         *Z       ---       ---  3.45e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.476985, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22971 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001219
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026773
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.142809
         W1a Well: minimal relaxation eigenvalue = 0.0338216
         W1a Well: maximal relaxation eigenvalue = 20.1602
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1508 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00196
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154568
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041663
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059873
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.172362
         W1b Well: minimal relaxation eigenvalue = 0.0341065
         W1b Well: maximal relaxation eigenvalue = 13.003
         W1b Well:       grid size = 173
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3497 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1355 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 21 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.614116, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1508  -1355 2.69e+04 1.65e+17
        W1b  -3497  -3497      189 2.91e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1355 3.21e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     22 4.11e+18
         B2  -3497 5.79e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      66.3  6.97e-20  2.96e-26
        W1b    0.0151         1  1.05e-21  4.46e-28
         P1  1.43e+19  9.52e+20         1  4.24e-07
         P2  3.38e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      67.2  4.91e-23  2.08e-29
        W1b    0.0149         1  7.31e-25   3.1e-31
         P1  2.04e+22  1.37e+24         1  4.24e-07
         P2   4.8e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.617923, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880748, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06181, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0338216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       890      23.7     0.296     0.704
          1  2.55e+04       121         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      30.1      23.7   -0.0515    -0.999
          1       863       121    -0.999    0.0515
         *Z       ---       ---  4.41e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.0026482
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00062, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06563, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.887913, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141279, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03421, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0338216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       273      14.8     0.378     0.622
          1  5.65e+03      90.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.25      14.8   -0.0745    -0.997
          1       191      90.3    -0.997    0.0745
         *Z       ---       ---  4.41e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03658, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.890405, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141109, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0338216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       176      12.7      0.42      0.58
          1  3.08e+03      74.9         1   -0.0109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.97      12.7   -0.0884    -0.996
          1       104      74.9    -0.996    0.0884
         *Z       ---       ---  4.41e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0388, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.890084, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140662, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03586, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0338216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       121      11.2     0.459     0.541
          1  1.74e+03      56.8         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.08      11.2    -0.104    -0.995
          1      58.8      56.8    -0.995     0.104
         *Z       ---       ---  4.41e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.553108, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001484, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.55865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0338216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      88.1      10.2     0.493     0.507
          1  1.01e+03      37.6         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.98      10.2    -0.119    -0.993
          1        34      37.6    -0.993     0.119
         *Z       ---       ---  4.41e+14  5.41e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.559013, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25056 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001234
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028048
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140126
         W1a Well: minimal relaxation eigenvalue = 0.0327503
         W1a Well: maximal relaxation eigenvalue = 20.2485
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001994
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.151704
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041628
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061632
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.175045
         W1b Well: minimal relaxation eigenvalue = 0.0329865
         W1b Well: maximal relaxation eigenvalue = 12.4016
         W1b Well:       grid size = 171
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3500 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1329 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 6 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3500 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.614676, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1329 4.18e+04  3.8e+17
        W1b  -3500  -3500      281  6.3e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1329 7.46e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      7 8.43e+18
         B2  -3500  1.4e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.8  6.63e-20  1.18e-25
        W1b    0.0117         1  7.73e-22  1.37e-27
         P1  1.51e+19  1.29e+21         1  1.78e-06
         P2   8.5e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      86.9   5.1e-23  9.05e-29
        W1b    0.0115         1  5.87e-25  1.04e-30
         P1  1.96e+22   1.7e+24         1  1.78e-06
         P2  1.11e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.618132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.856718, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159088, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02998, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0327503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.67e+03      36.3     0.337     0.663
          1  3.93e+04       128         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.8      36.3   -0.0547    -0.999
          1  1.29e+03       128    -0.999    0.0547
         *Z       ---       ---  5.62e+14  6.07e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.002995
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000615, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03375, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.867922, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13771, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0327503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       508      23.1     0.417     0.583
          1  8.48e+03      89.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      16.6      23.1   -0.0769    -0.997
          1       278      89.6    -0.997    0.0769
         *Z       ---       ---  5.62e+14  6.07e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.867542, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13743, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01006, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0327503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       327      19.9     0.456     0.544
          1  4.52e+03      70.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.7      19.9   -0.0901    -0.996
          1       148      70.4    -0.996    0.0901
         *Z       ---       ---  5.62e+14  6.07e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01267, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.867064, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.137605, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00971, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0327503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       223      17.7     0.494     0.506
          1  2.46e+03      49.5         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       7.3      17.7    -0.105    -0.994
          1      80.6      49.5    -0.994     0.105
         *Z       ---       ---  5.62e+14  6.07e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01208, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.657472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.663263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0327503
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       162      16.1     0.529     0.471
          1  1.36e+03      29.9         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.32      16.1     -0.12    -0.993
          1      44.5      29.9    -0.993      0.12
         *Z       ---       ---  5.62e+14  6.07e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.663637, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27142 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001111
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000361
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029232
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135013
         W1a Well: minimal relaxation eigenvalue = 0.0107185
         W1a Well: maximal relaxation eigenvalue = 40.2396
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1636 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00201
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13743
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039529
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066865
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152687
         W1b Well: minimal relaxation eigenvalue = 0.0320392
         W1b Well: maximal relaxation eigenvalue = 11.1224
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1275 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.57648, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1636  -1275 8.89e+04 8.27e+17
        W1b  -3446  -3446      586  1.3e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1275 1.64e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 1.64e+19
         B2  -3446  3.2e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       107  6.43e-20  3.82e-25
        W1b   0.00937         1  6.03e-22  3.58e-27
         P1  1.55e+19  1.66e+21         1  5.94e-06
         P2  2.62e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       108  5.36e-23  3.19e-28
        W1b   0.00926         1  4.96e-25  2.95e-30
         P1  1.87e+22  2.01e+24         1  5.94e-06
         P2  3.14e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.579891, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.838963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151286, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01226, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0107185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.21e+03      51.9     0.387     0.613
          1  1.57e+05       113         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.7      51.9    -0.061    -0.998
          1  1.68e+03       113    -0.998     0.061
         *Z       ---       ---  7.14e+14  6.91e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.0037179
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000637, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01632, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.847927, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988488, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0107185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.68e+03      33.2     0.482     0.518
          1  3.27e+04      79.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      28.7      33.2   -0.0899    -0.996
          1       350      79.2    -0.996    0.0899
         *Z       ---       ---  7.14e+14  6.91e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.992 0.008
         well projection threshold  = 0.2
         partition projection error = 0.00807303
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000578, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.992089, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853301, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135247, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993388, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0107185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.65e+03      29.1     0.533     0.467
          1  1.69e+04        65         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.7      29.1     -0.11    -0.994
          1       181        65    -0.994      0.11
         *Z       ---       ---  7.14e+14  6.91e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.988 0.012
         well projection threshold  = 0.2
         partition projection error = 0.0120618
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000549, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.997203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134987, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993224, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0107185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+03        27     0.586     0.414
          1  8.82e+03      49.4         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.4        27    -0.136    -0.991
          1      94.5      49.4    -0.991     0.136
         *Z       ---       ---  7.14e+14  6.91e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.995602, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.743837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005513, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.753363, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0107185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       712      26.3     0.639     0.361
          1  4.67e+03      33.2         1   -0.0166
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      7.64      26.3    -0.169    -0.986
          1      50.1      33.2    -0.986     0.169
         *Z       ---       ---  7.14e+14  6.91e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.753733, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29228 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001137
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027927
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138012
         W1a Well: minimal relaxation eigenvalue = 0.0279401
         W1a Well: maximal relaxation eigenvalue = 31.0785
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1582 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002197
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.146401
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040167
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061697
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.157094
         W1b Well: minimal relaxation eigenvalue = 0.0310608
         W1b Well: maximal relaxation eigenvalue = 16.552
         W1b Well:       grid size = 168
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3532 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.587618, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1582  -1387 1.48e+04 1.72e+18
        W1b  -3532  -3532      251 2.59e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 3.45e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 3.07e+19
         B2  -3532 6.91e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       129  6.34e-20  1.06e-24
        W1b   0.00777         1  4.93e-22  8.23e-27
         P1  1.58e+19  2.03e+21         1  1.67e-05
         P2  9.45e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       130  5.69e-23   9.5e-28
        W1b   0.00768         1  4.37e-25   7.3e-30
         P1  1.76e+22  2.29e+24         1  1.67e-05
         P2  1.05e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.591073, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829217, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14409, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993136, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0279401
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.69e+03      91.3     0.404     0.596
          1   7.1e+04      88.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       159      91.3   -0.0597    -0.998
          1  1.98e+03      88.2    -0.998    0.0597
         *Z       ---       ---  9.01e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00356125
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000611, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.997209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.841923, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133152, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.979964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0279401
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.61e+03      57.6     0.486     0.514
          1  1.46e+04      59.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        45      57.6   -0.0831    -0.997
          1       408      59.7    -0.997    0.0831
         *Z       ---       ---  9.01e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.993 0.007
         well projection threshold  = 0.2
         partition projection error = 0.00691362
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000556, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.983585, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.842381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.980333, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0279401
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       991      49.4     0.531     0.469
          1  7.45e+03      47.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      27.7      49.4   -0.0992    -0.995
          1       208      47.4    -0.995    0.0992
         *Z       ---       ---  9.01e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.982662, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.841771, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.980233, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0279401
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       641      43.8     0.579     0.421
          1  3.83e+03      34.5         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.9      43.8     -0.12    -0.993
          1       107      34.5    -0.993      0.12
         *Z       ---       ---  9.01e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.982595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788197, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.010289, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.802471, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0279401
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       440      39.9     0.631     0.369
          1  1.99e+03      22.2         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.3      39.9    -0.149    -0.989
          1      55.6      22.2    -0.989     0.149
         *Z       ---       ---  9.01e+14  7.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.802905, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31312 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 8.6e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001407
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000353
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027835
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131369
         W1a Well: minimal relaxation eigenvalue = 0.0299326
         W1a Well: maximal relaxation eigenvalue = 24.2967
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002023
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137817
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038743
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059958
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149635
         W1b Well: minimal relaxation eigenvalue = 0.0304321
         W1b Well: maximal relaxation eigenvalue = 10.8901
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3381 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1292 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -38 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3590 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.561227, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.54885e+24
      MasterEquation::Barrier::truncate: effective weight = 1.47846e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1292  7.2e+04 3.43e+18
        W1b  -3381  -3381 1.37e+03 4.95e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1292 6.94e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -38 5.53e+19
         B2  -3381 1.42e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       151  6.31e-20  2.58e-24
        W1b   0.00661         1  4.17e-22   1.7e-26
         P1  1.58e+19   2.4e+21         1  4.08e-05
         P2  3.88e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       153  6.07e-23  2.48e-27
        W1b   0.00653         1  3.97e-25  1.62e-29
         P1  1.65e+22  2.52e+24         1  4.08e-05
         P2  4.03e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.565143, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819343, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144631, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974479, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0299326
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+04       114     0.477     0.523
          1  7.34e+04      51.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       301       114   -0.0738    -0.997
          1   2.2e+03      51.7    -0.997    0.0738
         *Z       ---       ---  1.13e+15  9.19e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.976792, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821909, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.958512, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0299326
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.01e+03      77.1     0.571     0.429
          1  1.51e+04      31.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        90      77.1    -0.107    -0.994
          1       451      31.5    -0.994     0.107
         *Z       ---       ---  1.13e+15  9.19e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.988 0.012
         well projection threshold  = 0.2
         partition projection error = 0.0115323
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00062, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.962434, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823105, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131402, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959458, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0299326
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.92e+03      68.1     0.621     0.379
          1  7.68e+03      22.9         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.5      68.1    -0.132    -0.991
          1       230      22.9    -0.991     0.132
         *Z       ---       ---  1.13e+15  9.19e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.961829, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131121, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0299326
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.3e+03      61.1     0.679     0.321
          1  3.94e+03      15.3         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      38.9      61.1     -0.17    -0.985
          1       118      15.3    -0.985      0.17
         *Z       ---       ---  1.13e+15  9.19e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.957866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82331, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.061027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888718, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0299326
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       929      53.8     0.753     0.247
          1  2.03e+03      10.8         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      27.8      53.8     -0.24    -0.971
          1      60.8      10.8    -0.971      0.24
         *Z       ---       ---  1.13e+15  9.19e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889297, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33397 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000194
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006627
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000524
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027753
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137765
         W1a Well: minimal relaxation eigenvalue = 0.00425669
         W1a Well: maximal relaxation eigenvalue = 45.8451
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1678 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002114
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136494
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039193
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057357
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152595
         W1b Well: minimal relaxation eigenvalue = 0.0297083
         W1b Well: maximal relaxation eigenvalue = 13.8908
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3454 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -124 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.572879, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1678  -1234 1.45e+05 6.59e+18
        W1b  -3454  -3454      905 9.18e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 1.34e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -124 9.62e+19
         B2  -3454 2.82e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       174  6.37e-20  5.68e-24
        W1b   0.00574         1  3.65e-22  3.26e-26
         P1  1.57e+19  2.74e+21         1  8.91e-05
         P2  1.76e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       176  6.51e-23   5.8e-27
        W1b   0.00567         1  3.69e-25  3.29e-29
         P1  1.54e+22  2.71e+24         1  8.91e-05
         P2  1.72e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.57645, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82394, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985499, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00425669
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.11e+05       176     0.541     0.459
          1  5.34e+05        46         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       473       176   -0.0889    -0.996
          1  2.27e+03        46    -0.996    0.0889
         *Z       ---       ---  1.41e+15  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.987834, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824269, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131122, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960065, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00425669
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.06e+04       115     0.641     0.359
          1  1.09e+05      29.1         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       130       115    -0.134    -0.991
          1       463      29.1    -0.991     0.134
         *Z       ---       ---  1.41e+15  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.962339, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00425669
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+04       101     0.694     0.306
          1  5.51e+04      24.1         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      77.8       101    -0.169    -0.986
          1       235      24.1    -0.986     0.169
         *Z       ---       ---  1.41e+15  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.962768, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824667, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132021, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961559, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00425669
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.13e+04      93.5     0.753     0.247
          1  2.81e+04      19.9         1   -0.0175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.9      93.5    -0.225    -0.974
          1       120      19.9    -0.974     0.225
         *Z       ---       ---  1.41e+15  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824466, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.044379, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00425669
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.17e+03      88.4     0.817     0.183
          1  1.46e+04      18.7         1   -0.0257
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      30.5      88.4    -0.321    -0.947
          1        62      18.7    -0.947     0.321
         *Z       ---       ---  1.41e+15  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.897 0.103
         well projection threshold  = 0.2
         partition projection error = 0.102961
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 7.9e-05, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.873919, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35482 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000203
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.005263
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000348
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029661
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135672
         W1a Well: minimal relaxation eigenvalue = 0.0257372
         W1a Well: maximal relaxation eigenvalue = 31.9875
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1570 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002209
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.14271
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039164
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049824
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150764
         W1b Well: minimal relaxation eigenvalue = 0.0290802
         W1b Well: maximal relaxation eigenvalue = 14.8241
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3458 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1334 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -154 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.567566, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1570  -1334 3.94e+04 1.23e+19
        W1b  -3458  -3458 1.02e+03 1.65e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1334 2.52e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -154 1.62e+20
         B2  -3458 5.36e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       198  6.44e-20  1.14e-23
        W1b   0.00506         1  3.26e-22  5.78e-26
         P1  1.55e+19  3.07e+21         1  0.000177
         P2  8.76e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       200     7e-23  1.24e-26
        W1b     0.005         1   3.5e-25   6.2e-29
         P1  1.43e+22  2.86e+24         1  0.000177
         P2  8.07e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.571135, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148259, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.978375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0257372
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.02e+04       260     0.625     0.375
          1  9.05e+04      36.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       776       260    -0.118    -0.993
          1  2.33e+03      36.4    -0.993     0.118
         *Z       ---       ---  1.75e+15  1.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.980673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.812924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0257372
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.45e+03       170     0.735     0.265
          1  1.85e+04      27.8         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       217       170    -0.193    -0.981
          1       475      27.8    -0.981     0.193
         *Z       ---       ---  1.75e+15  1.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.963 0.037
         well projection threshold  = 0.2
         partition projection error = 0.0373028
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000607, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951046, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814481, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129335, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948587, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0257372
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.15e+03       145     0.798     0.202
          1   9.4e+03      28.2         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       133       145     -0.27    -0.963
          1       242      28.2    -0.963      0.27
         *Z       ---       ---  1.75e+15  1.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950983, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0257372
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.24e+03       114     0.873     0.127
          1   4.9e+03      40.2         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      83.4       114    -0.438    -0.899
          1       126      40.2    -0.899     0.438
         *Z       ---       ---  1.75e+15  1.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813446, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.093848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911725, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0257372
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.99e+03      53.4     0.944    0.0557
          1  2.78e+03      87.3         1   -0.0858
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.2      53.4     -0.77    -0.638
          1      71.6      87.3    -0.638      0.77
         *Z       ---       ---  1.75e+15  1.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.912313, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37567 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000234
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.008987
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001368
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027373
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137416
         W1a Well: minimal relaxation eigenvalue = 0.00507216
         W1a Well: maximal relaxation eigenvalue = 44.9131
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1682 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00212
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13676
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038942
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050962
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147991
         W1b Well: minimal relaxation eigenvalue = 0.028521
         W1b Well: maximal relaxation eigenvalue = 15.366
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3432 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1432 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -182 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.564359, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1682  -1432  4.4e+03 2.21e+19
        W1b  -3432  -3432 1.31e+03 2.89e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1432 4.57e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -182 2.67e+20
         B2  -3432 9.82e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       221  6.55e-20  2.13e-23
        W1b   0.00453         1  2.97e-22  9.66e-26
         P1  1.53e+19  3.37e+21         1  0.000326
         P2  4.69e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       223  7.54e-23  2.45e-26
        W1b   0.00448         1  3.37e-25   1.1e-28
         P1  1.33e+22  2.96e+24         1  0.000326
         P2  4.07e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.568188, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807864, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13638, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.962214, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00507216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.43e+05       359     0.742     0.258
          1  4.64e+05      45.9         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.23e+03       359     -0.19    -0.982
          1  2.35e+03      45.9    -0.982      0.19
         *Z       ---       ---  2.16e+15  1.45e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807422, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128837, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941117, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00507216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   6.4e+04       214     0.855     0.145
          1  9.62e+04      58.6         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       325       214     -0.37    -0.929
          1       488      58.6    -0.929      0.37
         *Z       ---       ---  2.16e+15  1.45e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.943379, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79768, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929311, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00507216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.65e+04       152     0.909    0.0908
          1  5.04e+04      91.8         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       185       152    -0.559    -0.829
          1       256      91.8    -0.829     0.559
         *Z       ---       ---  2.16e+15  1.45e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931539, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.805075, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938477, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00507216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.02e+04      76.6     0.951    0.0487
          1  2.82e+04       152         1   -0.0885
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       103      76.6    -0.796    -0.605
          1       143       152    -0.605     0.796
         *Z       ---       ---  2.16e+15  1.45e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.940743, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808315, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129601, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942794, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00507216
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.07e+04        31     0.973    0.0268
          1  1.73e+04       193         1    -0.164
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.2        31    -0.925    -0.379
          1      87.8       193    -0.379     0.925
         *Z       ---       ---  2.16e+15  1.45e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945038, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39652 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.001264
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.009973
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0024
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032701
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.12857
         W1a Well: minimal relaxation eigenvalue = 0.0260497
         W1a Well: maximal relaxation eigenvalue = 30.7968
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1532 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001995
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135472
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038205
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05888
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147289
         W1b Well: minimal relaxation eigenvalue = 0.0280357
         W1b Well: maximal relaxation eigenvalue = 14.3806
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3380 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1268 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -212 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.56915, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.20144e+25
      MasterEquation::Barrier::truncate: effective weight = 1.44876e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1532  -1268 9.68e+04 3.89e+19
        W1b  -3380  -3380 2.21e+03 4.95e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1268 8.08e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -212 4.28e+20
         B2  -3380 1.74e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       244  6.69e-20  3.75e-23
        W1b    0.0041         1  2.74e-22  1.54e-25
         P1   1.5e+19  3.65e+21         1  0.000561
         P2  2.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       247  8.13e-23  4.56e-26
        W1b   0.00405         1  3.29e-25  1.85e-28
         P1  1.23e+22  3.04e+24         1  0.000561
         P2  2.19e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.573512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795686, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.944116, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260497
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.41e+04       334     0.913    0.0872
          1  9.47e+04       221         1   -0.0429
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.93e+03       334    -0.557    -0.831
          1  2.47e+03       221    -0.831     0.557
         *Z       ---       ---  2.65e+15  1.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.946438, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796825, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127082, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928721, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260497
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.67e+04      40.1     0.975    0.0249
          1  2.42e+04       348         1    -0.161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       436      40.1    -0.929    -0.371
          1       630       348    -0.371     0.929
         *Z       ---       ---  2.65e+15  1.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930947, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79781, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12819, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260497
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.53e+03      15.3     0.984    0.0159
          1  1.49e+04       332         1    -0.254
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       222      15.3     -0.97    -0.244
          1       389       332    -0.244      0.97
         *Z       ---       ---  2.65e+15  1.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.940 0.060
         well projection threshold  = 0.2
         partition projection error = 0.0330783
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000643, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.934777, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126878, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260497
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.32e+03       6.7     0.989    0.0109
          1  9.77e+03       309         1    -0.372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112       6.7    -0.986    -0.169
          1       254       309    -0.169     0.986
         *Z       ---       ---  2.65e+15  1.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929242, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79575, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127036, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927618, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260497
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.18e+03      2.96     0.992         0
          1  6.77e+03       281         1    -0.517
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      56.8      2.96    -0.992    -0.123
          1       176       281    -0.123     0.992
         *Z       ---       ---  2.65e+15  1.69e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929931, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41737 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002251
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.072679
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003218
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027693
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130201
         W1a Well: minimal relaxation eigenvalue = 0.0123902
         W1a Well: maximal relaxation eigenvalue = 39.0809
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1631 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002144
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13568
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038081
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051352
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145418
         W1b Well: minimal relaxation eigenvalue = 0.0272398
         W1b Well: maximal relaxation eigenvalue = 24.1923
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3577 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1353 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -241 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3577 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.621864, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1631  -1353 2.86e+04 6.66e+19
        W1b  -3577  -3577      464 8.28e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1353 1.39e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -241 6.71e+20
         B2  -3577    3e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       267  6.85e-20  6.26e-23
        W1b   0.00375         1  2.57e-22  2.35e-25
         P1  1.46e+19  3.89e+21         1  0.000914
         P2   1.6e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       270  8.76e-23  8.01e-26
        W1b   0.00371         1  3.25e-25  2.97e-28
         P1  1.14e+22  3.08e+24         1  0.000914
         P2  1.25e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.626057, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796992, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.950218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0123902
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.75e+05      76.7     0.978    0.0221
          1  2.41e+05       923         1    -0.166
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.17e+03      76.7    -0.938    -0.346
          1  2.98e+03       923    -0.346     0.938
         *Z       ---       ---  3.22e+15  1.97e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.95256, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787003, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124757, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916596, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0123902
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.55e+04      16.1     0.987    0.0128
          1  6.24e+04       641         1    -0.288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       440      16.1    -0.978    -0.208
          1       774       641    -0.208     0.978
         *Z       ---       ---  3.22e+15  1.97e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792715, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924489, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0123902
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.79e+04      9.28      0.99    0.0104
          1  3.68e+04       560         1    -0.358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       221      9.28    -0.986    -0.169
          1       455       560    -0.169     0.986
         *Z       ---       ---  3.22e+15  1.97e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926719, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795532, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12626, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926411, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0123902
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.97e+03      5.62     0.992         0
          1  2.26e+04       502         1    -0.442
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       111      5.62    -0.991    -0.137
          1       280       502    -0.137     0.991
         *Z       ---       ---  3.22e+15  1.97e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.981 0.019
         well projection threshold  = 0.2
         partition projection error = 0.00586356
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000651, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930384, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795225, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12657, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926672, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0123902
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.5e+03      3.34     0.993         0
          1  1.46e+04       457         1    -0.544
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.8      3.34    -0.994    -0.112
          1       181       457    -0.112     0.994
         *Z       ---       ---  3.22e+15  1.97e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.987 0.013
         well projection threshold  = 0.2
         partition projection error = 0.00259202
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000576, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930237, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43822 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002397
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.072235
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003313
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028034
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130195
         W1a Well: minimal relaxation eigenvalue = 0.00217788
         W1a Well: maximal relaxation eigenvalue = 48.3667
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1729 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002103
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129336
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037688
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056767
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145983
         W1b Well: minimal relaxation eigenvalue = 0.0270135
         W1b Well: maximal relaxation eigenvalue = 20.1929
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1437 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 22 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.620474, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1729  -1437 3.99e+03 1.12e+20
        W1b  -3481  -3481 1.26e+03 1.36e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1437 2.34e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     23 1.03e+21
         B2  -3481 5.05e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       289  7.03e-20  9.98e-23
        W1b   0.00346         1  2.43e-22  3.45e-25
         P1  1.42e+19  4.11e+21         1   0.00142
         P2     1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       293  9.45e-23  1.34e-25
        W1b   0.00342         1  3.23e-25  4.59e-28
         P1  1.06e+22   3.1e+24         1   0.00142
         P2  7.45e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.624407, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78743, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143541, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217788
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+06       8.5     0.992         0
          1  2.18e+06  1.21e+03         1    -0.427
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.18e+03       8.5    -0.991    -0.136
          1  4.74e+03  1.21e+03    -0.136     0.991
         *Z       ---       ---  3.91e+15   2.3e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787339, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126174, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918354, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217788
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.01e+05      4.54     0.993         0
          1  5.67e+05       823         1    -0.518
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       437      4.54    -0.994    -0.113
          1  1.24e+03       823    -0.113     0.994
         *Z       ---       ---  3.91e+15   2.3e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920579, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786654, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91746, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217788
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+05       3.7     0.994         0
          1   3.3e+05       737         1    -0.564
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       219       3.7    -0.995    -0.104
          1       719       737    -0.104     0.995
         *Z       ---       ---  3.91e+15   2.3e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91967, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785958, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125758, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916534, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217788
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.03e+04      3.04     0.994         0
          1  1.97e+05       692         1    -0.615
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       110      3.04    -0.995   -0.0951
          1       430       692   -0.0951     0.995
         *Z       ---       ---  3.91e+15   2.3e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91892, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788934, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920126, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217788
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.52e+04      2.42     0.995         0
          1  1.23e+05       679         1    -0.676
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.8      2.42    -0.996   -0.0866
          1       267       679   -0.0866     0.996
         *Z       ---       ---  3.91e+15   2.3e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922544, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45908 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002311
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120933
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003538
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030564
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135287
         W1a Well: minimal relaxation eigenvalue = 0.0234805
         W1a Well: maximal relaxation eigenvalue = 32.5459
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1521 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00213
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134104
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037644
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049177
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145557
         W1b Well: minimal relaxation eigenvalue = 0.0267169
         W1b Well: maximal relaxation eigenvalue = 16.5136
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3357 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1216 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = 8 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3663 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.67371, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.61808e+25
      MasterEquation::Barrier::truncate: effective weight = 6.4549e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1521  -1216 1.79e+05 1.83e+20
        W1b  -3357  -3357 3.44e+03 2.18e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1216 3.86e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      9 1.55e+21
         B2  -3357 8.28e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       311  7.23e-20  1.53e-22
        W1b   0.00321         1  2.32e-22  4.92e-25
         P1  1.38e+19   4.3e+21         1   0.00212
         P2  6.53e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       315  1.02e-22  2.16e-25
        W1b   0.00318         1  3.23e-25  6.85e-28
         P1  9.82e+21  3.09e+24         1   0.00212
         P2  4.64e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.677821, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.776863, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0234805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.16e+04      2.51     0.995         0
          1   3.3e+05  1.55e+03         1    -0.673
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.15e+03      2.51    -0.996    -0.084
          1  7.75e+03  1.55e+03    -0.084     0.996
         *Z       ---       ---  4.72e+15  2.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931829, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.776367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123826, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0234805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+04      1.47     0.996         0
          1  9.42e+04  1.11e+03         1     -0.78
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       431      1.47    -0.997   -0.0725
          1  2.21e+03  1.11e+03   -0.0725     0.997
         *Z       ---       ---  4.72e+15  2.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907175, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1235, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902578, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0234805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.18e+03      1.07     0.996         0
          1  5.89e+04       989         1    -0.846
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       216      1.07    -0.998   -0.0668
          1  1.38e+03       989   -0.0668     0.998
         *Z       ---       ---  4.72e+15  2.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.000105153
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000634, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906444, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903524, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0234805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.59e+03     0.703     0.997         0
          1  3.87e+04       877         1    -0.925
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       108     0.703    -0.998   -0.0612
          1       909       877   -0.0612     0.998
         *Z       ---       ---  4.72e+15  2.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 2.08291e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000592, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907128, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123325, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900485, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0234805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.3e+03     0.413     0.997         0
          1  2.66e+04       745     -0.99         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        54     0.413    -0.998    -0.056
          1       624       745    -0.056     0.998
         *Z       ---       ---  4.72e+15  2.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 3.4931e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904267, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47993 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002468
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119305
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034555
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037278
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13161
         W1a Well: minimal relaxation eigenvalue = 0.0128358
         W1a Well: maximal relaxation eigenvalue = 38.4429
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1607 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002218
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129581
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037631
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054226
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142065
         W1b Well: minimal relaxation eigenvalue = 0.0261048
         W1b Well: maximal relaxation eigenvalue = 23.7121
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3527 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1287 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3527 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703862, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1607  -1287 7.72e+04 2.95e+20
        W1b  -3527  -3527 1.14e+03 3.44e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1287 6.25e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7  2.3e+21
         B2  -3527 1.33e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       333  7.45e-20  2.27e-22
        W1b   0.00301         1  2.24e-22  6.82e-25
         P1  1.34e+19  4.47e+21         1   0.00305
         P2   4.4e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       337   1.1e-22  3.34e-25
        W1b   0.00297         1  3.26e-25  9.93e-28
         P1  9.12e+21  3.07e+24         1   0.00305
         P2  2.99e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.707786, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77147, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141785, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923982, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0128358
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+05      1.43     0.996         0
          1  8.27e+05  2.52e+03         1    -0.822
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.11e+03      1.43    -0.998   -0.0665
          1  1.06e+04  2.52e+03   -0.0665     0.998
         *Z       ---       ---  5.66e+15   3.1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926285, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775002, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123794, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0128358
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.28e+04     0.995     0.997         0
          1   2.2e+05  1.72e+03         1    -0.889
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       422     0.995    -0.998   -0.0616
          1  2.83e+03  1.72e+03   -0.0616     0.998
         *Z       ---       ---  5.66e+15   3.1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90552, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904952, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0128358
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+04     0.814     0.997         0
          1  1.32e+05  1.51e+03         1     -0.93
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       211     0.814    -0.998   -0.0588
          1  1.69e+03  1.51e+03   -0.0588     0.998
         *Z       ---       ---  5.66e+15   3.1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907135, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774182, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902747, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0128358
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.22e+03     0.619     0.997         0
          1  8.23e+04  1.34e+03         1    -0.982
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105     0.619    -0.998   -0.0558
          1  1.06e+03  1.34e+03   -0.0558     0.998
         *Z       ---       ---  5.66e+15   3.1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 1.04454e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00066, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906414, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775136, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904411, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0128358
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.11e+03     0.429     0.997         0
          1  5.37e+04  1.16e+03    -0.961         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      52.8     0.429    -0.999   -0.0526
          1       690  1.16e+03   -0.0526     0.999
         *Z       ---       ---  5.66e+15   3.1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 4.65962e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000584, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907955, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50078 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00241
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124814
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.035037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03819
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134184
         W1a Well: minimal relaxation eigenvalue = 0.0047955
         W1a Well: maximal relaxation eigenvalue = 44.566
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1691 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002189
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134256
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037192
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.045812
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145059
         W1b Well: minimal relaxation eigenvalue = 0.0259694
         W1b Well: maximal relaxation eigenvalue = 18.3916
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3361 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1357 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3695 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.712079, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.05114e+26
      MasterEquation::Barrier::truncate: effective weight = 1.60361e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1691  -1357 2.61e+04 4.67e+20
        W1b  -3361  -3361 4.07e+03 5.35e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1357 9.92e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.36e+21
         B2  -3361 2.09e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       354  7.68e-20  3.27e-22
        W1b   0.00283         1  2.17e-22  9.23e-25
         P1   1.3e+19  4.61e+21         1   0.00425
         P2  3.06e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  1.18e-22  5.02e-25
        W1b   0.00279         1   3.3e-25   1.4e-27
         P1  8.47e+21  3.03e+24         1   0.00425
         P2  1.99e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.716179, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769247, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141755, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.92312, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0047955
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.3e+05     0.754     0.997         0
          1   3.5e+06   2.9e+03         1    -0.967
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.06e+03     0.754    -0.998   -0.0549
          1  1.68e+04   2.9e+03   -0.0549     0.998
         *Z       ---       ---  6.76e+15   3.6e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92541, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769012, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124369, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898115, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0047955
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.6e+04     0.622     0.997         0
          1  9.31e+05  2.06e+03    -0.992         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       412     0.622    -0.999   -0.0527
          1  4.46e+03  2.06e+03   -0.0527     0.999
         *Z       ---       ---  6.76e+15   3.6e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900322, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770629, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.123397, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89859, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0047955
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.3e+04     0.558     0.997         0
          1   5.5e+05  1.87e+03    -0.968         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       206     0.558    -0.999   -0.0514
          1  2.64e+03  1.87e+03   -0.0514     0.999
         *Z       ---       ---  6.76e+15   3.6e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900762, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12406, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897618, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0047955
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.15e+04     0.477     0.997         0
          1  3.36e+05  1.73e+03    -0.941         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       103     0.477    -0.999     -0.05
          1  1.61e+03  1.73e+03     -0.05     0.999
         *Z       ---       ---  6.76e+15   3.6e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899815, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76614, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123512, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0047955
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.08e+04      0.38     0.997         0
          1  2.13e+05  1.61e+03     -0.91         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.6      0.38    -0.999   -0.0483
          1  1.02e+03  1.61e+03   -0.0483     0.999
         *Z       ---       ---  6.76e+15   3.6e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896328, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52163 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.001989
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125591
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034643
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037161
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135526
         W1a Well: minimal relaxation eigenvalue = 0.00102996
         W1a Well: maximal relaxation eigenvalue = 50.0006
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1777 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002362
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125855
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036487
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053831
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.137189
         W1b Well: minimal relaxation eigenvalue = 0.0253276
         W1b Well: maximal relaxation eigenvalue = 25.7943
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1429 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703872, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1777  -1429 4.69e+03 7.27e+20
        W1b  -3516  -3516 1.39e+03 8.19e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1429 1.55e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 4.83e+21
         B2  -3516 3.23e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       374  7.92e-20  4.58e-22
        W1b   0.00267         1  2.12e-22  1.22e-24
         P1  1.26e+19  4.72e+21         1   0.00577
         P2  2.19e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       379  1.27e-22  7.33e-25
        W1b   0.00264         1  3.35e-25  1.94e-27
         P1  7.88e+21  2.98e+24         1   0.00577
         P2  1.36e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.707759, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77031, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141625, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00102996
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.96e+06      0.51     0.997         0
          1  2.18e+07  4.62e+03    -0.947         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.01e+03      0.51    -0.999   -0.0489
          1  2.25e+04  4.62e+03   -0.0489     0.999
         *Z       ---       ---  8.04e+15  4.16e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931364, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770362, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122817, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897755, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00102996
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.91e+05     0.447     0.998         0
          1  5.45e+06  3.11e+03    -0.926         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       403     0.447    -0.999   -0.0478
          1  5.62e+03  3.11e+03   -0.0478     0.999
         *Z       ---       ---  8.04e+15  4.16e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76925, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123666, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897663, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00102996
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.96e+05     0.423     0.998         0
          1  3.09e+06  2.74e+03    -0.916         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       201     0.423    -0.999   -0.0473
          1  3.19e+03  2.74e+03   -0.0473     0.999
         *Z       ---       ---  8.04e+15  4.16e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123074, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897308, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00102996
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.78e+04     0.395     0.998         0
          1   1.8e+06   2.5e+03    -0.903         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       101     0.395    -0.999   -0.0466
          1  1.85e+03   2.5e+03   -0.0466     0.999
         *Z       ---       ---  8.04e+15  4.16e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768133, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123844, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896707, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00102996
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.89e+04     0.359     0.998         0
          1  1.07e+06  2.36e+03    -0.889         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      50.4     0.359    -0.999   -0.0459
          1   1.1e+03  2.36e+03   -0.0459     0.999
         *Z       ---       ---  8.04e+15  4.16e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898898, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54248 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002132
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125159
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034602
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040822
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133134
         W1a Well: minimal relaxation eigenvalue = 0.00369233
         W1a Well: maximal relaxation eigenvalue = 45.7975
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1706 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002111
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127167
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037063
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056351
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145055
         W1b Well: minimal relaxation eigenvalue = 0.0249471
         W1b Well: maximal relaxation eigenvalue = 27.1747
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3511 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1345 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -262 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3511 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.716441, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1706  -1345 3.22e+04 1.11e+21
        W1b  -3511  -3511  1.5e+03 1.24e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1345 2.38e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -262 6.85e+21
         B2  -3511 4.91e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       394  8.21e-20  6.28e-22
        W1b   0.00254         1  2.08e-22  1.59e-24
         P1  1.22e+19   4.8e+21         1   0.00765
         P2  1.59e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       399  1.36e-22  1.04e-24
        W1b   0.00251         1  3.42e-25  2.62e-27
         P1  7.33e+21  2.93e+24         1   0.00765
         P2  9.58e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.720365, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916408, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00369233
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.33e+05     0.349     0.998         0
          1  8.71e+06  6.05e+03     -0.89         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.97e+03     0.349    -0.999   -0.0448
          1  3.22e+04  6.05e+03   -0.0448     0.999
         *Z       ---       ---  9.54e+15   4.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918712, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124072, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898433, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00369233
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.07e+05     0.309     0.998         0
          1   2.2e+06  4.02e+03    -0.875         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       393     0.309    -0.999    -0.044
          1  8.12e+03  4.02e+03    -0.044     0.999
         *Z       ---       ---  9.54e+15   4.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900659, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770809, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123314, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898676, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00369233
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.33e+04      0.29     0.998         0
          1  1.26e+06  3.46e+03    -0.866         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       197      0.29    -0.999   -0.0436
          1  4.67e+03  3.46e+03   -0.0436     0.999
         *Z       ---       ---  9.54e+15   4.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770995, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123276, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899001, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00369233
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.66e+04     0.267     0.998         0
          1  7.49e+05  3.01e+03    -0.855         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.4     0.267    -0.999    -0.043
          1  2.76e+03  3.01e+03    -0.043     0.999
         *Z       ---       ---  9.54e+15   4.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.901209, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769337, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123657, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00369233
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+04     0.237     0.998         0
          1  4.57e+05   2.6e+03    -0.843         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.2     0.237    -0.999   -0.0424
          1  1.69e+03   2.6e+03   -0.0424     0.999
         *Z       ---       ---  9.54e+15   4.8e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89977, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56333 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002238
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.111488
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034452
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037453
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135805
         W1a Well: minimal relaxation eigenvalue = 0.00108523
         W1a Well: maximal relaxation eigenvalue = 49.2382
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1792 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002142
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123537
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037028
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049861
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142618
         W1b Well: minimal relaxation eigenvalue = 0.021146
         W1b Well: maximal relaxation eigenvalue = 34.329
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3666 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1416 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -291 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3666 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.689597, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1792  -1416 7.71e+03 1.68e+21
        W1b  -3666  -3666      492 1.84e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1416 3.61e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -291 9.59e+21
         B2  -3666 7.35e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       414  8.48e-20  8.41e-22
        W1b   0.00242         1  2.05e-22  2.03e-24
         P1  1.18e+19  4.88e+21         1   0.00992
         P2  1.19e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       419  1.46e-22  1.45e-24
        W1b   0.00239         1   3.5e-25  3.47e-27
         P1  6.83e+21  2.86e+24         1   0.00992
         P2  6.89e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.693531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764898, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132086, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00108523
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.77e+06     0.298     0.998         0
          1  3.83e+07  9.69e+03    -0.856         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.92e+03     0.298    -0.999   -0.0421
          1  4.16e+04  9.69e+03   -0.0421     0.999
         *Z       ---       ---  1.12e+16  5.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123204, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898626, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00108523
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.54e+05     0.274     0.998         0
          1  9.11e+06  6.21e+03    -0.849         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       384     0.274    -0.999   -0.0417
          1  9.88e+03  6.21e+03   -0.0417     0.999
         *Z       ---       ---  1.12e+16  5.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900858, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770019, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898436, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00108523
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.77e+05     0.265     0.998         0
          1  5.03e+06  5.25e+03    -0.845         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       192     0.265    -0.999   -0.0415
          1  5.46e+03  5.25e+03   -0.0415     0.999
         *Z       ---       ---  1.12e+16  5.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900606, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76607, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123079, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00108523
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.85e+04     0.255     0.998         0
          1  2.84e+06  4.51e+03     -0.84         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      96.1     0.255    -0.999   -0.0413
          1  3.08e+03  4.51e+03   -0.0413     0.999
         *Z       ---       ---  1.12e+16  5.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895838, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76869, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124462, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897928, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00108523
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.43e+04     0.242     0.998         0
          1  1.64e+06  3.94e+03    -0.833         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        48     0.242    -0.999   -0.0409
          1  1.78e+03  3.94e+03   -0.0409     0.999
         *Z       ---       ---  1.12e+16  5.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900119, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58418 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002216
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.110425
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034472
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037133
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132351
         W1a Well: minimal relaxation eigenvalue = 0.0180871
         W1a Well: maximal relaxation eigenvalue = 34.9327
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1488 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002223
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.130881
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036694
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050571
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142341
         W1b Well: minimal relaxation eigenvalue = 0.0245867
         W1b Well: maximal relaxation eigenvalue = 24.3402
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3433 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1488 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -320 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.691746, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1488  -1488 5.65e+05 2.51e+21
        W1b  -3433  -3433 3.66e+03 2.71e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1488  5.4e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -320 1.33e+22
         B2  -3433 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       433  8.76e-20  1.11e-21
        W1b   0.00231         1  2.03e-22  2.56e-24
         P1  1.14e+19  4.94e+21         1    0.0126
         P2  9.04e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       438  1.57e-22  1.98e-24
        W1b   0.00228         1  3.58e-25  4.52e-27
         P1  6.37e+21  2.79e+24         1    0.0126
         P2  5.05e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.695684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905137, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0180871
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+05     0.226     0.998         0
          1  3.73e+06  8.83e+03    -0.822         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.88e+03     0.226    -0.999   -0.0395
          1  6.74e+04  8.83e+03   -0.0395     0.999
         *Z       ---       ---  1.32e+16  6.35e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753146, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120613, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878203, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0180871
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.08e+04     0.196     0.998         0
          1  9.97e+05  5.76e+03     -0.81         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       375     0.196    -0.999   -0.0389
          1   1.8e+04  5.76e+03   -0.0389     0.999
         *Z       ---       ---  1.32e+16  6.35e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.880399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0180871
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+04     0.178     0.998         0
          1  5.93e+05   4.7e+03    -0.803         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       188     0.178    -0.999   -0.0386
          1  1.07e+04   4.7e+03   -0.0386     0.999
         *Z       ---       ---  1.32e+16  6.35e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.8875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121227, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885201, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0180871
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.19e+03     0.161     0.998         0
          1  3.62e+05  3.64e+03    -0.795         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      93.9     0.161    -0.999   -0.0382
          1  6.55e+03  3.64e+03   -0.0382     0.999
         *Z       ---       ---  1.32e+16  6.35e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.71322e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000645, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888848, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757698, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121735, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884197, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0180871
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.59e+03     0.148     0.998         0
          1  2.24e+05  2.56e+03    -0.787         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.9     0.148    -0.999   -0.0378
          1  4.05e+03  2.56e+03   -0.0378     0.999
         *Z       ---       ---  1.32e+16  6.35e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000104319
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00057, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887958, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60503 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002237
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.11063
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034168
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036515
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13721
         W1a Well: minimal relaxation eigenvalue = 0.0112159
         W1a Well: maximal relaxation eigenvalue = 38.8121
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002115
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121661
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036778
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05539
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.139512
         W1b Well: minimal relaxation eigenvalue = 0.0233164
         W1b Well: maximal relaxation eigenvalue = 31.3561
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3574 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1559 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -350 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3574 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.688821, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1559 3.34e+05  3.7e+21
        W1b  -3574  -3574 1.38e+03 3.94e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1559 7.98e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -350 1.82e+22
         B2  -3574 1.58e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       451  9.06e-20  1.43e-21
        W1b   0.00222         1  2.01e-22  3.17e-24
         P1   1.1e+19  4.98e+21         1    0.0158
         P2  6.99e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       456  1.68e-22  2.65e-24
        W1b   0.00219         1  3.68e-25  5.81e-27
         P1  5.95e+21  2.72e+24         1    0.0158
         P2  3.77e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.692736, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129348, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0112159
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.63e+05     0.202     0.998         0
          1  7.53e+06  1.31e+04    -0.807         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.83e+03     0.202    -0.999    -0.038
          1  8.45e+04  1.31e+04    -0.038     0.999
         *Z       ---       ---  1.55e+16  7.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.908831, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757892, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884281, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0112159
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.27e+04     0.184     0.998         0
          1   1.9e+06  8.38e+03      -0.8         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       367     0.184    -0.999   -0.0376
          1  2.13e+04  8.38e+03   -0.0376     0.999
         *Z       ---       ---  1.55e+16  7.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886465, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757891, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121612, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884213, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0112159
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.63e+04     0.173     0.998         0
          1  1.09e+06  6.89e+03    -0.795         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       183     0.173    -0.999   -0.0374
          1  1.23e+04  6.89e+03   -0.0374     0.999
         *Z       ---       ---  1.55e+16  7.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886389, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758013, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12117, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0112159
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.17e+03     0.161     0.998         0
          1  6.49e+05  5.48e+03     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      91.7     0.161    -0.999   -0.0372
          1  7.28e+03  5.48e+03   -0.0372     0.999
         *Z       ---       ---  1.55e+16  7.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.77421e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000641, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758329, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122411, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885497, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0112159
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.09e+03     0.151     0.998         0
          1  3.92e+05  4.03e+03    -0.784         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.8     0.151    -0.999   -0.0369
          1   4.4e+03  4.03e+03   -0.0369     0.999
         *Z       ---       ---  1.55e+16  7.28e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000102994
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000591, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62589 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002134
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.108532
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034042
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037715
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132448
         W1a Well: minimal relaxation eigenvalue = 0.00633275
         W1a Well: maximal relaxation eigenvalue = 42.1976
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1629 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002101
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119004
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036433
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05577
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141355
         W1b Well: minimal relaxation eigenvalue = 0.0137027
         W1b Well: maximal relaxation eigenvalue = 38.0937
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3714 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1211 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 34 1/cm
         B1 Barrier: effective height = -378 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3714 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.681961, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1629  -1211 1.86e+05 5.39e+21
        W1b  -3714  -3714      472 5.66e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1211 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -378 2.46e+22
         B2  -3714 2.26e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       469  9.36e-20  1.82e-21
        W1b   0.00213         1     2e-22  3.88e-24
         P1  1.07e+19  5.01e+21         1    0.0194
         P2   5.5e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       474   1.8e-22  3.49e-24
        W1b   0.00211         1  3.79e-25  7.37e-27
         P1  5.57e+21  2.64e+24         1    0.0194
         P2  2.86e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.685838, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753823, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14028, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00633275
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.83e+05     0.185     0.998         0
          1  1.65e+07  2.02e+04    -0.796         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.79e+03     0.185    -0.999   -0.0367
          1  1.05e+05  2.02e+04   -0.0367     0.999
         *Z       ---       ---   1.8e+16  8.32e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907388, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757342, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122491, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00633275
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.66e+04     0.175     0.998         0
          1  3.95e+06  1.27e+04    -0.792         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       358     0.175    -0.999   -0.0365
          1   2.5e+04  1.27e+04   -0.0365     0.999
         *Z       ---       ---   1.8e+16  8.32e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75364, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121633, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.879745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00633275
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.83e+04     0.169     0.998         0
          1  2.21e+06  1.04e+04    -0.789         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       179     0.169    -0.999   -0.0364
          1   1.4e+04  1.04e+04   -0.0364     0.999
         *Z       ---       ---   1.8e+16  8.32e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.881933, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.755454, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122039, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88201, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00633275
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.41e+04     0.161     0.998         0
          1  1.26e+06  8.44e+03    -0.786         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      89.6     0.161    -0.999   -0.0363
          1  8.01e+03  8.44e+03   -0.0363     0.999
         *Z       ---       ---   1.8e+16  8.32e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122572, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881854, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00633275
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.07e+03     0.153     0.998         0
          1  7.41e+05  6.52e+03    -0.782         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      44.8     0.153    -0.999   -0.0361
          1  4.69e+03  6.52e+03   -0.0361     0.999
         *Z       ---       ---   1.8e+16  8.32e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.00010141
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000644, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885697, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 404.675, elapsed time[sec] = 8
