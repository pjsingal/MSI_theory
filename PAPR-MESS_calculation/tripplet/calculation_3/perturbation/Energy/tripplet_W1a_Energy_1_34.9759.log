Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.006296, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.007513, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.12
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.110126, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003037, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.033353, elapsed time[sec] = 0
         effective power exponent at 404.118 kcal/mol = 11.9108
      interpolating states number/density done, cpu time[sec] = 1.25371, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.26609, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001346, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001989, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.112901, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002947, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.035794, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.22348, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.22872, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00132, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001927, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003751, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000818, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001399, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003013, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010866, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000855, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001899, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.0036, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000753, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001286, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002743, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.009907, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019715, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.020339, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.74597, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002979, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.017676, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.7653, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.78821, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.011406, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.01094, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.089808, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.56973, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000122, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.57125, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000715, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.103503, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.044404, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.051343, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.010836, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000597, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.376298, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.004851, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.579222, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.66257, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.66338, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.177111, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001506, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.38157, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.583, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.2482, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000886, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000309, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.01051, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010566, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  1.83772e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.01242e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.37284e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  1.92799e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500   3.8001e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  8.38073e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  1.90321e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.29968e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  9.51982e+39  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  2.05279e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100  4.30183e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  8.75982e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.73474e+41  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.34523e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  6.29076e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.15536e+42   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  2.07537e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.65125e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  6.29965e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  1.06719e+43  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.5869, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00195
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000484
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.098093
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.217313
         W1a Well: minimal relaxation eigenvalue = 0.0682989
         W1a Well: maximal relaxation eigenvalue = 4.65118
         W1a Well:       grid size = 201
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1458 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002382
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.285942
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079377
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.323856
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.324975
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.35957, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1458  -1234 9.57e+04 4.46e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000811  1.65e-16  5.85e-57
        W1b  1.23e+03         1  2.04e-13  7.22e-54
         P1  6.06e+15  4.91e+12         1  3.55e-41
         P2  1.71e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000126  2.13e-20  7.54e-61
        W1b  7.96e+03         1  1.69e-16     6e-57
         P1   4.7e+19  5.91e+15         1  3.55e-41
         P2  1.33e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.36425, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.83265, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.290066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0682989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14    0.0446         0         1
          1      20.5      1.23         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0777    0.0446  -0.00114        -1
          1       1.4      1.23        -1   0.00114
         *Z       ---       ---  2.96e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.16344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.85014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.273735, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.13168, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0682989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254     0.011         0         1
          1      6.13     0.452         1    -0.108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174     0.011  -0.00307        -1
          1     0.418     0.452        -1   0.00307
         *Z       ---       ---  2.96e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.13407, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.250984, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002889, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260645, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0682989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132   0.00501         0         1
          1      3.56     0.377         1    -0.201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00904   0.00501  -0.00572        -1
          1     0.243     0.377        -1   0.00572
         *Z       ---       ---  2.96e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.261026, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019107, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002887, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0682989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0683   0.00204         0         1
          1      2.12     0.316         1    -0.343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00467   0.00204  -0.00976        -1
          1     0.145     0.316        -1   0.00976
         *Z       ---       ---  2.96e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022075, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019097, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002866, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02202, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0682989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.035  0.000745         0         1
          1       1.3     0.248         1    -0.507
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00239  0.000745   -0.0144        -1
          1     0.089     0.248        -1    0.0144
         *Z       ---       ---  2.96e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022044, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002231
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000511
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036849
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.219343
         W1a Well: minimal relaxation eigenvalue = 0.0670544
         W1a Well: maximal relaxation eigenvalue = 4.48627
         W1a Well:       grid size = 201
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1450 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001925
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.286497
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.082709
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090656
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.341558
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.08688, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1450  -1218 1.18e+05 5.83e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00104  9.86e-17  3.42e-55
        W1b       965         1  9.52e-14   3.3e-52
         P1  1.01e+16  1.05e+13         1  3.47e-39
         P2  2.92e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00026  1.32e-20  4.57e-59
        W1b  3.84e+03         1  5.06e-17  1.76e-55
         P1  7.59e+19  1.98e+16         1  3.47e-39
         P2  2.19e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.09107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88117, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.310698, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.21509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670544
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03    0.0506         0         1
          1      24.1      1.17         1   -0.0319
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693    0.0506  -0.00103        -1
          1      1.62      1.17        -1   0.00103
         *Z       ---       ---  2.56e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.21758, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.275966, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.17067, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670544
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0128         0         1
          1      6.84     0.464         1   -0.0914
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0128  -0.00294        -1
          1     0.459     0.464        -1   0.00294
         *Z       ---       ---  2.56e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.17304, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.198907, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002965, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.208724, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670544
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124   0.00599         0         1
          1      3.93     0.399         1    -0.176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00599  -0.00567        -1
          1     0.264     0.399        -1   0.00567
         *Z       ---       ---  2.56e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.209104, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019336, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002956, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022353, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670544
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0647   0.00251         0         1
          1      2.33     0.344         1     -0.31
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434   0.00251  -0.00997        -1
          1     0.156     0.344        -1   0.00997
         *Z       ---       ---  2.56e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002947, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022307, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670544
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0333   0.00095         0         1
          1      1.43     0.276         1     -0.47
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223   0.00095   -0.0151        -1
          1    0.0957     0.276        -1    0.0151
         *Z       ---       ---  2.56e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022331, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001898
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000461
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.047262
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199411
         W1a Well: minimal relaxation eigenvalue = 0.0658218
         W1a Well: maximal relaxation eigenvalue = 4.99114
         W1a Well:       grid size = 195
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1458 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001715
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.266878
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076062
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.080291
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.317053
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.0136, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1458  -1241  8.8e+04 7.54e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00147  5.99e-17  1.34e-53
        W1b       681         1  4.08e-14  9.13e-51
         P1  1.67e+16  2.45e+13         1  2.24e-37
         P2  7.46e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000506  8.55e-21  1.91e-57
        W1b  1.98e+03         1  1.69e-17  3.78e-54
         P1  1.17e+20  5.92e+16         1  2.24e-37
         P2  5.22e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.01779, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.71954, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.284133, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01942, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658218
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01    0.0585         0         1
          1      27.1      1.23         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664    0.0585  -0.00104        -1
          1      1.78      1.23        -1   0.00104
         *Z       ---       ---  2.21e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.02179, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.72076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.257388, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98564, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658218
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0155         0         1
          1      7.53     0.485         1   -0.0804
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0155  -0.00308        -1
          1     0.495     0.485        -1   0.00308
         *Z       ---       ---  2.21e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.538611, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.547832, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658218
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00748         0         1
          1       4.3     0.424         1    -0.158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00828   0.00748  -0.00604        -1
          1     0.283     0.424        -1   0.00604
         *Z       ---       ---  2.21e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.548212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017948, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002719, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020724, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658218
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.066   0.00325         0         1
          1      2.53     0.371         1    -0.283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00435   0.00325   -0.0108        -1
          1     0.167     0.371        -1    0.0108
         *Z       ---       ---  2.21e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017938, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002716, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020709, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0658218
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0343   0.00128         0     0.999
          1      1.55     0.305         1    -0.436
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226   0.00128   -0.0167        -1
          1     0.102     0.305        -1    0.0167
         *Z       ---       ---  2.21e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020732, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000463
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049256
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.200437
         W1a Well: minimal relaxation eigenvalue = 0.0647248
         W1a Well: maximal relaxation eigenvalue = 3.90984
         W1a Well:       grid size = 195
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1444 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001712
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.268963
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077802
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.097542
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.320082
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04036, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1444  -1219 1.15e+05 9.72e+11
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00209  3.93e-17  3.95e-52
        W1b       478         1  1.88e-14  1.89e-49
         P1  2.55e+16  5.33e+13         1     1e-35
         P2  2.53e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000931  5.78e-21  5.81e-56
        W1b  1.07e+03         1  6.21e-18  6.24e-53
         P1  1.73e+20  1.61e+17         1     1e-35
         P2  1.72e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.04451, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.73018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.287379, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.997    0.0677         0         1
          1      31.6      1.05         1   -0.0236
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0645    0.0677  -0.00108        -1
          1      2.05      1.05        -1   0.00108
         *Z       ---       ---  1.98e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.04197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.73193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.255205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99462, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0188         0         1
          1      8.33     0.494         1   -0.0714
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00327        -1
          1     0.539     0.494        -1   0.00327
         *Z       ---       ---  1.98e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.99692, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.488556, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.497786, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.129   0.00933         0         1
          1      4.71     0.447         1    -0.142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835   0.00933  -0.00648        -1
          1     0.305     0.447        -1   0.00648
         *Z       ---       ---  1.98e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.498163, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018102, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020941, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0684    0.0042         0     0.999
          1      2.76       0.4         1    -0.258
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00443    0.0042   -0.0118        -1
          1     0.179       0.4        -1    0.0118
         *Z       ---       ---  1.98e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020966, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017984, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020794, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0358   0.00173         0     0.999
          1      1.69     0.334         1    -0.404
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00232   0.00173   -0.0185        -1
          1      0.11     0.334        -1    0.0185
         *Z       ---       ---  1.98e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020817, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001995
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000468
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040522
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.204838
         W1a Well: minimal relaxation eigenvalue = 0.0635857
         W1a Well: maximal relaxation eigenvalue = 6.10773
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1463 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001698
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.271576
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077852
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093714
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.323861
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03825, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1463  -1232 9.68e+04 1.24e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00296  2.67e-17  8.77e-51
        W1b       338         1  9.02e-15  2.96e-48
         P1  3.74e+16  1.11e+14         1  3.28e-34
         P2  1.14e+50  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00163  4.06e-21  1.33e-54
        W1b       613         1  2.49e-18  8.17e-52
         P1  2.46e+20  4.02e+17         1  3.28e-34
         P2   7.5e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.04205, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.74629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.28966, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05305, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635857
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.992     0.078         0         1
          1      34.4      1.18         1   -0.0207
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.078  -0.00113        -1
          1      2.19      1.18        -1   0.00113
         *Z       ---       ---   1.8e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.05546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.261728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02449, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635857
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246    0.0226         0         1
          1      9.02     0.527         1   -0.0638
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0226  -0.00347        -1
          1     0.573     0.527        -1   0.00347
         *Z       ---       ---   1.8e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.02684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.461544, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002798, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.470868, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635857
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134    0.0116         0         1
          1      5.09     0.476         1    -0.128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0085    0.0116  -0.00694        -1
          1     0.324     0.476        -1   0.00694
         *Z       ---       ---   1.8e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.471249, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00277, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635857
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0718    0.0054         0     0.999
          1      2.98     0.429         1    -0.235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00456    0.0054   -0.0128        -1
          1      0.19     0.429        -1    0.0128
         *Z       ---       ---   1.8e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021126, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018197, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021037, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635857
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.038   0.00231         0     0.999
          1      1.83     0.365         1    -0.373
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00242   0.00231   -0.0203        -1
          1     0.116     0.365        -1    0.0203
         *Z       ---       ---   1.8e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021061, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001902
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000443
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036644
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.197399
         W1a Well: minimal relaxation eigenvalue = 0.062482
         W1a Well: maximal relaxation eigenvalue = 8.12791
         W1a Well:       grid size = 191
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1472 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00179
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.26706
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076116
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083788
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.314528
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00113, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1472  -1226 1.04e+05 1.58e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00397  1.82e-17  1.48e-49
        W1b       252         1  4.59e-15  3.73e-47
         P1  5.48e+16  2.18e+14         1  8.12e-33
         P2  6.75e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00274  2.94e-21  2.39e-53
        W1b       365         1  1.07e-18  8.71e-51
         P1   3.4e+20  9.31e+17         1  8.12e-33
         P2  4.19e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.00492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.6631, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.269699, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95913, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.062482
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.941    0.0891         0         1
          1      37.9      1.28         1   -0.0173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00109        -1
          1      2.37      1.28        -1   0.00109
         *Z       ---       ---  1.63e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.96157, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.67357, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.248075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92906, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.062482
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0267         0         1
          1      9.79      0.56         1   -0.0558
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0151    0.0267  -0.00352        -1
          1     0.612      0.56        -1   0.00352
         *Z       ---       ---  1.63e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.93143, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.716747, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002693, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.062482
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134     0.014         0         1
          1      5.52     0.507         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014  -0.00716        -1
          1     0.345     0.507        -1   0.00716
         *Z       ---       ---  1.63e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.726376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017205, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002627, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019887, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.062482
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0728   0.00674         0     0.999
          1      3.23     0.462         1    -0.213
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00674   -0.0134        -1
          1     0.202     0.462        -1    0.0134
         *Z       ---       ---  1.63e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002615, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019818, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.062482
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.039     0.003         0     0.999
          1      1.99     0.398         1    -0.342
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244     0.003   -0.0215        -1
          1     0.124     0.398        -1    0.0215
         *Z       ---       ---  1.63e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019842, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001824
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000451
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032948
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.189137
         W1a Well: minimal relaxation eigenvalue = 0.0615771
         W1a Well: maximal relaxation eigenvalue = 6.0374
         W1a Well:       grid size = 191
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1454 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001769
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.26086
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075714
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087926
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.319273
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.990822, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1454  -1238 8.98e+04    2e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00564  1.32e-17  2.07e-48
        W1b       177         1  2.34e-15  3.67e-46
         P1  7.57e+16  4.27e+14         1  1.57e-31
         P2  4.83e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00442  2.19e-21  3.43e-52
        W1b       226         1  4.95e-19  7.76e-50
         P1  4.57e+20  2.02e+18         1  1.57e-31
         P2  2.91e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 0.994671, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68449, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.278686, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.98155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615771
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.956     0.103         0         1
          1        43      1.09         1   -0.0155
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103  -0.00117        -1
          1      2.65      1.09        -1   0.00117
         *Z       ---       ---  1.51e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.98443, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69156, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.249189, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94817, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615771
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.255    0.0322         0         1
          1      10.7     0.574         1   -0.0506
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322   -0.0038        -1
          1     0.662     0.574        -1    0.0038
         *Z       ---       ---  1.51e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.95056, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.676091, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002643, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.685036, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615771
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.142    0.0173         0     0.999
          1      6.02     0.536         1    -0.103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0173  -0.00774        -1
          1     0.371     0.536        -1   0.00774
         *Z       ---       ---  1.51e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.685426, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017363, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002637, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020055, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615771
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0786   0.00863         0     0.999
          1      3.51     0.496         1    -0.194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00863   -0.0146        -1
          1     0.216     0.496        -1    0.0146
         *Z       ---       ---  1.51e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020078, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01732, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002636, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615771
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0427   0.00401         0     0.998
          1      2.16     0.434         1    -0.314
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00401   -0.0236        -1
          1     0.133     0.434        -1    0.0236
         *Z       ---       ---  1.51e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001915
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03743
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.191241
         W1a Well: minimal relaxation eigenvalue = 0.0604968
         W1a Well: maximal relaxation eigenvalue = 9.69595
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001729
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.259439
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07299
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072627
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.297376
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.955148, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 8.12e+04 2.52e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00797  9.56e-18  2.32e-47
        W1b       125         1   1.2e-15  2.91e-45
         P1  1.05e+17  8.34e+14         1  2.43e-30
         P2  4.31e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0069  1.67e-21  4.06e-51
        W1b       145         1  2.42e-19  5.88e-49
         P1  5.98e+20  4.13e+18         1  2.43e-30
         P2  2.46e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.959304, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0604968
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.99     0.118         0         1
          1      45.2      1.49         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.118  -0.00127        -1
          1      2.74      1.49        -1   0.00127
         *Z       ---       ---   1.4e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58153, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.237056, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82574, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0604968
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.272    0.0385         0         1
          1      11.6     0.628         1   -0.0463
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0385  -0.00413        -1
          1     0.699     0.628        -1   0.00413
         *Z       ---       ---   1.4e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82813, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.924721, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002535, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933354, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0604968
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.155    0.0213         0     0.999
          1      6.49     0.577         1   -0.0941
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00935    0.0213   -0.0084        -1
          1     0.392     0.577        -1    0.0084
         *Z       ---       ---   1.4e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933721, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002506, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018904, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0604968
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0865     0.011         0     0.999
          1      3.79     0.535         1    -0.177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00523     0.011   -0.0158        -1
          1      0.23     0.535        -1    0.0158
         *Z       ---       ---   1.4e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018928, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002499, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018808, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0604968
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0477   0.00532         0     0.998
          1      2.34     0.472         1    -0.288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00289   0.00532   -0.0257        -1
          1     0.142     0.472        -1    0.0257
         *Z       ---       ---   1.4e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018831, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001876
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000428
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032477
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.190188
         W1a Well: minimal relaxation eigenvalue = 0.0597346
         W1a Well: maximal relaxation eigenvalue = 5.84558
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1455 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001726
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.235433
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.072726
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099469
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.302618
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.956378, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1455  -1220 1.13e+05 3.15e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0113  7.27e-18  2.25e-46
        W1b      88.2         1  6.41e-16  1.98e-44
         P1  1.38e+17  1.56e+15         1  3.09e-29
         P2  4.45e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0105  1.31e-21  4.04e-50
        W1b      95.6         1  1.25e-19  3.86e-48
         P1  7.66e+20  8.01e+18         1  3.09e-29
         P2  2.48e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.960197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59458, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.263239, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89139, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597346
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.135         0         1
          1      52.7      1.05         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.135  -0.00143        -1
          1      3.15      1.05        -1   0.00143
         *Z       ---       ---  1.33e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.89384, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82802, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597346
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.299     0.046         0         1
          1      12.7     0.642         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046   -0.0046        -1
          1     0.761     0.642        -1    0.0046
         *Z       ---       ---  1.33e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83039, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.876791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002561, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885402, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597346
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0262         0     0.999
          1      7.11     0.613         1   -0.0869
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102    0.0262  -0.00926        -1
          1     0.424     0.613        -1   0.00926
         *Z       ---       ---  1.33e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016436, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01904, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597346
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0974    0.0139         0     0.998
          1      4.15     0.576         1    -0.163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00582    0.0139   -0.0174        -1
          1     0.248     0.576        -1    0.0174
         *Z       ---       ---  1.33e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019065, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016377, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002548, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018978, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597346
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0544   0.00704         0     0.997
          1      2.56     0.515         1    -0.265
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00704   -0.0282        -1
          1     0.153     0.515        -1    0.0282
         *Z       ---       ---  1.33e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019003, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001766
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00043
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034562
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.194995
         W1a Well: minimal relaxation eigenvalue = 0.0587945
         W1a Well: maximal relaxation eigenvalue = 8.37514
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1473 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001722
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.257349
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07365
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08411
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.30353
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.971722, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1473  -1232 9.68e+04 3.93e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.016  5.65e-18  1.87e-45
        W1b      62.6         1  3.54e-16  1.17e-43
         P1  1.77e+17  2.83e+15         1  3.31e-28
         P2  5.36e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0154  1.04e-21  3.44e-49
        W1b      64.9         1  6.75e-20  2.23e-47
         P1  9.62e+20  1.48e+19         1  3.31e-28
         P2  2.91e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.975524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244216, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90343, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587945
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.155         0         1
          1      56.9      1.21         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067     0.155  -0.00163        -1
          1      3.34      1.21        -1   0.00163
         *Z       ---       ---  1.27e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.90584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62523, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240903, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587945
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0546         0     0.999
          1      13.8     0.696         1   -0.0406
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0195    0.0546  -0.00513        -1
          1      0.81     0.696        -1   0.00513
         *Z       ---       ---  1.27e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87598, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.833015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002566, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.842139, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587945
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.193    0.0319         0     0.999
          1       7.7      0.66         1   -0.0806
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0319   -0.0102        -1
          1     0.452      0.66        -1    0.0102
         *Z       ---       ---  1.27e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.842571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016675, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587945
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.111    0.0175         0     0.998
          1       4.5     0.623         1     -0.15
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00651    0.0175    -0.019        -1
          1     0.265     0.623        -1     0.019
         *Z       ---       ---  1.27e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019305, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016647, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002549, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019257, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0587945
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0627   0.00923         0     0.996
          1       2.8     0.561         1    -0.243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00369   0.00923   -0.0308        -1
          1     0.164     0.561        -1    0.0308
         *Z       ---       ---  1.27e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01928, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00182
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036232
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.18546
         W1a Well: minimal relaxation eigenvalue = 0.0579652
         W1a Well: maximal relaxation eigenvalue = 8.41921
         W1a Well:       grid size = 184
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1473 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001777
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.250692
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070172
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079232
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.292992
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.937502, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1473  -1220 1.13e+05 4.87e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0221  4.36e-18  1.31e-44
        W1b      45.2         1  1.97e-16  5.94e-43
         P1  2.29e+17  5.07e+15         1  3.01e-27
         P2  7.61e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0221  8.43e-22  2.54e-48
        W1b      45.2         1  3.81e-20  1.15e-46
         P1  1.19e+21  2.63e+19         1  3.01e-27
         P2  3.94e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.941312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53203, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.259339, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8062, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0579652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.176         0         1
          1      62.3      1.25         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00183        -1
          1      3.61      1.25        -1   0.00183
         *Z       ---       ---   1.2e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.80862, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54099, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77882, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0579652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.367    0.0644         0     0.999
          1        15     0.742         1   -0.0382
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0644  -0.00569        -1
          1      0.87     0.742        -1   0.00569
         *Z       ---       ---   1.2e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.78119, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03563, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.044, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0579652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0385         0     0.998
          1      8.38      0.71         1   -0.0749
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0111        -1
          1     0.486      0.71        -1    0.0111
         *Z       ---       ---   1.2e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04437, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018317, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0579652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0218         0     0.997
          1      4.91     0.674         1    -0.139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00729    0.0218   -0.0206        -1
          1     0.285     0.674        -1    0.0206
         *Z       ---       ---   1.2e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018341, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015783, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002436, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0579652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0723    0.0119         0     0.995
          1      3.06     0.612         1    -0.224
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419    0.0119   -0.0332    -0.999
          1     0.177     0.612    -0.999    0.0332
         *Z       ---       ---   1.2e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018294, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001798
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036261
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182174
         W1a Well: minimal relaxation eigenvalue = 0.0572784
         W1a Well: maximal relaxation eigenvalue = 5.53831
         W1a Well:       grid size = 184
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1447 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001825
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.249137
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.072187
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.086541
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.282997
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.932327, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1447  -1232 9.68e+04 6.02e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0307  3.51e-18  8.36e-44
        W1b      32.6         1  1.14e-16  2.72e-42
         P1  2.85e+17  8.75e+15         1  2.38e-26
         P2   1.2e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0311  6.95e-22  1.65e-47
        W1b      32.1         1  2.23e-20  5.32e-46
         P1  1.44e+21  4.48e+19         1  2.38e-26
         P2  6.04e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.93612, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.551, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.256079, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82095, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.199         0         1
          1      70.1      1.04         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0786     0.199  -0.00214        -1
          1      4.02      1.04        -1   0.00214
         *Z       ---       ---  1.16e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82334, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.231849, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79541, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.416    0.0756         0     0.999
          1      16.4     0.786         1   -0.0368
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0756  -0.00644        -1
          1     0.942     0.786        -1   0.00644
         *Z       ---       ---  1.16e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79778, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0153, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00249, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.247    0.0462         0     0.998
          1      9.17     0.765         1   -0.0706
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0462   -0.0124        -1
          1     0.525     0.765        -1    0.0124
         *Z       ---       ---  1.16e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02414, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015989, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002456, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146     0.027         0     0.996
          1      5.38     0.731         1    -0.129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834     0.027   -0.0226        -1
          1     0.308     0.731        -1    0.0226
         *Z       ---       ---  1.16e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018522, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015959, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002437, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018449, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0848    0.0153         0     0.994
          1      3.36     0.668         1    -0.206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00486    0.0153   -0.0361    -0.999
          1     0.193     0.668    -0.999    0.0361
         *Z       ---       ---  1.16e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018472, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001874
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000423
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036453
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.185925
         W1a Well: minimal relaxation eigenvalue = 0.0564501
         W1a Well: maximal relaxation eigenvalue = 8.5038
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1467 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00172
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.247602
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071367
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08459
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.290006
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.938619, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1467  -1247 8.12e+04 7.41e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0424  2.87e-18  4.74e-43
        W1b      23.6         1  6.75e-17  1.12e-41
         P1  3.49e+17  1.48e+16         1  1.65e-25
         P2  2.11e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0428  5.81e-22  9.61e-47
        W1b      23.3         1  1.35e-20  2.24e-45
         P1  1.72e+21  7.38e+19         1  1.65e-25
         P2  1.04e+46  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.942393, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.259934, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82164, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0564501
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.223         0     0.999
          1        75      1.28         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.223  -0.00255        -1
          1      4.23      1.28        -1   0.00255
         *Z       ---       ---  1.13e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82404, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.231767, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79396, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0564501
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.482    0.0881         0     0.998
          1      17.8     0.857         1   -0.0358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0881  -0.00738        -1
          1      1.01     0.857        -1   0.00738
         *Z       ---       ---  1.13e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00838, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002471, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01703, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0564501
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.288    0.0552         0     0.997
          1      9.97     0.829         1   -0.0672
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0552   -0.0138        -1
          1     0.563     0.829        -1    0.0138
         *Z       ---       ---  1.13e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0174, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01597, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00247, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0564501
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.171    0.0332         0     0.995
          1      5.88     0.793         1     -0.12
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00966    0.0332   -0.0248        -1
          1     0.332     0.793        -1    0.0248
         *Z       ---       ---  1.13e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018517, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01586, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002445, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018363, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0564501
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.101    0.0195         0     0.992
          1      3.69     0.727         1     -0.19
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0057    0.0195   -0.0392    -0.999
          1     0.209     0.727    -0.999    0.0392
         *Z       ---       ---  1.13e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018387, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001815
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000416
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037109
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177468
         W1a Well: minimal relaxation eigenvalue = 0.0557938
         W1a Well: maximal relaxation eigenvalue = 5.87258
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1444 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001796
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228674
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067834
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084722
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.276738
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.894506, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1444  -1214 1.22e+05 9.08e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0572  2.32e-18  2.37e-42
        W1b      17.5         1  4.06e-17  4.15e-41
         P1  4.31e+17  2.46e+16         1  1.02e-24
         P2  4.22e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0579  4.92e-22  5.02e-46
        W1b      17.3         1  8.49e-21  8.67e-45
         P1  2.03e+21  1.18e+20         1  1.02e-24
         P2  1.99e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.898281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45832, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.24088, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557938
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.249         0     0.999
          1      83.5      1.18         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.099     0.249  -0.00297        -1
          1      4.66      1.18        -1   0.00297
         *Z       ---       ---  1.09e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.46281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.219499, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557938
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.549     0.102         0     0.998
          1      19.5     0.918         1   -0.0348
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102  -0.00832        -1
          1      1.09     0.918        -1   0.00832
         *Z       ---       ---  1.09e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.69154, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00685, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22127, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557938
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0651         0     0.996
          1      10.9     0.897         1   -0.0639
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0651   -0.0153        -1
          1     0.609     0.897        -1    0.0153
         *Z       ---       ---  1.09e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22164, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002347, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017459, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557938
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.198    0.0401         0     0.994
          1      6.45     0.862         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0401   -0.0269        -1
          1      0.36     0.862        -1    0.0269
         *Z       ---       ---  1.09e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017483, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014967, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017326, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557938
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.118    0.0244         0      0.99
          1      4.07     0.793         1    -0.176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0066    0.0244    -0.042    -0.999
          1     0.227     0.793    -0.999     0.042
         *Z       ---       ---  1.09e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017349, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001722
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00041
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035132
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.176183
         W1a Well: minimal relaxation eigenvalue = 0.0550247
         W1a Well: maximal relaxation eigenvalue = 8.83698
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1464 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00169
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.234499
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067976
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081455
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.273967
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.890826, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1464  -1229    1e+05 1.11e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.076  1.95e-18   1.1e-41
        W1b      13.2         1  2.56e-17  1.45e-40
         P1  5.13e+17   3.9e+16         1  5.66e-24
         P2  9.07e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.077  4.21e-22  2.39e-45
        W1b        13         1  5.48e-21   3.1e-44
         P1  2.37e+21  1.83e+20         1  5.66e-24
         P2  4.19e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.894874, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.46976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.249462, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7344, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0550247
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.277         0     0.999
          1      90.7      1.31         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.277  -0.00345        -1
          1      4.99      1.31        -1   0.00345
         *Z       ---       ---  1.07e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.73684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.4742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221248, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70238, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0550247
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.626     0.117         0     0.997
          1      21.2         1         1   -0.0339
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0345     0.117  -0.00935        -1
          1      1.17         1        -1   0.00935
         *Z       ---       ---  1.07e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70478, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.19658, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20733, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0550247
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.38     0.076         0     0.995
          1      11.9     0.975         1   -0.0609
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0209     0.076   -0.0168        -1
          1     0.656     0.975        -1    0.0168
         *Z       ---       ---  1.07e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015233, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002364, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0550247
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0481         0     0.992
          1      7.07     0.937         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0126    0.0481   -0.0291        -1
          1     0.389     0.937        -1    0.0291
         *Z       ---       ---  1.07e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017672, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015114, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002335, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0175, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0550247
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.139    0.0302    0.0122     0.988
          1      4.49     0.864         1    -0.163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00762    0.0302   -0.0448    -0.999
          1     0.247     0.864    -0.999    0.0448
         *Z       ---       ---  1.07e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017524, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001673
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035017
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174509
         W1a Well: minimal relaxation eigenvalue = 0.0543185
         W1a Well: maximal relaxation eigenvalue = 9.63517
         W1a Well:       grid size = 179
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1473 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001793
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.219612
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064912
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089136
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.269602
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.874166, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1473  -1228 1.03e+05 1.35e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0994  1.62e-18  4.61e-41
        W1b      10.1         1  1.63e-17  4.63e-40
         P1  6.18e+17  6.14e+16         1  2.85e-23
         P2  2.17e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.101  3.65e-22  1.04e-44
        W1b      9.93         1  3.63e-21  1.03e-43
         P1  2.74e+21  2.76e+20         1  2.85e-23
         P2  9.62e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.877917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.38779, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.2345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63634, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0543185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.27     0.306         0     0.999
          1      98.9      1.43         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.306  -0.00398        -1
          1      5.37      1.43        -1   0.00398
         *Z       ---       ---  1.04e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63878, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39337, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.210916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61072, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0543185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.713     0.133         0     0.997
          1      23.2      1.09         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133   -0.0104        -1
          1      1.26      1.09        -1    0.0104
         *Z       ---       ---  1.04e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.61303, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.36141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.025174, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39245, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0543185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.435     0.088         0     0.994
          1        13      1.06         1   -0.0582
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236     0.088   -0.0184        -1
          1     0.708      1.06        -1    0.0184
         *Z       ---       ---  1.04e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39297, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018917, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002253, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021514, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0543185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.265    0.0569         0      0.99
          1      7.76      1.02         1   -0.0991
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0569   -0.0312        -1
          1     0.422      1.02        -1    0.0312
         *Z       ---       ---  1.04e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021562, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014286, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002227, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016564, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0543185
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.162    0.0368    0.0148     0.985
          1      4.96     0.942         1    -0.151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0368   -0.0476    -0.999
          1     0.269     0.942    -0.999    0.0476
         *Z       ---       ---  1.04e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016588, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001773
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000396
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032793
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1728
         W1a Well: minimal relaxation eigenvalue = 0.0537818
         W1a Well: maximal relaxation eigenvalue = 6.56589
         W1a Well:       grid size = 179
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1444 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001642
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.227211
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065615
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085111
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.265151
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.870332, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1444  -1244  8.5e+04 1.63e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.128  1.39e-18  1.81e-40
        W1b       7.8         1  1.08e-17  1.41e-39
         P1   7.2e+17  9.24e+16         1  1.31e-22
         P2  5.51e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.13   3.2e-22  4.18e-44
        W1b       7.7         1  2.46e-21  3.22e-43
         P1  3.13e+21  4.06e+20         1  1.31e-22
         P2  2.39e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.874027, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39969, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64568, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537818
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55     0.338         0     0.998
          1       109      1.35         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00453        -1
          1      5.88      1.35        -1   0.00453
         *Z       ---       ---  1.03e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64807, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40672, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.210739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537818
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.806      0.15         0     0.996
          1      25.4      1.17         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0116        -1
          1      1.37      1.17        -1    0.0116
         *Z       ---       ---  1.03e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.62663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34685, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.023782, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537818
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.494     0.101         0     0.993
          1      14.3      1.15         1   -0.0558
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101     -0.02        -1
          1     0.769      1.15        -1      0.02
         *Z       ---       ---  1.03e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37682, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019703, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537818
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.303    0.0669    0.0118     0.988
          1      8.55      1.11         1   -0.0932
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0669   -0.0334    -0.999
          1      0.46      1.11    -0.999    0.0334
         *Z       ---       ---  1.03e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019751, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014367, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002236, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016653, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537818
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.187    0.0444    0.0176     0.982
          1      5.49      1.03         1     -0.14
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0444     -0.05    -0.999
          1     0.295      1.03    -0.999      0.05
         *Z       ---       ---  1.03e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016677, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001785
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034499
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175566
         W1a Well: minimal relaxation eigenvalue = 0.0531174
         W1a Well: maximal relaxation eigenvalue = 8.28122
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1465 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001677
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232655
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065656
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071969
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.265481
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.86668, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1465  -1261 6.78e+04 1.98e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.163   1.2e-18  6.64e-40
        W1b      6.12         1  7.35e-18  4.07e-39
         P1  8.32e+17  1.36e+17         1  5.53e-22
         P2  1.51e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.165  2.82e-22  1.56e-43
        W1b      6.05         1  1.71e-21  9.44e-43
         P1  3.54e+21  5.86e+20         1  5.53e-22
         P2  6.41e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.870435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40563, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.65047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531174
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.86     0.374         0     0.998
          1       118       1.6         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.374  -0.00511        -1
          1      6.27       1.6        -1   0.00511
         *Z       ---       ---  1.02e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.65288, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41671, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63514, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531174
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.912     0.169         0     0.995
          1      27.7      1.28         1   -0.0316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0484     0.169   -0.0128        -1
          1      1.47      1.28        -1    0.0128
         *Z       ---       ---  1.02e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63747, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33412, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.022285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36214, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0531174
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.562     0.116         0     0.991
          1      15.7      1.25         1   -0.0534
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.116   -0.0216        -1
          1     0.831      1.25        -1    0.0216
         *Z       ---       ---  1.02e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36263, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016137, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00226, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531174
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.347     0.078    0.0141     0.986
          1       9.4      1.21         1   -0.0878
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184     0.078   -0.0355    -0.999
          1     0.499      1.21    -0.999    0.0355
         *Z       ---       ---  1.02e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018698, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014453, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016732, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0531174
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0531    0.0208     0.979
          1      6.07      1.12         1     -0.13
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0531   -0.0525    -0.999
          1     0.322      1.12    -0.999    0.0525
         *Z       ---       ---  1.02e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016756, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001688
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030181
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1718
         W1a Well: minimal relaxation eigenvalue = 0.0525407
         W1a Well: maximal relaxation eigenvalue = 7.57032
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1458 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001633
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21555
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062593
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077443
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.253897
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.831845, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1458  -1246 8.32e+04 2.38e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.205  1.03e-18  2.23e-39
        W1b      4.87         1  5.02e-18  1.09e-38
         P1  9.71e+17  1.99e+17         1  2.17e-21
         P2  4.48e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.208  2.51e-22  5.44e-43
        W1b      4.81         1  1.21e-21  2.62e-42
         P1  3.98e+21  8.27e+20         1  2.17e-21
         P2  1.84e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.835865, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33035, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.225821, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57948, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525407
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.2     0.405         0     0.997
          1       130      1.58         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.405  -0.00576        -1
          1      6.85      1.58        -1   0.00576
         *Z       ---       ---  1.01e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.58195, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33502, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20163, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525407
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.188         0     0.994
          1      30.3      1.39         1   -0.0309
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0539     0.188    -0.014        -1
          1      1.59      1.39        -1     0.014
         *Z       ---       ---  1.01e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54545, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33732, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525407
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.634     0.131    0.0104      0.99
          1      17.2      1.36         1   -0.0513
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0333     0.131   -0.0232        -1
          1     0.903      1.36        -1    0.0232
         *Z       ---       ---  1.01e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51022, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.037782, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.040513, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525407
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.395    0.0898    0.0167     0.983
          1      10.4      1.31         1   -0.0828
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0898   -0.0375    -0.999
          1     0.545      1.31    -0.999    0.0375
         *Z       ---       ---  1.01e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.040579, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013875, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016053, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0525407
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0626    0.0242     0.976
          1      6.73      1.21         1    -0.121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.013    0.0626   -0.0547    -0.999
          1     0.354      1.21    -0.999    0.0547
         *Z       ---       ---  1.01e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016077, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001765
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031233
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165283
         W1a Well: minimal relaxation eigenvalue = 0.0518373
         W1a Well: maximal relaxation eigenvalue = 11.536
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001687
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.224515
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062197
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071092
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.251341
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.826118, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 6.56e+04 2.86e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.255  9.07e-19  7.18e-39
        W1b      3.91         1  3.55e-18  2.81e-38
         P1   1.1e+18  2.82e+17         1  7.91e-21
         P2  1.39e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.258  2.25e-22  1.78e-42
        W1b      3.87         1  8.73e-22  6.91e-42
         P1  4.44e+21  1.15e+21         1  7.91e-21
         P2   5.6e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.830539, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34244, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.224622, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518373
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.6     0.442         0     0.997
          1       140         2         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187     0.442  -0.00642        -1
          1      7.24         2        -1   0.00642
         *Z       ---       ---  1.01e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.5991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34906, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202334, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55766, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518373
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.16     0.209         0     0.992
          1        33      1.52         1   -0.0302
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.06     0.209   -0.0153        -1
          1      1.71      1.52        -1    0.0153
         *Z       ---       ---  1.01e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55996, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34956, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131395, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48695, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518373
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.718     0.147    0.0125     0.988
          1      18.8      1.49         1   -0.0494
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0372     0.147   -0.0249        -1
          1     0.973      1.49        -1    0.0249
         *Z       ---       ---  1.01e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48779, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.031565, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002152, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.034237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518373
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.449     0.103    0.0197      0.98
          1      11.4      1.43         1   -0.0786
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0233     0.103   -0.0397    -0.999
          1     0.589      1.43    -0.999    0.0397
         *Z       ---       ---  1.01e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.034299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013799, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002153, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518373
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.284    0.0731    0.0282     0.972
          1      7.42      1.32         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0147    0.0731   -0.0573    -0.998
          1     0.384      1.32    -0.998    0.0573
         *Z       ---       ---  1.01e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016025, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032608
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164729
         W1a Well: minimal relaxation eigenvalue = 0.0514039
         W1a Well: maximal relaxation eigenvalue = 8.08585
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1460 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001532
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208256
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059224
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076025
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.240438
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.800844, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1460  -1236 9.28e+04 3.42e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.315   7.9e-19  2.14e-38
        W1b      3.18         1  2.51e-18   6.8e-38
         P1  1.27e+18  3.98e+17         1  2.71e-20
         P2  4.67e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.318  2.04e-22  5.52e-42
        W1b      3.15         1  6.41e-22  1.74e-41
         P1  4.91e+21  1.56e+21         1  2.71e-20
         P2  1.81e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.804562, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26567, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212356, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0514039
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.02     0.479         0     0.996
          1       156      1.82         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.479  -0.00717        -1
          1      8.02      1.82        -1   0.00717
         *Z       ---       ---  9.95e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50886, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28534, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194155, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0514039
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.3     0.232         0     0.991
          1      36.3      1.65         1   -0.0297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0666     0.232   -0.0166        -1
          1      1.87      1.65        -1    0.0166
         *Z       ---       ---  9.95e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48819, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28378, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194638, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48477, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0514039
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.808     0.165    0.0147     0.985
          1      20.7      1.61         1   -0.0475
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0415     0.165   -0.0267        -1
          1      1.06      1.61        -1    0.0267
         *Z       ---       ---  9.95e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48708, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.183496, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002069, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190762, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0514039
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.508     0.117    0.0228     0.977
          1      12.6      1.55         1   -0.0743
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.117   -0.0416    -0.999
          1     0.647      1.55    -0.999    0.0416
         *Z       ---       ---  9.95e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.191137, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015224, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0514039
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.325    0.0851    0.0321     0.968
          1      8.26      1.43         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167    0.0851   -0.0591    -0.998
          1     0.425      1.43    -0.998    0.0591
         *Z       ---       ---  9.95e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015253, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001723
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000374
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03269
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16497
         W1a Well: minimal relaxation eigenvalue = 0.0507208
         W1a Well: maximal relaxation eigenvalue = 12.3264
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001677
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.205962
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058541
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076248
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.24458
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.803271, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 7.37e+04 4.08e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.383  7.06e-19  6.16e-38
        W1b      2.61         1  1.84e-18  1.61e-37
         P1  1.42e+18  5.42e+17         1  8.73e-20
         P2  1.62e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.387  1.85e-22  1.62e-41
        W1b      2.58         1  4.78e-22  4.18e-41
         P1   5.4e+21  2.09e+21         1  8.73e-20
         P2  6.18e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.807, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28542, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217547, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5303, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0507208
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.46     0.521         0     0.995
          1       169      2.13         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.521  -0.00784        -1
          1      8.55      2.13        -1   0.00784
         *Z       ---       ---  9.97e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28789, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196084, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49043, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0507208
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.45     0.256     0.011     0.989
          1      39.5       1.8         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0733     0.256   -0.0179        -1
          1         2       1.8        -1    0.0179
         *Z       ---       ---  9.97e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28856, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195714, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49068, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0507208
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.905     0.184    0.0172     0.983
          1      22.6      1.76         1   -0.0458
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0459     0.184   -0.0283        -1
          1      1.14      1.76        -1    0.0283
         *Z       ---       ---  9.97e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49305, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.161391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002056, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.168679, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0507208
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.132    0.0263     0.974
          1      13.8      1.69         1   -0.0707
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.029     0.132   -0.0437    -0.999
          1     0.698      1.69    -0.999    0.0437
         *Z       ---       ---  9.97e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.169052, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013165, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002056, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015269, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0507208
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.368    0.0977    0.0368     0.963
          1      9.07      1.56         1   -0.0998
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0187    0.0977   -0.0616    -0.998
          1      0.46      1.56    -0.998    0.0616
         *Z       ---       ---  9.97e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015294, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001624
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033191
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163333
         W1a Well: minimal relaxation eigenvalue = 0.0503767
         W1a Well: maximal relaxation eigenvalue = 8.3414
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1451 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001591
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217292
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059785
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064149
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.240702
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.798019, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1451  -1219 1.16e+05 4.85e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.462  6.35e-19  1.69e-37
        W1b      2.16         1  1.37e-18  3.65e-37
         P1  1.57e+18  7.28e+17         1  2.66e-19
         P2  5.92e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.468   1.7e-22  4.51e-41
        W1b      2.14         1  3.63e-22  9.64e-41
         P1   5.9e+21  2.76e+21         1  2.66e-19
         P2  2.22e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.80172, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.219723, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52973, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0503767
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.94     0.565         0     0.994
          1       186      2.15         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249     0.565  -0.00857        -1
          1      9.38      2.15        -1   0.00857
         *Z       ---       ---     1e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29211, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19628, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49471, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0503767
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.61     0.282    0.0129     0.987
          1      43.5      1.95         1   -0.0283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.081     0.282   -0.0192        -1
          1      2.19      1.95        -1    0.0192
         *Z       ---       ---     1e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49432, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0503767
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.205      0.02      0.98
          1      24.9      1.91         1   -0.0441
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0509     0.205   -0.0299        -1
          1      1.26      1.91        -1    0.0299
         *Z       ---       ---     1e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49665, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.15761, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.164958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0503767
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.642      0.15    0.0299      0.97
          1      15.3      1.83         1   -0.0668
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0324      0.15   -0.0453    -0.999
          1     0.771      1.83    -0.999    0.0453
         *Z       ---       ---     1e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.165345, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0132, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002061, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01531, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0503767
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.417     0.112     0.041     0.959
          1      10.1      1.69         1   -0.0926
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021     0.112   -0.0628    -0.998
          1     0.511      1.69    -0.998    0.0628
         *Z       ---       ---     1e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015334, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001681
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000371
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029723
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165566
         W1a Well: minimal relaxation eigenvalue = 0.0497987
         W1a Well: maximal relaxation eigenvalue = 10.4299
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1474 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001582
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213473
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057655
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070646
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234819
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.792142, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1474  -1234 9.57e+04 5.77e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.553  5.65e-19  4.35e-37
        W1b      1.81         1  1.02e-18  7.86e-37
         P1  1.77e+18  9.79e+17         1  7.69e-19
         P2   2.3e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.56  1.56e-22   1.2e-40
        W1b      1.79         1  2.79e-22  2.14e-40
         P1  6.41e+21  3.59e+21         1  7.69e-19
         P2  8.33e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.796066, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23835, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21323, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497987
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.47     0.611         0     0.993
          1       203      2.35         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.611  -0.00932        -1
          1      10.1      2.35        -1   0.00932
         *Z       ---       ---  9.98e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47729, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24545, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44157, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497987
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.79     0.308    0.0151     0.985
          1      47.5      2.13         1   -0.0277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.089     0.308   -0.0206        -1
          1      2.37      2.13        -1    0.0206
         *Z       ---       ---  9.98e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44392, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24997, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189518, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44575, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497987
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.226     0.023     0.977
          1      27.3      2.08         1   -0.0425
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.056     0.226   -0.0316    -0.999
          1      1.36      2.08    -0.999    0.0316
         *Z       ---       ---  9.98e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44807, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.316873, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002006, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.323979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497987
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.719     0.167     0.034     0.966
          1      16.8      1.99         1   -0.0637
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0358     0.167   -0.0473    -0.999
          1     0.836      1.99    -0.999    0.0473
         *Z       ---       ---  9.98e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.324348, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012751, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014792, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0497987
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.47     0.127    0.0462     0.954
          1      11.2      1.84         1   -0.0876
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0234     0.127    -0.065    -0.998
          1     0.556      1.84    -0.998     0.065
         *Z       ---       ---  9.98e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014816, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001555
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000375
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031323
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167584
         W1a Well: minimal relaxation eigenvalue = 0.0486773
         W1a Well: maximal relaxation eigenvalue = 19.6061
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001566
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21334
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058523
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065987
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.234465
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.790624, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 7.28e+04 6.83e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.657  5.14e-19  1.09e-36
        W1b      1.52         1  7.82e-19  1.66e-36
         P1  1.95e+18  1.28e+18         1  2.12e-18
         P2  9.18e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.665  1.44e-22  3.06e-40
        W1b       1.5         1  2.17e-22   4.6e-40
         P1  6.93e+21  4.61e+21         1  2.12e-18
         P2  3.27e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.794333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201044, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0486773
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.14     0.658         0     0.992
          1       219      3.06         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.658   -0.0102        -1
          1      10.7      3.06        -1    0.0102
         *Z       ---       ---  1.01e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25531, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45374, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0486773
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.336    0.0177     0.982
          1      51.2      2.36         1   -0.0274
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0978     0.336   -0.0222        -1
          1      2.49      2.36        -1    0.0222
         *Z       ---       ---  1.01e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45638, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25825, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191495, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45583, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0486773
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.27     0.248    0.0268     0.973
          1      29.2      2.28         1   -0.0419
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0617     0.248   -0.0339    -0.999
          1      1.42      2.28    -0.999    0.0339
         *Z       ---       ---  1.01e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45815, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.286053, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002044, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.293224, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0486773
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.809     0.184    0.0397      0.96
          1      17.8      2.18         1   -0.0628
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0394     0.184   -0.0509    -0.999
          1     0.869      2.18    -0.999    0.0509
         *Z       ---       ---  1.01e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.29358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01287, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014942, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0486773
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.528     0.142    0.0541     0.946
          1      11.8      2.02         1   -0.0871
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0257     0.142   -0.0704    -0.998
          1     0.575      2.02    -0.998    0.0704
         *Z       ---       ---  1.01e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014966, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001512
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000367
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032205
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162342
         W1a Well: minimal relaxation eigenvalue = 0.0489314
         W1a Well: maximal relaxation eigenvalue = 8.51853
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1453 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001614
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199138
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056549
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072581
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227561
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.769178, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1453  -1264 6.56e+04 8.06e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.775  4.62e-19  2.58e-36
        W1b      1.29         1  5.97e-19  3.33e-36
         P1  2.16e+18  1.68e+18         1  5.58e-18
         P2  3.87e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.784  1.34e-22  7.49e-40
        W1b      1.27         1  1.71e-22  9.55e-40
         P1  7.46e+21  5.85e+21         1  5.58e-18
         P2  1.34e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.772853, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43851, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.68      0.71         0     0.991
          1       243      2.71         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.327      0.71   -0.0109        -1
          1      11.9      2.71        -1    0.0109
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44091, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184331, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39856, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.19     0.368    0.0201      0.98
          1      57.1      2.51         1   -0.0265
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.368   -0.0233        -1
          1       2.8      2.51        -1    0.0233
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40093, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20761, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39687, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.275    0.0298      0.97
          1        33      2.45         1   -0.0396
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.068     0.275   -0.0348    -0.999
          1      1.61      2.45    -0.999    0.0348
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39922, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.445895, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001956, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.45289, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.897     0.208    0.0427     0.957
          1      20.5      2.34         1   -0.0576
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0439     0.208   -0.0506    -0.999
          1         1      2.34    -0.999    0.0506
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.453265, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012307, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014297, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0489314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.596     0.162    0.0564     0.944
          1      13.8      2.15         1   -0.0771
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.162   -0.0677    -0.998
          1     0.674      2.15    -0.998    0.0677
         *Z       ---       ---  1.01e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014322, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001545
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000365
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031722
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159064
         W1a Well: minimal relaxation eigenvalue = 0.0483478
         W1a Well: maximal relaxation eigenvalue = 12.3193
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001769
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19882
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055364
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079355
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.223803
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.767208, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.08e+05  9.5e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.907  4.25e-19  5.99e-36
        W1b       1.1         1  4.68e-19   6.6e-36
         P1  2.35e+18  2.13e+18         1  1.41e-17
         P2  1.67e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.919  1.25e-22  1.77e-39
        W1b      1.09         1  1.36e-22  1.92e-39
         P1  7.99e+21  7.34e+21         1  1.41e-17
         P2  5.67e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.771257, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20789, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.207148, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42609, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0483478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.4     0.761     0.011     0.989
          1       265      3.06         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.358     0.761   -0.0117        -1
          1      12.8      3.06        -1    0.0117
         *Z       ---       ---  1.02e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42852, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21075, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.43     0.398    0.0231     0.977
          1      62.1      2.73         1   -0.0261
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.398   -0.0248        -1
          1         3      2.73        -1    0.0248
         *Z       ---       ---  1.02e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40495, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.54       0.3    0.0339     0.966
          1      35.8      2.66         1   -0.0386
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0747       0.3   -0.0368    -0.999
          1      1.73      2.66    -0.999    0.0368
         *Z       ---       ---  1.02e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40756, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.447871, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001957, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.454869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.998     0.229    0.0482     0.952
          1      22.2      2.54         1   -0.0559
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0483     0.229   -0.0531    -0.999
          1      1.07      2.54    -0.999    0.0531
         *Z       ---       ---  1.02e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.455231, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012426, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001947, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014417, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.665     0.181    0.0633     0.937
          1      14.9      2.34         1   -0.0746
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0321     0.181   -0.0708    -0.997
          1     0.723      2.34    -0.997    0.0708
         *Z       ---       ---  1.02e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014441, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001534
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000373
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030239
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160109
         W1a Well: minimal relaxation eigenvalue = 0.0480803
         W1a Well: maximal relaxation eigenvalue = 7.75856
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1444 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001742
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193947
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056248
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08062
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.225548
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.765477, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1444  -1250 7.91e+04 1.12e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.06  3.92e-19  1.34e-35
        W1b     0.947         1  3.71e-19  1.27e-35
         P1  2.55e+18  2.69e+18         1  3.42e-17
         P2  7.45e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.07  1.17e-22  4.02e-39
        W1b     0.935         1   1.1e-22  3.76e-39
         P1  8.52e+21  9.11e+21         1  3.42e-17
         P2  2.49e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.769199, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21605, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45239, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480803
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.14     0.815    0.0128     0.987
          1       292      3.13         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.392     0.815   -0.0126        -1
          1      14.1      3.13        -1    0.0126
         *Z       ---       ---  1.03e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45484, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18509, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480803
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.68     0.432    0.0261     0.974
          1      68.6      2.96         1   -0.0254
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.432   -0.0261        -1
          1       3.3      2.96        -1    0.0261
         *Z       ---       ---  1.03e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4143, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22199, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184903, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41284, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480803
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.71     0.328    0.0377     0.962
          1      39.9      2.88         1   -0.0371
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0822     0.328   -0.0381    -0.999
          1      1.92      2.88    -0.999    0.0381
         *Z       ---       ---  1.03e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41517, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.404602, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001959, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.411557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480803
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.253    0.0526     0.947
          1        25      2.74         1   -0.0526
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0534     0.253   -0.0539    -0.999
          1       1.2      2.74    -0.999    0.0539
         *Z       ---       ---  1.03e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.411925, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012427, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001966, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014438, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480803
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.747     0.203    0.0677     0.932
          1      16.9      2.51         1   -0.0688
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0359     0.203   -0.0705    -0.998
          1     0.813      2.51    -0.998    0.0705
         *Z       ---       ---  1.03e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014462, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001556
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000356
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028387
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158744
         W1a Well: minimal relaxation eigenvalue = 0.0476474
         W1a Well: maximal relaxation eigenvalue = 8.10017
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1447 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001653
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.200378
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054327
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058327
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216621
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.73563, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1447  -1247 8.22e+04 1.31e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.22  3.58e-19  2.86e-35
        W1b     0.819         1  2.93e-19  2.35e-35
         P1  2.79e+18  3.41e+18         1     8e-17
         P2  3.49e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.24   1.1e-22  8.83e-39
        W1b     0.809         1  8.93e-23  7.15e-39
         P1  9.06e+21  1.12e+22         1     8e-17
         P2  1.13e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.739333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17002, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476474
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.96     0.872    0.0146     0.985
          1       320       3.4         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.427     0.872   -0.0134        -1
          1      15.2       3.4        -1    0.0134
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39111, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17426, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35881, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476474
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.96     0.467    0.0295     0.971
          1      75.2      3.22         1   -0.0249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.467   -0.0275        -1
          1      3.58      3.22        -1    0.0275
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36137, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1748, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178676, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3595, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476474
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.89     0.357     0.042     0.958
          1      43.7      3.12         1   -0.0359
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.09     0.357   -0.0397    -0.999
          1      2.08      3.12    -0.999    0.0397
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36179, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.585224, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001899, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.591991, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476474
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.278    0.0579     0.942
          1      27.5      2.96         1   -0.0504
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0587     0.278   -0.0556    -0.998
          1      1.31      2.96    -0.998    0.0556
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.592357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011982, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00189, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013919, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476474
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.833     0.225    0.0739     0.926
          1      18.7      2.71         1   -0.0653
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0397     0.225    -0.072    -0.997
          1     0.889      2.71    -0.997     0.072
         *Z       ---       ---  1.04e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013944, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001556
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000412
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031311
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161014
         W1a Well: minimal relaxation eigenvalue = 0.0471064
         W1a Well: maximal relaxation eigenvalue = 11.9757
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001722
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.205023
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054224
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068489
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.223426
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.7622, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 5.64e+04 1.53e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.4  3.33e-19  6.02e-35
        W1b     0.712         1  2.37e-19  4.29e-35
         P1     3e+18  4.22e+18         1  1.81e-16
         P2  1.66e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.42  1.04e-22  1.88e-38
        W1b     0.703         1  7.34e-23  1.33e-38
         P1  9.59e+21  1.36e+22         1  1.81e-16
         P2  5.31e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.765848, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18444, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193863, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39688, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       9.9     0.931    0.0166     0.983
          1       346      3.89         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.466     0.931   -0.0143        -1
          1      16.3      3.89        -1    0.0143
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39928, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180583, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.27     0.503    0.0333     0.967
          1      81.4       3.5         1   -0.0245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.503    -0.029        -1
          1      3.84       3.5        -1     0.029
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37481, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18326, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179984, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36924, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.09     0.386    0.0472     0.953
          1      47.2      3.39         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0983     0.386   -0.0417    -0.999
          1      2.22      3.39    -0.999    0.0417
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37181, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.548626, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00192, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.555447, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.36     0.303    0.0648     0.935
          1      29.5      3.22         1   -0.0493
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0642     0.303   -0.0584    -0.998
          1      1.39      3.22    -0.998    0.0584
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.555827, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012071, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014012, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.922     0.247    0.0825     0.918
          1        20      2.95         1    -0.064
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434     0.247   -0.0756    -0.997
          1     0.944      2.95    -0.997    0.0756
         *Z       ---       ---  1.05e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001484
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000353
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029031
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152421
         W1a Well: minimal relaxation eigenvalue = 0.046732
         W1a Well: maximal relaxation eigenvalue = 11.4646
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1473 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001616
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191265
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052441
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067687
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214826
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.726099, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1473  -1264 6.56e+04 1.79e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.61  3.07e-19  1.21e-34
        W1b     0.623         1  1.91e-19  7.54e-35
         P1  3.26e+18  5.24e+18         1  3.95e-16
         P2  8.26e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.63  9.88e-23   3.9e-38
        W1b     0.615         1  6.08e-23   2.4e-38
         P1  1.01e+22  1.65e+22         1  3.95e-16
         P2  2.56e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.729771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13926, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3467, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046732
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9     0.991    0.0189     0.981
          1       380      4.06         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509     0.991   -0.0152        -1
          1      17.8      4.06        -1    0.0152
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31986, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046732
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.6     0.541    0.0372     0.963
          1      89.2      3.79         1   -0.0241
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.541   -0.0305        -1
          1      4.17      3.79        -1    0.0305
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13706, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31696, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046732
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.3     0.418    0.0521     0.948
          1      51.8      3.67         1   -0.0342
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.418   -0.0433    -0.999
          1      2.42      3.67    -0.999    0.0433
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31928, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.704836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00184, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.711449, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046732
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.51     0.331    0.0707     0.929
          1      32.5      3.48         1   -0.0473
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0704     0.331   -0.0599    -0.998
          1      1.52      3.48    -0.998    0.0599
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.711824, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011608, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001831, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013482, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046732
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.272     0.089     0.911
          1      22.1      3.17         1   -0.0608
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0479     0.272   -0.0768    -0.997
          1      1.04      3.17    -0.997    0.0768
         *Z       ---       ---  1.06e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013505, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001481
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000356
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029636
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159905
         W1a Well: minimal relaxation eigenvalue = 0.0457324
         W1a Well: maximal relaxation eigenvalue = 19.8102
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001669
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192094
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053676
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072776
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.215896
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.742569, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222  1.1e+05 2.08e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.83  2.87e-19   2.4e-34
        W1b     0.547         1  1.57e-19  1.32e-34
         P1  3.48e+18  6.36e+18         1  8.37e-16
         P2  4.16e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.85  9.39e-23  7.86e-38
        W1b      0.54         1  5.08e-23  4.25e-38
         P1  1.06e+22  1.97e+22         1  8.37e-16
         P2  1.27e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.746328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15222, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189033, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0457324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.9       1.1    0.0209     0.979
          1       410      5.15         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.543       1.1   -0.0158        -1
          1      18.7      5.15        -1    0.0158
         *Z       ---       ---  1.07e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36181, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15581, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177396, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0457324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.95     0.592    0.0418     0.958
          1      95.2      4.16         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.592   -0.0322    -0.999
          1      4.35      4.16    -0.999    0.0322
         *Z       ---       ---  1.07e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0457324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.53     0.456     0.059     0.941
          1      54.3      4.02         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.456   -0.0463    -0.999
          1      2.49      4.02    -0.999    0.0463
         *Z       ---       ---  1.07e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33907, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.654005, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001873, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.660764, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0457324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.65     0.359    0.0811     0.919
          1      33.4      3.82         1   -0.0483
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0755     0.359   -0.0652    -0.998
          1      1.53      3.82    -0.998    0.0652
         *Z       ---       ---  1.07e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.661136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011773, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001861, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0457324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.12     0.296     0.104     0.896
          1      22.3      3.52         1   -0.0635
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.051     0.296   -0.0855    -0.996
          1      1.02      3.52    -0.996    0.0855
         *Z       ---       ---  1.07e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013701, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001596
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000351
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03149
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160586
         W1a Well: minimal relaxation eigenvalue = 0.0459894
         W1a Well: maximal relaxation eigenvalue = 11.8361
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1469 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001818
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.190382
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053946
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071816
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21567
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.742412, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1469  -1252 7.62e+04 2.42e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.07   2.7e-19  4.65e-34
        W1b     0.483         1  1.31e-19  2.25e-34
         P1   3.7e+18  7.66e+18         1  1.72e-15
         P2  2.15e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.1  8.96e-23  1.54e-37
        W1b     0.477         1  4.27e-23  7.36e-38
         P1  1.12e+22  2.34e+22         1  1.72e-15
         P2  6.48e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.746066, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184589, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35481, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459894
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        13      1.14    0.0237     0.976
          1       455      4.75         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.598      1.14   -0.0168        -1
          1      20.9      4.75        -1    0.0168
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35726, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15916, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34156, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459894
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.32     0.627    0.0455     0.954
          1       107      4.46         1    -0.023
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.627   -0.0331    -0.999
          1      4.91      4.46    -0.999    0.0331
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34389, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15957, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176612, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34213, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459894
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.77      0.49    0.0626     0.937
          1      62.2       4.3         1   -0.0323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127      0.49   -0.0464    -0.999
          1      2.86       4.3    -0.999    0.0464
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34444, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.638565, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001869, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.64529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459894
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.393    0.0832     0.917
          1      39.2      4.06         1   -0.0438
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.084     0.393   -0.0629    -0.998
          1       1.8      4.06    -0.998    0.0629
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.645658, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011872, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013765, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0459894
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25     0.327     0.103     0.897
          1      26.8      3.68         1   -0.0555
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0577     0.327   -0.0795    -0.997
          1      1.23      3.68    -0.997    0.0795
         *Z       ---       ---  1.09e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013789, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001516
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000346
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032535
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156653
         W1a Well: minimal relaxation eigenvalue = 0.0456981
         W1a Well: maximal relaxation eigenvalue = 9.54197
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1454 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001603
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188793
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052577
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068366
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205572
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.722891, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1454  -1232 9.68e+04 2.81e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.33  2.51e-19  8.67e-34
        W1b     0.429         1  1.08e-19  3.72e-34
         P1  3.98e+18  9.28e+18         1  3.45e-15
         P2  1.15e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.36  8.56e-23  2.95e-37
        W1b     0.423         1  3.62e-23  1.25e-37
         P1  1.17e+22  2.76e+22         1  3.45e-15
         P2  3.38e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.726855, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1097, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191529, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456981
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.3       1.2    0.0264     0.974
          1       499      5.14         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.653       1.2   -0.0177        -1
          1      22.8      5.14        -1    0.0177
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31895, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1188, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170165, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29462, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456981
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.74      0.67    0.0499      0.95
          1       118      4.82         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216      0.67   -0.0344    -0.999
          1      5.38      4.82    -0.999    0.0344
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29697, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11645, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170218, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29224, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456981
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.05     0.528    0.0677     0.932
          1        69      4.64         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.528   -0.0475    -0.999
          1      3.15      4.64    -0.999    0.0475
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29458, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780856, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00183, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.787458, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456981
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.02     0.427    0.0886     0.911
          1      43.7      4.35         1   -0.0417
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0922     0.427   -0.0636    -0.998
          1         2      4.35    -0.998    0.0636
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.787831, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011382, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001796, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456981
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.4     0.358     0.108     0.892
          1      30.1      3.94         1    -0.052
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0638     0.358   -0.0792    -0.997
          1      1.37      3.94    -0.997    0.0792
         *Z       ---       ---   1.1e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013245, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001529
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00036
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032925
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157533
         W1a Well: minimal relaxation eigenvalue = 0.0451137
         W1a Well: maximal relaxation eigenvalue = 14.9153
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001656
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183467
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051421
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069548
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209964
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.722774, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265 6.48e+04 3.26e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.62  2.38e-19   1.6e-33
        W1b     0.381         1  9.07e-20  6.11e-34
         P1  4.21e+18   1.1e+19         1  6.73e-15
         P2  6.25e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.65  8.21e-23  5.53e-37
        W1b     0.377         1  3.09e-23  2.08e-37
         P1  1.22e+22  3.23e+22         1  6.73e-15
         P2  1.81e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.726474, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12761, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34751, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0451137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.8      1.27    0.0295      0.97
          1       543      5.65         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.712      1.27   -0.0188        -1
          1      24.5      5.65        -1    0.0188
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34995, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12806, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172753, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30677, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0451137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.22     0.713    0.0557     0.944
          1       126      5.23         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.235     0.713   -0.0364    -0.999
          1       5.7      5.23    -0.999    0.0364
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12809, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172392, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0451137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.35     0.563    0.0757     0.924
          1        73      5.04         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.151     0.563   -0.0505    -0.999
          1       3.3      5.04    -0.999    0.0505
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3087, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.732136, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001817, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.738681, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0451137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.21     0.456    0.0996       0.9
          1      45.7      4.75         1   -0.0422
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0997     0.456   -0.0682    -0.998
          1      2.06      4.75    -0.998    0.0682
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.739048, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001844, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013405, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0451137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.385     0.123     0.877
          1      31.1      4.31         1   -0.0533
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0686     0.385    -0.086    -0.996
          1       1.4      4.31    -0.996     0.086
         *Z       ---       ---  1.13e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013431, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001557
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000351
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030809
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158877
         W1a Well: minimal relaxation eigenvalue = 0.0450107
         W1a Well: maximal relaxation eigenvalue = 9.78957
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1452 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001704
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183934
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052032
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070791
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214417
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.729212, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1452  -1224 1.08e+05 3.76e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.93  2.25e-19  2.89e-33
        W1b     0.341         1   7.7e-20  9.87e-34
         P1  4.44e+18   1.3e+19         1  1.28e-14
         P2  3.46e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.97  7.89e-23  1.01e-36
        W1b     0.337         1  2.66e-23  3.41e-37
         P1  1.27e+22  3.76e+22         1  1.28e-14
         P2  9.88e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.732728, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3437, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0450107
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.8      1.41    0.0316     0.968
          1       595      6.04         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.755      1.41   -0.0191        -1
          1      26.8      6.04        -1    0.0191
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34613, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13204, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.173004, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31108, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0450107
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.61     0.783    0.0589     0.941
          1       141      5.63         1   -0.0214
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252     0.783   -0.0365    -0.999
          1      6.33      5.63    -0.999    0.0365
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31342, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13318, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173255, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0450107
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.63     0.619    0.0788     0.921
          1      82.5      5.41         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.163     0.619   -0.0499    -0.999
          1      3.72      5.41    -0.999    0.0499
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31468, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.722232, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001811, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.72883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0450107
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.42     0.505     0.102     0.898
          1      52.5      5.06         1   -0.0386
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.109     0.505   -0.0659    -0.998
          1      2.36      5.06    -0.998    0.0659
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.7292, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011572, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001804, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0450107
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.69     0.427     0.122     0.878
          1      36.2      4.55         1   -0.0476
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.076     0.427   -0.0811    -0.997
          1      1.63      4.55    -0.997    0.0811
         *Z       ---       ---  1.15e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013444, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001543
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027825
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156455
         W1a Well: minimal relaxation eigenvalue = 0.0441293
         W1a Well: maximal relaxation eigenvalue = 18.8913
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001608
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.188213
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050945
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068361
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202313
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.712232, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 5.99e+04 4.35e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.26  2.12e-19  5.05e-33
        W1b     0.306         1  6.48e-20  1.55e-33
         P1  4.73e+18  1.54e+19         1  2.39e-14
         P2  1.98e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       3.3   7.6e-23  1.81e-36
        W1b     0.303         1   2.3e-23  5.49e-37
         P1  1.32e+22  4.35e+22         1  2.39e-14
         P2  5.51e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.715898, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10009, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189208, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31314, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0441293
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.9      1.43    0.0358     0.964
          1       644      6.73         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.835      1.43   -0.0206        -1
          1      28.4      6.73        -1    0.0206
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169297, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0441293
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.26     0.811    0.0669     0.933
          1       148      6.13         1    -0.022
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.276     0.811   -0.0397    -0.999
          1      6.54      6.13    -0.999    0.0397
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09953, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16932, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27462, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0441293
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.01     0.644    0.0904      0.91
          1      84.9       5.9         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.177     0.644   -0.0549    -0.998
          1      3.75       5.9    -0.998    0.0549
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2769, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.837718, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001803, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.844196, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0441293
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.65     0.527     0.119     0.881
          1      52.5      5.56         1   -0.0412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.117     0.527   -0.0742    -0.997
          1      2.32      5.56    -0.997    0.0742
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.84456, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011253, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001776, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013071, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0441293
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.82     0.449     0.146     0.854
          1      35.3      5.06         1   -0.0523
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0802     0.449   -0.0941    -0.996
          1      1.56      5.06    -0.996    0.0941
         *Z       ---       ---  1.16e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013095, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00149
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000349
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031262
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155845
         W1a Well: minimal relaxation eigenvalue = 0.0442826
         W1a Well: maximal relaxation eigenvalue = 12.0315
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1466 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001672
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.187953
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051028
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069647
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200672
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.714609, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1466  -1229 1.02e+05    5e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.62  2.02e-19  8.76e-33
        W1b     0.276         1  5.57e-20  2.42e-33
         P1  4.96e+18   1.8e+19         1  4.35e-14
         P2  1.14e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.67  7.33e-23  3.19e-36
        W1b     0.273         1     2e-23  8.69e-37
         P1  1.36e+22     5e+22         1  4.35e-14
         P2  3.14e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.718324, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09522, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442826
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.5      1.52    0.0389     0.961
          1       706       7.1         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.906      1.52   -0.0213        -1
          1      31.3       7.1        -1    0.0213
         *Z       ---       ---  1.19e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27232, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442826
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.78     0.869    0.0707     0.929
          1       166      6.58         1    -0.021
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.3     0.869   -0.0399    -0.999
          1      7.37      6.58    -0.999    0.0399
         *Z       ---       ---  1.19e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09807, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168629, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442826
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.37     0.696    0.0932     0.907
          1      97.4       6.3         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.194     0.696   -0.0539    -0.999
          1      4.31       6.3    -0.999    0.0539
         *Z       ---       ---  1.19e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853021, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.85964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442826
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.92     0.575     0.119     0.881
          1      61.8      5.88         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.575   -0.0705    -0.998
          1      2.74      5.88    -0.998    0.0705
         *Z       ---       ---  1.19e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.860016, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011203, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012987, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442826
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.04     0.494     0.142     0.858
          1      42.5      5.27         1   -0.0455
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0903     0.494   -0.0863    -0.996
          1      1.88      5.27    -0.996    0.0863
         *Z       ---       ---  1.19e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01301, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001534
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027251
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15154
         W1a Well: minimal relaxation eigenvalue = 0.0431646
         W1a Well: maximal relaxation eigenvalue = 21.3242
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001553
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178405
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050888
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069205
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204121
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698982, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 5.99e+04 5.76e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.01   1.9e-19  1.47e-32
        W1b      0.25         1  4.75e-20  3.68e-33
         P1  5.26e+18  2.11e+19         1  7.75e-14
         P2  6.78e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.05  7.09e-23   5.5e-36
        W1b     0.247         1  1.75e-23  1.36e-36
         P1  1.41e+22  5.72e+22         1  7.75e-14
         P2  1.82e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.70266, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07532, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0431646
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      22.7      1.61    0.0429     0.957
          1       772      7.95         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.98      1.61   -0.0224        -1
          1      33.3      7.95        -1    0.0224
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07907, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16639, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25121, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0431646
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.49     0.919    0.0789     0.921
          1       176      7.18         1   -0.0214
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.323     0.919   -0.0428    -0.999
          1       7.6      7.18    -0.999    0.0428
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25352, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0796, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166198, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25156, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0431646
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.8     0.734     0.106     0.894
          1       100       6.9         1   -0.0295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.734    -0.059    -0.998
          1      4.32       6.9    -0.998     0.059
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25413, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.905668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916161, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0431646
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.17     0.605     0.138     0.862
          1      61.2      6.49         1   -0.0399
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.605   -0.0796    -0.997
          1      2.64      6.49    -0.997    0.0796
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010974, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0431646
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.17     0.522     0.169     0.831
          1      40.7       5.9         1   -0.0508
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0938     0.522    -0.101    -0.995
          1      1.76       5.9    -0.995     0.101
         *Z       ---       ---   1.2e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01278, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001416
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03193
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151201
         W1a Well: minimal relaxation eigenvalue = 0.0436029
         W1a Well: maximal relaxation eigenvalue = 13.4685
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1474 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001653
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184766
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049823
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069304
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.199442
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703261, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1474  -1228 1.03e+05 6.61e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  1.82e-19  2.47e-32
        W1b     0.226         1  4.12e-20  5.59e-33
         P1  5.49e+18  2.42e+19         1  1.35e-13
         P2  4.05e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.47  6.88e-23  9.31e-36
        W1b     0.224         1  1.54e-23  2.08e-36
         P1  1.45e+22   6.5e+22         1  1.35e-13
         P2  1.07e+35   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.706877, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178465, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26404, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436029
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      24.4       1.7     0.046     0.954
          1       845      8.32         1   -0.0109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.06       1.7    -0.023        -1
          1      36.8      8.32        -1     0.023
         *Z       ---       ---  1.23e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26645, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0729, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165256, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24367, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436029
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.06     0.983    0.0823     0.918
          1       198      7.66         1   -0.0203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.351     0.983   -0.0426    -0.999
          1      8.63      7.66    -0.999    0.0426
         *Z       ---       ---  1.23e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07553, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24647, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436029
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.2     0.793     0.107     0.893
          1       115      7.31         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.227     0.793   -0.0572    -0.998
          1      5.03      7.31    -0.998    0.0572
         *Z       ---       ---  1.23e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24877, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.940598, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.008432, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.953714, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436029
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.48     0.661     0.135     0.865
          1      72.8      6.81         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.661   -0.0743    -0.997
          1      3.17      6.81    -0.997    0.0743
         *Z       ---       ---  1.23e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.95409, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010985, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001744, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436029
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.44     0.573      0.16      0.84
          1      49.9      6.09         1   -0.0433
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.106     0.573   -0.0906    -0.996
          1      2.18      6.09    -0.996    0.0906
         *Z       ---       ---  1.23e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012795, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001511
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000352
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029993
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156089
         W1a Well: minimal relaxation eigenvalue = 0.0424441
         W1a Well: maximal relaxation eigenvalue = 22.2428
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001591
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.186602
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050081
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065989
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.203347
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.709374, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 6.29e+04 7.57e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.85  1.75e-19  4.06e-32
        W1b     0.206         1   3.6e-20  8.37e-33
         P1  5.73e+18  2.78e+19         1  2.32e-13
         P2  2.46e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.91  6.68e-23  1.55e-35
        W1b     0.204         1  1.36e-23  3.16e-36
         P1   1.5e+22  7.36e+22         1  2.32e-13
         P2  6.44e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.713107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08942, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190668, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29357, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424441
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.7      1.84    0.0498      0.95
          1       922      9.21         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      1.84   -0.0238        -1
          1      39.1      9.21        -1    0.0238
         *Z       ---       ---  1.26e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29612, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08922, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167789, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26276, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424441
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.83      1.05    0.0906     0.909
          1       209      8.32         1   -0.0205
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.375      1.05   -0.0452    -0.999
          1      8.88      8.32    -0.999    0.0452
         *Z       ---       ---  1.26e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26509, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08981, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26406, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424441
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.67     0.842      0.12      0.88
          1       119      7.99         1   -0.0282
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.241     0.842    -0.062    -0.998
          1      5.03      7.99    -0.998     0.062
         *Z       ---       ---  1.26e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26641, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.874815, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882689, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424441
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.75     0.699     0.155     0.845
          1      72.2      7.51         1   -0.0379
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.159     0.699   -0.0832    -0.997
          1      3.07      7.51    -0.997    0.0832
         *Z       ---       ---  1.26e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424441
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.58     0.607     0.189     0.811
          1      47.8      6.82         1   -0.0481
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.607    -0.105    -0.994
          1      2.03      6.82    -0.994     0.105
         *Z       ---       ---  1.26e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012901, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001386
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00034
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027676
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149088
         W1a Well: minimal relaxation eigenvalue = 0.0429951
         W1a Well: maximal relaxation eigenvalue = 13.939
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001721
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178292
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049473
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071043
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.19707
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.68952, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.13e+05 8.66e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.31  1.66e-19   6.5e-32
        W1b     0.188         1  3.12e-20  1.22e-32
         P1  6.03e+18   3.2e+19         1  3.92e-13
         P2  1.54e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.38  6.49e-23  2.54e-35
        W1b     0.186         1  1.21e-23  4.73e-36
         P1  1.54e+22  8.29e+22         1  3.92e-13
         P2  3.93e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.692917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06035, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187128, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25683, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429951
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.4      1.96    0.0529     0.947
          1       998      9.73         1   -0.0105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.96   -0.0242        -1
          1      42.9      9.73        -1    0.0242
         *Z       ---       ---  1.28e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25926, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06155, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163976, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23121, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429951
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.43      1.13    0.0934     0.907
          1       234       8.9         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.405      1.13   -0.0446    -0.999
          1      10.1       8.9    -0.999    0.0446
         *Z       ---       ---  1.28e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06131, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164117, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23109, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429951
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.11     0.913     0.121     0.879
          1       136      8.49         1   -0.0258
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.263     0.913   -0.0594    -0.998
          1      5.86      8.49    -0.998    0.0594
         *Z       ---       ---  1.28e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23338, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.972344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.013071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990114, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429951
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.11     0.764     0.151     0.849
          1      86.2      7.87         1   -0.0334
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.177     0.764   -0.0767    -0.997
          1       3.7      7.87    -0.997    0.0767
         *Z       ---       ---  1.28e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990526, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010908, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012748, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429951
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.9     0.665     0.177     0.823
          1        59         7         1   -0.0405
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.125     0.665   -0.0929    -0.996
          1      2.54         7    -0.996    0.0929
         *Z       ---       ---  1.28e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012778, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001505
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00034
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029384
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153585
         W1a Well: minimal relaxation eigenvalue = 0.0416162
         W1a Well: maximal relaxation eigenvalue = 23.3999
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001532
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175085
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048812
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072762
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202087
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698565, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 6.71e+04  9.9e+14
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       5.8   1.6e-19  1.04e-31
        W1b     0.172         1  2.75e-20  1.79e-32
         P1  6.26e+18  3.63e+19         1  6.49e-13
         P2  9.64e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.88  6.32e-23  4.11e-35
        W1b      0.17         1  1.08e-23  6.99e-36
         P1  1.58e+22  9.29e+22         1  6.49e-13
         P2  2.43e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.702487, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07026, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187175, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416162
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.9      2.04    0.0581     0.942
          1   1.1e+03      10.8         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.33      2.04   -0.0256        -1
          1      45.8      10.8        -1    0.0256
         *Z       ---       ---  1.31e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27462, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06875, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23882, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416162
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.5      1.18     0.104     0.896
          1       249      9.71         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.437      1.18   -0.0481    -0.999
          1      10.4      9.71    -0.999    0.0481
         *Z       ---       ---  1.31e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24117, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164885, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23756, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416162
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.75     0.949     0.137     0.863
          1       141      9.29         1   -0.0273
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.281     0.949   -0.0655    -0.998
          1      5.85      9.29    -0.998    0.0655
         *Z       ---       ---  1.31e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23992, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.941041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.009243, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416162
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.46     0.795     0.175     0.825
          1      85.3       8.7         1   -0.0365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.795   -0.0875    -0.996
          1      3.55       8.7    -0.996    0.0875
         *Z       ---       ---  1.31e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012721, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416162
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.08     0.698     0.212     0.788
          1      56.1      7.86         1   -0.0462
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.128     0.698    -0.111    -0.994
          1      2.34      7.86    -0.994     0.111
         *Z       ---       ---  1.31e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012745, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001454
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000335
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029078
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15018
         W1a Well: minimal relaxation eigenvalue = 0.0424678
         W1a Well: maximal relaxation eigenvalue = 13.0226
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1472 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001531
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.168853
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047938
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076564
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196752
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.686672, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1472  -1295 4.12e+04 1.13e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.32  1.52e-19  1.61e-31
        W1b     0.158         1  2.41e-20  2.55e-32
         P1  6.57e+18  4.15e+19         1  1.06e-12
         P2   6.2e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.4  6.17e-23  6.53e-35
        W1b     0.156         1  9.63e-24  1.02e-35
         P1  1.62e+22  1.04e+23         1  1.06e-12
         P2  1.53e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.690335, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03853, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173944, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23744, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424678
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      33.8      2.15    0.0614     0.939
          1  1.19e+03      11.4         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      2.15    -0.026        -1
          1      50.5      11.4        -1     0.026
         *Z       ---       ---  1.33e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23988, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04025, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160597, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20642, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424678
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2      1.26     0.106     0.894
          1       280      10.3         1   -0.0187
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.475      1.26   -0.0469    -0.999
          1      11.9      10.3    -0.999    0.0469
         *Z       ---       ---  1.33e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20457, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424678
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.26      1.03     0.135     0.865
          1       164      9.79         1   -0.0246
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.308      1.03   -0.0617    -0.998
          1      6.96      9.79    -0.998    0.0617
         *Z       ---       ---  1.33e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03253, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05473, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424678
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.9     0.869     0.165     0.835
          1       104      9.01         1   -0.0313
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.208     0.869   -0.0786    -0.997
          1      4.41      9.01    -0.997    0.0786
         *Z       ---       ---  1.33e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05522, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013698, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001681, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0424678
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.48     0.763     0.192     0.808
          1      71.2      7.94         1   -0.0376
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.148     0.763   -0.0941    -0.996
          1      3.02      7.94    -0.996    0.0941
         *Z       ---       ---  1.33e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015671, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001472
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000342
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032341
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150513
         W1a Well: minimal relaxation eigenvalue = 0.0412852
         W1a Well: maximal relaxation eigenvalue = 22.5125
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001579
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.176188
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048779
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069544
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196708
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.691339, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250 7.82e+04 1.29e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.87  1.47e-19   2.5e-31
        W1b     0.146         1  2.14e-20  3.64e-32
         P1   6.8e+18  4.67e+19         1   1.7e-12
         P2     4e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.96  6.03e-23  1.03e-34
        W1b     0.144         1  8.66e-24  1.47e-35
         P1  1.66e+22  1.15e+23         1   1.7e-12
         P2  9.75e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.69503, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04678, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180585, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25232, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412852
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      37.6      2.25    0.0665     0.933
          1  1.31e+03      12.5         1   -0.0104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.55      2.25   -0.0272        -1
          1      54.1      12.5        -1    0.0272
         *Z       ---       ---  1.36e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25474, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16105, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21448, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412852
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.4      1.31     0.117     0.883
          1       298      11.2         1   -0.0192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.51      1.31   -0.0503    -0.999
          1      12.3      11.2    -0.999    0.0503
         *Z       ---       ---  1.36e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21686, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04724, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161641, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21463, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412852
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.94      1.07     0.151     0.849
          1       168      10.6         1   -0.0259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.328      1.07   -0.0678    -0.998
          1      6.94      10.6    -0.998    0.0678
         *Z       ---       ---  1.36e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21695, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00468, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412852
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.27     0.905     0.191     0.809
          1       102      9.93         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.218     0.905   -0.0896    -0.996
          1      4.22      9.93    -0.996    0.0896
         *Z       ---       ---  1.36e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02538, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012124, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001676, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0412852
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.65     0.801     0.228     0.772
          1      67.3      8.93         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.151     0.801    -0.112    -0.994
          1      2.78      8.93    -0.994     0.112
         *Z       ---       ---  1.36e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014026, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001483
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000342
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030375
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150905
         W1a Well: minimal relaxation eigenvalue = 0.0418737
         W1a Well: maximal relaxation eigenvalue = 14.7053
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001634
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.173704
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048985
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068657
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194018
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.683633, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 4.03e+04 1.46e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.45  1.42e-19  3.83e-31
        W1b     0.134         1  1.91e-20  5.14e-32
         P1  7.03e+18  5.23e+19         1  2.69e-12
         P2  2.61e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.54   5.9e-23  1.59e-34
        W1b     0.133         1  7.82e-24   2.1e-35
         P1   1.7e+22  1.28e+23         1  2.69e-12
         P2   6.3e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.687319, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04941, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0418737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      40.1      2.37    0.0706     0.929
          1  1.41e+03      13.1         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.68      2.37   -0.0278        -1
          1      58.8      13.1        -1    0.0278
         *Z       ---       ---   1.4e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04911, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161628, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0418737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2       1.4      0.12      0.88
          1       329      11.9         1   -0.0182
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.554       1.4   -0.0497    -0.999
          1      13.8      11.9    -0.999    0.0497
         *Z       ---       ---   1.4e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2187, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05087, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160685, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2172, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0418737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.58      1.15     0.151     0.849
          1       192      11.2         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.359      1.15   -0.0651    -0.998
          1      8.03      11.2    -0.998    0.0651
         *Z       ---       ---   1.4e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21984, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.999051, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014727, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01846, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0418737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.78      0.98     0.185     0.815
          1       121      10.4         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.242      0.98   -0.0826    -0.997
          1      5.06      10.4    -0.997    0.0826
         *Z       ---       ---   1.4e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01891, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001674, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0418737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.11     0.867     0.213     0.787
          1      82.4       9.1         1   -0.0364
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.172     0.867   -0.0988    -0.995
          1      3.45       9.1    -0.995    0.0988
         *Z       ---       ---   1.4e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013532, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001447
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000339
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02742
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146732
         W1a Well: minimal relaxation eigenvalue = 0.0409896
         W1a Well: maximal relaxation eigenvalue = 21.6489
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001549
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.167122
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04813
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067115
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.190047
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.663443, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 9.57e+04 1.66e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.06  1.36e-19  5.73e-31
        W1b     0.124         1  1.69e-20  7.11e-32
         P1  7.33e+18  5.91e+19         1   4.2e-12
         P2  1.75e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.16  5.78e-23  2.43e-34
        W1b     0.123         1  7.08e-24  2.98e-35
         P1  1.73e+22  1.41e+23         1   4.2e-12
         P2  4.12e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.667157, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02828, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175904, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22682, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409896
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      42.8      2.63    0.0735     0.927
          1  1.53e+03      14.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      2.63   -0.0279        -1
          1      62.9      14.5        -1    0.0279
         *Z       ---       ---  1.42e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22919, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02957, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15961, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19473, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409896
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.2      1.52     0.127     0.873
          1       350      12.9         1   -0.0181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.58      1.52   -0.0513    -0.999
          1      14.3      12.9    -0.999    0.0513
         *Z       ---       ---  1.42e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19711, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02787, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409896
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.15      1.24     0.163     0.837
          1       199      12.3         1   -0.0242
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.375      1.24   -0.0686    -0.998
          1      8.15      12.3    -0.998    0.0686
         *Z       ---       ---  1.42e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19578, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01996, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.055304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409896
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.11      1.05     0.204     0.796
          1       121      11.4         1   -0.0317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.251      1.05   -0.0897    -0.996
          1      4.98      11.4    -0.996    0.0897
         *Z       ---       ---  1.42e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08083, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001685, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018834, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409896
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.28     0.926     0.241     0.759
          1      80.4      10.2         1   -0.0394
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.175     0.926    -0.111    -0.994
          1      3.29      10.2    -0.994     0.111
         *Z       ---       ---  1.42e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01889, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001527
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000348
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029725
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165141
         W1a Well: minimal relaxation eigenvalue = 0.0414214
         W1a Well: maximal relaxation eigenvalue = 13.3435
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1467 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001649
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.177706
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04736
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069398
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.206023
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.712107, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1467  -1282 5.05e+04 1.89e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.69  1.32e-19  8.56e-31
        W1b     0.115         1  1.52e-20  9.85e-32
         P1  7.55e+18  6.57e+19         1  6.47e-12
         P2  1.17e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  5.67e-23  3.67e-34
        W1b     0.114         1  6.44e-24  4.16e-35
         P1  1.76e+22  1.55e+23         1  6.47e-12
         P2  2.73e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.715657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02088, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181261, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20809, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0414214
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      46.5      2.68    0.0787     0.921
          1  1.68e+03      15.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.93      2.68    -0.029        -1
          1      69.5      15.2        -1     0.029
         *Z       ---       ---  1.46e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21051, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03561, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159757, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0414214
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.4      1.59     0.131     0.869
          1       395      13.8         1   -0.0173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.638      1.59   -0.0509    -0.999
          1      16.3      13.8    -0.999    0.0509
         *Z       ---       ---  1.46e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03592, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159734, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20123, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0414214
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        10      1.31     0.163     0.837
          1       231      12.9         1   -0.0224
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.415      1.31   -0.0659    -0.998
          1      9.56      12.9    -0.998    0.0659
         *Z       ---       ---  1.46e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03216, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.047616, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08478, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0414214
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.8      1.12     0.196     0.804
          1       146      11.8         1   -0.0281
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.282      1.12   -0.0826    -0.997
          1      6.05      11.8    -0.997    0.0826
         *Z       ---       ---  1.46e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017394, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019383, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0414214
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.87     0.995     0.224     0.776
          1      99.8      10.2         1   -0.0333
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.202     0.995   -0.0976    -0.995
          1      4.13      10.2    -0.995    0.0976
         *Z       ---       ---  1.46e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019432, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001495
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000338
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030402
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160475
         W1a Well: minimal relaxation eigenvalue = 0.0409221
         W1a Well: maximal relaxation eigenvalue = 17.7487
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001645
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.164644
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045802
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07801
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201692
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.697605, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.27e+05 2.14e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.36  1.27e-19  1.25e-30
        W1b     0.107         1  1.36e-20  1.34e-31
         P1  7.86e+18  7.35e+19         1  9.83e-12
         P2  7.99e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.48  5.57e-23  5.47e-34
        W1b     0.106         1  5.87e-24  5.78e-35
         P1   1.8e+22   1.7e+23         1  9.83e-12
         P2  1.83e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.701202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.994466, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175207, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1842, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        51      2.79     0.084     0.916
          1  1.81e+03      16.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.79     -0.03        -1
          1      74.1      16.6        -1      0.03
         *Z       ---       ---  1.49e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154537, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16795, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.8      1.66      0.14      0.86
          1       420      14.8         1   -0.0175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.686      1.66   -0.0533    -0.999
          1      17.2      14.8    -0.999    0.0533
         *Z       ---       ---  1.49e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17023, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.995287, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9      1.37     0.176     0.824
          1       242        14         1   -0.0229
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.444      1.37   -0.0698    -0.998
          1      9.91        14    -0.998    0.0698
         *Z       ---       ---  1.49e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.15863, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00576, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146743, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15753, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.3      1.17     0.214     0.786
          1       151      12.8         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299      1.17   -0.0888    -0.996
          1      6.16      12.8    -0.996    0.0888
         *Z       ---       ---  1.49e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.15816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.029106, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.031151, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.18      1.05     0.248     0.752
          1       101      11.2         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.212      1.05    -0.107    -0.994
          1      4.13      11.2    -0.994     0.107
         *Z       ---       ---  1.49e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.031209, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001367
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000333
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028011
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154634
         W1a Well: minimal relaxation eigenvalue = 0.0409872
         W1a Well: maximal relaxation eigenvalue = 11.9481
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1452 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001514
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.169744
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045678
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079667
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197392
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.690765, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1452  -1260 6.78e+04 2.42e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.24e-19  1.83e-30
        W1b    0.0994         1  1.23e-20  1.82e-31
         P1  8.08e+18  8.12e+19         1  1.48e-11
         P2  5.47e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2  5.47e-23  8.08e-34
        W1b    0.0982         1  5.38e-24  7.94e-35
         P1  1.83e+22  1.86e+23         1  1.48e-11
         P2  1.24e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.694514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.99342, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178625, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409872
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      54.9      2.93    0.0881     0.912
          1     2e+03      17.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.25      2.93   -0.0305        -1
          1      82.1      17.4        -1    0.0305
         *Z       ---       ---  1.52e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19152, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00634, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.156173, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16799, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409872
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.1      1.76     0.143     0.857
          1       473      15.6         1   -0.0166
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.744      1.76   -0.0526    -0.999
          1      19.4      15.6    -0.999    0.0526
         *Z       ---       ---  1.52e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155146, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17084, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409872
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.8      1.46     0.176     0.824
          1       278      14.6         1   -0.0213
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.485      1.46   -0.0673    -0.998
          1      11.4      14.6    -0.998    0.0673
         *Z       ---       ---  1.52e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17318, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01205, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14238, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409872
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.07      1.26     0.209     0.791
          1       176      13.2         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.331      1.26   -0.0831    -0.997
          1      7.23      13.2    -0.997    0.0831
         *Z       ---       ---  1.52e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16008, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.028168, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001661, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.030222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0409872
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.83      1.13     0.236     0.764
          1       121      11.4         1   -0.0307
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.239      1.13   -0.0969    -0.995
          1      4.95      11.4    -0.995    0.0969
         *Z       ---       ---  1.52e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.03028, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001485
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000338
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027913
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158013
         W1a Well: minimal relaxation eigenvalue = 0.0402989
         W1a Well: maximal relaxation eigenvalue = 19.4947
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001482
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.175373
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.044989
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06744
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194977
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.685309, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.22e+05 2.73e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.21e-19  2.64e-30
        W1b    0.0927         1  1.12e-20  2.45e-31
         P1  8.29e+18  8.94e+19         1  2.19e-11
         P2  3.78e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.9  5.39e-23  1.18e-33
        W1b    0.0916         1  4.93e-24  1.08e-34
         P1  1.86e+22  2.03e+23         1  2.19e-11
         P2  8.47e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.688703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180811, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0402989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      58.1      3.26    0.0911     0.909
          1  2.13e+03      19.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.34      3.26   -0.0305        -1
          1      85.9      19.3        -1    0.0305
         *Z       ---       ---  1.56e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21747, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0214, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158145, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18486, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0402989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.2      1.91     0.152     0.848
          1       491        17         1   -0.0166
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.773      1.91   -0.0544    -0.999
          1      19.8        17    -0.999    0.0544
         *Z       ---       ---  1.56e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01998, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158382, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18391, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0402989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.4      1.57      0.19      0.81
          1       281      16.1         1   -0.0218
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.501      1.57   -0.0713    -0.997
          1      11.3      16.1    -0.997    0.0713
         *Z       ---       ---  1.56e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18623, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.084956, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11146, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0402989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.39      1.34     0.231     0.769
          1       173      14.7         1   -0.0279
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.338      1.34   -0.0911    -0.996
          1      6.96      14.7    -0.996    0.0911
         *Z       ---       ---  1.56e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.02104, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001665, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023062, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0402989
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.95       1.2     0.267     0.733
          1       115      12.9         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.24       1.2     -0.11    -0.994
          1      4.63      12.9    -0.994      0.11
         *Z       ---       ---  1.56e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023117, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001421
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000325
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032749
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153194
         W1a Well: minimal relaxation eigenvalue = 0.0376708
         W1a Well: maximal relaxation eigenvalue = 23.6707
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001764
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.165622
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04333
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057457
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.188852
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.657846, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301 3.84e+04 8.68e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      19.7  9.44e-20  6.21e-29
        W1b    0.0507         1  4.78e-21  3.15e-30
         P1  1.06e+19  2.09e+20         1  6.58e-10
         P2  1.61e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        20  4.83e-23  3.18e-32
        W1b      0.05         1  2.41e-24  1.59e-33
         P1  2.07e+22  4.14e+23         1  6.58e-10
         P2  3.15e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.661875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.962197, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16793, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15344, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0376708
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       128      5.13     0.143     0.857
          1  4.82e+03      36.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.83      5.13   -0.0376    -0.999
          1       181      36.9    -0.999    0.0376
         *Z       ---       ---  1.99e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.15579, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.970436, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151355, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12736, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0376708
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.5      3.12     0.222     0.778
          1  1.09e+03      32.2         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.56      3.12    -0.064    -0.998
          1      41.2      32.2    -0.998     0.064
         *Z       ---       ---  1.99e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12969, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.974487, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151111, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0376708
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.8      2.62     0.268     0.732
          1       618      29.9         1   -0.0186
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.01      2.62   -0.0823    -0.997
          1      23.3      29.9    -0.997    0.0823
         *Z       ---       ---  1.99e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13336, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.972713, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151234, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1293, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0376708
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        18      2.31     0.317     0.683
          1       372      26.9         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.677      2.31    -0.104    -0.995
          1        14      26.9    -0.995     0.104
         *Z       ---       ---  1.99e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13162, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.170439, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.176268, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0376708
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.7      2.12     0.359     0.641
          1       240      22.7         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.479      2.12    -0.125    -0.992
          1      9.03      22.7    -0.992     0.125
         *Z       ---       ---  1.99e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.176633, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001449
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00033
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03008
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154749
         W1a Well: minimal relaxation eigenvalue = 0.036618
         W1a Well: maximal relaxation eigenvalue = 18.3224
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001778
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.163339
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041366
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062687
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.181683
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.650068, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 9.57e+04 2.49e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      31.7  8.01e-20  7.39e-28
        W1b    0.0316         1  2.53e-21  2.33e-29
         P1  1.25e+19  3.96e+20         1  9.23e-09
         P2  1.35e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      32.1  4.61e-23  4.25e-31
        W1b    0.0312         1  1.44e-24  1.33e-32
         P1  2.17e+22  6.96e+23         1  9.23e-09
         P2  2.35e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.653581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.913979, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164973, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09075, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.036618
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       261       8.1     0.192     0.808
          1  9.99e+03      64.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.55       8.1   -0.0423    -0.999
          1       366      64.3    -0.999    0.0423
         *Z       ---       ---  2.55e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09313, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144631, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07921, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.036618
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      83.8      5.08     0.276     0.724
          1   2.3e+03      53.6         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.07      5.08   -0.0676    -0.998
          1      84.4      53.6    -0.998    0.0676
         *Z       ---       ---  2.55e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08152, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144692, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07954, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.036618
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      54.5      4.36      0.32      0.68
          1  1.31e+03      47.7         1   -0.0149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0         2      4.36   -0.0834    -0.997
          1        48      47.7    -0.997    0.0834
         *Z       ---       ---  2.55e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08184, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929987, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144944, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08016, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.036618
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      37.4       3.9     0.363     0.637
          1       791        40         1   -0.0179
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.37       3.9      -0.1    -0.995
          1        29        40    -0.995       0.1
         *Z       ---       ---  2.55e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08249, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.390473, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001558, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.396154, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.036618
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      27.3      3.59     0.397     0.603
          1       501      30.5         1   -0.0208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.998      3.59    -0.116    -0.993
          1      18.3      30.5    -0.993     0.116
         *Z       ---       ---  2.55e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.39651, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 12 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001412
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000334
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029267
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139603
         W1a Well: minimal relaxation eigenvalue = 0.0340907
         W1a Well: maximal relaxation eigenvalue = 26.2707
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002016
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154319
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041301
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073224
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.178054
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.632466, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 7.91e+04 6.55e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      46.4  7.17e-20  5.44e-27
        W1b    0.0216         1  1.55e-21  1.17e-28
         P1   1.4e+19  6.47e+20         1  7.59e-08
         P2  1.84e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      46.9  4.59e-23  3.48e-30
        W1b    0.0213         1  9.77e-25  7.42e-32
         P1  2.18e+22  1.02e+24         1  7.59e-08
         P2  2.87e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.635857, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.892494, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161597, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06587, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340907
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       500      14.1     0.228     0.772
          1  1.94e+04       101         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.1      14.1   -0.0432    -0.999
          1       662       101    -0.999    0.0432
         *Z       ---       ---  3.28e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00186695
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00074, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07099, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.905127, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05192, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340907
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       156      8.66     0.315     0.685
          1   4.3e+03      80.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.32      8.66   -0.0675    -0.998
          1       146      80.8    -0.998    0.0675
         *Z       ---       ---  3.28e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05424, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.907789, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05445, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340907
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       100      7.38     0.363     0.637
          1  2.35e+03      70.6         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.41      7.38   -0.0836    -0.997
          1      80.1      70.6    -0.997    0.0836
         *Z       ---       ---  3.28e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05677, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.908471, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340907
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      67.4      6.57     0.412     0.588
          1  1.34e+03      57.9         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       2.3      6.57    -0.103    -0.995
          1      45.7      57.9    -0.995     0.103
         *Z       ---       ---  3.28e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.48896, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001498, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.494565, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340907
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.1      6.08     0.456     0.544
          1       795      42.8         1   -0.0181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.64      6.08    -0.122    -0.992
          1      27.1      42.8    -0.992     0.122
         *Z       ---       ---  3.28e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.494938, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001363
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000321
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028229
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144152
         W1a Well: minimal relaxation eigenvalue = 0.0314793
         W1a Well: maximal relaxation eigenvalue = 29.4513
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002018
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.157134
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039736
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063778
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.168597
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.61802, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237 9.07e+04  1.6e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      63.4  6.66e-20  2.83e-26
        W1b    0.0158         1  1.05e-21  4.46e-28
         P1   1.5e+19  9.52e+20         1  4.24e-07
         P2  3.54e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      64.2  4.69e-23  1.99e-29
        W1b    0.0156         1  7.31e-25   3.1e-31
         P1  2.13e+22  1.37e+24         1  4.24e-07
         P2  5.02e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.621598, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.867516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02265, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+03      20.3     0.277     0.723
          1  3.45e+04       122         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.8      20.3    -0.048    -0.999
          1  1.08e+03       122    -0.999     0.048
         *Z       ---       ---  4.21e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00230144
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000614, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02643, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.877569, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137752, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02045, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       321      12.9     0.371     0.629
          1  7.49e+03      92.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.1      12.9   -0.0738    -0.997
          1       236      92.3    -0.997    0.0738
         *Z       ---       ---  4.21e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02278, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880979, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137874, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02398, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       205      11.3     0.421     0.579
          1  4.01e+03      77.5         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.44      11.3   -0.0908    -0.996
          1       126      77.5    -0.996    0.0908
         *Z       ---       ---  4.21e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.878256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137926, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02126, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       137      10.3     0.471     0.529
          1  2.21e+03      59.9         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       4.3      10.3    -0.111    -0.994
          1      69.6      59.9    -0.994     0.111
         *Z       ---       ---  4.21e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.638689, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001481, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.644193, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      96.6      9.77     0.517     0.483
          1  1.25e+03      40.6         1   -0.0169
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.04      9.77    -0.133    -0.991
          1      39.3      40.6    -0.991     0.133
         *Z       ---       ---  4.21e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.644562, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001299
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000319
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031427
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138277
         W1a Well: minimal relaxation eigenvalue = 0.0314723
         W1a Well: maximal relaxation eigenvalue = 27.8197
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002536
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.142242
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040378
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067576
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.163609
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.600549, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 1.12e+04 3.69e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      82.3  6.36e-20  1.13e-25
        W1b    0.0122         1  7.73e-22  1.37e-27
         P1  1.57e+19  1.29e+21         1  1.78e-06
         P2  8.86e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      83.3  4.89e-23  8.68e-29
        W1b     0.012         1  5.87e-25  1.04e-30
         P1  2.05e+22   1.7e+24         1  1.78e-06
         P2  1.15e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.604206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.84489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15318, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01017, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.88e+03      31.4     0.313     0.687
          1  4.93e+04       118         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.3      31.4   -0.0502    -0.999
          1  1.55e+03       118    -0.999    0.0502
         *Z       ---       ---  5.39e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00251752
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000625, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01391, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862948, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.134618, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0025, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0314723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       573      20.3     0.405     0.595
          1  1.05e+04      83.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        18      20.3   -0.0749    -0.997
          1       330      83.7    -0.997    0.0749
         *Z       ---       ---  5.39e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00560805
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000571, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00607, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.86319, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13523, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00348, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       366      17.8     0.453     0.547
          1  5.52e+03      66.7         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.5      17.8    -0.091    -0.996
          1       174      66.7    -0.996     0.091
         *Z       ---       ---  5.39e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00622, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862762, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13479, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00256, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       245      16.3     0.502     0.498
          1  2.95e+03      47.9         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      7.73      16.3     -0.11    -0.994
          1      92.9      47.9    -0.994      0.11
         *Z       ---       ---  5.39e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00488, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.705886, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003401, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.713271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       175      15.4     0.547     0.453
          1   1.6e+03      29.5         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.51      15.4    -0.132    -0.991
          1      50.4      29.5    -0.991     0.132
         *Z       ---       ---  5.39e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.713638, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001317
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000329
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028254
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139847
         W1a Well: minimal relaxation eigenvalue = 0.0314569
         W1a Well: maximal relaxation eigenvalue = 24.1215
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00216
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.142771
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038974
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058901
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.157372
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.582078, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 3.26e+04 8.06e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       103  6.19e-20  3.68e-25
        W1b   0.00974         1  6.03e-22  3.58e-27
         P1  1.62e+19  1.66e+21         1  5.94e-06
         P2  2.72e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       104  5.16e-23  3.06e-28
        W1b   0.00962         1  4.96e-25  2.95e-30
         P1  1.94e+22  2.01e+24         1  5.94e-06
         P2  3.26e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.585511, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829316, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.153056, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.13e+03      54.1     0.333     0.667
          1   6.2e+04      98.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.4      54.1   -0.0492    -0.999
          1  1.95e+03      98.5    -0.999    0.0492
         *Z       ---       ---  6.87e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.0024177
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000624, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00478, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849228, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132531, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987064, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       934      34.7     0.414     0.586
          1  1.29e+04      65.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.4      34.7   -0.0697    -0.998
          1       406      65.4    -0.998    0.0697
         *Z       ---       ---  6.87e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.995 0.005
         well projection threshold  = 0.2
         partition projection error = 0.00485357
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000553, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990672, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849407, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133359, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       595        30     0.457     0.543
          1  6.67e+03      49.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.7        30   -0.0827    -0.997
          1       210      49.8    -0.997    0.0827
         *Z       ---       ---  6.87e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990078, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.848573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133356, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987207, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       401      26.8     0.501     0.499
          1  3.48e+03      33.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.6      26.8   -0.0985    -0.995
          1       109      33.7    -0.995    0.0985
         *Z       ---       ---  6.87e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.989544, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765575, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00807, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.777592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0314569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       288      24.4     0.546     0.454
          1  1.83e+03      19.5         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.05      24.4    -0.118    -0.993
          1      57.5      19.5    -0.993     0.118
         *Z       ---       ---  6.87e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.777957, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.4e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001333
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00032
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026783
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13787
         W1a Well: minimal relaxation eigenvalue = 0.00757502
         W1a Well: maximal relaxation eigenvalue = 42.3936
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002442
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138914
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037965
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062604
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152517
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.572995, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.03e+05 1.68e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       124  6.11e-20  1.02e-24
        W1b   0.00806         1  4.93e-22  8.23e-27
         P1  1.64e+19  2.03e+21         1  1.67e-05
         P2  9.79e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       126  5.49e-23  9.17e-28
        W1b   0.00796         1  4.37e-25   7.3e-30
         P1  1.82e+22  2.29e+24         1  1.67e-05
         P2  1.09e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.576599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.981371, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00757502
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.35e+04      73.9     0.387     0.613
          1  2.94e+05      69.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       178      73.9   -0.0565    -0.998
          1  2.23e+03      69.3    -0.998    0.0565
         *Z       ---       ---  8.69e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.983655, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.832986, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131671, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.969571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00757502
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   6.8e+03      48.3     0.484     0.516
          1  6.03e+04      44.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.5      48.3   -0.0838    -0.996
          1       457      44.1    -0.996    0.0838
         *Z       ---       ---  8.69e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.993 0.007
         well projection threshold  = 0.2
         partition projection error = 0.00702996
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000622, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973234, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.833921, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970262, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00757502
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.19e+03      42.9     0.536     0.464
          1  3.07e+04      34.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      31.7      42.9    -0.103    -0.995
          1       233      34.7    -0.995     0.103
         *Z       ---       ---  8.69e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.010657
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000557, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973791, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.834289, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131045, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00757502
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.68e+03      40.1     0.593     0.407
          1  1.57e+04      24.9         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      20.3      40.1     -0.13    -0.992
          1       119      24.9    -0.992      0.13
         *Z       ---       ---  8.69e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.983 0.017
         well projection threshold  = 0.2
         partition projection error = 0.0167784
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000534, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973874, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.831564, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.012502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.848079, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00757502
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.8e+03      39.3     0.651     0.349
          1  8.12e+03      15.8         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.6      39.3    -0.165    -0.986
          1      61.5      15.8    -0.986     0.165
         *Z       ---       ---  8.69e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.848539, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000146
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.003161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000312
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027319
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133306
         W1a Well: minimal relaxation eigenvalue = 0.0280018
         W1a Well: maximal relaxation eigenvalue = 30.408
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002137
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138818
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03787
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056567
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152288
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.564627, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 2.45e+04 3.35e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       146   6.1e-20  2.49e-24
        W1b   0.00684         1  4.17e-22   1.7e-26
         P1  1.64e+19   2.4e+21         1  4.08e-05
         P2  4.01e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       148  5.87e-23   2.4e-27
        W1b   0.00675         1  3.97e-25  1.62e-29
         P1   1.7e+22  2.52e+24         1  4.08e-05
         P2  4.17e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.568281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819639, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148237, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.980359, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0280018
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+04       116     0.426     0.574
          1  8.54e+04      42.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       298       116   -0.0612    -0.998
          1  2.39e+03      42.5    -0.998    0.0612
         *Z       ---       ---  1.09e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.982643, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821126, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129146, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955144, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0280018
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.1e+03      76.4     0.522     0.478
          1  1.74e+04        27         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      86.9      76.4   -0.0899    -0.996
          1       487        27    -0.996    0.0899
         *Z       ---       ---  1.09e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.992 0.008
         well projection threshold  = 0.2
         partition projection error = 0.00807723
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000661, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958953, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822969, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956802, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0280018
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.94e+03        67     0.575     0.425
          1  8.81e+03      20.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.4        67    -0.111    -0.994
          1       247      20.4    -0.994     0.111
         *Z       ---       ---  1.09e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959139, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821341, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0280018
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.28e+03      60.7     0.635     0.365
          1  4.48e+03      14.2         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      35.9      60.7    -0.143     -0.99
          1       126      14.2     -0.99     0.143
         *Z       ---       ---  1.09e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958865, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822046, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.060212, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886607, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0280018
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       894      55.4     0.707     0.293
          1   2.3e+03      9.56         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        25      55.4    -0.196    -0.981
          1      64.3      9.56    -0.981     0.196
         *Z       ---       ---  1.09e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887159, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000221
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007074
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000318
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029447
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138356
         W1a Well: minimal relaxation eigenvalue = 0.0287805
         W1a Well: maximal relaxation eigenvalue = 27.47
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002152
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.141643
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037303
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056217
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.156136
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.581227, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 6.07e+04 6.45e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       169  6.17e-20   5.5e-24
        W1b   0.00592         1  3.65e-22  3.26e-26
         P1  1.62e+19  2.74e+21         1  8.91e-05
         P2  1.82e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       171  6.31e-23  5.62e-27
        W1b   0.00585         1  3.69e-25  3.29e-29
         P1  1.58e+22  2.71e+24         1  8.91e-05
         P2  1.78e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.584763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.977308, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0287805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.63e+04       191     0.482     0.518
          1  8.48e+04      34.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       469       191   -0.0713    -0.997
          1  2.44e+03      34.5    -0.997    0.0713
         *Z       ---       ---  1.37e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.979575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821576, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0287805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.64e+03       125     0.577     0.423
          1  1.72e+04      22.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       134       125    -0.104    -0.995
          1       495      22.4    -0.995     0.104
         *Z       ---       ---  1.37e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0109077
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000634, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959561, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128656, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954442, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0287805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.88e+03       108     0.633     0.367
          1  8.69e+03      17.9         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        83       108    -0.131    -0.991
          1       250      17.9    -0.991     0.131
         *Z       ---       ---  1.37e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.956773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820525, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128662, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954493, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0287805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+03      94.4     0.702     0.298
          1  4.41e+03      14.5         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.4      94.4    -0.178    -0.984
          1       127      14.5    -0.984     0.178
         *Z       ---       ---  1.37e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.956823, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82028, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.068169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892913, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0287805
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.3e+03      80.5     0.792     0.208
          1  2.27e+03      14.8         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      37.5      80.5    -0.281     -0.96
          1      65.2      14.8     -0.96     0.281
         *Z       ---       ---  1.37e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893459, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 28 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000217
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007574
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000334
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027242
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135567
         W1a Well: minimal relaxation eigenvalue = 0.012094
         W1a Well: maximal relaxation eigenvalue = 39.5025
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002173
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.1399
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037256
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04859
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146634
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.557989, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 9.89e+03  1.2e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       192  6.26e-20  1.11e-23
        W1b   0.00521         1  3.26e-22  5.78e-26
         P1   1.6e+19  3.07e+21         1  0.000177
         P2  9.03e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       194   6.8e-23   1.2e-26
        W1b   0.00515         1   3.5e-25   6.2e-29
         P1  1.47e+22  2.86e+24         1  0.000177
         P2  8.31e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.561704, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81424, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136629, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97074, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.012094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.21e+04       279     0.567     0.433
          1  2.04e+05        30         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       751       279   -0.0942    -0.996
          1  2.46e+03        30    -0.996    0.0942
         *Z       ---       ---   1.7e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948867, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.012094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.69e+04       178     0.673     0.327
          1  4.13e+04      22.2         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204       178    -0.147    -0.989
          1       499      22.2    -0.989     0.147
         *Z       ---       ---   1.7e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951101, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128015, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.012094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+04       151     0.734     0.266
          1  2.09e+04      20.9         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       122       151    -0.196    -0.981
          1       252      20.9    -0.981     0.196
         *Z       ---       ---   1.7e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951612, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947383, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.012094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.19e+03       130     0.807     0.193
          1  1.07e+04      23.7         1   -0.0218
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      74.9       130    -0.289    -0.957
          1       129      23.7    -0.957     0.289
         *Z       ---       ---   1.7e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.916 0.084
         well projection threshold  = 0.2
         partition projection error = 0.0836519
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000612, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951053, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.817132, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.10233, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924463, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.012094
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.9e+03      99.2      0.89      0.11
          1  5.61e+03      42.9         1   -0.0421
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.1      99.2    -0.504    -0.864
          1      67.8      42.9    -0.864     0.504
         *Z       ---       ---   1.7e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925016, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000259
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.009244
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001309
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028736
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132035
         W1a Well: minimal relaxation eigenvalue = 0.0276677
         W1a Well: maximal relaxation eigenvalue = 27.7695
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1468 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002134
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.140984
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037012
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.048521
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150573
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.563355, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1468  -1218 1.18e+05 2.17e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       215  6.37e-20  2.07e-23
        W1b   0.00466         1  2.97e-22  9.66e-26
         P1  1.57e+19  3.37e+21         1  0.000326
         P2  4.82e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       217  7.33e-23  2.39e-26
        W1b    0.0046         1  3.37e-25   1.1e-28
         P1  1.36e+22  2.96e+24         1  0.000326
         P2  4.19e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.566879, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801845, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141158, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.962142, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0276677
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.51e+04       382     0.699     0.301
          1  8.93e+04        36         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.25e+03       382    -0.156    -0.988
          1  2.47e+03        36    -0.988     0.156
         *Z       ---       ---   2.1e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126234, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930873, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0276677
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+04       231     0.838     0.162
          1  1.84e+04      51.8         1   -0.0242
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       349       231    -0.334    -0.943
          1       508      51.8    -0.943     0.334
         *Z       ---       ---   2.1e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.80139, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126489, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.932668, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0276677
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.52e+03       139     0.918    0.0822
          1   9.7e+03       110         1    -0.052
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       208       139    -0.606    -0.795
          1       268       110    -0.795     0.606
         *Z       ---       ---   2.1e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93504, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.802408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126315, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933537, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0276677
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.18e+03      31.6     0.969    0.0308
          1  5.81e+03       190         1    -0.147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       116      31.6    -0.907    -0.422
          1       161       190    -0.422     0.907
         *Z       ---       ---   2.1e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.935909, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.803045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12633, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.934005, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0276677
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.16e+03      6.58     0.985    0.0148
          1  3.96e+03       191         1    -0.309
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.8      6.58    -0.976    -0.216
          1       109       191    -0.216     0.976
         *Z       ---       ---   2.1e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93633, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002041
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.043247
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002316
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027397
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133993
         W1a Well: minimal relaxation eigenvalue = 0.0181993
         W1a Well: maximal relaxation eigenvalue = 35.9838
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002278
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138166
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037703
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055441
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149125
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.604635, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 3.73e+04 3.82e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       237  6.51e-20  3.65e-23
        W1b   0.00421         1  2.74e-22  1.54e-25
         P1  1.54e+19  3.65e+21         1  0.000561
         P2  2.74e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       240  7.91e-23  4.44e-26
        W1b   0.00416         1  3.29e-25  1.85e-28
         P1  1.26e+22  3.04e+24         1  0.000561
         P2  2.25e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.609129, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793593, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133006, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947115, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0181993
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+05       428     0.878     0.122
          1  1.38e+05       147         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.93e+03       428    -0.424    -0.906
          1  2.51e+03       147    -0.906     0.424
         *Z       ---       ---  2.58e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.949432, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796175, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124735, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925516, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0181993
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.48e+04      65.9     0.967    0.0332
          1  3.29e+04       322         1    -0.123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       452      65.9    -0.884    -0.467
          1       598       322    -0.467     0.884
         *Z       ---       ---  2.58e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125451, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0181993
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.27e+04      22.1      0.98    0.0197
          1  1.96e+04       321         1    -0.209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       232      22.1    -0.955    -0.296
          1       357       321    -0.296     0.955
         *Z       ---       ---  2.58e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925666, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0181993
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.45e+03      9.08     0.987    0.0131
          1  1.24e+04       303         1    -0.318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       117      9.08     -0.98      -0.2
          1       226       303      -0.2      0.98
         *Z       ---       ---  2.58e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.960 0.040
         well projection threshold  = 0.2
         partition projection error = 0.0185936
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000638, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929597, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796638, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12465, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0181993
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.25e+03      4.17     0.991         0
          1  8.34e+03       285         1    -0.448
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.2      4.17     -0.99    -0.143
          1       152       285    -0.143      0.99
         *Z       ---       ---  2.58e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928291, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00227
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.080375
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002937
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026626
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133217
         W1a Well: minimal relaxation eigenvalue = 0.00386721
         W1a Well: maximal relaxation eigenvalue = 46.1811
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002068
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134826
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037968
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058347
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14741
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.638375, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387    6e+03 6.55e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       260  6.68e-20   6.1e-23
        W1b   0.00385         1  2.57e-22  2.35e-25
         P1   1.5e+19  3.89e+21         1  0.000914
         P2  1.64e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       263  8.54e-23  7.81e-26
        W1b    0.0038         1  3.25e-25  2.97e-28
         P1  1.17e+22  3.08e+24         1  0.000914
         P2  1.28e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.642267, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797138, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1413, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949846, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00386721
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.83e+05       129     0.973    0.0274
          1  7.48e+05       955         1    -0.136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.26e+03       129     -0.91    -0.414
          1  2.89e+03       955    -0.414      0.91
         *Z       ---       ---  3.14e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.952155, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794889, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00386721
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.19e+05      22.4     0.985     0.015
          1  1.86e+05       667         1    -0.253
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       459      22.4    -0.971    -0.238
          1       720       667    -0.238     0.971
         *Z       ---       ---  3.14e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.924825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.781703, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125474, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911928, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00386721
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.96e+04      12.1     0.988     0.012
          1  1.06e+05       573         1    -0.316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       231      12.1    -0.981    -0.193
          1       412       573    -0.193     0.981
         *Z       ---       ---  3.14e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91414, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797503, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124962, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927082, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00386721
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.99e+04      7.24      0.99         0
          1  6.28e+04       505         1    -0.387
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       116      7.24    -0.987    -0.158
          1       243       505    -0.158     0.987
         *Z       ---       ---  3.14e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929471, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796905, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125212, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00386721
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.5e+04      4.63     0.992         0
          1  3.85e+04       461         1    -0.468
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      58.1      4.63    -0.991    -0.131
          1       149       461    -0.131     0.991
         *Z       ---       ---  3.14e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929121, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002342
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.08089
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0028
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027692
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.128075
         W1a Well: minimal relaxation eigenvalue = 0.0252662
         W1a Well: maximal relaxation eigenvalue = 30.8854
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1472 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002274
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138252
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037391
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04894
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14309
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.624281, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1472  -1472 1.79e+05  1.1e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       282  6.86e-20  9.75e-23
        W1b   0.00354         1  2.43e-22  3.45e-25
         P1  1.46e+19  4.11e+21         1   0.00142
         P2  1.03e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       286  9.22e-23  1.31e-25
        W1b    0.0035         1  3.23e-25  4.59e-28
         P1  1.08e+22   3.1e+24         1   0.00142
         P2  7.63e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.628443, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78411, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.931375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0252662
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.01e+04      7.58     0.992         0
          1  1.89e+05  1.29e+03         1    -0.451
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.28e+03      7.58    -0.991    -0.131
          1  4.79e+03  1.29e+03    -0.131     0.991
         *Z       ---       ---  3.82e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784762, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0252662
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+04      2.81     0.994         0
          1  5.24e+04       880         1    -0.592
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       456      2.81    -0.995      -0.1
          1  1.32e+03       880      -0.1     0.995
         *Z       ---       ---  3.82e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915712, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.779866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123408, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908018, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0252662
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.05e+03      1.78     0.995         0
          1  3.22e+04       776         1    -0.678
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       229      1.78    -0.996   -0.0875
          1       814       776   -0.0875     0.996
         *Z       ---       ---  3.82e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.992 0.008
         well projection threshold  = 0.2
         partition projection error = 0.000791397
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000636, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911648, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78276, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910602, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0252662
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.53e+03      1.05     0.995         0
          1  2.09e+04       689         1    -0.781
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115      1.05    -0.997    -0.076
          1       528       689    -0.076     0.997
         *Z       ---       ---  3.82e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.000275957
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000545, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914108, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783967, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124047, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.912842, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0252662
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.27e+03     0.562     0.996         0
          1  1.42e+04       600         1    -0.895
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.4     0.562    -0.998   -0.0663
          1       360       600   -0.0663     0.998
         *Z       ---       ---  3.82e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 4.80932e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000567, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916385, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002329
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124138
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.02891
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02893
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134115
         W1a Well: minimal relaxation eigenvalue = 0.0157289
         W1a Well: maximal relaxation eigenvalue = 36.9667
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002333
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132697
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036222
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058747
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143926
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.705569, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251 7.82e+04  1.8e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       304  7.07e-20   1.5e-22
        W1b   0.00329         1  2.32e-22  4.92e-25
         P1  1.42e+19   4.3e+21         1   0.00212
         P2  6.68e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       308  9.95e-23  2.11e-25
        W1b   0.00325         1  3.23e-25  6.85e-28
         P1     1e+22  3.09e+24         1   0.00212
         P2  4.74e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.709859, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.776833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136811, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925147, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0157289
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.42e+05      2.23     0.995         0
          1  4.85e+05  1.57e+03         1    -0.688
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.23e+03      2.23    -0.997    -0.083
          1  7.62e+03  1.57e+03    -0.083     0.997
         *Z       ---       ---  4.61e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927393, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905826, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0157289
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.84e+04      1.33     0.996         0
          1  1.34e+05   1.1e+03         1    -0.785
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       447      1.33    -0.997   -0.0729
          1   2.1e+03   1.1e+03   -0.0729     0.997
         *Z       ---       ---  4.61e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.908173, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0157289
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.42e+04      1.03     0.996         0
          1  8.18e+04       974         1    -0.842
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       224      1.03    -0.998   -0.0679
          1  1.29e+03       974   -0.0679     0.998
         *Z       ---       ---  4.61e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768811, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896435, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0157289
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.11e+03      0.74     0.996         0
          1  5.24e+04       875         1    -0.911
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112      0.74    -0.998   -0.0628
          1       824       875   -0.0628     0.998
         *Z       ---       ---  4.61e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 3.12817e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000628, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900022, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.776222, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122336, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903124, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0157289
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.56e+03     0.484     0.997         0
          1  3.51e+04       773         1    -0.989
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        56     0.484    -0.998   -0.0579
          1       552       773   -0.0579     0.998
         *Z       ---       ---  4.61e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 4.22959e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000574, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907015, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002205
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128739
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033826
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036292
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130771
         W1a Well: minimal relaxation eigenvalue = 0.00602793
         W1a Well: maximal relaxation eigenvalue = 43.4004
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002072
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128209
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036517
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058279
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143882
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.71392, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 2.65e+04 2.91e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       325  7.28e-20  2.22e-22
        W1b   0.00307         1  2.24e-22  6.82e-25
         P1  1.37e+19  4.47e+21         1   0.00305
         P2   4.5e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       329  1.07e-22  3.27e-25
        W1b   0.00304         1  3.26e-25  9.93e-28
         P1  9.32e+21  3.07e+24         1   0.00305
         P2  3.06e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.717812, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774608, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130344, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00602793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.62e+05      1.29     0.996         0
          1  1.72e+06  2.67e+03         1     -0.84
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.18e+03      1.29    -0.998   -0.0659
          1  1.03e+04  2.67e+03   -0.0659     0.998
         *Z       ---       ---  5.54e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774737, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122388, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901628, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00602793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.24e+04     0.888     0.997         0
          1   4.4e+05  1.76e+03         1    -0.897
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       437     0.888    -0.998   -0.0617
          1  2.65e+03  1.76e+03   -0.0617     0.998
         *Z       ---       ---  5.54e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903821, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777073, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122444, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904273, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00602793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.62e+04     0.759     0.997         0
          1  2.56e+05  1.53e+03         1     -0.93
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       218     0.759    -0.998   -0.0595
          1  1.55e+03  1.53e+03   -0.0595     0.998
         *Z       ---       ---  5.54e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906669, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777164, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9036, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00602793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+04     0.629     0.997         0
          1  1.55e+05  1.35e+03         1     -0.97
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       109     0.629    -0.998    -0.057
          1       933  1.35e+03    -0.057     0.998
         *Z       ---       ---  5.54e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121991, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00602793
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.06e+03     0.491     0.997         0
          1  9.75e+04   1.2e+03    -0.982         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.6     0.491    -0.999   -0.0543
          1       587   1.2e+03   -0.0543     0.999
         *Z       ---       ---  5.54e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 1.03369e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000626, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907576, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002476
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121665
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03443
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039511
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131584
         W1a Well: minimal relaxation eigenvalue = 0.00127462
         W1a Well: maximal relaxation eigenvalue = 49.5326
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002358
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134368
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036108
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054842
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140763
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711512, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 4.77e+03  4.6e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       346  7.52e-20   3.2e-22
        W1b   0.00289         1  2.17e-22  9.23e-25
         P1  1.33e+19  4.61e+21         1   0.00425
         P2  3.13e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       351  1.16e-22  4.92e-25
        W1b   0.00285         1   3.3e-25   1.4e-27
         P1  8.65e+21  3.03e+24         1   0.00425
         P2  2.03e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.715575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770111, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.139116, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920192, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.00127462
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.67e+06     0.632     0.997         0
          1   1.3e+07  2.95e+03         1    -0.989
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.13e+03     0.632    -0.999   -0.0542
          1  1.66e+04  2.95e+03   -0.0542     0.999
         *Z       ---       ---  6.62e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922471, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770236, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122619, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00127462
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.34e+05     0.525     0.997         0
          1  3.37e+06  2.04e+03    -0.975         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       426     0.525    -0.999   -0.0523
          1  4.29e+03  2.04e+03   -0.0523     0.999
         *Z       ---       ---  6.62e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899808, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769287, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894906, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00127462
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.67e+05     0.486     0.997         0
          1  1.95e+06  1.84e+03    -0.957         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       213     0.486    -0.999   -0.0513
          1  2.48e+03  1.84e+03   -0.0513     0.999
         *Z       ---       ---  6.62e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771198, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897167, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00127462
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.36e+04     0.442     0.997         0
          1  1.16e+06  1.72e+03    -0.936         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107     0.442    -0.999   -0.0502
          1  1.48e+03  1.72e+03   -0.0502     0.999
         *Z       ---       ---  6.62e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899818, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769122, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121859, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895708, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00127462
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.18e+04     0.386     0.997         0
          1  7.09e+05  1.66e+03    -0.913         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.3     0.386    -0.999    -0.049
          1       904  1.66e+03    -0.049     0.999
         *Z       ---       ---  6.62e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897849, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002393
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.119656
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033512
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036776
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.128982
         W1a Well: minimal relaxation eigenvalue = 0.0214253
         W1a Well: maximal relaxation eigenvalue = 33.418
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1463 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002041
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127841
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036364
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057906
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144007
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702574, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1463  -1463  3.5e+05 7.17e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       367  7.77e-20  4.48e-22
        W1b   0.00273         1  2.12e-22  1.22e-24
         P1  1.29e+19  4.72e+21         1   0.00577
         P2  2.23e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       371  1.24e-22  7.18e-25
        W1b   0.00269         1  3.35e-25  1.94e-27
         P1  8.04e+21  2.98e+24         1   0.00577
         P2  1.39e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.706492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763819, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128042, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0214253
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   9.7e+04     0.409     0.998         0
          1  1.09e+06   4.9e+03    -0.918         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.08e+03     0.409    -0.999   -0.0479
          1  2.33e+04   4.9e+03   -0.0479     0.999
         *Z       ---       ---  7.88e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911352, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890668, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0214253
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.94e+04     0.295     0.998         0
          1  2.93e+05  3.31e+03    -0.882         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       416     0.295    -0.999    -0.046
          1  6.27e+03  3.31e+03    -0.046     0.999
         *Z       ---       ---  7.88e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0214253
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.71e+03     0.244     0.998         0
          1  1.77e+05  2.84e+03    -0.861         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       208     0.244    -0.999   -0.0449
          1  3.78e+03  2.84e+03   -0.0449     0.999
         *Z       ---       ---  7.88e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 5.22588e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000644, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.8947, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764399, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889738, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0214253
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.85e+03     0.197     0.998         0
          1  1.11e+05   2.4e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       104     0.197    -0.999   -0.0438
          1  2.37e+03   2.4e+03   -0.0438     0.999
         *Z       ---       ---  7.88e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 7.02591e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000566, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89349, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764475, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120798, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889994, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0214253
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.43e+03     0.163     0.998         0
          1  7.18e+04  1.94e+03    -0.819         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52     0.163    -0.999   -0.0427
          1  1.54e+03  1.94e+03   -0.0427     0.999
         *Z       ---       ---  7.88e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 8.93288e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000562, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893512, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002393
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122486
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038476
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132512
         W1a Well: minimal relaxation eigenvalue = 0.00126574
         W1a Well: maximal relaxation eigenvalue = 49.5235
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002253
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135521
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036507
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055542
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143073
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715964, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 7.92e+03  1.1e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       387  8.05e-20  6.16e-22
        W1b   0.00259         1  2.08e-22  1.59e-24
         P1  1.24e+19   4.8e+21         1   0.00765
         P2  1.62e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       391  1.34e-22  1.02e-24
        W1b   0.00256         1  3.42e-25  2.62e-27
         P1  7.48e+21  2.93e+24         1   0.00765
         P2  9.77e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.720194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768461, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.915182, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00126574
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.6e+06     0.306     0.998         0
          1  2.53e+07  6.17e+03    -0.875         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.03e+03     0.306    -0.999   -0.0445
          1   3.2e+04  6.17e+03   -0.0445     0.999
         *Z       ---       ---  9.35e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.917435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77012, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122006, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00126574
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.2e+05     0.273     0.998         0
          1  6.24e+06  4.01e+03    -0.863         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       405     0.273    -0.999   -0.0438
          1   7.9e+03  4.01e+03   -0.0438     0.999
         *Z       ---       ---  9.35e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899086, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767528, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122007, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894058, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00126574
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.6e+05     0.261     0.998         0
          1  3.53e+06  3.44e+03    -0.856         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       203     0.261    -0.999   -0.0435
          1  4.46e+03  3.44e+03   -0.0435     0.999
         *Z       ---       ---  9.35e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896225, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767617, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121579, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00126574
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.01e+04     0.249     0.998         0
          1  2.04e+06  3.02e+03    -0.848         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       101     0.249    -0.999   -0.0431
          1  2.58e+03  3.02e+03   -0.0431     0.999
         *Z       ---       ---  9.35e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896018, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121038, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895388, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00126574
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     4e+04     0.233     0.998         0
          1  1.21e+06  2.69e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      50.7     0.233    -0.999   -0.0426
          1  1.53e+03  2.69e+03   -0.0426     0.999
         *Z       ---       ---  9.35e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897535, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002292
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.112518
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036861
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.129505
         W1a Well: minimal relaxation eigenvalue = 0.0195815
         W1a Well: maximal relaxation eigenvalue = 34.2411
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1451 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002279
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125806
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.0365
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055063
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144021
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.691446, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1451  -1451 5.03e+05 1.66e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       406  8.32e-20  8.26e-22
        W1b   0.00246         1  2.05e-22  2.03e-24
         P1   1.2e+19  4.88e+21         1   0.00992
         P2  1.21e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       411  1.44e-22  1.43e-24
        W1b   0.00243         1   3.5e-25  3.47e-27
         P1  6.96e+21  2.86e+24         1   0.00992
         P2  7.02e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.695803, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767114, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136397, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923746, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+05     0.261     0.998         0
          1  2.47e+06  1.12e+04     -0.84         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.98e+03     0.261    -0.999   -0.0417
          1  4.26e+04  1.12e+04   -0.0417     0.999
         *Z       ---       ---   1.1e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926054, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765671, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12077, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890946, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.3e+04     0.214     0.998         0
          1  6.27e+05  7.41e+03    -0.825         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       395     0.214    -0.999   -0.0409
          1  1.08e+04  7.41e+03   -0.0409     0.999
         *Z       ---       ---   1.1e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766487, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120461, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891625, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+04     0.192     0.998         0
          1  3.63e+05  6.26e+03    -0.815         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       198     0.192    -0.999   -0.0404
          1  6.25e+03  6.26e+03   -0.0404     0.999
         *Z       ---       ---   1.1e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893806, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766773, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120283, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891546, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.74e+03     0.172     0.998         0
          1  2.16e+05  5.25e+03    -0.805         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.9     0.172    -0.999   -0.0399
          1  3.72e+03  5.25e+03   -0.0399     0.999
         *Z       ---       ---   1.1e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 9.34429e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000643, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.895157, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767284, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89269, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.87e+03     0.156     0.998         0
          1  1.32e+05  4.26e+03    -0.795         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.5     0.156    -0.999   -0.0394
          1  2.27e+03  4.26e+03   -0.0394     0.999
         *Z       ---       ---   1.1e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.000103417
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00055, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896192, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002323
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.111877
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033577
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036408
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.129982
         W1a Well: minimal relaxation eigenvalue = 0.0122242
         W1a Well: maximal relaxation eigenvalue = 38.2912
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002285
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.12766
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035451
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057552
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.138902
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.689316, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 2.93e+05 2.48e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       425   8.6e-20  1.09e-21
        W1b   0.00235         1  2.03e-22  2.56e-24
         P1  1.16e+19  4.94e+21         1    0.0126
         P2  9.21e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       430  1.54e-22  1.95e-24
        W1b   0.00233         1  3.58e-25  4.52e-27
         P1  6.49e+21  2.79e+24         1    0.0126
         P2  5.14e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.693187, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761431, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138389, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0122242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.58e+05     0.212     0.998         0
          1  5.38e+06     9e+03    -0.814         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.93e+03     0.212    -0.999   -0.0395
          1  6.58e+04     9e+03   -0.0395     0.999
         *Z       ---       ---   1.3e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913489, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0122242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.16e+04     0.192     0.998         0
          1   1.4e+06  5.83e+03    -0.805         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       386     0.192    -0.999    -0.039
          1  1.71e+04  5.83e+03    -0.039     0.999
         *Z       ---       ---   1.3e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761737, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119967, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886381, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0122242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.58e+04     0.181     0.998         0
          1  8.23e+05  4.82e+03    -0.799         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       193     0.181    -0.999   -0.0387
          1  1.01e+04  4.82e+03   -0.0387     0.999
         *Z       ---       ---   1.3e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888563, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760447, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884441, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0122242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.89e+03     0.168     0.998         0
          1  4.98e+05  3.85e+03    -0.792         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      96.5     0.168    -0.999   -0.0384
          1  6.09e+03  3.85e+03   -0.0384     0.999
         *Z       ---       ---   1.3e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000101609
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000621, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760957, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120561, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886247, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0122242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.95e+03     0.156     0.998         0
          1  3.08e+05  2.83e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.2     0.156    -0.999    -0.038
          1  3.76e+03  2.83e+03    -0.038     0.999
         *Z       ---       ---   1.3e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000108577
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000568, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889855, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002405
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121634
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033546
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053121
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.129684
         W1a Well: minimal relaxation eigenvalue = 0.00678422
         W1a Well: maximal relaxation eigenvalue = 42.1368
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002207
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13247
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035646
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050649
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140615
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715661, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593  1.6e+05 3.65e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       443   8.9e-20  1.41e-21
        W1b   0.00226         1  2.01e-22  3.17e-24
         P1  1.12e+19  4.98e+21         1    0.0158
         P2  7.12e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       448  1.65e-22  2.61e-24
        W1b   0.00223         1  3.68e-25  5.81e-27
         P1  6.06e+21  2.72e+24         1    0.0158
         P2  3.84e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.719623, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129712, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00678422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.77e+05     0.194     0.998         0
          1  1.22e+07  1.33e+04      -0.8         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.88e+03     0.194    -0.999    -0.038
          1   8.3e+04  1.33e+04    -0.038     0.999
         *Z       ---       ---  1.52e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40843, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884006, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00678422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.55e+04     0.183     0.998         0
          1  3.01e+06  8.47e+03    -0.795         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       376     0.183    -0.999   -0.0377
          1  2.04e+04  8.47e+03   -0.0377     0.999
         *Z       ---       ---  1.52e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886229, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119525, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884661, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00678422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.77e+04     0.176     0.998         0
          1  1.71e+06  7.01e+03    -0.791         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       188     0.176    -0.999   -0.0376
          1  1.16e+04  7.01e+03   -0.0376     0.999
         *Z       ---       ---  1.52e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886829, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759466, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119838, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88397, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00678422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.39e+04     0.168     0.998         0
          1     1e+06  5.69e+03    -0.787         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      94.1     0.168    -0.999   -0.0373
          1  6.81e+03  5.69e+03   -0.0373     0.999
         *Z       ---       ---  1.52e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.682179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.006559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.692644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00678422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.94e+03     0.159     0.998         0
          1  6.03e+05  4.35e+03    -0.782         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.1     0.159    -0.999   -0.0371
          1  4.09e+03  4.35e+03   -0.0371     0.999
         *Z       ---       ---  1.52e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000107038
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 7e-06, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.693015, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001113
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000299
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030047
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.128417
         W1a Well: minimal relaxation eigenvalue = 0.00352471
         W1a Well: maximal relaxation eigenvalue = 45.0018
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1441 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002143
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127945
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041289
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050252
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.13474
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.527365, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 8.22e+04 5.32e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       461   9.2e-20  1.79e-21
        W1b   0.00217         1     2e-22  3.88e-24
         P1  1.09e+19  5.01e+21         1    0.0194
         P2  5.59e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       466  1.77e-22  3.44e-24
        W1b   0.00214         1  3.79e-25  7.37e-27
         P1  5.66e+21  2.64e+24         1    0.0194
         P2  2.91e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.530773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.747857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135477, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894064, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00352471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.21e+05     0.183     0.998         0
          1  2.91e+07  2.23e+04     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.84e+03     0.183    -0.999   -0.0368
          1  1.03e+05  2.23e+04   -0.0368     0.999
         *Z       ---       ---  1.77e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896351, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75726, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119716, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881452, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00352471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+05     0.175     0.998         0
          1  6.75e+06  1.39e+04    -0.787         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       367     0.175    -0.999   -0.0366
          1  2.38e+04  1.39e+04   -0.0366     0.999
         *Z       ---       ---  1.77e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119949, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881086, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00352471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.21e+04     0.171     0.998         0
          1  3.71e+06  1.14e+04    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       184     0.171    -0.999   -0.0365
          1  1.31e+04  1.14e+04   -0.0365     0.999
         *Z       ---       ---  1.77e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883546, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119756, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881195, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00352471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.61e+04     0.166     0.998         0
          1  2.09e+06  9.28e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      91.9     0.166    -0.999   -0.0364
          1  7.37e+03  9.28e+03   -0.0364     0.999
         *Z       ---       ---  1.77e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756807, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00352471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.3e+04     0.161     0.998         0
          1  1.21e+06  7.38e+03    -0.779         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.9     0.161    -0.999   -0.0363
          1  4.25e+03  7.38e+03   -0.0363     0.999
         *Z       ---       ---  1.77e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883761, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 403.37, elapsed time[sec] = 8
