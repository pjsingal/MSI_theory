Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.006626, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.007966, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.130377, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002972, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.03595, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.8571
      interpolating states number/density done, cpu time[sec] = 1.32749, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.34034, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001253, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001817, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.115774, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003062, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.037478, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.22781, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.23287, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001227, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001833, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003637, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000824, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001414, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003042, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010899, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000858, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00203, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003739, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000767, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.00131, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002779, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010106, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019905, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.020507, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.753192, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003392, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.018992, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.7927, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.81579, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.011783, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.011332, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.091667, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.41209, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000119, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.41363, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000752, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.103479, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.043605, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.051593, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.010773, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000592, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.377871, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.004804, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.578875, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.50883, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.5097, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.17831, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001373, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.39565, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.59839, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.1098, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000896, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.00033, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010855, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010907, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.48998e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  7.00579e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300  9.48772e+34  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  7.13484e+35  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500   3.7971e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  1.60772e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  5.77616e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  1.83116e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  5.25578e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  1.39055e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  3.43645e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  8.01237e+39  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  1.77642e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  3.76866e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  7.68938e+40  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  1.51526e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  2.89402e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  5.37311e+41  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  9.72222e+41  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000   1.7182e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  2.48804e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  2.86283e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.12561e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  1.44229e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  2.65453e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  5.53762e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  1.19995e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  2.60352e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  5.56389e+39  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  1.16267e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100  2.36883e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  4.70237e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  9.09879e+40  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  1.71771e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  3.16765e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  5.71353e+41   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  1.00928e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  1.74822e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  2.97283e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  4.96831e+42  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.5555, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.6e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001981
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000491
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.182535
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.234335
         W1a Well: minimal relaxation eigenvalue = 0.0692772
         W1a Well: maximal relaxation eigenvalue = 3.81732
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002652
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.295943
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081706
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.285466
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.34772
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.45857, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.21e+05 2.53e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000786   1.6e-16  5.68e-57
        W1b  1.27e+03         1  2.04e-13  7.22e-54
         P1  6.25e+15  4.91e+12         1  3.55e-41
         P2  1.76e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000119  2.02e-20  7.17e-61
        W1b  8.37e+03         1  1.69e-16     6e-57
         P1  4.95e+19  5.91e+15         1  3.55e-41
         P2  1.39e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.46337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88095, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.302601, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22192, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0692772
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.12    0.0446         0         1
          1      15.8      1.43         1    -0.044
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0777    0.0446  -0.00123        -1
          1       1.1      1.43        -1   0.00123
         *Z       ---       ---  2.91e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.22466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.87855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.282291, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16881, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0692772
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.251     0.011         0         1
          1      5.49     0.502         1    -0.116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174     0.011  -0.00326        -1
          1     0.381     0.502        -1   0.00326
         *Z       ---       ---  2.91e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.17121, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.189629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002999, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.19953, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0692772
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.131   0.00501         0         1
          1      3.32     0.386         1    -0.212
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00904   0.00501  -0.00595        -1
          1      0.23     0.386        -1   0.00595
         *Z       ---       ---  2.91e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.199917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019538, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002975, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022572, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0692772
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0674   0.00204         0         1
          1      2.02     0.312         1    -0.356
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00467   0.00204  -0.00998        -1
          1      0.14     0.312        -1   0.00998
         *Z       ---       ---  2.91e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022596, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002982, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022553, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0692772
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0345  0.000743         0         1
          1      1.25     0.242         1     -0.52
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00239  0.000743   -0.0146        -1
          1    0.0869     0.242        -1    0.0146
         *Z       ---       ---  2.91e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022578, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002053
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000516
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037477
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.241657
         W1a Well: minimal relaxation eigenvalue = 0.0680547
         W1a Well: maximal relaxation eigenvalue = 3.92962
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002074
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.307684
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.082841
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087511
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.347883
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.13409, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.44e+05 3.27e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000985  9.37e-17  3.25e-55
        W1b  1.02e+03         1  9.52e-14   3.3e-52
         P1  1.07e+16  1.05e+13         1  3.47e-39
         P2  3.08e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000243  1.23e-20  4.26e-59
        W1b  4.12e+03         1  5.06e-17  1.76e-55
         P1  8.15e+19  1.98e+16         1  3.47e-39
         P2  2.35e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.13809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.89642, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.3206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.23988, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0680547
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02    0.0506         0         1
          1      19.3      1.45         1   -0.0348
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693    0.0506  -0.00109        -1
          1      1.31      1.45        -1   0.00109
         *Z       ---       ---  2.49e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.24239, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.90219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.287717, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19809, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0680547
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.233    0.0128         0         1
          1      6.33     0.519         1   -0.0988
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0128   -0.0031        -1
          1     0.431     0.519        -1    0.0031
         *Z       ---       ---  2.49e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.20088, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.141631, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.151544, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0680547
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.123   0.00599         0         1
          1      3.76     0.413         1    -0.187
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00599  -0.00586        -1
          1     0.256     0.413        -1   0.00586
         *Z       ---       ---  2.49e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.151914, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019809, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0680547
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0637   0.00251         0         1
          1      2.27     0.344         1    -0.323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434   0.00251   -0.0101        -1
          1     0.154     0.344        -1    0.0101
         *Z       ---       ---  2.49e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022922, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019786, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00302, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022868, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0680547
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0328  0.000947         0         1
          1       1.4     0.274         1    -0.484
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223  0.000947   -0.0152        -1
          1    0.0956     0.274        -1    0.0152
         *Z       ---       ---  2.49e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022893, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001943
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000478
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037226
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.221018
         W1a Well: minimal relaxation eigenvalue = 0.0668341
         W1a Well: maximal relaxation eigenvalue = 4.27182
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001966
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.295595
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07888
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076558
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.330049
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.06643, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.11e+05 4.21e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00137  5.59e-17  1.25e-53
        W1b       729         1  4.08e-14  9.13e-51
         P1  1.79e+16  2.45e+13         1  2.24e-37
         P2  7.99e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000463  7.82e-21  1.75e-57
        W1b  2.16e+03         1  1.69e-17  3.78e-54
         P1  1.28e+20  5.92e+16         1  2.24e-37
         P2  5.71e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.07064, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76533, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.302337, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.08365, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0668341
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.994    0.0585         0         1
          1      22.3      1.56         1   -0.0297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664    0.0585   -0.0011        -1
          1      1.49      1.56        -1    0.0011
         *Z       ---       ---  2.13e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.08614, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76725, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.26605, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0668341
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.233    0.0155         0         1
          1      7.12     0.546         1   -0.0872
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0155  -0.00323        -1
          1     0.476     0.546        -1   0.00323
         *Z       ---       ---  2.13e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.04369, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.472608, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002841, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.482011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0668341
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124   0.00748         0         1
          1      4.19     0.443         1    -0.168
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00828   0.00748  -0.00622        -1
          1      0.28     0.443        -1   0.00622
         *Z       ---       ---  2.13e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.482384, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018447, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002816, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0668341
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.065   0.00325         0         1
          1      2.51     0.376         1    -0.296
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00435   0.00325    -0.011        -1
          1     0.168     0.376        -1     0.011
         *Z       ---       ---  2.13e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021347, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018348, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002827, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021231, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0668341
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0337   0.00127         0     0.999
          1      1.55     0.306         1    -0.451
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226   0.00127   -0.0167        -1
          1     0.104     0.306        -1    0.0167
         *Z       ---       ---  2.13e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021257, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002056
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000479
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037006
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.222997
         W1a Well: minimal relaxation eigenvalue = 0.0657324
         W1a Well: maximal relaxation eigenvalue = 3.43775
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001877
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.293068
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.080526
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084625
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.327984
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.07287, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.41e+05 5.38e+11
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00192  3.61e-17  3.62e-52
        W1b       520         1  1.88e-14  1.89e-49
         P1  2.77e+16  5.33e+13         1     1e-35
         P2  2.76e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000838  5.21e-21  5.23e-56
        W1b  1.19e+03         1  6.21e-18  6.24e-53
         P1  1.92e+20  1.61e+17         1     1e-35
         P2  1.91e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.07673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77326, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.300563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09623, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0657324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.982    0.0677         0         1
          1      26.8      1.47         1   -0.0259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0645    0.0677  -0.00114        -1
          1      1.76      1.47        -1   0.00114
         *Z       ---       ---   1.9e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.09873, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77374, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.267783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04962, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0657324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0188         0         1
          1      8.06     0.555         1   -0.0778
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00341        -1
          1      0.53     0.555        -1   0.00341
         *Z       ---       ---   1.9e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.05202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.446881, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.456252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0657324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.127   0.00933         0         1
          1      4.68     0.468         1    -0.152
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835   0.00933  -0.00665        -1
          1     0.308     0.468        -1   0.00665
         *Z       ---       ---   1.9e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.456838, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0657324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0674    0.0042         0     0.999
          1      2.78     0.408         1    -0.271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00443    0.0042   -0.0119        -1
          1     0.183     0.408        -1    0.0119
         *Z       ---       ---   1.9e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021324, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0657324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0353   0.00172         0     0.999
          1      1.71     0.339         1     -0.42
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00232   0.00172   -0.0184        -1
          1     0.113     0.339        -1    0.0184
         *Z       ---       ---   1.9e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021349, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002057
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000485
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032364
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.2213
         W1a Well: minimal relaxation eigenvalue = 0.0646192
         W1a Well: maximal relaxation eigenvalue = 5.22915
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001952
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.299957
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081064
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087668
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.330769
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.07967, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.23e+05 6.83e+11
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00268  2.41e-17  7.93e-51
        W1b       374         1  9.02e-15  2.96e-48
         P1  4.14e+16  1.11e+14         1  3.28e-34
         P2  1.26e+50  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00145   3.6e-21  1.18e-54
        W1b       692         1  2.49e-18  8.17e-52
         P1  2.78e+20  4.02e+17         1  3.28e-34
         P2  8.47e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.08355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79369, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.302814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.11358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.976     0.078         0         1
          1      29.8      1.65         1   -0.0227
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.078  -0.00118        -1
          1      1.93      1.65        -1   0.00118
         *Z       ---       ---  1.71e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.11605, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.269511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.07314, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0226         0         1
          1      8.87     0.597         1   -0.0697
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0226  -0.00361        -1
          1     0.573     0.597        -1   0.00361
         *Z       ---       ---  1.71e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07555, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.407159, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002866, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.416949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132    0.0116         0         1
          1      5.13     0.504         1    -0.137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0085    0.0116   -0.0071        -1
          1     0.331     0.504        -1    0.0071
         *Z       ---       ---  1.71e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.417319, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018759, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002858, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0706   0.00539         0     0.999
          1      3.04     0.443         1    -0.249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00456   0.00539   -0.0129        -1
          1     0.196     0.443        -1    0.0129
         *Z       ---       ---  1.71e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021699, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018697, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002855, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0646192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0374    0.0023         0     0.999
          1      1.87     0.374         1    -0.391
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00241    0.0023   -0.0202        -1
          1     0.121     0.374        -1    0.0202
         *Z       ---       ---  1.71e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021635, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000463
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036152
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.208282
         W1a Well: minimal relaxation eigenvalue = 0.063522
         W1a Well: maximal relaxation eigenvalue = 7.33162
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001854
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.282722
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076958
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083113
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.31642
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02938, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226  1.3e+05 8.63e+11
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00354  1.63e-17  1.32e-49
        W1b       282         1  4.59e-15  3.73e-47
         P1  6.15e+16  2.18e+14         1  8.12e-33
         P2  7.58e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00239  2.57e-21  2.08e-53
        W1b       418         1  1.07e-18  8.71e-51
         P1   3.9e+20  9.31e+17         1  8.12e-33
         P2   4.8e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.0332, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69034, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.277333, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.063522
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.925    0.0891         0         1
          1      33.2      1.84         1   -0.0191
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00114        -1
          1      2.11      1.84        -1   0.00114
         *Z       ---       ---  1.54e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.99657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68744, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.259236, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95407, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.063522
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.238    0.0267         0         1
          1      9.74     0.641         1   -0.0614
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0151    0.0267  -0.00365        -1
          1     0.618     0.641        -1   0.00365
         *Z       ---       ---  1.54e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.95646, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.655587, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.665053, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.063522
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132     0.014         0         1
          1       5.6     0.542         1    -0.123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014  -0.00731        -1
          1     0.356     0.542        -1   0.00731
         *Z       ---       ---  1.54e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.665421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017567, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020348, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.063522
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0716   0.00673         0     0.999
          1      3.31      0.48         1    -0.226
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00673   -0.0135        -1
          1      0.21      0.48        -1    0.0135
         *Z       ---       ---  1.54e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017551, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020306, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.063522
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0384   0.00298         0     0.999
          1      2.04     0.411         1     -0.36
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244   0.00298   -0.0214        -1
          1      0.13     0.411        -1    0.0214
         *Z       ---       ---  1.54e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020331, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001886
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000457
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033357
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.201982
         W1a Well: minimal relaxation eigenvalue = 0.0626048
         W1a Well: maximal relaxation eigenvalue = 5.32928
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001886
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.279887
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077153
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.086805
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.322417
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02684, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.14e+05 1.08e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00496  1.16e-17  1.82e-48
        W1b       202         1  2.34e-15  3.67e-46
         P1  8.61e+16  4.27e+14         1  1.57e-31
         P2   5.5e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00381  1.88e-21  2.95e-52
        W1b       263         1  4.95e-19  7.76e-50
         P1  5.31e+20  2.02e+18         1  1.57e-31
         P2  3.39e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.03068, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.70638, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.286483, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01154, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0626048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.94     0.103         0         1
          1      38.9      1.65         1   -0.0172
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103  -0.00121        -1
          1      2.43      1.65        -1   0.00121
         *Z       ---       ---  1.42e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.01429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.25693, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95265, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0626048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.25    0.0322         0         1
          1      10.9     0.646         1   -0.0558
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322  -0.00393        -1
          1     0.681     0.646        -1   0.00393
         *Z       ---       ---  1.42e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.95505, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.622739, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002734, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.631815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0626048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.14    0.0173         0     0.999
          1      6.19      0.57         1    -0.112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0173  -0.00789        -1
          1     0.388      0.57        -1   0.00789
         *Z       ---       ---  1.42e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.632185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017783, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020564, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0626048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0773   0.00861         0     0.999
          1      3.63     0.517         1    -0.208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00861   -0.0146        -1
          1     0.228     0.517        -1    0.0146
         *Z       ---       ---  1.42e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002714, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020543, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0626048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.042   0.00397         0     0.998
          1      2.24      0.45         1    -0.334
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00397   -0.0235        -1
          1      0.14      0.45        -1    0.0235
         *Z       ---       ---  1.42e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020567, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001938
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000442
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036122
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199302
         W1a Well: minimal relaxation eigenvalue = 0.0616841
         W1a Well: maximal relaxation eigenvalue = 3.93477
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001868
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.280164
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074333
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072325
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.30174
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.988059, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.02e+05 1.36e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00691  8.29e-18  2.01e-47
        W1b       145         1   1.2e-15  2.91e-45
         P1  1.21e+17  8.34e+14         1  2.43e-30
         P2  4.97e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00587  1.42e-21  3.45e-51
        W1b       170         1  2.42e-19  5.88e-49
         P1  7.04e+20  4.13e+18         1  2.43e-30
         P2   2.9e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.992197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58288, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87021, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0616841
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.971     0.118         0         1
          1      44.7      1.54         1   -0.0157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.118  -0.00131        -1
          1      2.76      1.54        -1   0.00131
         *Z       ---       ---  1.31e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87266, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59751, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244789, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0616841
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.267    0.0385         0         1
          1        12     0.665         1   -0.0513
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0385  -0.00426        -1
          1     0.743     0.665        -1   0.00426
         *Z       ---       ---  1.31e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85193, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.876558, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0616841
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.152    0.0213         0     0.999
          1      6.81     0.605         1    -0.103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00935    0.0213  -0.00854        -1
          1      0.42     0.605        -1   0.00854
         *Z       ---       ---  1.31e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016664, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019289, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0616841
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0849    0.0109         0     0.999
          1      3.98     0.557         1    -0.191
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00523    0.0109   -0.0159        -1
          1     0.245     0.557        -1    0.0159
         *Z       ---       ---  1.31e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019313, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00257, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0616841
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0467   0.00526         0     0.998
          1      2.45     0.491         1    -0.309
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00288   0.00526   -0.0256        -1
          1     0.151     0.491        -1    0.0256
         *Z       ---       ---  1.31e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019249, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001922
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000444
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031964
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199739
         W1a Well: minimal relaxation eigenvalue = 0.0607454
         W1a Well: maximal relaxation eigenvalue = 5.93111
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001876
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.25623
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074619
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094567
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.305374
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.986672, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.39e+05 1.69e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00972  6.23e-18  1.93e-46
        W1b       103         1  6.41e-16  1.98e-44
         P1  1.61e+17  1.56e+15         1  3.09e-29
         P2  5.19e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00877   1.1e-21  3.39e-50
        W1b       114         1  1.25e-19  3.86e-48
         P1  9.13e+20  8.01e+18         1  3.09e-29
         P2  2.95e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.990491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61357, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.264459, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91172, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607454
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.04     0.135         0         1
          1      49.4      1.67         1    -0.015
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.135  -0.00148        -1
          1         3      1.67        -1   0.00148
         *Z       ---       ---  1.23e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.247569, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607454
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.294     0.046         0         1
          1      13.1     0.715         1   -0.0481
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046  -0.00474        -1
          1     0.798     0.715        -1   0.00474
         *Z       ---       ---  1.23e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87123, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.831134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002602, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.839916, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607454
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.169    0.0261         0     0.999
          1      7.41      0.65         1   -0.0955
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102    0.0261  -0.00941        -1
          1      0.45      0.65        -1   0.00941
         *Z       ---       ---  1.23e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.840294, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016848, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002595, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019497, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607454
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0957    0.0139         0     0.998
          1      4.33     0.602         1    -0.177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00581    0.0139   -0.0175        -1
          1     0.263     0.602        -1    0.0175
         *Z       ---       ---  1.23e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019522, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016823, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002593, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01947, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607454
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0535   0.00695         0     0.997
          1      2.67     0.535         1    -0.286
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00695   -0.0282        -1
          1     0.162     0.535        -1    0.0282
         *Z       ---       ---  1.23e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019494, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00182
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000441
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034009
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.201833
         W1a Well: minimal relaxation eigenvalue = 0.0597725
         W1a Well: maximal relaxation eigenvalue = 9.69377
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00185
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.277426
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076412
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09053
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.30989
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.01392, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.23e+05 2.09e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0135  4.78e-18  1.58e-45
        W1b        74         1  3.54e-16  1.17e-43
         P1  2.09e+17  2.83e+15         1  3.31e-28
         P2  6.33e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0128  8.62e-22  2.85e-49
        W1b      78.3         1  6.75e-20  2.23e-47
         P1  1.16e+21  1.48e+19         1  3.31e-28
         P2  3.51e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 1.01775, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.63162, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.270806, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92056, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.12     0.155         0         1
          1      52.5      2.12         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067     0.155  -0.00167        -1
          1      3.14      2.12        -1   0.00167
         *Z       ---       ---  1.17e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.923, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.63404, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.25067, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89277, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.326    0.0546         0     0.999
          1      14.1     0.797         1   -0.0455
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0195    0.0546  -0.00528        -1
          1     0.845     0.797        -1   0.00528
         *Z       ---       ---  1.17e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.89516, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797054, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002632, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.805886, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.189    0.0318         0     0.999
          1         8     0.707         1   -0.0892
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0318   -0.0104        -1
          1     0.478     0.707        -1    0.0104
         *Z       ---       ---  1.17e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.806243, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002628, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019733, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.109    0.0175         0     0.998
          1      4.69     0.651         1    -0.164
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0065    0.0175   -0.0191        -1
          1      0.28     0.651        -1    0.0191
         *Z       ---       ---  1.17e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019757, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016996, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002607, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01966, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0616    0.0091         0     0.996
          1       2.9     0.582         1    -0.265
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00368    0.0091   -0.0308        -1
          1     0.173     0.582        -1    0.0308
         *Z       ---       ---  1.17e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019685, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001875
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000426
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034458
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.191229
         W1a Well: minimal relaxation eigenvalue = 0.0589172
         W1a Well: maximal relaxation eigenvalue = 10.0668
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002209
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264337
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074246
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.09121
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.294389
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.974119, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.39e+05 2.58e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0185  3.65e-18   1.1e-44
        W1b        54         1  1.97e-16  5.94e-43
         P1  2.74e+17  5.07e+15         1  3.01e-27
         P2  9.09e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0182  6.91e-22  2.08e-48
        W1b      55.1         1  3.81e-20  1.15e-46
         P1  1.45e+21  2.63e+19         1  3.01e-27
         P2   4.8e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.977901, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54945, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.266311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83015, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589172
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.21     0.176         0         1
          1        58      2.28         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00188        -1
          1      3.42      2.28        -1   0.00188
         *Z       ---       ---   1.1e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83258, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.238854, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79533, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589172
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.361    0.0643         0     0.999
          1      15.5     0.847         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0643  -0.00585        -1
          1     0.912     0.847        -1   0.00585
         *Z       ---       ---   1.1e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79794, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.99413, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002522, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00268, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589172
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.212    0.0384         0     0.998
          1      8.74     0.758         1   -0.0834
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0384   -0.0113        -1
          1     0.515     0.758        -1    0.0113
         *Z       ---       ---   1.1e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00305, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016217, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002503, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018773, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589172
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124    0.0217         0     0.997
          1      5.12     0.703         1    -0.153
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00728    0.0217   -0.0208        -1
          1     0.302     0.703        -1    0.0208
         *Z       ---       ---   1.1e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002506, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018697, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0589172
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.071    0.0117         0     0.995
          1      3.18     0.633         1    -0.245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00418    0.0117   -0.0334    -0.999
          1     0.187     0.633    -0.999    0.0334
         *Z       ---       ---   1.1e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018721, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001802
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00043
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035103
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186963
         W1a Well: minimal relaxation eigenvalue = 0.0582679
         W1a Well: maximal relaxation eigenvalue = 5.68265
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001954
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.268204
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073799
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084851
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.299842
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.972252, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.23e+05 3.17e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0254  2.91e-18  6.92e-44
        W1b      39.3         1  1.14e-16  2.72e-42
         P1  3.44e+17  8.75e+15         1  2.38e-26
         P2  1.44e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0252  5.63e-22  1.34e-47
        W1b      39.6         1  2.23e-20  5.32e-46
         P1  1.78e+21  4.48e+19         1  2.38e-26
         P2  7.45e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.976076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56415, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.269783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8543, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0582679
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.35     0.199         0         1
          1      68.9       1.6         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0786     0.199  -0.00219        -1
          1      4.02       1.6        -1   0.00219
         *Z       ---       ---  1.06e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85678, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56143, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.237642, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8063, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0582679
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.409    0.0755         0     0.999
          1      17.3     0.849         1   -0.0414
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0755  -0.00661        -1
          1      1.01     0.849        -1   0.00661
         *Z       ---       ---  1.06e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.80869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.95438, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.962955, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0582679
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.243    0.0462         0     0.998
          1      9.65       0.8         1   -0.0789
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0462   -0.0126        -1
          1     0.563       0.8        -1    0.0126
         *Z       ---       ---  1.06e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963326, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002556, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018921, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0582679
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.143    0.0269         0     0.996
          1      5.64     0.757         1    -0.143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00833    0.0269   -0.0228        -1
          1     0.329     0.757        -1    0.0228
         *Z       ---       ---  1.06e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016302, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0582679
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0832    0.0151         0     0.994
          1       3.5     0.689         1    -0.228
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00485    0.0151   -0.0363    -0.999
          1     0.204     0.689    -0.999    0.0363
         *Z       ---       ---  1.06e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018933, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00188
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000432
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031401
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199889
         W1a Well: minimal relaxation eigenvalue = 0.0574192
         W1a Well: maximal relaxation eigenvalue = 8.5959
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001849
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.269446
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073653
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.091738
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.296287
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.985165, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.02e+05 3.87e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0348  2.35e-18  3.89e-43
        W1b      28.7         1  6.75e-17  1.12e-41
         P1  4.26e+17  1.48e+16         1  1.65e-25
         P2  2.57e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0344  4.66e-22  7.71e-47
        W1b      29.1         1  1.35e-20  2.24e-45
         P1  2.15e+21  7.38e+19         1  1.65e-25
         P2   1.3e+46  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.98897, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.250868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85407, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0574192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.55     0.223         0         1
          1      72.7      2.11         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.223  -0.00261        -1
          1      4.17      2.11        -1   0.00261
         *Z       ---       ---  1.02e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85654, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57129, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241726, elapsed time[sec] = 1
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82022, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0574192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.474    0.0881         0     0.999
          1      18.6     0.939         1   -0.0406
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0881  -0.00757        -1
          1      1.07     0.939        -1   0.00757
         *Z       ---       ---  1.02e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82258, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.944214, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002514, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.952781, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0574192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.283    0.0551         0     0.997
          1      10.5     0.869         1   -0.0755
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0551   -0.0141        -1
          1     0.601     0.869        -1    0.0141
         *Z       ---       ---  1.02e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.953157, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0574192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.168     0.033         0     0.995
          1      6.14      0.82         1    -0.135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00966     0.033   -0.0251        -1
          1     0.353      0.82        -1    0.0251
         *Z       ---       ---  1.02e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018973, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01632, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002489, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018862, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0574192
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.099    0.0192         0     0.993
          1      3.83     0.748         1    -0.213
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00568    0.0192   -0.0397    -0.999
          1      0.22     0.748    -0.999    0.0397
         *Z       ---       ---  1.02e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001722
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000417
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033423
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.190545
         W1a Well: minimal relaxation eigenvalue = 0.0567675
         W1a Well: maximal relaxation eigenvalue = 5.73557
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001849
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.266144
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071085
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078553
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.282802
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.94556, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.48e+05 4.72e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0464  1.88e-18  1.92e-42
        W1b      21.5         1  4.06e-17  4.15e-41
         P1  5.31e+17  2.46e+16         1  1.02e-24
         P2   5.2e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.046  3.91e-22  3.99e-46
        W1b      21.7         1  8.49e-21  8.67e-45
         P1  2.56e+21  1.18e+20         1  1.02e-24
         P2  2.51e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.949574, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.47523, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236331, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.74033, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0567675
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.74     0.249         0     0.999
          1      83.6      1.74         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.099     0.249  -0.00303        -1
          1      4.74      1.74        -1   0.00303
         *Z       ---       ---  9.84e+13  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.74274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.46915, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.225822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70187, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0567675
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.539     0.102         0     0.998
          1      20.6     0.973         1   -0.0395
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102  -0.00852        -1
          1      1.17     0.973        -1   0.00852
         *Z       ---       ---  9.84e+13  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18178, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19289, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0567675
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.325    0.0649         0     0.997
          1      11.5     0.929         1   -0.0721
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0649   -0.0155        -1
          1     0.654     0.929        -1    0.0155
         *Z       ---       ---  9.84e+13  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19325, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015409, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002415, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017879, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0567675
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.195    0.0399         0     0.994
          1      6.75     0.886         1    -0.127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.011    0.0399   -0.0273        -1
          1     0.383     0.886        -1    0.0273
         *Z       ---       ---  9.84e+13  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017903, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01538, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002403, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017834, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0567675
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.116     0.024         0     0.991
          1      4.22     0.813         1    -0.198
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00658     0.024   -0.0427    -0.999
          1     0.239     0.813    -0.999    0.0427
         *Z       ---       ---  9.84e+13  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017858, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00181
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030717
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.191096
         W1a Well: minimal relaxation eigenvalue = 0.0559802
         W1a Well: maximal relaxation eigenvalue = 8.8112
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001903
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.251831
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071085
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087866
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.281206
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.935776, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.26e+05 5.73e+12
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0611  1.57e-18  8.87e-42
        W1b      16.4         1  2.56e-17  1.45e-40
         P1  6.39e+17   3.9e+16         1  5.66e-24
         P2  1.13e+41  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0606  3.32e-22  1.88e-45
        W1b      16.5         1  5.48e-21   3.1e-44
         P1  3.01e+21  1.83e+20         1  5.66e-24
         P2  5.32e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.939872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240783, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75296, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0559802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.97     0.277         0     0.999
          1      90.3      2.05         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.277  -0.00352        -1
          1      5.05      2.05        -1   0.00352
         *Z       ---       ---   9.6e+13  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7554, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48508, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.226645, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.71899, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0559802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.616     0.117         0     0.998
          1      22.3      1.07         1   -0.0388
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0345     0.117  -0.00958        -1
          1      1.25      1.07        -1   0.00958
         *Z       ---       ---   9.6e+13  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15708, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003235, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16614, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0559802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.373    0.0758         0     0.996
          1      12.5      1.01         1   -0.0693
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0209    0.0758   -0.0171        -1
          1     0.701      1.01        -1    0.0171
         *Z       ---       ---   9.6e+13  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002396, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0559802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.225    0.0477         0     0.993
          1      7.37     0.959         1     -0.12
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0126    0.0477   -0.0295        -1
          1     0.412     0.959        -1    0.0295
         *Z       ---       ---   9.6e+13  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017988, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002398, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0559802
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.136    0.0296    0.0112     0.989
          1      4.63     0.882         1    -0.185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0076    0.0296   -0.0457    -0.999
          1     0.259     0.882    -0.999    0.0457
         *Z       ---       ---   9.6e+13  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017943, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00164
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000405
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03449
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179773
         W1a Well: minimal relaxation eigenvalue = 0.0551535
         W1a Well: maximal relaxation eigenvalue = 12.1894
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001726
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.252026
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066436
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084635
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.270892
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.910102, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.29e+05 6.94e+12
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0792  1.29e-18  3.67e-41
        W1b      12.6         1  1.63e-17  4.63e-40
         P1  7.76e+17  6.14e+16         1  2.85e-23
         P2  2.73e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0785  2.85e-22  8.11e-45
        W1b      12.7         1  3.63e-21  1.03e-43
         P1  3.51e+21  2.76e+20         1  2.85e-23
         P2  1.23e+44  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.913932, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41097, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246254, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67695, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551535
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.306         0     0.999
          1        96      2.71         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.306  -0.00405        -1
          1       5.3      2.71        -1   0.00405
         *Z       ---       ---  9.32e+13  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40701, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.216763, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63048, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551535
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.702     0.133         0     0.997
          1      24.2      1.19         1   -0.0381
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133   -0.0107        -1
          1      1.33      1.19        -1    0.0107
         *Z       ---       ---  9.32e+13  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3078, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.02151, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551535
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.428    0.0877         0     0.995
          1      13.6       1.1         1   -0.0667
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236    0.0877   -0.0188        -1
          1     0.751       1.1        -1    0.0188
         *Z       ---       ---  9.32e+13  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33551, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015969, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018496, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551535
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.26    0.0564         0     0.991
          1      8.05      1.04         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0564   -0.0319    -0.999
          1     0.444      1.04    -0.999    0.0319
         *Z       ---       ---  9.32e+13  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014645, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002295, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01699, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0551535
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.158     0.036    0.0135     0.986
          1      5.08     0.958         1    -0.173
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00873     0.036   -0.0487    -0.999
          1      0.28     0.958    -0.999    0.0487
         *Z       ---       ---  9.32e+13  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017014, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001745
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000407
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028155
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182174
         W1a Well: minimal relaxation eigenvalue = 0.0547229
         W1a Well: maximal relaxation eigenvalue = 6.47238
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001932
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.254074
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065761
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081666
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.272071
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.905601, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.07e+05 8.36e+12
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.101   1.1e-18  1.43e-40
        W1b      9.87         1  1.08e-17  1.41e-39
         P1  9.12e+17  9.24e+16         1  1.31e-22
         P2  6.98e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       0.1  2.47e-22  3.23e-44
        W1b      9.96         1  2.46e-21  3.22e-43
         P1  4.05e+21  4.06e+20         1  1.31e-22
         P2   3.1e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.909391, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41418, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.247192, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67603, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.5     0.338         0     0.999
          1       112      1.81         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00461        -1
          1      6.13      1.81        -1   0.00461
         *Z       ---       ---  9.17e+13  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40902, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.216972, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.792      0.15         0     0.996
          1      26.9      1.21         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0119        -1
          1      1.47      1.21        -1    0.0119
         *Z       ---       ---  9.17e+13  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63556, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30634, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.021142, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33319, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.486     0.101         0     0.994
          1        15      1.17         1    -0.064
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101   -0.0204        -1
          1     0.823      1.17        -1    0.0204
         *Z       ---       ---  9.17e+13  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33364, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015882, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01841, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.298    0.0663    0.0107     0.989
          1      8.89      1.12         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0663   -0.0341    -0.999
          1     0.487      1.12    -0.999    0.0341
         *Z       ---       ---  9.17e+13  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018448, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014667, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002308, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547229
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.183    0.0434    0.0161     0.984
          1      5.63      1.04         1    -0.162
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.01    0.0434   -0.0514    -0.999
          1     0.308      1.04    -0.999    0.0514
         *Z       ---       ---  9.17e+13  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017051, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001747
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000406
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030243
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186176
         W1a Well: minimal relaxation eigenvalue = 0.0539942
         W1a Well: maximal relaxation eigenvalue = 10.0681
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00194
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.257499
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066396
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076683
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.271448
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.909784, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 8.89e+04 1.01e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.128  9.41e-19   5.2e-40
        W1b      7.82         1  7.35e-18  4.07e-39
         P1  1.06e+18  1.36e+17         1  5.53e-22
         P2  1.92e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.127  2.16e-22   1.2e-43
        W1b      7.89         1  1.71e-21  9.44e-43
         P1  4.62e+21  5.86e+20         1  5.53e-22
         P2  8.36e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.913564, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.42394, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0539942
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.81     0.374         0     0.998
          1       118      2.56         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.374  -0.00519        -1
          1      6.36      2.56        -1   0.00519
         *Z       ---       ---  9.06e+13  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.6978, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41821, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217721, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64264, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0539942
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.897     0.169         0     0.995
          1      29.1      1.34         1   -0.0365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0484     0.169   -0.0131        -1
          1      1.57      1.34        -1    0.0131
         *Z       ---       ---  9.06e+13  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64498, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26944, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.018091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29323, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0539942
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.552     0.115         0     0.992
          1      16.4      1.28         1   -0.0618
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.115   -0.0221        -1
          1     0.884      1.28        -1    0.0221
         *Z       ---       ---  9.06e+13  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29363, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002305, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017251, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0539942
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.341    0.0772    0.0128     0.987
          1      9.72      1.22         1    -0.102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0772   -0.0363    -0.999
          1     0.525      1.22    -0.999    0.0363
         *Z       ---       ---  9.06e+13  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017279, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01482, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002304, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017177, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0539942
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.211    0.0518    0.0191     0.981
          1      6.19      1.13         1    -0.152
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0114    0.0518   -0.0543    -0.999
          1     0.334      1.13    -0.999    0.0543
         *Z       ---       ---  9.06e+13  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017201, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001755
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000402
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032715
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175919
         W1a Well: minimal relaxation eigenvalue = 0.0534064
         W1a Well: maximal relaxation eigenvalue = 9.4918
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00193
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.236668
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064501
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085139
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.251652
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.868203, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.05e+05 1.21e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.159  7.99e-19  1.73e-39
        W1b      6.28         1  5.02e-18  1.09e-38
         P1  1.25e+18  1.99e+17         1  2.17e-21
         P2  5.77e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.158  1.91e-22  4.14e-43
        W1b      6.33         1  1.21e-21  2.62e-42
         P1  5.24e+21  8.27e+20         1  2.17e-21
         P2  2.42e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.872005, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221766, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57948, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.15     0.405         0     0.998
          1       133       2.2         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.405  -0.00585        -1
          1       7.1       2.2        -1   0.00585
         *Z       ---       ---  8.88e+13  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.58192, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34307, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206153, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55576, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.188         0     0.994
          1      31.9      1.43         1   -0.0359
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0538     0.188   -0.0143        -1
          1       1.7      1.43        -1    0.0143
         *Z       ---       ---  8.88e+13  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.152552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48433, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.624      0.13         0     0.991
          1        18      1.38         1   -0.0596
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0333      0.13   -0.0238        -1
          1     0.959      1.38        -1    0.0238
         *Z       ---       ---  8.88e+13  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48494, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.034662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002191, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.037366, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.387    0.0888    0.0152     0.985
          1      10.7      1.32         1   -0.0966
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0888   -0.0385    -0.999
          1     0.571      1.32    -0.999    0.0385
         *Z       ---       ---  8.88e+13  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.037428, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014009, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002193, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01625, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534064
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242     0.061    0.0222     0.978
          1      6.83      1.22         1    -0.142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0129     0.061   -0.0568    -0.998
          1     0.365      1.22    -0.998    0.0568
         *Z       ---       ---  8.88e+13  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016276, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001753
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000396
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03317
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182316
         W1a Well: minimal relaxation eigenvalue = 0.0529209
         W1a Well: maximal relaxation eigenvalue = 6.41582
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001897
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.246295
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065143
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069724
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.257197
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.874665, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 8.64e+04 1.44e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.197  6.98e-19  5.53e-39
        W1b      5.08         1  3.55e-18  2.81e-38
         P1  1.43e+18  2.82e+17         1  7.91e-21
         P2  1.81e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.195   1.7e-22  1.35e-42
        W1b      5.13         1  8.73e-22  6.91e-42
         P1  5.88e+21  1.15e+21         1  7.91e-21
         P2  7.43e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.878709, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35148, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.231777, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60488, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0529209
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.53     0.442         0     0.997
          1       147      2.15         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187     0.442  -0.00652        -1
          1      7.78      2.15        -1   0.00652
         *Z       ---       ---  8.82e+13  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60737, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34689, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0529209
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.209         0     0.993
          1      35.1      1.53         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.06     0.209   -0.0156        -1
          1      1.86      1.53        -1    0.0156
         *Z       ---       ---  8.82e+13  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.56242, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119878, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47194, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0529209
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.704     0.147    0.0112     0.989
          1      19.7      1.49         1   -0.0576
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0372     0.147   -0.0256        -1
          1      1.04      1.49        -1    0.0256
         *Z       ---       ---  8.82e+13  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47254, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.030677, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.033345, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0529209
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.44     0.102    0.0178     0.982
          1      11.8      1.43         1   -0.0919
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0233     0.102   -0.0407    -0.999
          1     0.624      1.43    -0.999    0.0407
         *Z       ---       ---  8.82e+13  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.033402, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002204, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016268, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0529209
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.278    0.0715    0.0256     0.974
          1      7.57      1.32         1    -0.134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0147    0.0715   -0.0591    -0.998
          1     0.401      1.32    -0.998    0.0591
         *Z       ---       ---  8.82e+13  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016291, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001679
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033468
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.17107
         W1a Well: minimal relaxation eigenvalue = 0.0522279
         W1a Well: maximal relaxation eigenvalue = 10.4214
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001761
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.220711
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063212
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077642
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.248642
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.835329, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.18e+05 1.72e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.24  6.04e-19  1.64e-38
        W1b      4.16         1  2.51e-18   6.8e-38
         P1  1.66e+18  3.98e+17         1  2.71e-20
         P2  6.11e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.238  1.52e-22  4.13e-42
        W1b      4.21         1  6.41e-22  1.74e-41
         P1  6.56e+21  1.56e+21         1  2.71e-20
         P2  2.42e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.839085, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29611, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222158, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53186, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0522279
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.96     0.479         0     0.996
          1       159      2.51         1   -0.0149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.479  -0.00729        -1
          1      8.32      2.51        -1   0.00729
         *Z       ---       ---   8.7e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28976, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.199607, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4955, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0522279
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.27     0.231         0     0.992
          1      38.1      1.68         1   -0.0348
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0666     0.231   -0.0171        -1
          1      1.99      1.68        -1    0.0171
         *Z       ---       ---   8.7e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49781, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29346, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202561, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0522279
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.794     0.164    0.0133     0.987
          1      21.5      1.62         1    -0.056
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0415     0.164   -0.0274        -1
          1      1.12      1.62        -1    0.0274
         *Z       ---       ---   8.7e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50476, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.134998, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002115, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.142394, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0522279
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.498     0.116    0.0207     0.979
          1      12.9      1.55         1   -0.0879
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.026     0.116   -0.0431    -0.999
          1     0.673      1.55    -0.999    0.0431
         *Z       ---       ---   8.7e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.142752, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013443, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015604, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0522279
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.317    0.0828    0.0295      0.97
          1      8.32      1.43         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0166    0.0828   -0.0619    -0.998
          1     0.435      1.43    -0.998    0.0619
         *Z       ---       ---   8.7e+13  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015628, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00175
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000403
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0331
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.171322
         W1a Well: minimal relaxation eigenvalue = 0.0518041
         W1a Well: maximal relaxation eigenvalue = 6.92437
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001835
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22182
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065432
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083691
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.250881
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.846794, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 9.45e+04 2.04e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.29  5.35e-19  4.67e-38
        W1b      3.45         1  1.84e-18  1.61e-37
         P1  1.87e+18  5.42e+17         1  8.73e-20
         P2  2.14e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.288  1.38e-22   1.2e-41
        W1b      3.48         1  4.78e-22  4.18e-41
         P1  7.27e+21  2.09e+21         1  8.73e-20
         P2  8.33e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.850581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29614, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222797, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54528, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518041
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.37     0.521         0     0.996
          1       178      2.27         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.521  -0.00795        -1
          1      9.21      2.27        -1   0.00795
         *Z       ---       ---  8.69e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29089, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197939, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49554, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518041
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.42     0.256         0      0.99
          1      41.9      1.79         1    -0.034
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0734     0.256   -0.0183        -1
          1      2.17      1.79        -1    0.0183
         *Z       ---       ---  8.69e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.291, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199395, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49679, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518041
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.886     0.184    0.0154     0.985
          1      23.7      1.74         1   -0.0539
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0459     0.184    -0.029        -1
          1      1.23      1.74        -1     0.029
         *Z       ---       ---  8.69e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.12462, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00212, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.132021, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518041
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.56     0.131    0.0237     0.976
          1      14.2      1.67         1   -0.0835
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.029     0.131   -0.0449    -0.999
          1     0.738      1.67    -0.999    0.0449
         *Z       ---       ---  8.69e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.132396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013434, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015589, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0518041
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.359    0.0956    0.0332     0.967
          1      9.24      1.55         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0186    0.0956   -0.0637    -0.998
          1     0.479      1.55    -0.998    0.0637
         *Z       ---       ---  8.69e+13  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015614, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001681
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029114
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.180529
         W1a Well: minimal relaxation eigenvalue = 0.0511807
         W1a Well: maximal relaxation eigenvalue = 10.4845
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001946
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22836
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063296
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067205
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.246297
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.835359, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.42e+05 2.42e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.348  4.78e-19  1.27e-37
        W1b      2.87         1  1.37e-18  3.65e-37
         P1  2.09e+18  7.28e+17         1  2.66e-19
         P2  7.86e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.345  1.25e-22  3.32e-41
        W1b       2.9         1  3.63e-22  9.64e-41
         P1     8e+21  2.76e+21         1  2.66e-19
         P2  3.01e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.839123, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30643, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.219767, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55521, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511807
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.86     0.565         0     0.995
          1       190      2.87         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249     0.565  -0.00872        -1
          1      9.74      2.87        -1   0.00872
         *Z       ---       ---  8.68e+13  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29906, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201968, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511807
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.281    0.0115     0.988
          1      45.5      1.96         1   -0.0336
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0809     0.281   -0.0198        -1
          1      2.33      1.96        -1    0.0198
         *Z       ---       ---  8.68e+13  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50985, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30098, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50819, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511807
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.992     0.204    0.0179     0.982
          1      25.8      1.89         1   -0.0525
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0508     0.204   -0.0309        -1
          1      1.32      1.89        -1    0.0309
         *Z       ---       ---  8.68e+13  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51054, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.097476, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002135, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.104916, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511807
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.629     0.147    0.0271     0.973
          1      15.6      1.81         1   -0.0802
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0322     0.147   -0.0473    -0.999
          1     0.797      1.81    -0.999    0.0473
         *Z       ---       ---  8.68e+13  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.105287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013528, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015704, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511807
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.407     0.109    0.0377     0.962
          1      10.1      1.68         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0208     0.109   -0.0663    -0.998
          1     0.519      1.68    -0.998    0.0663
         *Z       ---       ---  8.68e+13  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01573, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001695
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000397
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033429
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175847
         W1a Well: minimal relaxation eigenvalue = 0.0502571
         W1a Well: maximal relaxation eigenvalue = 17.3395
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00182
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232209
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062046
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065951
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.241286
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.830867, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.21e+05 2.86e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.413  4.22e-19  3.25e-37
        W1b      2.42         1  1.02e-18  7.86e-37
         P1  2.37e+18  9.79e+17         1  7.69e-19
         P2  3.08e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.41  1.14e-22  8.78e-41
        W1b      2.44         1  2.79e-22  2.14e-40
         P1  8.76e+21  3.59e+21         1  7.69e-19
         P2  1.14e+40  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.834911, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218032, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502571
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.42     0.611         0     0.994
          1       201       4.4         1   -0.0148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.611  -0.00951        -1
          1      10.1       4.4        -1   0.00951
         *Z       ---       ---  8.63e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49216, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25226, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45467, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502571
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.307    0.0135     0.986
          1      49.1      2.21         1   -0.0332
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.307   -0.0213        -1
          1      2.47      2.21        -1    0.0213
         *Z       ---       ---  8.63e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45705, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193984, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45201, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502571
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.224    0.0208     0.979
          1      27.8      2.08         1   -0.0514
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.224    -0.033    -0.999
          1       1.4      2.08    -0.999     0.033
         *Z       ---       ---  8.63e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.277549, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.284805, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502571
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.707     0.164    0.0312     0.969
          1      16.8      1.98         1    -0.078
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0355     0.164   -0.0501    -0.999
          1     0.845      1.98    -0.999    0.0501
         *Z       ---       ---  8.63e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.285169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013143, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502571
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.458     0.123    0.0432     0.957
          1        11      1.83         1    -0.109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.023     0.123   -0.0701    -0.998
          1     0.551      1.83    -0.998    0.0701
         *Z       ---       ---  8.63e+13  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015276, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001754
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000373
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032524
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175339
         W1a Well: minimal relaxation eigenvalue = 0.050246
         W1a Well: maximal relaxation eigenvalue = 8.32845
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001763
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228325
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059846
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075654
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.240396
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.831727, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 9.37e+04 3.37e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.488  3.81e-19  8.08e-37
        W1b      2.05         1  7.82e-19  1.66e-36
         P1  2.62e+18  1.28e+18         1  2.12e-18
         P2  1.24e+36  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.483  1.05e-22  2.22e-40
        W1b      2.07         1  2.17e-22   4.6e-40
         P1  9.54e+21  4.61e+21         1  2.12e-18
         P2   4.5e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.835467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202769, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49036, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.050246
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.95     0.658         0     0.993
          1       232       2.8         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.658   -0.0103        -1
          1      11.7       2.8        -1    0.0103
         *Z       ---       ---  8.67e+13  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49279, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25701, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195293, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45857, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.050246
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.95     0.336    0.0155     0.984
          1      54.6      2.28         1   -0.0323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0979     0.336   -0.0226        -1
          1      2.74      2.28        -1    0.0226
         *Z       ---       ---  8.67e+13  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25536, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195468, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45708, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.050246
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.248    0.0234     0.977
          1      31.1      2.21         1   -0.0492
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0618     0.248   -0.0344    -0.999
          1      1.56      2.21    -0.999    0.0344
         *Z       ---       ---  8.67e+13  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.264445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002045, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.271621, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.050246
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.788     0.184    0.0345     0.966
          1      18.9      2.12         1   -0.0733
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0396     0.184   -0.0511    -0.999
          1     0.949      2.12    -0.999    0.0511
         *Z       ---       ---  8.67e+13  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.271989, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013073, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.050246
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.516      0.14    0.0467     0.953
          1      12.4      1.96         1      -0.1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0259      0.14     -0.07    -0.998
          1     0.624      1.96    -0.998      0.07
         *Z       ---       ---  8.67e+13  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015182, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001622
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028486
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173052
         W1a Well: minimal relaxation eigenvalue = 0.0496609
         W1a Well: maximal relaxation eigenvalue = 11.6788
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001723
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.219161
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058422
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077189
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.235261
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.810922, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 8.64e+04 3.96e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.571  3.41e-19   1.9e-36
        W1b      1.75         1  5.97e-19  3.33e-36
         P1  2.93e+18  1.68e+18         1  5.58e-18
         P2  5.25e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.566  9.68e-23   5.4e-40
        W1b      1.77         1  1.71e-22  9.55e-40
         P1  1.03e+22  5.85e+21         1  5.58e-18
         P2  1.85e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.814728, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21577, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44132, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0496609
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.58      0.71         0     0.992
          1       249      3.39         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.327      0.71   -0.0111        -1
          1      12.4      3.39        -1    0.0111
         *Z       ---       ---  8.64e+13  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21142, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40667, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0496609
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.16     0.366    0.0178     0.982
          1      59.3      2.49         1   -0.0318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.366    -0.024        -1
          1      2.94      2.49        -1     0.024
         *Z       ---       ---  8.64e+13  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40904, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2119, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40742, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0496609
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.272    0.0267     0.973
          1      33.8       2.4         1    -0.048
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0679     0.272   -0.0363    -0.999
          1      1.68       2.4    -0.999    0.0363
         *Z       ---       ---  8.64e+13  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40975, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.42044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.427789, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0496609
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.878     0.204    0.0388     0.961
          1      20.6      2.29         1   -0.0708
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0436     0.204   -0.0534    -0.999
          1      1.02      2.29    -0.999    0.0534
         *Z       ---       ---  8.64e+13  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.428155, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012595, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002005, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014646, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0496609
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.578     0.157    0.0522     0.948
          1      13.6      2.12         1   -0.0964
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0287     0.157   -0.0727    -0.997
          1     0.674      2.12    -0.997    0.0727
         *Z       ---       ---  8.64e+13  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01467, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00168
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000384
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033511
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172523
         W1a Well: minimal relaxation eigenvalue = 0.0493536
         W1a Well: maximal relaxation eigenvalue = 6.97081
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001747
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.22315
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058576
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070897
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.233092
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.812077, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.35e+05 4.65e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.664  3.11e-19  4.39e-36
        W1b      1.51         1  4.68e-19   6.6e-36
         P1  3.21e+18  2.13e+18         1  1.41e-17
         P2  2.28e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.658  8.97e-23  1.26e-39
        W1b      1.52         1  1.36e-22  1.92e-39
         P1  1.11e+22  7.34e+21         1  1.41e-17
         P2  7.91e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.816339, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.214121, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44251, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.24     0.761         0      0.99
          1       279      3.11         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.358     0.761   -0.0119        -1
          1      13.8      3.11        -1    0.0119
         *Z       ---       ---  8.71e+13  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21332, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189521, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40897, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.38     0.398    0.0203      0.98
          1      65.5      2.66         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.398   -0.0254        -1
          1      3.23      2.66        -1    0.0254
         *Z       ---       ---  8.71e+13  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41133, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2125, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40769, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.51     0.299    0.0299      0.97
          1      37.4      2.59         1   -0.0465
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0747     0.299   -0.0378    -0.999
          1      1.85      2.59    -0.999    0.0378
         *Z       ---       ---  8.71e+13  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41003, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.417425, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001998, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.424479, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.978     0.227    0.0428     0.957
          1      22.9      2.47         1   -0.0673
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0483     0.227   -0.0548    -0.998
          1      1.13      2.47    -0.998    0.0548
         *Z       ---       ---  8.71e+13  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.424844, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012617, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014665, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.65     0.177    0.0565     0.943
          1      15.2      2.27         1   -0.0902
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0321     0.177   -0.0733    -0.997
          1      0.75      2.27    -0.997    0.0733
         *Z       ---       ---  8.71e+13  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014689, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001613
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000381
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032191
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.173064
         W1a Well: minimal relaxation eigenvalue = 0.0488242
         W1a Well: maximal relaxation eigenvalue = 9.97456
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001794
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.223183
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059138
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077438
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.233987
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.8183, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 9.98e+04 5.44e+13
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.768  2.85e-19  9.76e-36
        W1b       1.3         1  3.71e-19  1.27e-35
         P1  3.51e+18  2.69e+18         1  3.42e-17
         P2  1.02e+35  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.761  8.35e-23  2.86e-39
        W1b      1.31         1   1.1e-22  3.76e-39
         P1   1.2e+22  9.11e+21         1  3.42e-17
         P2   3.5e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.822051, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45436, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0488242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.02     0.815    0.0111     0.989
          1       303      3.44         1   -0.0147
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.391     0.815   -0.0129        -1
          1      14.8      3.44        -1    0.0129
         *Z       ---       ---  8.78e+13     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45681, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2222, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0488242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.64     0.431    0.0231     0.977
          1      71.1      2.89         1   -0.0308
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.431    -0.027        -1
          1      3.47      2.89        -1     0.027
         *Z       ---       ---  8.78e+13     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191318, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0488242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.68     0.325    0.0337     0.966
          1      40.7       2.8         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0819     0.325   -0.0398    -0.999
          1      1.98       2.8    -0.999    0.0398
         *Z       ---       ---  8.78e+13     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4233, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.37898, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002026, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.3861, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0488242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.09     0.249    0.0478     0.952
          1      24.9      2.67         1   -0.0653
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.053     0.249   -0.0572    -0.998
          1      1.22      2.67    -0.998    0.0572
         *Z       ---       ---  8.78e+13     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.386469, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012694, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002017, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014758, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0488242
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.724     0.197    0.0627     0.937
          1      16.6      2.46         1    -0.087
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0354     0.197   -0.0761    -0.997
          1     0.809      2.46    -0.997    0.0761
         *Z       ---       ---  8.78e+13     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014783, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001582
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029648
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.17005
         W1a Well: minimal relaxation eigenvalue = 0.0483542
         W1a Well: maximal relaxation eigenvalue = 11.0039
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001695
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.222957
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058643
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062009
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.225432
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.788149, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.03e+05 6.36e+13
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.882  2.59e-19  2.07e-35
        W1b      1.13         1  2.93e-19  2.35e-35
         P1  3.87e+18  3.41e+18         1     8e-17
         P2  4.83e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.874  7.81e-23  6.25e-39
        W1b      1.14         1  8.93e-23  7.15e-39
         P1  1.28e+22  1.12e+22         1     8e-17
         P2   1.6e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.791964, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18081, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208321, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4054, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483542
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.83     0.872    0.0127     0.987
          1       331      3.76         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.427     0.872   -0.0137        -1
          1        16      3.76        -1    0.0137
         *Z       ---       ---   8.8e+13  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40784, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1797, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184991, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483542
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.91     0.465    0.0261     0.974
          1      77.6      3.14         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.465   -0.0285        -1
          1      3.75      3.14        -1    0.0285
         *Z       ---       ---   8.8e+13  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37334, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184512, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37355, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483542
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.85     0.354    0.0376     0.962
          1      44.4      3.03         1   -0.0443
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0896     0.354   -0.0416    -0.999
          1      2.15      3.03    -0.999    0.0416
         *Z       ---       ---   8.8e+13  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.533531, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001957, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.540828, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483542
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.2     0.273    0.0528     0.947
          1      27.3      2.88         1   -0.0632
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0582     0.273   -0.0592    -0.998
          1      1.32      2.88    -0.998    0.0592
         *Z       ---       ---   8.8e+13  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.541201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001942, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483542
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.806     0.218    0.0686     0.931
          1      18.2      2.65         1   -0.0835
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.039     0.218   -0.0782    -0.997
          1     0.879      2.65    -0.997    0.0782
         *Z       ---       ---   8.8e+13  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014275, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001671
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000374
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028945
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164098
         W1a Well: minimal relaxation eigenvalue = 0.0480607
         W1a Well: maximal relaxation eigenvalue = 7.17866
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001808
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.215099
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057909
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066435
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227528
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.779198, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 7.55e+04 7.41e+13
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  2.39e-19  4.32e-35
        W1b     0.992         1  2.37e-19  4.29e-35
         P1  4.18e+18  4.22e+18         1  1.81e-16
         P2  2.31e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.999  7.33e-23  1.32e-38
        W1b         1         1  7.34e-23  1.33e-38
         P1  1.36e+22  1.36e+22         1  1.81e-16
         P2  7.55e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.783252, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18784, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191854, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40477, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       9.7     0.931    0.0144     0.986
          1       362      3.92         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.466     0.931   -0.0145        -1
          1      17.4      3.92        -1    0.0145
         *Z       ---       ---  8.89e+13  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40721, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18726, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184224, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37758, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.21     0.502    0.0291     0.971
          1      85.4      3.38         1   -0.0297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.502   -0.0298        -1
          1      4.11      3.38        -1    0.0298
         *Z       ---       ---  8.89e+13  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37992, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18594, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185566, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37755, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.05     0.385    0.0414     0.959
          1      49.1      3.27         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0983     0.385    -0.043    -0.999
          1      2.36      3.27    -0.999     0.043
         *Z       ---       ---  8.89e+13  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.519299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001969, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.526227, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.34       0.3    0.0571     0.943
          1      30.4       3.1         1     -0.06
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0642       0.3   -0.0602    -0.998
          1      1.46       3.1    -0.998    0.0602
         *Z       ---       ---  8.89e+13  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.526593, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012317, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001946, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0480607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.902     0.242    0.0731     0.927
          1      20.4      2.84         1   -0.0782
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0433     0.242   -0.0783    -0.997
          1      0.98      2.84    -0.997    0.0783
         *Z       ---       ---  8.89e+13  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014338, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001608
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028777
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168647
         W1a Well: minimal relaxation eigenvalue = 0.0467983
         W1a Well: maximal relaxation eigenvalue = 20.3508
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001796
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21389
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054793
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051707
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219118
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.755921, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 8.64e+04 8.62e+13
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.15  2.19e-19  8.64e-35
        W1b     0.872         1  1.91e-19  7.54e-35
         P1  4.57e+18  5.24e+18         1  3.95e-16
         P2  1.16e+34  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.14   6.9e-23  2.73e-38
        W1b      0.88         1  6.08e-23   2.4e-38
         P1  1.45e+22  1.65e+22         1  3.95e-16
         P2  3.67e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.75984, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14798, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190793, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36329, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9      0.99    0.0165     0.984
          1       382         6         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509      0.99   -0.0157        -1
          1      17.9         6        -1    0.0157
         *Z       ---       ---  8.94e+13  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36574, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14396, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179637, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32952, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.58     0.537    0.0333     0.967
          1      90.3      3.81         1   -0.0301
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.537   -0.0322    -0.999
          1      4.23      3.81    -0.999    0.0322
         *Z       ---       ---  8.94e+13  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3319, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176171, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.28     0.412    0.0477     0.952
          1      51.2      3.59         1   -0.0437
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.412   -0.0467    -0.999
          1       2.4      3.59    -0.999    0.0467
         *Z       ---       ---  8.94e+13  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32601, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.655911, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.662567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.48     0.321    0.0666     0.933
          1      31.1       3.4         1   -0.0622
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0692     0.321   -0.0665    -0.998
          1      1.46       3.4    -0.998    0.0665
         *Z       ---       ---  8.94e+13  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.662922, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011898, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013822, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0467983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.986      0.26    0.0869     0.913
          1      20.5      3.13         1    -0.083
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0462      0.26   -0.0885    -0.996
          1     0.959      3.13    -0.996    0.0885
         *Z       ---       ---  8.94e+13  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013847, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001611
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000369
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030128
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164709
         W1a Well: minimal relaxation eigenvalue = 0.0471723
         W1a Well: maximal relaxation eigenvalue = 10.1838
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001777
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.221377
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057866
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069291
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.223232
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.785351, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.36e+05    1e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.3  2.04e-19  1.71e-34
        W1b     0.771         1  1.57e-19  1.32e-34
         P1   4.9e+18  6.36e+18         1  8.37e-16
         P2  5.86e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.28  6.52e-23  5.46e-38
        W1b     0.778         1  5.08e-23  4.25e-38
         P1  1.53e+22  1.97e+22         1  8.37e-16
         P2  1.83e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.789159, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1551, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195988, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37347, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.5       1.1     0.018     0.982
          1       429      4.71         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.543       1.1   -0.0161        -1
          1      20.2      4.71        -1    0.0161
         *Z       ---       ---  9.05e+13  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37594, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15764, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34447, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.84     0.593    0.0358     0.964
          1       101      3.96         1   -0.0286
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.593   -0.0325    -0.999
          1      4.77      3.96    -0.999    0.0325
         *Z       ---       ---  9.05e+13  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34682, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15556, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181235, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.46     0.457    0.0502      0.95
          1      58.2      3.82         1   -0.0407
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.457   -0.0463    -0.999
          1      2.75      3.82    -0.999    0.0463
         *Z       ---       ---  9.05e+13  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34516, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.624607, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.63141, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.62      0.36    0.0682     0.932
          1      36.1      3.62         1   -0.0564
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0762      0.36   -0.0641    -0.998
          1       1.7      3.62    -0.998    0.0641
         *Z       ---       ---  9.05e+13  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.631773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012013, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001887, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013946, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0471723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.1     0.294    0.0862     0.914
          1      24.3      3.31         1   -0.0727
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0519     0.294   -0.0826    -0.997
          1      1.14      3.31    -0.997    0.0826
         *Z       ---       ---  9.05e+13  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01397, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001625
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000371
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034231
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172034
         W1a Well: minimal relaxation eigenvalue = 0.0464075
         W1a Well: maximal relaxation eigenvalue = 17.3419
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00218
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214077
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054933
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067848
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.217255
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.779645, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 9.65e+04 1.16e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.46  1.91e-19  3.28e-34
        W1b     0.685         1  1.31e-19  2.25e-34
         P1  5.25e+18  7.66e+18         1  1.72e-15
         P2  3.05e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.45  6.18e-23  1.06e-37
        W1b     0.691         1  4.27e-23  7.36e-38
         P1  1.62e+22  2.34e+22         1  1.72e-15
         P2  9.39e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.783331, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1464, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37137, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0464075
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.9      1.14    0.0205     0.979
          1       463      5.67         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.598      1.14   -0.0173        -1
          1      21.5      5.67        -1    0.0173
         *Z       ---       ---  9.18e+13   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37385, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14378, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178807, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32855, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0464075
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.27     0.623    0.0404      0.96
          1       108      4.33         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.198     0.623   -0.0349    -0.999
          1      5.03      4.33    -0.999    0.0349
         *Z       ---       ---  9.18e+13   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33098, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14494, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33114, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0464075
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.73     0.483    0.0566     0.943
          1      61.8      4.15         1   -0.0411
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.483   -0.0496    -0.999
          1      2.87      4.15    -0.999    0.0496
         *Z       ---       ---  9.18e+13   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.579486, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.586211, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0464075
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.78     0.382    0.0772     0.923
          1      37.8      3.92         1   -0.0573
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0827     0.382   -0.0691    -0.998
          1      1.76      3.92    -0.998    0.0691
         *Z       ---       ---  9.18e+13   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.586566, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001918, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014009, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0464075
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.2     0.315    0.0983     0.902
          1      25.2       3.6         1   -0.0747
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.315   -0.0899    -0.996
          1      1.17       3.6    -0.996    0.0899
         *Z       ---       ---  9.18e+13   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014033, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001478
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033837
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157671
         W1a Well: minimal relaxation eigenvalue = 0.0462251
         W1a Well: maximal relaxation eigenvalue = 14.8287
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001703
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209908
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053492
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069319
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20911
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.751621, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.23e+05 1.34e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.64  1.76e-19  6.08e-34
        W1b     0.611         1  1.08e-19  3.72e-34
         P1  5.67e+18  9.28e+18         1  3.45e-15
         P2  1.64e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.62  5.88e-23  2.03e-37
        W1b     0.617         1  3.62e-23  1.25e-37
         P1   1.7e+22  2.76e+22         1  3.45e-15
         P2  4.93e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.75552, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187286, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32427, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0462251
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.1       1.2    0.0228     0.977
          1       507      5.87         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.653       1.2   -0.0182        -1
          1      23.4      5.87        -1    0.0182
         *Z       ---       ---  9.25e+13  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177234, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0462251
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.67     0.665    0.0442     0.956
          1       119      4.64         1   -0.0283
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216     0.665   -0.0362    -0.999
          1      5.51      4.64    -0.999    0.0362
         *Z       ---       ---  9.25e+13  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30859, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176638, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0462251
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.99      0.52    0.0612     0.939
          1      68.3      4.45         1   -0.0398
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.138      0.52   -0.0509    -0.999
          1      3.16      4.45    -0.999    0.0509
         *Z       ---       ---  9.25e+13  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31205, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.735802, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742453, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0462251
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.96     0.415    0.0821     0.918
          1      42.1      4.21         1   -0.0547
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0907     0.415   -0.0698    -0.998
          1      1.95      4.21    -0.998    0.0698
         *Z       ---       ---  9.25e+13  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.74282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011656, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013553, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0462251
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.34     0.345     0.103     0.897
          1      28.2      3.85         1   -0.0702
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0618     0.345   -0.0895    -0.996
          1      1.31      3.85    -0.996    0.0895
         *Z       ---       ---  9.25e+13  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013576, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001555
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028729
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167961
         W1a Well: minimal relaxation eigenvalue = 0.0461115
         W1a Well: maximal relaxation eigenvalue = 8.84589
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001698
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.198496
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056695
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060127
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214611
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.744877, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265 8.55e+04 1.55e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.83  1.66e-19  1.12e-33
        W1b     0.547         1  9.07e-20  6.11e-34
         P1  6.03e+18   1.1e+19         1  6.73e-15
         P2  8.96e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.81   5.6e-23  3.77e-37
        W1b     0.552         1  3.09e-23  2.08e-37
         P1  1.79e+22  3.23e+22         1  6.73e-15
         P2  2.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.748616, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12128, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196262, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0461068
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.4      1.27    0.0253     0.975
          1       564      5.52         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.712      1.27   -0.0192        -1
          1        26      5.52        -1    0.0192
         *Z       ---       ---   9.4e+13  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34637, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175399, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30295, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0461068
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.11     0.713    0.0479     0.952
          1       132      4.96         1   -0.0275
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.236     0.713   -0.0371    -0.999
          1      6.11      4.96    -0.999    0.0371
         *Z       ---       ---   9.4e+13  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3053, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12603, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175608, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30758, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0461068
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.28     0.562     0.065     0.935
          1      76.7      4.77         1   -0.0381
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.151     0.562   -0.0514    -0.999
          1      3.54      4.77    -0.999    0.0514
         *Z       ---       ---   9.4e+13  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30992, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.737181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00185, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.743815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0461068
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.17     0.454    0.0855     0.914
          1        48      4.49         1   -0.0512
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.1     0.454    -0.069    -0.998
          1      2.21      4.49    -0.998     0.069
         *Z       ---       ---   9.4e+13  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.744189, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011694, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013572, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0461068
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.5      0.38     0.105     0.895
          1      32.6      4.08         1   -0.0642
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.069      0.38   -0.0865    -0.996
          1       1.5      4.08    -0.996    0.0865
         *Z       ---       ---   9.4e+13  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013597, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001506
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030446
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168291
         W1a Well: minimal relaxation eigenvalue = 0.0455034
         W1a Well: maximal relaxation eigenvalue = 15.3397
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001677
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.205067
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057957
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078244
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219666
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.778102, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.35e+05 1.78e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.03  1.56e-19     2e-33
        W1b     0.492         1   7.7e-20  9.87e-34
         P1   6.4e+18   1.3e+19         1  1.28e-14
         P2  4.99e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.01  5.35e-23  6.86e-37
        W1b     0.497         1  2.66e-23  3.41e-37
         P1  1.87e+22  3.76e+22         1  1.28e-14
         P2  1.46e+36  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.781649, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13769, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.202706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35603, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0455034
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.6       1.4    0.0273     0.973
          1       602       6.9         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.755       1.4   -0.0197        -1
          1      27.4       6.9        -1    0.0197
         *Z       ---       ---  9.55e+13   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35847, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180451, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0455034
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.53     0.776    0.0522     0.948
          1       142       5.4         1   -0.0271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252     0.776   -0.0386    -0.999
          1      6.44       5.4    -0.999    0.0386
         *Z       ---       ---  9.55e+13   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13929, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179941, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0455034
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.56     0.609    0.0713     0.929
          1      81.1      5.18         1   -0.0378
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.609   -0.0538    -0.999
          1      3.69      5.18    -0.999    0.0538
         *Z       ---       ---  9.55e+13   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32757, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.676046, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001884, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.682763, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0455034
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.35      0.49    0.0946     0.905
          1      50.1      4.88         1   -0.0514
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107      0.49   -0.0731    -0.997
          1      2.28      4.88    -0.997    0.0731
         *Z       ---       ---  9.55e+13   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.683132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011816, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00188, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01374, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0455034
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.61      0.41     0.117     0.883
          1      33.6      4.45         1   -0.0654
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0733      0.41   -0.0928    -0.996
          1      1.53      4.45    -0.996    0.0928
         *Z       ---       ---  9.55e+13   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013768, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001563
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000363
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029119
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160498
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 11.3231
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001856
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.206559
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056367
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061461
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.208566
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.741306, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 7.91e+04 2.05e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.25  1.46e-19  3.48e-33
        W1b     0.444         1  6.48e-20  1.55e-33
         P1  6.85e+18  1.54e+19         1  2.39e-14
         P2  2.87e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.23  5.13e-23  1.22e-36
        W1b     0.449         1   2.3e-23  5.49e-37
         P1  1.95e+22  4.35e+22         1  2.39e-14
         P2  8.17e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.745033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09725, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.4      1.44    0.0305     0.969
          1       665      6.52         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.835      1.44    -0.021        -1
          1      30.2      6.52        -1     0.021
         *Z       ---       ---  9.66e+13  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31012, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10192, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173767, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28148, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.1     0.813    0.0568     0.943
          1       156      5.78         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.277     0.813   -0.0401    -0.999
          1      7.08      5.78    -0.999    0.0401
         *Z       ---       ---  9.66e+13  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174392, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28243, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.92     0.645    0.0763     0.924
          1      90.4      5.54         1   -0.0367
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.178     0.645    -0.055    -0.998
          1       4.1      5.54    -0.998     0.055
         *Z       ---       ---  9.66e+13  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28476, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001834, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.83031, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.6     0.526    0.0991     0.901
          1      56.5       5.2         1   -0.0489
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118     0.526   -0.0732    -0.997
          1      2.56       5.2    -0.997    0.0732
         *Z       ---       ---  9.66e+13  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.830678, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011423, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001865, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013332, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.8     0.445     0.121     0.879
          1      38.3      4.72         1    -0.061
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0816     0.445   -0.0911    -0.996
          1      1.74      4.72    -0.996    0.0911
         *Z       ---       ---  9.66e+13  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013356, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001534
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030772
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.169065
         W1a Well: minimal relaxation eigenvalue = 0.0445926
         W1a Well: maximal relaxation eigenvalue = 18.3279
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001802
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203046
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054501
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072534
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211125
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.759129, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.28e+05 2.35e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.48  1.38e-19  6.01e-33
        W1b     0.403         1  5.57e-20  2.42e-33
         P1  7.23e+18   1.8e+19         1  4.35e-14
         P2  1.66e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.46  4.92e-23  2.14e-36
        W1b     0.406         1     2e-23  8.69e-37
         P1  2.03e+22     5e+22         1  4.35e-14
         P2  4.67e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.762856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10995, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31993, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.3      1.52    0.0335     0.966
          1       710      8.52         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.905      1.52    -0.022        -1
          1      31.7      8.52        -1     0.022
         *Z       ---       ---  9.83e+13  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32238, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10729, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174362, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28724, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.7     0.861    0.0628     0.937
          1       167       6.3         1    -0.027
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.861   -0.0425    -0.999
          1      7.43       6.3    -0.999    0.0425
         *Z       ---       ---  9.83e+13  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28959, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10753, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174196, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.3     0.683    0.0849     0.915
          1        95      6.01         1   -0.0373
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.683   -0.0587    -0.998
          1      4.24      6.01    -0.998    0.0587
         *Z       ---       ---  9.83e+13  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2897, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797696, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.804895, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.83     0.557     0.111     0.889
          1      58.3      5.65         1   -0.0505
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.126     0.557   -0.0793    -0.997
          1       2.6      5.65    -0.997    0.0793
         *Z       ---       ---  9.83e+13  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.805255, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011502, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001857, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013402, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.94     0.473     0.137     0.863
          1      38.8      5.15         1   -0.0641
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0864     0.473    -0.101    -0.995
          1      1.73      5.15    -0.995     0.101
         *Z       ---       ---  9.83e+13  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013426, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001566
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000358
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02947
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161938
         W1a Well: minimal relaxation eigenvalue = 0.0446529
         W1a Well: maximal relaxation eigenvalue = 12.2463
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002374
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.202172
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053852
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062558
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.206703
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.735168, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 7.91e+04  2.7e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.73   1.3e-19  1.01e-32
        W1b     0.366         1  4.75e-20  3.68e-33
         P1   7.7e+18  2.11e+19         1  7.75e-14
         P2  9.94e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.71  4.74e-23  3.67e-36
        W1b     0.369         1  1.75e-23  1.36e-36
         P1  2.11e+22  5.72e+22         1  7.75e-14
         P2  2.72e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.738882, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07934, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194358, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28576, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446529
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      21.9      1.61    0.0363     0.964
          1       791      7.59         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.98      1.61   -0.0228        -1
          1      35.3      7.59        -1    0.0228
         *Z       ---       ---  9.95e+13  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07662, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.170497, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25286, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0446529
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.26     0.922    0.0664     0.934
          1       185      6.73         1    -0.026
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.324     0.922    -0.043    -0.999
          1      8.28      6.73    -0.999     0.043
         *Z       ---       ---  9.95e+13  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2552, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07752, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170598, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25365, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446529
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.68     0.737     0.088     0.912
          1       107      6.42         1   -0.0353
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.209     0.737   -0.0583    -0.998
          1      4.79      6.42    -0.998    0.0583
         *Z       ---       ---  9.95e+13  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.256, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.900107, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00518, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910584, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446529
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.11     0.606     0.113     0.887
          1      66.9      6.01         1   -0.0466
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.606   -0.0768    -0.997
          1      2.99      6.01    -0.997    0.0768
         *Z       ---       ---  9.95e+13  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.910963, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001766, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446529
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.16     0.518     0.136     0.864
          1      45.4      5.43         1   -0.0577
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0965     0.518   -0.0949    -0.995
          1      2.03      5.43    -0.995    0.0949
         *Z       ---       ---  9.95e+13  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013004, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001546
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029386
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165366
         W1a Well: minimal relaxation eigenvalue = 0.0429076
         W1a Well: maximal relaxation eigenvalue = 24.0742
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001629
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.20041
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052464
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071302
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204402
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.740906, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.29e+05 3.09e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         3  1.24e-19  1.67e-32
        W1b     0.334         1  4.12e-20  5.59e-33
         P1  8.09e+18  2.42e+19         1  1.35e-13
         P2  5.97e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.97  4.57e-23  6.19e-36
        W1b     0.337         1  1.54e-23  2.08e-36
         P1  2.19e+22   6.5e+22         1  1.35e-13
         P2  1.62e+35   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.744639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07912, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28714, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      24.7       1.7    0.0398      0.96
          1       836      13.8         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.06       1.7   -0.0239        -1
          1      35.9      13.8        -1    0.0239
         *Z       ---       ---  1.01e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28963, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07811, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25504, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.14      0.97    0.0741     0.926
          1       197      7.49         1   -0.0267
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.349      0.97   -0.0462    -0.999
          1      8.47      7.49    -0.999    0.0462
         *Z       ---       ---  1.01e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25741, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07993, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171408, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25707, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.2     0.773       0.1       0.9
          1       111      7.02         1   -0.0371
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223     0.773    -0.064    -0.998
          1      4.77      7.02    -0.998     0.064
         *Z       ---       ---  1.01e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25938, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.893477, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00477, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.41     0.634     0.132     0.868
          1      66.8      6.58         1   -0.0506
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.146     0.634   -0.0872    -0.996
          1      2.87      6.58    -0.996    0.0872
         *Z       ---       ---  1.01e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903324, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001788, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013092, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0429076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.31     0.544     0.164     0.836
          1      43.6      6.01         1   -0.0654
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0993     0.544    -0.112    -0.994
          1      1.87      6.01    -0.994     0.112
         *Z       ---       ---  1.01e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013116, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001472
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028944
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162799
         W1a Well: minimal relaxation eigenvalue = 0.0440147
         W1a Well: maximal relaxation eigenvalue = 12.9398
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001714
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204261
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05267
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072536
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209724
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.748562, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 8.35e+04 3.53e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.28  1.18e-19  2.74e-32
        W1b     0.305         1   3.6e-20  8.37e-33
         P1  8.48e+18  2.78e+19         1  2.32e-13
         P2  3.65e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  4.41e-23  1.03e-35
        W1b     0.308         1  1.36e-23  3.16e-36
         P1  2.27e+22  7.36e+22         1  2.32e-13
         P2  9.75e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.752377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09282, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440055
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.7      1.84    0.0421     0.958
          1       939      8.76         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      1.84   -0.0243        -1
          1      41.3      8.76        -1    0.0243
         *Z       ---       ---  1.03e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31167, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27162, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440055
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.54      1.05    0.0759     0.924
          1       219      7.77         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.376      1.05   -0.0454    -0.999
          1      9.65      7.77    -0.999    0.0454
         *Z       ---       ---  1.03e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09231, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172485, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27055, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440055
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.52     0.845    0.0997       0.9
          1       127      7.41         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.243     0.845   -0.0611    -0.998
          1      5.58      7.41    -0.998    0.0611
         *Z       ---       ---  1.03e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.84002, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002062, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.846751, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440055
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.68       0.7     0.127     0.873
          1      79.2      6.92         1   -0.0442
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162       0.7   -0.0798    -0.997
          1      3.48      6.92    -0.997    0.0798
         *Z       ---       ---  1.03e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.847113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011382, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0440055
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.57     0.602     0.151     0.849
          1      53.7      6.24         1   -0.0544
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.113     0.602    -0.098    -0.995
          1      2.36      6.24    -0.995     0.098
         *Z       ---       ---  1.03e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013248, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001567
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000351
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028731
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156927
         W1a Well: minimal relaxation eigenvalue = 0.0438499
         W1a Well: maximal relaxation eigenvalue = 8.84118
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001767
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208231
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050997
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062206
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.2064
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.731394, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.39e+05 4.02e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  1.11e-19  4.37e-32
        W1b      0.28         1  3.12e-20  1.22e-32
         P1  8.97e+18   3.2e+19         1  3.92e-13
         P2  2.29e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.54  4.27e-23  1.67e-35
        W1b     0.283         1  1.21e-23  4.73e-36
         P1  2.34e+22  8.29e+22         1  3.92e-13
         P2  5.98e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.735032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06229, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188455, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26644, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436804
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      27.9      1.96     0.045     0.955
          1  1.03e+03      9.34         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.96   -0.0249        -1
          1      44.9      9.34        -1    0.0249
         *Z       ---       ---  1.05e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26888, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05729, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166791, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436804
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.29      1.13    0.0797      0.92
          1       243      8.35         1   -0.0243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.406      1.13   -0.0458    -0.999
          1      10.6      8.35    -0.999    0.0458
         *Z       ---       ---  1.05e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0625, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165346, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23334, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436804
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.03      0.91     0.103     0.897
          1       142      7.94         1   -0.0322
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.263      0.91   -0.0608    -0.998
          1      6.21      7.94    -0.998    0.0608
         *Z       ---       ---  1.05e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23566, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.954839, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01146, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436804
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.06     0.757     0.129     0.871
          1        90      7.37         1   -0.0414
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.177     0.757   -0.0781    -0.997
          1      3.93      7.37    -0.997    0.0781
         *Z       ---       ---  1.05e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.971309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011021, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001763, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012826, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436804
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.86     0.654     0.151     0.849
          1      61.8      6.58         1     -0.05
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.125     0.654    -0.094    -0.996
          1       2.7      6.58    -0.996     0.094
         *Z       ---       ---  1.05e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012849, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001505
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028011
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158492
         W1a Well: minimal relaxation eigenvalue = 0.0433921
         W1a Well: maximal relaxation eigenvalue = 13.6327
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001852
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.2065
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052331
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065111
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.210822
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.739003, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 8.81e+04 4.59e+14
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.88  1.07e-19  6.94e-32
        W1b     0.258         1  2.75e-20  1.79e-32
         P1  9.36e+18  3.63e+19         1  6.49e-13
         P2  1.44e+31   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.85  4.14e-23  2.69e-35
        W1b      0.26         1  1.08e-23  6.99e-36
         P1  2.42e+22  9.29e+22         1  6.49e-13
         P2  3.72e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.743203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07006, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191575, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27184, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0433893
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      30.6      2.04    0.0491     0.951
          1  1.11e+03      10.2         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.33      2.04   -0.0262        -1
          1      48.2      10.2        -1    0.0262
         *Z       ---       ---  1.07e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0433893
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.1      1.18    0.0868     0.913
          1       260      9.02         1   -0.0245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.439      1.18   -0.0482    -0.999
          1      11.3      9.02    -0.999    0.0482
         *Z       ---       ---  1.07e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24579, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0433893
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.54     0.954     0.113     0.887
          1       150      8.57         1   -0.0327
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.284     0.954   -0.0643    -0.998
          1      6.51      8.57    -0.998    0.0643
         *Z       ---       ---  1.07e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.921615, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007929, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.934267, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0433893
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.37     0.796     0.141     0.859
          1      93.7      7.96         1   -0.0424
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.19     0.796   -0.0833    -0.997
          1      4.06      7.96    -0.997    0.0833
         *Z       ---       ---  1.07e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.934627, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011094, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001786, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012921, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0433893
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.07     0.691     0.168     0.832
          1      63.5      7.14         1   -0.0518
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.133     0.691    -0.102    -0.995
          1      2.75      7.14    -0.995     0.102
         *Z       ---       ---  1.07e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012945, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001551
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000358
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028082
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165039
         W1a Well: minimal relaxation eigenvalue = 0.041983
         W1a Well: maximal relaxation eigenvalue = 23.3567
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001644
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.197472
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051678
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063306
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201167
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.72407, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 5.79e+04 5.21e+14
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.21  1.01e-19  1.07e-31
        W1b     0.238         1  2.41e-20  2.55e-32
         P1  9.87e+18  4.15e+19         1  1.06e-12
         P2  9.32e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.17  4.02e-23  4.25e-35
        W1b      0.24         1  9.63e-24  1.02e-35
         P1  2.49e+22  1.04e+23         1  1.06e-12
         P2  2.35e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.727772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04628, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175135, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24694, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      34.1      2.14    0.0528     0.947
          1  1.17e+03      16.8         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      2.14   -0.0272        -1
          1      48.9      16.8        -1    0.0272
         *Z       ---       ---  1.09e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164515, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2      1.24     0.095     0.905
          1       276      9.98         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.471      1.24   -0.0511    -0.999
          1      11.6      9.98    -0.999    0.0511
         *Z       ---       ---  1.09e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21893, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164715, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.2     0.998     0.125     0.875
          1       156      9.34         1    -0.034
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.302     0.998   -0.0697    -0.998
          1      6.54      9.34    -0.998    0.0697
         *Z       ---       ---  1.09e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.9986, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015399, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01864, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.75     0.832     0.161     0.839
          1      94.2       8.7         1   -0.0456
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.832   -0.0931    -0.996
          1      3.95       8.7    -0.996    0.0931
         *Z       ---       ---  1.09e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01911, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012383, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014285, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041983
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.25     0.726     0.196     0.804
          1      61.6      7.89         1   -0.0579
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.726    -0.118    -0.993
          1      2.59      7.89    -0.993     0.118
         *Z       ---       ---  1.09e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014324, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001428
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000338
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02773
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155062
         W1a Well: minimal relaxation eigenvalue = 0.0428207
         W1a Well: maximal relaxation eigenvalue = 13.9346
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00177
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.20045
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053211
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065408
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195607
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715256, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250 9.88e+04 5.93e+14
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.55  9.74e-20  1.66e-31
        W1b      0.22         1  2.14e-20  3.64e-32
         P1  1.03e+19  4.67e+19         1   1.7e-12
         P2  6.04e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.51  3.91e-23  6.64e-35
        W1b     0.222         1  8.66e-24  1.47e-35
         P1  2.56e+22  1.15e+23         1   1.7e-12
         P2  1.51e+34  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.71896, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04677, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24548, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428015
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.2      2.25    0.0562     0.944
          1  1.32e+03      11.8         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.55      2.25   -0.0279        -1
          1      56.7      11.8        -1    0.0279
         *Z       ---       ---  1.11e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24795, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165681, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428015
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        12      1.32    0.0977     0.902
          1       309      10.4         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.512      1.32   -0.0507    -0.999
          1      13.2      10.4    -0.999    0.0507
         *Z       ---       ---  1.11e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21831, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04638, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21793, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428015
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.73      1.07     0.125     0.875
          1       178      9.82         1   -0.0315
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.331      1.07   -0.0671    -0.998
          1      7.63      9.82    -0.998    0.0671
         *Z       ---       ---  1.11e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00731, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02749, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428015
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.18     0.903     0.156     0.844
          1       111       9.1         1   -0.0406
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.222     0.903   -0.0862    -0.996
          1      4.76       9.1    -0.996    0.0862
         *Z       ---       ---  1.11e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02793, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001736, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014087, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0428015
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.65      0.79     0.183     0.817
          1      75.2      8.13         1   -0.0493
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.156      0.79    -0.105    -0.995
          1      3.22      8.13    -0.995     0.105
         *Z       ---       ---  1.11e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014138, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001533
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000348
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0303
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160042
         W1a Well: minimal relaxation eigenvalue = 0.0427145
         W1a Well: maximal relaxation eigenvalue = 9.34225
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00168
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.201187
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.0487
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.541479
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200267
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.19941, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 5.68e+04 6.72e+14
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.91  9.38e-20  2.53e-31
        W1b     0.204         1  1.91e-20  5.14e-32
         P1  1.07e+19  5.23e+19         1  2.69e-12
         P2  3.96e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.86   3.8e-23  1.02e-34
        W1b     0.206         1  7.82e-24   2.1e-35
         P1  2.63e+22  1.28e+23         1  2.69e-12
         P2  9.77e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 1.20312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175234, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0425231
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      39.5      2.37    0.0598      0.94
          1  1.44e+03      12.5         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.68      2.37   -0.0287        -1
          1      61.1      12.5        -1    0.0287
         *Z       ---       ---  1.13e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24823, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165219, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0425231
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        13       1.4     0.102     0.898
          1       341      11.1         1   -0.0231
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.555       1.4   -0.0511    -0.999
          1      14.5      11.1    -0.999    0.0511
         *Z       ---       ---  1.13e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22117, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164567, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0425231
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.47      1.15     0.129     0.871
          1       200      10.4         1   -0.0301
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.36      1.15   -0.0665    -0.998
          1       8.5      10.4    -0.998    0.0665
         *Z       ---       ---  1.13e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2231, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.996251, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015187, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01612, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0425231
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.73     0.971     0.157     0.843
          1       127      9.62         1   -0.0379
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.243     0.971   -0.0836    -0.996
          1       5.4      9.62    -0.996    0.0836
         *Z       ---       ---  1.13e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001726, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0425231
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.08     0.852     0.181     0.819
          1      87.4      8.52         1   -0.0449
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.173     0.852   -0.0991    -0.995
          1      3.71      8.52    -0.995    0.0991
         *Z       ---       ---  1.13e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014133, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001469
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000344
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027761
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153821
         W1a Well: minimal relaxation eigenvalue = 0.0423273
         W1a Well: maximal relaxation eigenvalue = 13.0132
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001797
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193314
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050535
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059704
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20066
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702712, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.21e+05 7.61e+14
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.29  8.95e-20  3.76e-31
        W1b     0.189         1  1.69e-20  7.11e-32
         P1  1.12e+19  5.91e+19         1   4.2e-12
         P2  2.66e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.24  3.71e-23  1.56e-34
        W1b     0.191         1  7.08e-24  2.98e-35
         P1   2.7e+22  1.41e+23         1   4.2e-12
         P2  6.42e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.706224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01727, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178301, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22174, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0421959
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.6      2.64     0.062     0.938
          1  1.55e+03      13.7         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      2.64   -0.0287        -1
          1      65.6      13.7        -1    0.0287
         *Z       ---       ---  1.15e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03119, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162377, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19915, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0421959
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.8      1.53     0.106     0.894
          1       364        12         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.582      1.53   -0.0517    -0.999
          1      15.4        12    -0.999    0.0517
         *Z       ---       ---  1.15e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20184, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03165, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163523, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20077, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0421959
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.97      1.24     0.135     0.865
          1       211      11.3         1   -0.0296
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.379      1.24   -0.0679    -0.998
          1      8.92      11.3    -0.998    0.0679
         *Z       ---       ---  1.15e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20316, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03042, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.028354, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06384, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0421959
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.06      1.04     0.166     0.834
          1       132      10.4         1   -0.0378
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.256      1.04   -0.0865    -0.996
          1      5.59      10.4    -0.996    0.0865
         *Z       ---       ---  1.15e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015325, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017316, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0421959
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.3     0.914     0.194     0.806
          1      90.1      9.28         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.914    -0.104    -0.995
          1       3.8      9.28    -0.995     0.104
         *Z       ---       ---  1.15e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017364, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001485
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000411
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028017
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159483
         W1a Well: minimal relaxation eigenvalue = 0.0411267
         W1a Well: maximal relaxation eigenvalue = 22.6735
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001629
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.189105
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051053
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070658
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201023
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.71658, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 6.93e+04 8.61e+14
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.68  8.65e-20  5.59e-31
        W1b     0.176         1  1.52e-20  9.85e-32
         P1  1.16e+19  6.57e+19         1  6.47e-12
         P2  1.79e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.62  3.62e-23  2.34e-34
        W1b     0.178         1  6.44e-24  4.16e-35
         P1  2.76e+22  1.55e+23         1  6.47e-12
         P2  4.27e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.720309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173994, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23618, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      46.8      2.67    0.0678     0.932
          1  1.69e+03      15.8         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.93      2.67   -0.0305        -1
          1      69.4      15.8        -1    0.0305
         *Z       ---       ---  1.18e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03975, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16277, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2079, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.4      1.56     0.117     0.883
          1       387        13         1   -0.0234
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.632      1.56   -0.0558    -0.998
          1      15.9        13    -0.998    0.0558
         *Z       ---       ---  1.18e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21027, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04119, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164362, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21135, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.87      1.27     0.151     0.849
          1       219      12.3         1   -0.0314
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.406      1.27   -0.0746    -0.997
          1         9      12.3    -0.997    0.0746
         *Z       ---       ---  1.18e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21373, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02484, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016776, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04629, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.54      1.07      0.19      0.81
          1       133      11.4         1   -0.0413
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.269      1.07   -0.0979    -0.995
          1      5.45      11.4    -0.995    0.0979
         *Z       ---       ---  1.18e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04679, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001716, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.52     0.949     0.227     0.773
          1      86.8      10.2         1   -0.0516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.949    -0.122    -0.993
          1      3.57      10.2    -0.993     0.122
         *Z       ---       ---  1.18e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015653, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001467
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027375
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153672
         W1a Well: minimal relaxation eigenvalue = 0.041867
         W1a Well: maximal relaxation eigenvalue = 11.4738
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001609
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192283
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04899
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063498
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198677
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701526, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.55e+05 9.73e+14
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.08  8.27e-20  8.14e-31
        W1b     0.164         1  1.36e-20  1.34e-31
         P1  1.21e+19  7.35e+19         1  9.83e-12
         P2  1.23e+30  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.03  3.54e-23  3.48e-34
        W1b     0.166         1  5.87e-24  5.78e-35
         P1  2.82e+22   1.7e+23         1  9.83e-12
         P2  2.87e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.705211, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00847, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177085, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        50      2.79    0.0709     0.929
          1  1.84e+03      15.8         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.79   -0.0309        -1
          1      76.6      15.8        -1    0.0309
         *Z       ---       ---   1.2e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21217, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158608, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17062, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.5      1.66     0.119     0.881
          1       435      13.7         1   -0.0221
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.688      1.66   -0.0545    -0.999
          1      18.2      13.7    -0.999    0.0545
         *Z       ---       ---   1.2e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159948, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17513, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.7      1.36     0.148     0.852
          1       254      12.9         1   -0.0286
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.447      1.36   -0.0705    -0.998
          1      10.6      12.9    -0.998    0.0705
         *Z       ---       ---   1.2e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00891, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120924, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13485, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.25      1.16      0.18      0.82
          1       160      11.8         1    -0.036
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.302      1.16   -0.0884    -0.996
          1      6.69      11.8    -0.996    0.0884
         *Z       ---       ---   1.2e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.025228, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001676, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.027302, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.041694
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.18      1.03     0.206     0.794
          1       109      10.4         1   -0.0426
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216      1.03    -0.105    -0.995
          1      4.56      10.4    -0.995     0.105
         *Z       ---       ---   1.2e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.027361, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001446
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028335
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167039
         W1a Well: minimal relaxation eigenvalue = 0.0410335
         W1a Well: maximal relaxation eigenvalue = 20.4334
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001616
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17806
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046191
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073355
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.205732
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715996, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 8.89e+04  1.1e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.51  8.02e-20  1.18e-30
        W1b     0.154         1  1.23e-20  1.82e-31
         P1  1.25e+19  8.12e+19         1  1.48e-11
         P2  8.45e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.45  3.47e-23  5.12e-34
        W1b     0.155         1  5.38e-24  7.94e-35
         P1  2.88e+22  1.86e+23         1  1.48e-11
         P2  1.95e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.720303, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03328, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172346, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22813, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0410335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      54.8      2.92    0.0758     0.924
          1     2e+03      17.5         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.25      2.92   -0.0321    -0.999
          1      82.3      17.5    -0.999    0.0321
         *Z       ---       ---  1.23e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2306, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01649, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159736, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18156, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0410335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.9      1.73     0.129     0.871
          1       461      14.7         1   -0.0227
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.736      1.73   -0.0577    -0.998
          1      18.9      14.7    -0.998    0.0577
         *Z       ---       ---  1.23e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18392, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01909, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161184, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18583, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0410335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.5      1.42     0.163     0.837
          1       262      13.9         1     -0.03
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.474      1.42   -0.0763    -0.997
          1      10.7      13.9    -0.997    0.0763
         *Z       ---       ---  1.23e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18822, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01392, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001866, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.10398, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0410335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.68      1.21     0.202     0.798
          1       159      12.8         1   -0.0388
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.315      1.21   -0.0985    -0.995
          1      6.54      12.8    -0.995    0.0985
         *Z       ---       ---  1.23e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010494, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001707, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0410335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.36      1.08     0.237     0.763
          1       105      11.5         1   -0.0478
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.22      1.08    -0.121    -0.993
          1      4.31      11.5    -0.993     0.121
         *Z       ---       ---  1.23e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012266, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001491
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000339
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027367
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152194
         W1a Well: minimal relaxation eigenvalue = 0.0413414
         W1a Well: maximal relaxation eigenvalue = 12.604
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001657
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195021
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050955
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061722
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200135
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.704738, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.48e+05 1.24e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.95  7.77e-20   1.7e-30
        W1b     0.144         1  1.12e-20  2.45e-31
         P1  1.29e+19  8.94e+19         1  2.19e-11
         P2  5.87e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.88   3.4e-23  7.44e-34
        W1b     0.145         1  4.93e-24  1.08e-34
         P1  2.94e+22  2.03e+23         1  2.19e-11
         P2  1.34e+33  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.708243, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02031, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182152, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22331, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411446
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      56.9      3.26    0.0768     0.923
          1  2.15e+03      18.3         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.34      3.26   -0.0316        -1
          1      88.6      18.3        -1    0.0316
         *Z       ---       ---  1.25e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22598, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02293, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161578, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18991, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411446
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.8      1.91     0.128     0.872
          1       508      15.8         1   -0.0211
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.775      1.91   -0.0554    -0.998
          1      20.9      15.8    -0.998    0.0554
         *Z       ---       ---  1.25e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1923, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01965, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162137, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18735, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411446
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.3      1.57     0.159     0.841
          1       295      14.8         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.505      1.57   -0.0716    -0.997
          1      12.1      14.8    -0.997    0.0716
         *Z       ---       ---  1.25e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18971, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0248, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.062672, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09248, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411446
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.34      1.33     0.192     0.808
          1       186      13.6         1   -0.0342
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.343      1.33   -0.0898    -0.996
          1      7.64      13.6    -0.996    0.0898
         *Z       ---       ---  1.25e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09303, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018962, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001696, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020973, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411446
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.97      1.18      0.22      0.78
          1       126      11.9         1   -0.0406
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.246      1.18    -0.106    -0.994
          1      5.19      11.9    -0.994     0.106
         *Z       ---       ---  1.25e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021023, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001428
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000338
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027665
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16171
         W1a Well: minimal relaxation eigenvalue = 0.0390387
         W1a Well: maximal relaxation eigenvalue = 15.816
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00195
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.161449
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.044753
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056761
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197051
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.666607, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301 5.38e+04 3.84e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      12.2  5.84e-20  3.85e-29
        W1b    0.0818         1  4.78e-21  3.15e-30
         P1  1.71e+19  2.09e+20         1  6.58e-10
         P2   2.6e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      12.1  2.92e-23  1.92e-32
        W1b    0.0826         1  2.41e-24  1.59e-33
         P1  3.42e+22  4.14e+23         1  6.58e-10
         P2   5.2e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.67028, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.986665, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1744, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0389116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       124      5.13     0.121     0.879
          1  4.76e+03      35.3         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.84      5.13   -0.0393    -0.999
          1       185      35.3    -0.999    0.0393
         *Z       ---       ---  1.56e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17692, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.971096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13104, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0389116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      40.4      3.11     0.187     0.813
          1  1.11e+03      30.1         1   -0.0188
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.57      3.11   -0.0656    -0.998
          1      43.3      30.1    -0.998    0.0656
         *Z       ---       ---  1.56e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13343, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.974071, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154247, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1337, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0389116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.2      2.61     0.225     0.775
          1       643      27.8         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.02      2.61   -0.0829    -0.997
          1        25      27.8    -0.997    0.0829
         *Z       ---       ---  1.56e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13605, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.973564, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13324, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0389116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.8      2.28     0.264     0.736
          1       399        25         1   -0.0293
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.693      2.28    -0.102    -0.995
          1      15.5        25    -0.995     0.102
         *Z       ---       ---  1.56e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1356, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.13118, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001621, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.137277, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0389116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.8      2.06     0.296     0.704
          1       266      21.3         1   -0.0345
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.498      2.06     -0.12    -0.993
          1      10.3      21.3    -0.993      0.12
         *Z       ---       ---  1.56e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.137664, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00141
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000331
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027431
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160576
         W1a Well: minimal relaxation eigenvalue = 0.0373552
         W1a Well: maximal relaxation eigenvalue = 13.7624
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001775
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.167798
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.042369
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069409
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.187533
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.671813, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.21e+05 1.08e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      18.9  4.78e-20  4.41e-28
        W1b    0.0528         1  2.53e-21  2.33e-29
         P1  2.09e+19  3.96e+20         1  9.23e-09
         P2  2.27e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      18.8  2.69e-23  2.48e-31
        W1b    0.0533         1  1.44e-24  1.33e-32
         P1  3.71e+22  6.96e+23         1  9.23e-09
         P2  4.02e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.675489, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.949392, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1392, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0370676
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       258      8.08     0.163     0.837
          1  1.01e+04      64.2         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.55      8.08   -0.0447    -0.999
          1       376      64.2    -0.999    0.0447
         *Z       ---       ---  1.97e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00200116
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000773, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14386, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.932201, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148058, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08537, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0370676
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      82.9      5.04     0.236     0.764
          1  2.39e+03      53.1         1   -0.0163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.07      5.04   -0.0708    -0.997
          1      88.7      53.1    -0.997    0.0708
         *Z       ---       ---  1.97e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.931486, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148263, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08545, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0370676
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      54.1      4.31     0.274     0.726
          1  1.39e+03      47.7         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.01      4.31   -0.0866    -0.996
          1      51.4      47.7    -0.996    0.0866
         *Z       ---       ---  1.97e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.933187, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147518, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.086, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0370676
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      37.2      3.81     0.311     0.689
          1       859        41         1   -0.0238
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.38      3.81    -0.103    -0.995
          1      31.8        41    -0.995     0.103
         *Z       ---       ---  1.97e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08834, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.313254, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001574, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.319006, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0370676
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      27.2      3.47      0.34      0.66
          1       564      32.8         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.01      3.47    -0.118    -0.993
          1      20.9      32.8    -0.993     0.118
         *Z       ---       ---  1.97e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.319372, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001311
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000334
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027038
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144033
         W1a Well: minimal relaxation eigenvalue = 0.0355972
         W1a Well: maximal relaxation eigenvalue = 18.7122
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001924
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.160476
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041483
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063706
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.180072
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.632709, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 9.98e+04 2.79e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      26.9  4.15e-20  3.15e-27
        W1b    0.0372         1  1.55e-21  1.17e-28
         P1  2.41e+19  6.47e+20         1  7.59e-08
         P2  3.17e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      26.6   2.6e-23  1.97e-30
        W1b    0.0376         1  9.77e-25  7.42e-32
         P1  3.85e+22  1.02e+24         1  7.59e-08
         P2  5.07e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.636119, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929369, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09998, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0354682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       481        14     0.193     0.807
          1  1.99e+04       112         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.1        14    -0.046    -0.999
          1       707       112    -0.999     0.046
         *Z       ---       ---   2.5e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00211751
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000617, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.10407, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.909463, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146681, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06209, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0354682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       151      8.63     0.268     0.732
          1  4.55e+03      88.7         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.35      8.63   -0.0705    -0.998
          1       161      88.7    -0.998    0.0705
         *Z       ---       ---   2.5e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06449, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.909855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146175, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06126, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0354682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      97.6      7.31     0.309     0.691
          1  2.56e+03      78.2         1   -0.0166
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.46      7.31   -0.0859    -0.996
          1      90.7      78.2    -0.996    0.0859
         *Z       ---       ---   2.5e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.908266, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145193, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05866, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0354682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      66.4      6.43     0.349     0.651
          1  1.51e+03      65.6         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.36      6.43    -0.103    -0.995
          1      53.7      65.6    -0.995     0.103
         *Z       ---       ---   2.5e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06132, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.434044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.439689, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0354682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.1      5.84     0.384     0.616
          1       943      50.4         1   -0.0232
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.71      5.84    -0.119    -0.993
          1      33.5      50.4    -0.993     0.119
         *Z       ---       ---   2.5e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.440048, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 13.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001274
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00034
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029791
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.148468
         W1a Well: minimal relaxation eigenvalue = 0.0340703
         W1a Well: maximal relaxation eigenvalue = 21.8695
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002083
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.156856
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040297
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065007
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.173292
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.6298, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237 1.15e+05 6.72e+16
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      35.7  3.75e-20  1.59e-26
        W1b     0.028         1  1.05e-21  4.46e-28
         P1  2.67e+19  9.52e+20         1  4.24e-07
         P2  6.28e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      35.3  2.58e-23   1.1e-29
        W1b    0.0283         1  7.31e-25   3.1e-31
         P1  3.87e+22  1.37e+24         1  4.24e-07
         P2  9.12e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.633644, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.883623, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151216, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04615, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340703
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       965      20.2     0.235     0.765
          1  3.66e+04       160         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.9      20.2   -0.0514    -0.999
          1  1.25e+03       160    -0.999    0.0514
         *Z       ---       ---  3.16e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00264346
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000615, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04998, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.88435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14054, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02993, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340703
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       299      12.8     0.318     0.682
          1  8.25e+03       122         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.2      12.8   -0.0777    -0.997
          1       281       122    -0.997    0.0777
         *Z       ---       ---  3.16e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03236, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.883937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140981, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340703
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       192      11.1     0.361     0.639
          1  4.55e+03       104         1   -0.0158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.54      11.1   -0.0941    -0.996
          1       155       104    -0.996    0.0941
         *Z       ---       ---  3.16e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03217, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.883184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140935, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02902, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340703
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       130      9.92     0.404     0.596
          1  2.62e+03      82.8         1    -0.019
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.42      9.92    -0.113    -0.994
          1      89.2      82.8    -0.994     0.113
         *Z       ---       ---  3.16e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03137, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.585257, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001448, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.590727, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0340703
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      93.3      9.17     0.441     0.559
          1  1.56e+03      59.2         1   -0.0221
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.18      9.17    -0.131    -0.991
          1        53      59.2    -0.991     0.131
         *Z       ---       ---  3.16e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.591098, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 15.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001373
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000321
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028308
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146948
         W1a Well: minimal relaxation eigenvalue = 0.0329935
         W1a Well: maximal relaxation eigenvalue = 21.8605
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002094
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.144607
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040084
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054513
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.174306
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.60533, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 1.94e+04 1.53e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      45.2  3.49e-20  6.19e-26
        W1b    0.0221         1  7.73e-22  1.37e-27
         P1  2.87e+19  1.29e+21         1  1.78e-06
         P2  1.61e+25  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      44.7  2.62e-23  4.66e-29
        W1b    0.0224         1  5.87e-25  1.04e-30
         P1  3.81e+22   1.7e+24         1  1.78e-06
         P2  2.15e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.609141, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.863844, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147377, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03314, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0329935
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.8e+03      31.3     0.266     0.734
          1  6.03e+04       198         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.3      31.3   -0.0539    -0.999
          1  1.99e+03       198    -0.999    0.0539
         *Z       ---       ---  3.99e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00290296
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000611, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03698, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.86359, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00749, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0329935
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       550      20.1     0.348     0.652
          1  1.33e+04       142         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.1      20.1   -0.0791    -0.997
          1       439       142    -0.997    0.0791
         *Z       ---       ---  3.99e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00624982
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.861875, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00572, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0329935
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       353      17.4      0.39      0.61
          1   7.2e+03       116         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.6      17.4   -0.0946    -0.996
          1       238       116    -0.996    0.0946
         *Z       ---       ---  3.99e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.862773, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138485, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00627, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0329935
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       239      15.7     0.432     0.568
          1  4.01e+03      86.6         1   -0.0168
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      7.88      15.7    -0.112    -0.994
          1       132      86.6    -0.994     0.112
         *Z       ---       ---  3.99e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00862, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.666734, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002111, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.67278, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0329935
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       172      14.5     0.469     0.531
          1  2.28e+03      56.6         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.67      14.5     -0.13    -0.991
          1      75.2      56.6    -0.991      0.13
         *Z       ---       ---  3.99e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.673136, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 17.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001259
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00032
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02928
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144206
         W1a Well: minimal relaxation eigenvalue = 0.03223
         W1a Well: maximal relaxation eigenvalue = 19.1549
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002247
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153702
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038874
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065652
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.156379
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.604161, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 4.77e+04 3.29e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        55  3.32e-20  1.97e-25
        W1b    0.0182         1  6.03e-22  3.58e-27
         P1  3.01e+19  1.66e+21         1  5.94e-06
         P2  5.07e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      54.5   2.7e-23  1.61e-28
        W1b    0.0183         1  4.96e-25  2.95e-30
         P1   3.7e+22  2.01e+24         1  5.94e-06
         P2  6.22e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.607526, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.835249, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155095, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00206, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.032023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.08e+03      53.9     0.281     0.719
          1  8.83e+04       215         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.5      53.9   -0.0526    -0.999
          1  2.83e+03       215    -0.999    0.0526
         *Z       ---       ---  5.03e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.002765
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00584, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.845717, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135092, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985807, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.032023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       921      34.3     0.352     0.648
          1  1.89e+04       144         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.5      34.3    -0.073    -0.997
          1       607       144    -0.997     0.073
         *Z       ---       ---  5.03e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.995 0.005
         well projection threshold  = 0.2
         partition projection error = 0.00532401
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.989411, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849507, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135629, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990329, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.032023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       588      29.5     0.388     0.612
          1     1e+04       112         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.8      29.5   -0.0851    -0.996
          1       321       112    -0.996    0.0851
         *Z       ---       ---  5.03e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.993 0.007
         well projection threshold  = 0.2
         partition projection error = 0.00724029
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000549, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.994129, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.845556, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133621, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.98395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.032023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       398      26.1     0.424     0.576
          1  5.41e+03      78.8         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.7      26.1   -0.0987    -0.995
          1       173      78.8    -0.995    0.0987
         *Z       ---       ---  5.03e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.98629, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763277, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0077, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.774964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.032023
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       287      23.5     0.458     0.542
          1  2.95e+03      47.7         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.18      23.5    -0.113    -0.994
          1      94.6      47.7    -0.994     0.113
         *Z       ---       ---  5.03e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.775333, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.4e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001223
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000317
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028208
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.143817
         W1a Well: minimal relaxation eigenvalue = 0.023362
         W1a Well: maximal relaxation eigenvalue = 33.7985
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002048
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137912
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039037
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064071
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.162665
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.592031, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.29e+05 6.77e+17
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      65.2  3.21e-20  5.36e-25
        W1b    0.0153         1  4.93e-22  8.23e-27
         P1  3.12e+19  2.03e+21         1  1.67e-05
         P2  1.87e+24  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      64.5  2.82e-23  4.71e-28
        W1b    0.0155         1  4.37e-25   7.3e-30
         P1  3.55e+22  2.29e+24         1  1.67e-05
         P2  2.12e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.595722, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.827206, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149217, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.995185, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.023362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.62e+03      73.5     0.324     0.676
          1  1.55e+05       183         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       178      73.5   -0.0593    -0.998
          1  3.61e+03       183    -0.998    0.0593
         *Z       ---       ---  6.29e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00352011
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000593, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.998977, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.83646, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13395, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.975517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.023362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.22e+03      47.5     0.411     0.589
          1  3.24e+04       120         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.9      47.5    -0.086    -0.996
          1       757       120    -0.996     0.086
         *Z       ---       ---  6.29e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.993 0.007
         well projection threshold  = 0.2
         partition projection error = 0.00738839
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000547, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.979415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.835439, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134146, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974368, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.023362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.38e+03      41.5     0.457     0.543
          1  1.68e+04      94.3         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.2      41.5    -0.104    -0.995
          1       392      94.3    -0.995     0.104
         *Z       ---       ---  6.29e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0107545
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000547, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.978137, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.837286, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.975642, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.023362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       896      37.9     0.506     0.494
          1  8.78e+03      68.1         1   -0.0157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      20.9      37.9    -0.126    -0.992
          1       205      68.1    -0.992     0.126
         *Z       ---       ---  6.29e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.977979, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793754, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.010852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.80855, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.023362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       613      35.8     0.556     0.444
          1  4.64e+03      43.1         1   -0.0192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      14.3      35.8    -0.153    -0.988
          1       108      43.1    -0.988     0.153
         *Z       ---       ---  6.29e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.809002, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 22.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 9.9e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002159
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00031
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028768
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147092
         W1a Well: minimal relaxation eigenvalue = 0.0301314
         W1a Well: maximal relaxation eigenvalue = 24.7226
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002148
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.135801
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038639
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056767
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.153406
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.577539, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 3.81e+04 1.34e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      75.3  3.14e-20  1.28e-24
        W1b    0.0133         1  4.17e-22   1.7e-26
         P1  3.18e+19   2.4e+21         1  4.08e-05
         P2  7.79e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      74.6  2.96e-23  1.21e-27
        W1b    0.0134         1  3.97e-25  1.62e-29
         P1  3.38e+22  2.52e+24         1  4.08e-05
         P2  8.28e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.581359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814167, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.134438, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.966034, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0301314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   9.9e+03       115      0.35      0.65
          1  1.41e+05       137         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       298       115    -0.062    -0.998
          1  4.26e+03       137    -0.998     0.062
         *Z       ---       ---  7.84e+14  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00384099
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000598, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.970177, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.826041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130067, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961126, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0301314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.91e+03      75.2     0.431     0.569
          1  2.92e+04      85.2         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      87.5      75.2    -0.087    -0.996
          1       880      85.2    -0.996     0.087
         *Z       ---       ---  7.84e+14  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.992 0.008
         well projection threshold  = 0.2
         partition projection error = 0.00756378
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000555, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823996, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959715, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0301314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+03      65.4     0.474     0.526
          1   1.5e+04      63.4         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.1      65.4    -0.103    -0.995
          1       451      63.4    -0.995     0.103
         *Z       ---       ---  7.84e+14  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0106826
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000548, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963502, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825997, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.132653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.963573, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0301314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.22e+03      58.5     0.521     0.479
          1  7.74e+03      42.5         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      36.7      58.5    -0.125    -0.992
          1       233      42.5    -0.992     0.125
         *Z       ---       ---  7.84e+14  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.965957, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824821, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.05156, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.880774, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0301314
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       858      52.9     0.573     0.427
          1  4.02e+03        25         1   -0.0178
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      25.9      52.9    -0.153    -0.988
          1       121        25    -0.988     0.153
         *Z       ---       ---  7.84e+14  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.881296, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 24.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000212
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006489
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000307
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026133
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139558
         W1a Well: minimal relaxation eigenvalue = 0.0297052
         W1a Well: maximal relaxation eigenvalue = 22.7257
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002206
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.141052
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038589
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060895
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.157477
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.585154, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 8.03e+04 2.55e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.4  3.12e-20  2.78e-24
        W1b    0.0117         1  3.65e-22  3.26e-26
         P1   3.2e+19  2.74e+21         1  8.91e-05
         P2   3.6e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      84.6  3.12e-23  2.78e-27
        W1b    0.0118         1  3.69e-25  3.29e-29
         P1   3.2e+22  2.71e+24         1  8.91e-05
         P2   3.6e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.588714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139262, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986797, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0296619
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.58e+04       190     0.386     0.614
          1  1.55e+05       115         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       469       190   -0.0678    -0.998
          1   4.6e+03       115    -0.998    0.0678
         *Z       ---       ---  9.73e+14  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.98913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821707, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133898, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0296619
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.52e+03       123     0.462     0.538
          1  3.18e+04      70.7         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       134       123   -0.0926    -0.996
          1       943      70.7    -0.996    0.0926
         *Z       ---       ---  9.73e+14  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.991 0.009
         well projection threshold  = 0.2
         partition projection error = 0.00857763
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000622, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964239, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824044, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131078, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959858, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0296619
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.82e+03       106     0.504     0.496
          1  1.62e+04      53.2         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      83.6       106    -0.109    -0.994
          1       480      53.2    -0.994     0.109
         *Z       ---       ---  9.73e+14  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.988 0.012
         well projection threshold  = 0.2
         partition projection error = 0.0119634
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000544, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.96339, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825232, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130355, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960256, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0296619
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.86e+03      93.2     0.552     0.448
          1  8.29e+03      36.9         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        55      93.2    -0.132    -0.991
          1       246      36.9    -0.991     0.132
         *Z       ---       ---  9.73e+14  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.96284, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.824705, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.035851, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.864934, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0296619
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.29e+03      82.3      0.61      0.39
          1  4.27e+03      23.7         1   -0.0183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      38.4      82.3    -0.167    -0.986
          1       127      23.7    -0.986     0.167
         *Z       ---       ---  9.73e+14  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.865459, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000142
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.005435
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000304
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026917
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.141472
         W1a Well: minimal relaxation eigenvalue = 0.0241362
         W1a Well: maximal relaxation eigenvalue = 33.0931
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002097
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137176
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038363
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056587
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154509
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.575186, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 1.83e+04 4.71e+18
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      95.4  3.11e-20  5.51e-24
        W1b    0.0105         1  3.26e-22  5.78e-26
         P1  3.21e+19  3.07e+21         1  0.000177
         P2  1.82e+23  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      94.4  3.31e-23  5.85e-27
        W1b    0.0106         1   3.5e-25   6.2e-29
         P1  3.03e+22  2.86e+24         1  0.000177
         P2  1.71e+26  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.578995, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819822, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.148745, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987131, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0241362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.12e+04       279     0.439     0.561
          1  2.02e+05      92.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       754       279     -0.08    -0.997
          1  4.87e+03      92.8    -0.997      0.08
         *Z       ---       ---   1.2e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.989463, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821051, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956479, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0241362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.54e+03       177     0.525     0.475
          1  4.11e+04      59.6         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       206       177    -0.112    -0.994
          1       991      59.6    -0.994     0.112
         *Z       ---       ---   1.2e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.987 0.013
         well projection threshold  = 0.2
         partition projection error = 0.012608
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000615, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.960467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131484, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0241362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.15e+03       151     0.573     0.427
          1  2.08e+04      47.5         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       124       151    -0.136    -0.991
          1       502      47.5    -0.991     0.136
         *Z       ---       ---   1.2e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.981 0.019
         well projection threshold  = 0.2
         partition projection error = 0.0185675
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000563, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.960887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82056, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957582, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0241362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.23e+03       133     0.631     0.369
          1  1.06e+04      36.4         1   -0.0179
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      78.1       133    -0.172    -0.985
          1       256      36.4    -0.985     0.172
         *Z       ---       ---   1.2e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.970 0.030
         well projection threshold  = 0.2
         partition projection error = 0.0296332
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000544, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.961347, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.04937, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0241362
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.14e+03       118     0.699     0.301
          1  5.44e+03      27.9         1   -0.0243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.5       118    -0.231    -0.973
          1       131      27.9    -0.973     0.231
         *Z       ---       ---   1.2e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.874449, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 29.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000201
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006282
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000315
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026266
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140339
         W1a Well: minimal relaxation eigenvalue = 0.00261926
         W1a Well: maximal relaxation eigenvalue = 47.6035
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002159
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.131062
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037388
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.798912
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.153607
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.30891, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.44e+05 8.45e+18
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       105  3.12e-20  1.02e-23
        W1b   0.00951         1  2.97e-22  9.66e-26
         P1  3.21e+19  3.37e+21         1  0.000326
         P2  9.85e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       104  3.51e-23  1.14e-26
        W1b   0.00961         1  3.37e-25   1.1e-28
         P1  2.85e+22  2.96e+24         1  0.000326
         P2  8.75e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 1.31272, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.8067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149091, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970698, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00261926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.71e+05       378     0.514     0.486
          1  1.92e+06       102         1     -0.01
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.23e+03       378    -0.102    -0.995
          1  5.04e+03       102    -0.995     0.102
         *Z       ---       ---  1.47e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.811791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128953, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00261926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.25e+05       241      0.61      0.39
          1  3.92e+05      51.4         1   -0.0149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       329       241    -0.151    -0.989
          1  1.03e+03      51.4    -0.989     0.151
         *Z       ---       ---  1.47e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.947626, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808576, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129472, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942804, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00261926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.35e+04       208     0.664     0.336
          1  1.99e+05      43.5         1   -0.0188
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       193       208    -0.189    -0.982
          1       520      43.5    -0.982     0.189
         *Z       ---       ---  1.47e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945039, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808596, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131402, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.944889, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00261926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.42e+04       185     0.725     0.275
          1  1.01e+05      39.1         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       116       185    -0.249    -0.968
          1       266      39.1    -0.968     0.249
         *Z       ---       ---  1.47e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94709, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.805527, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.117086, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9269, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00261926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.73e+04       167     0.793     0.207
          1  5.25e+04      41.9         1   -0.0365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      71.4       167    -0.351    -0.937
          1       138      41.9    -0.937     0.351
         *Z       ---       ---  1.47e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927441, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 31.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000275
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.01017
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001731
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027048
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135108
         W1a Well: minimal relaxation eigenvalue = 0.0260926
         W1a Well: maximal relaxation eigenvalue = 30.8489
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002314
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.137743
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036972
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049994
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150617
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.564452, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 5.24e+04 1.48e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       115  3.14e-20  1.76e-23
        W1b   0.00873         1  2.74e-22  1.54e-25
         P1  3.18e+19  3.65e+21         1  0.000561
         P2  5.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       113  3.73e-23  2.09e-26
        W1b   0.00882         1  3.29e-25  1.85e-28
         P1  2.68e+22  3.04e+24         1  0.000561
         P2  4.77e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.568251, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143378, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.963962, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.63e+04       530      0.61      0.39
          1  1.98e+05      74.2         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.99e+03       530    -0.145    -0.989
          1  5.17e+03      74.2    -0.989     0.145
         *Z       ---       ---  1.79e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.966297, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125156, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926081, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.09e+04       334     0.729     0.271
          1  4.06e+04      64.5         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       546       334    -0.244     -0.97
          1  1.06e+03      64.5     -0.97     0.244
         *Z       ---       ---  1.79e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928244, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127197, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928151, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+04       269       0.8       0.2
          1  2.08e+04      76.2         1   -0.0349
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       328       269     -0.35    -0.937
          1       544      76.2    -0.937      0.35
         *Z       ---       ---  1.79e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930683, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801784, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128899, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.935511, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.66e+03       180     0.881     0.119
          1  1.11e+04       125         1   -0.0645
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       200       180    -0.568    -0.823
          1       289       125    -0.823     0.568
         *Z       ---       ---  1.79e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.677 0.323
         well projection threshold  = 0.2
         partition projection error = 0.587747
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000613, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.939245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128599, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.934823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0260926
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.42e+03      63.3     0.945    0.0553
          1  6.56e+03       209         1    -0.149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115      63.3    -0.847    -0.531
          1       171       209    -0.531     0.847
         *Z       ---       ---  1.79e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.937209, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 34.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002362
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.032228
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002056
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026649
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136106
         W1a Well: minimal relaxation eigenvalue = 0.0110636
         W1a Well: maximal relaxation eigenvalue = 39.668
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002072
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136529
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03715
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059624
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150903
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.598478, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.35e+04 2.51e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       124  3.18e-20  2.91e-23
        W1b   0.00808         1  2.57e-22  2.35e-25
         P1  3.15e+19  3.89e+21         1  0.000914
         P2  3.44e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       123  3.98e-23  3.64e-26
        W1b   0.00816         1  3.25e-25  2.97e-28
         P1  2.51e+22  3.08e+24         1  0.000914
         P2  2.75e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.602374, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.957874, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0110636
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.46e+05       984     0.686     0.314
          1  4.71e+05       133         1   -0.0177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.72e+03       984    -0.193    -0.981
          1  5.21e+03       133    -0.981     0.193
         *Z       ---       ---  2.17e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.96018, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.80218, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129367, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.936359, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0110636
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.13e+04       564      0.79      0.21
          1  9.66e+04       141         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       678       564     -0.32    -0.947
          1  1.07e+03       141    -0.947      0.32
         *Z       ---       ---  2.17e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.938601, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.800638, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127764, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.93304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0110636
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.45e+04       412     0.848     0.152
          1  4.97e+04       181         1   -0.0451
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       382       412    -0.449    -0.894
          1       549       181    -0.894     0.449
         *Z       ---       ---  2.17e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.935245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799614, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126393, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930619, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0110636
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.94e+04       237     0.908    0.0923
          1  2.65e+04       274         1   -0.0795
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       215       237    -0.662    -0.749
          1       293       274    -0.749     0.662
         *Z       ---       ---  2.17e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.932815, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.800049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128643, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933836, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0110636
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.05e+04      86.7      0.95    0.0496
          1  1.53e+04       364         1    -0.155
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       117      86.7    -0.865    -0.502
          1       169       364    -0.502     0.865
         *Z       ---       ---  2.17e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.936122, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 36.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00212
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.04433
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002349
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027767
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137306
         W1a Well: minimal relaxation eigenvalue = 0.000816713
         W1a Well: maximal relaxation eigenvalue = 50.8374
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002103
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128042
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037432
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054537
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150926
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.599236, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 4.19e+19
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       133  3.23e-20  4.58e-23
        W1b   0.00754         1  2.43e-22  3.45e-25
         P1   3.1e+19  4.11e+21         1   0.00142
         P2  2.18e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       131  4.24e-23  6.02e-26
        W1b   0.00762         1  3.23e-25  4.59e-28
         P1  2.36e+22   3.1e+24         1   0.00142
         P2  1.66e+25  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.603153, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793556, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949267, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000816713
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.18e+06       719     0.889     0.111
          1  6.79e+06       555         1   -0.0604
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.23e+03       719    -0.571    -0.821
          1  5.55e+03       555    -0.821     0.571
         *Z       ---       ---  2.62e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951613, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792458, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12733, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000816713
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+06       151     0.951    0.0486
          1  1.59e+06       674         1    -0.148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       935       151    -0.862    -0.507
          1   1.3e+03       674    -0.507     0.862
         *Z       ---       ---  2.62e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926833, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.79284, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125605, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923291, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000816713
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.85e+05        71     0.965     0.035
          1  8.97e+05       643         1    -0.208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       478        71    -0.923    -0.385
          1       732       643    -0.385     0.923
         *Z       ---       ---  2.62e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925707, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793643, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127053, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000816713
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.97e+05      37.3     0.974    0.0264
          1  5.23e+05       608         1    -0.277
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       242      37.3    -0.954    -0.299
          1       427       608    -0.299     0.954
         *Z       ---       ---  2.62e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927718, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793141, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127876, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925857, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000816713
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.5e+05      21.8     0.979    0.0208
          1  3.16e+05       589         1    -0.355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       122      21.8    -0.971    -0.237
          1       258       589    -0.237     0.971
         *Z       ---       ---  2.62e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928051, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 39 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002418
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.085502
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002864
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026799
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133154
         W1a Well: minimal relaxation eigenvalue = 0.0237647
         W1a Well: maximal relaxation eigenvalue = 32.3518
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002211
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128626
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036684
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054313
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149634
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.634927, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251 9.88e+04 6.85e+19
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       141  3.28e-20  6.95e-23
        W1b   0.00708         1  2.32e-22  4.92e-25
         P1  3.05e+19   4.3e+21         1   0.00212
         P2  1.44e+22  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       140  4.52e-23  9.58e-26
        W1b   0.00715         1  3.23e-25  6.85e-28
         P1  2.21e+22  3.09e+24         1   0.00212
         P2  1.04e+25  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.638969, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778552, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143323, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.936229, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0237647
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.04e+05      60.9     0.976     0.024
          1  3.31e+05  1.52e+03         1    -0.288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.85e+03      60.9     -0.96    -0.281
          1  7.87e+03  1.52e+03    -0.281      0.96
         *Z       ---       ---  3.14e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.938509, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777998, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126308, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909007, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0237647
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.14e+04      15.5     0.984    0.0159
          1   9.1e+04  1.06e+03         1     -0.44
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       983      15.5    -0.982    -0.188
          1  2.16e+03  1.06e+03    -0.188     0.982
         *Z       ---       ---  3.14e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911235, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780145, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126119, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910781, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0237647
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.08e+04      8.87     0.987    0.0133
          1  5.56e+04       934         1    -0.526
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       494      8.87    -0.987    -0.158
          1  1.32e+03       934    -0.158     0.987
         *Z       ---       ---  3.14e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.912976, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78105, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125558, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911674, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0237647
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+04      4.96     0.989    0.0111
          1  3.56e+04       825         1    -0.628
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       248      4.96    -0.991    -0.133
          1       847       825    -0.133     0.991
         *Z       ---       ---  3.14e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.778808, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12487, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90818, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0237647
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.24e+03      2.55     0.991         0
          1  2.39e+04       714         1    -0.743
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       124      2.55    -0.994    -0.113
          1       568       714    -0.113     0.994
         *Z       ---       ---  3.14e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.987 0.013
         well projection threshold  = 0.2
         partition projection error = 0.000831139
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000639, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911888, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 41.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002383
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120851
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.03117
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029463
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140261
         W1a Well: minimal relaxation eigenvalue = 0.0127166
         W1a Well: maximal relaxation eigenvalue = 38.4008
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00197
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128163
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036293
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055544
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147259
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706342, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.07e+04  1.1e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       150  3.35e-20  1.02e-22
        W1b   0.00669         1  2.24e-22  6.82e-25
         P1  2.99e+19  4.47e+21         1   0.00305
         P2   9.8e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       148  4.82e-23  1.47e-25
        W1b   0.00676         1  3.26e-25  9.93e-28
         P1  2.07e+22  3.07e+24         1   0.00305
         P2   6.8e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.710221, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7802, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933744, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0127166
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.84e+05      22.4     0.986    0.0139
          1  8.29e+05  2.66e+03         1    -0.474
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.88e+03      22.4    -0.985     -0.17
          1  1.05e+04  2.66e+03     -0.17     0.985
         *Z       ---       ---  3.75e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.936062, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.779864, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0127166
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   7.7e+04      8.92     0.989    0.0114
          1  2.14e+05  1.74e+03         1    -0.578
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       979      8.92     -0.99     -0.14
          1  2.72e+03  1.74e+03     -0.14      0.99
         *Z       ---       ---  3.75e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.912017, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.779049, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12593, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909717, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0127166
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.86e+04      6.07      0.99    0.0104
          1  1.25e+05  1.49e+03         1    -0.637
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       490      6.07    -0.992    -0.127
          1  1.59e+03  1.49e+03    -0.127     0.992
         *Z       ---       ---  3.75e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.781124, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1235, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909147, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0127166
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.93e+04      4.05     0.991         0
          1  7.62e+04   1.3e+03         1    -0.707
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       246      4.05    -0.993    -0.115
          1       969   1.3e+03    -0.115     0.993
         *Z       ---       ---  3.75e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911486, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124409, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910374, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0127166
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.68e+03      2.53     0.992         0
          1  4.84e+04  1.13e+03         1    -0.789
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       123      2.53    -0.995    -0.103
          1       616  1.13e+03    -0.103     0.995
         *Z       ---       ---  3.75e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.000472787
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000642, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914026, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 44 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002511
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128897
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.027326
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028181
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137262
         W1a Well: minimal relaxation eigenvalue = 0.00418614
         W1a Well: maximal relaxation eigenvalue = 45.0467
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002372
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.131636
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036338
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049088
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14496
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70159, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.18e+04 1.73e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       157  3.42e-20  1.45e-22
        W1b   0.00635         1  2.17e-22  9.23e-25
         P1  2.93e+19  4.61e+21         1   0.00425
         P2  6.88e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       156  5.14e-23  2.19e-25
        W1b   0.00642         1   3.3e-25   1.4e-27
         P1  1.95e+22  3.03e+24         1   0.00425
         P2  4.58e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.705683, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772211, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132587, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924976, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00418614
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.16e+06         6     0.991         0
          1  4.02e+06  2.93e+03         1    -0.698
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.85e+03         6    -0.994    -0.113
          1  1.68e+04  2.93e+03    -0.113     0.994
         *Z       ---       ---  4.46e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927415, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775078, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904412, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00418614
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.32e+05      3.55     0.992         0
          1  1.05e+06  1.98e+03         1    -0.772
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       971      3.55    -0.995    -0.103
          1   4.4e+03  1.98e+03    -0.103     0.995
         *Z       ---       ---  4.46e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906598, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.777133, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906947, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00418614
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.16e+05      2.89     0.992         0
          1  6.13e+05  1.74e+03         1     -0.81
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       486      2.89    -0.995   -0.0979
          1  2.56e+03  1.74e+03   -0.0979     0.995
         *Z       ---       ---  4.46e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.909131, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772276, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124782, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901545, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00418614
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   5.8e+04      2.31     0.993         0
          1  3.68e+05  1.57e+03         1    -0.854
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       243      2.31    -0.996   -0.0929
          1  1.54e+03  1.57e+03   -0.0929     0.996
         *Z       ---       ---  4.46e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90368, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774959, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124733, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904427, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00418614
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.9e+04      1.73     0.993         0
          1  2.28e+05  1.45e+03         1    -0.905
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       122      1.73    -0.996   -0.0877
          1       956  1.45e+03   -0.0877     0.996
         *Z       ---       ---  4.46e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906615, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 46.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002457
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034171
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04795
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139178
         W1a Well: minimal relaxation eigenvalue = 0.00064267
         W1a Well: maximal relaxation eigenvalue = 50.709
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002062
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127068
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035833
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053619
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147835
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.729332, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 2.68e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       165  3.49e-20  2.02e-22
        W1b   0.00606         1  2.12e-22  1.22e-24
         P1  2.86e+19  4.72e+21         1   0.00577
         P2  4.95e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       163  5.48e-23  3.16e-25
        W1b   0.00612         1  3.35e-25  1.94e-27
         P1  1.83e+22  2.98e+24         1   0.00577
         P2  3.16e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.733149, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773878, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131689, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926295, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00064267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.45e+06      3.53     0.993         0
          1  3.51e+07   4.7e+03         1    -0.832
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.79e+03      3.53    -0.996   -0.0932
          1  2.26e+04   4.7e+03   -0.0932     0.996
         *Z       ---       ---  5.29e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773119, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124752, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00064267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.49e+06       2.3     0.993         0
          1  8.71e+06  3.04e+03         1    -0.877
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       959       2.3    -0.996   -0.0884
          1   5.6e+03  3.04e+03   -0.0884     0.996
         *Z       ---       ---  5.29e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904801, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773593, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901309, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00064267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.46e+05      1.99     0.993         0
          1  4.91e+06  2.61e+03         1      -0.9
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       479      1.99    -0.996   -0.0862
          1  3.15e+03  2.61e+03   -0.0862     0.996
         *Z       ---       ---  5.29e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903458, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775634, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124453, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00064267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.73e+05      1.73     0.993         0
          1  2.82e+06  2.31e+03         1    -0.925
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       240      1.73    -0.996   -0.0838
          1  1.81e+03  2.31e+03   -0.0838     0.996
         *Z       ---       ---  5.29e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775103, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903053, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00064267
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.87e+05      1.47     0.994         0
          1  1.66e+06  2.12e+03         1    -0.954
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       120      1.47    -0.997   -0.0813
          1  1.07e+03  2.12e+03   -0.0813     0.997
         *Z       ---       ---  5.29e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90521, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 49 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002555
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121301
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033964
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043586
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136956
         W1a Well: minimal relaxation eigenvalue = 0.00338746
         W1a Well: maximal relaxation eigenvalue = 46.0288
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002132
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129196
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036231
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05506
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144232
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.718029, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.53e+04  4.1e+20
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       172  3.59e-20  2.75e-22
        W1b    0.0058         1  2.08e-22  1.59e-24
         P1  2.79e+19   4.8e+21         1   0.00765
         P2  3.64e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       171  5.83e-23  4.46e-25
        W1b   0.00586         1  3.42e-25  2.62e-27
         P1  1.71e+22  2.93e+24         1   0.00765
         P2  2.24e+24  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.722138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138139, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.921454, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00338746
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.39e+06      1.84     0.994         0
          1  9.53e+06  6.16e+03         1    -0.944
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.72e+03      1.84    -0.997   -0.0804
          1  3.23e+04  6.16e+03   -0.0804     0.997
         *Z       ---       ---  6.25e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.923748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773356, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00338746
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.79e+05      1.25     0.994         0
          1  2.38e+06  3.94e+03         1    -0.979
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       945      1.25    -0.997   -0.0776
          1  8.05e+03  3.94e+03   -0.0776     0.997
         *Z       ---       ---  6.25e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123723, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902091, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00338746
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.39e+05      1.07     0.994         0
          1  1.35e+06  3.32e+03         1    -0.999
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       472      1.07    -0.997    -0.076
          1  4.58e+03  3.32e+03    -0.076     0.997
         *Z       ---       ---  6.25e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904253, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774645, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123999, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903179, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00338746
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.98e+04     0.907     0.994         0
          1  7.88e+05  2.83e+03    -0.979         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       236     0.907    -0.997   -0.0744
          1  2.67e+03  2.83e+03   -0.0744     0.997
         *Z       ---       ---  6.25e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905325, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124526, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00338746
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.49e+04     0.739     0.994         0
          1  4.72e+05  2.43e+03    -0.954         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       118     0.739    -0.997   -0.0725
          1   1.6e+03  2.43e+03   -0.0725     0.997
         *Z       ---       ---  6.25e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903941, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 51.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002368
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.11991
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033748
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037184
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134575
         W1a Well: minimal relaxation eigenvalue = 0.000639165
         W1a Well: maximal relaxation eigenvalue = 50.0575
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002113
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124048
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036101
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058942
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143753
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70574, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 6.17e+20
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       179  3.68e-20  3.65e-22
        W1b   0.00557         1  2.05e-22  2.03e-24
         P1  2.72e+19  4.88e+21         1   0.00992
         P2  2.74e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       178  6.21e-23  6.16e-25
        W1b   0.00563         1   3.5e-25  3.47e-27
         P1  1.61e+22  2.86e+24         1   0.00992
         P2  1.62e+24  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.709639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13806, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927019, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000639165
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.28e+06      1.49     0.995         0
          1  6.43e+07  1.06e+04    -0.988         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.65e+03      1.49    -0.997   -0.0735
          1  4.11e+04  1.06e+04   -0.0735     0.997
         *Z       ---       ---  7.34e+15  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92928, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771647, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125343, elapsed time[sec] = 1
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902194, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.000639165
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.46e+06      1.05     0.995         0
          1  1.51e+07  6.57e+03    -0.969         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       930      1.05    -0.997   -0.0721
          1  9.62e+03  6.57e+03   -0.0721     0.997
         *Z       ---       ---  7.34e+15  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9044, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773166, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122813, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900515, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000639165
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.28e+05     0.938     0.995         0
          1  8.22e+06  5.41e+03    -0.959         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       465     0.938    -0.997   -0.0714
          1  5.26e+03  5.41e+03   -0.0714     0.997
         *Z       ---       ---  7.34e+15  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902695, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771797, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124258, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900807, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000639165
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.64e+05     0.844     0.995         0
          1  4.57e+06  4.53e+03    -0.949         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       233     0.844    -0.998   -0.0706
          1  2.92e+03  4.53e+03   -0.0706     0.998
         *Z       ---       ---  7.34e+15  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902987, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770167, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123256, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000639165
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.82e+05     0.759     0.995         0
          1  2.58e+06  3.86e+03    -0.937         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       116     0.759    -0.998   -0.0698
          1  1.65e+03  3.86e+03   -0.0698     0.998
         *Z       ---       ---  7.34e+15  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900072, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 54 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002406
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118348
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033282
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044183
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135476
         W1a Well: minimal relaxation eigenvalue = 0.0193831
         W1a Well: maximal relaxation eigenvalue = 34.3314
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002116
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122503
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035898
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054769
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144006
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706353, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 3.25e+05 9.17e+20
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       186  3.77e-20  4.76e-22
        W1b   0.00537         1  2.03e-22  2.56e-24
         P1  2.65e+19  4.94e+21         1    0.0126
         P2   2.1e+21  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       184   6.6e-23  8.34e-25
        W1b   0.00543         1  3.58e-25  4.52e-27
         P1  1.51e+22  2.79e+24         1    0.0126
         P2   1.2e+24  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.710237, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761173, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130432, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0193831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+05     0.702     0.995         0
          1  3.42e+06  8.92e+03    -0.912         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.58e+03     0.702    -0.998   -0.0667
          1  6.63e+04  8.92e+03   -0.0667     0.998
         *Z       ---       ---  8.59e+15  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914171, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122026, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0193831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.73e+04     0.483     0.995         0
          1  8.91e+05  5.67e+03    -0.889         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       916     0.483    -0.998    -0.065
          1  1.73e+04  5.67e+03    -0.065     0.998
         *Z       ---       ---  8.59e+15  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890143, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762848, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122042, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889624, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0193831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+04     0.383     0.995         0
          1  5.23e+05  4.64e+03    -0.875         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       458     0.383    -0.998    -0.064
          1  1.01e+04  4.64e+03    -0.064     0.998
         *Z       ---       ---  8.59e+15  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891782, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12222, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0193831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.18e+04     0.284     0.995         0
          1  3.17e+05  3.68e+03     -0.86         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       229     0.284    -0.998   -0.0629
          1  6.14e+03  3.68e+03   -0.0629     0.998
         *Z       ---       ---  8.59e+15  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891124, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121338, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88685, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0193831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.91e+03       0.2     0.995         0
          1  1.96e+05  2.69e+03    -0.845         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115       0.2    -0.998   -0.0618
          1  3.79e+03  2.69e+03   -0.0618     0.998
         *Z       ---       ---  8.59e+15  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.000128178
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000644, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890516, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 56.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002499
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.12308
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033438
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036288
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138633
         W1a Well: minimal relaxation eigenvalue = 0.0121116
         W1a Well: maximal relaxation eigenvalue = 38.3039
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002185
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.125144
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03598
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058569
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145374
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.713903, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 1.89e+05 1.35e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       193  3.87e-20  6.11e-22
        W1b   0.00519         1  2.01e-22  3.17e-24
         P1  2.58e+19  4.98e+21         1    0.0158
         P2  1.64e+21  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       191  7.02e-23  1.11e-24
        W1b   0.00525         1  3.68e-25  5.81e-27
         P1  1.42e+22  2.72e+24         1    0.0158
         P2  9.02e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.718541, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0121116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.72e+05     0.542     0.995         0
          1  6.91e+06  1.33e+04     -0.88         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   4.5e+03     0.542    -0.998   -0.0633
          1  8.37e+04  1.33e+04   -0.0633     0.998
         *Z       ---       ---     1e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904853, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763238, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890683, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0121116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.44e+04     0.401     0.996         0
          1   1.7e+06  8.31e+03    -0.867         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       901     0.401    -0.998   -0.0623
          1  2.06e+04  8.31e+03   -0.0623     0.998
         *Z       ---       ---     1e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892898, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762045, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12313, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889729, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0121116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.72e+04     0.337     0.996         0
          1  9.72e+05  6.82e+03    -0.858         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       451     0.337    -0.998   -0.0617
          1  1.18e+04  6.82e+03   -0.0617     0.998
         *Z       ---       ---     1e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760925, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122244, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887693, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0121116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.86e+04     0.268     0.996         0
          1   5.7e+05  5.48e+03    -0.848         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       225     0.268    -0.998    -0.061
          1  6.91e+03  5.48e+03    -0.061     0.998
         *Z       ---       ---     1e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89016, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759851, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122663, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887162, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0121116
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   9.3e+03     0.203     0.996         0
          1  3.43e+05  4.15e+03    -0.837         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       113     0.203    -0.998   -0.0602
          1  4.15e+03  4.15e+03   -0.0602     0.998
         *Z       ---       ---     1e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.000136407
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000623, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891013, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 59.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002271
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123831
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034156
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042759
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136383
         W1a Well: minimal relaxation eigenvalue = 0.00676915
         W1a Well: maximal relaxation eigenvalue = 41.8544
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001966
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124624
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035807
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044573
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144487
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703499, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.03e+05 1.95e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       199  3.97e-20  7.72e-22
        W1b   0.00503         1     2e-22  3.88e-24
         P1  2.52e+19  5.01e+21         1    0.0194
         P2   1.3e+21  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       197  7.45e-23  1.45e-24
        W1b   0.00508         1  3.79e-25  7.37e-27
         P1  1.34e+22  2.64e+24         1    0.0194
         P2   6.9e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.70738, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757616, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135797, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00676915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.54e+05     0.449     0.996         0
          1  1.53e+07  2.24e+04    -0.857         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  4.43e+03     0.449    -0.998   -0.0607
          1  1.03e+05  2.24e+04   -0.0607     0.998
         *Z       ---       ---  1.16e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914145, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123163, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00676915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.31e+05     0.343     0.996         0
          1  3.56e+06  1.38e+04     -0.85         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       886     0.343    -0.998   -0.0601
          1  2.41e+04  1.38e+04   -0.0601     0.998
         *Z       ---       ---  1.16e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89001, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754792, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121889, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881131, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00676915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.55e+04       0.3     0.996         0
          1  1.96e+06  1.13e+04    -0.845         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       443       0.3    -0.998   -0.0598
          1  1.33e+04  1.13e+04   -0.0598     0.998
         *Z       ---       ---  1.16e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883302, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760611, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122192, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.887541, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00676915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.27e+04     0.254     0.996         0
          1  1.11e+06  9.13e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       222     0.254    -0.998   -0.0594
          1   7.5e+03  9.13e+03   -0.0594     0.998
         *Z       ---       ---  1.16e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889729, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760785, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123038, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88833, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00676915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+04     0.207     0.996         0
          1  6.41e+05  7.22e+03    -0.831         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       111     0.207    -0.998   -0.0589
          1  4.34e+03  7.22e+03   -0.0589     0.998
         *Z       ---       ---  1.16e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890491, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 406.804, elapsed time[sec] = 8
