Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.004574, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.00535, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.19011, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.004818, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.05912, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.53818, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.54697, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001263, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001839, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.112832, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002946, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.036043, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.21001, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.215, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001284, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001871, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003657, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000784, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001356, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00293, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010647, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000831, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001922, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00358, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000743, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001294, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002741, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.009796, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.018956, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.019563, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.736586, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003152, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.017346, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.75478, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.77695, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.010714, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.011008, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.081775, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.39776, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 8.8e-05, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.39896, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000618, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.071581, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.031759, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.035619, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.007308, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000437, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.261928, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.003607, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.37334, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.15688, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 9.15769, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.12683, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001045, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.74227, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.89296, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.0521, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000887, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000322, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010766, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010817, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.87426e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.62356e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  2.18646e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  4.20247e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  9.11395e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  2.04507e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.57883e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  1.00673e+40  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  2.15873e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100   4.5032e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  9.13498e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.80321e+41  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.46766e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  6.50539e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.19227e+42   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  2.13772e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.75476e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  6.46873e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  1.09439e+43  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.6428, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001896
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000492
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.524391
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.221678
         W1a Well: minimal relaxation eigenvalue = 0.0642048
         W1a Well: maximal relaxation eigenvalue = 4.08329
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00266
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.279896
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081013
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.333025
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.335669
         W1b Well: minimal relaxation eigenvalue = 0.0737089
         W1b Well: maximal relaxation eigenvalue = 1.13384
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.80604, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.47e+05 4.67e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00104  2.12e-16  7.52e-57
        W1b       960         1  2.04e-13  7.22e-54
         P1  4.71e+15  4.91e+12         1  3.55e-41
         P2  1.33e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000162  2.74e-20   9.7e-61
        W1b  6.19e+03         1  1.69e-16     6e-57
         P1  3.65e+19  5.91e+15         1  3.55e-41
         P2  1.03e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.81047, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.86674, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.296331, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.20133, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0642048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.21    0.0461         0         1
          1      15.5      1.12         1   -0.0421
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0774    0.0461  -0.00136        -1
          1     0.992      1.12        -1   0.00136
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.20404, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.87676, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.275977, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.16073, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0642048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.27    0.0116         0         1
          1      4.86     0.385         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0173    0.0116  -0.00346        -1
          1     0.312     0.385        -1   0.00346
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.16311, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.22779, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002923, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.237589, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0642048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.14   0.00535         0         1
          1      2.85     0.306         1    -0.198
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00902   0.00535  -0.00639        -1
          1     0.183     0.306        -1   0.00639
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.237979, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019167, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002907, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022133, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0642048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0725    0.0022         0         1
          1      1.71     0.252         1    -0.338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00466    0.0022   -0.0109        -1
          1      0.11     0.252        -1    0.0109
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022156, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019106, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002936, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0642048
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0371  0.000811         0     0.999
          1      1.05     0.198         1    -0.502
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00238  0.000811   -0.0162        -1
          1    0.0673     0.198        -1    0.0162
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022124, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001938
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000502
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039218
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.21684
         W1a Well: minimal relaxation eigenvalue = 0.0634967
         W1a Well: maximal relaxation eigenvalue = 3.66002
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001877
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.278688
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081302
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.927872
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.459288
         W1b Well: minimal relaxation eigenvalue = 0.0717164
         W1b Well: maximal relaxation eigenvalue = 1.15395
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.03133, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.74e+05 6.09e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00132  1.25e-16  4.35e-55
        W1b       759         1  9.52e-14   3.3e-52
         P1  7.98e+15  1.05e+13         1  3.47e-39
         P2   2.3e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000331  1.67e-20  5.81e-59
        W1b  3.02e+03         1  5.06e-17  1.76e-55
         P1  5.98e+19  1.98e+16         1  3.47e-39
         P2  1.72e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 2.03531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.90274, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.31447, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.23899, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0634967
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.09    0.0521         0         1
          1      18.3      1.08         1   -0.0332
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.069    0.0521  -0.00121        -1
          1      1.16      1.08        -1   0.00121
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.24146, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.90661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.23201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14626, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0634967
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.249    0.0135         0         1
          1      5.47     0.393         1   -0.0911
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0158    0.0135  -0.00331        -1
          1     0.347     0.393        -1   0.00331
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.14698, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.076191, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002984, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.080006, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0634967
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.131   0.00635         0         1
          1      3.18     0.325         1    -0.174
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00831   0.00635  -0.00632        -1
          1     0.202     0.325        -1   0.00632
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.080082, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01948, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002975, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0634967
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0681   0.00268         0         1
          1      1.88     0.275         1    -0.306
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00433   0.00268   -0.0111        -1
          1      0.12     0.275        -1    0.0111
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022541, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019477, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002993, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022529, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0634967
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0351   0.00102         0     0.999
          1      1.16     0.221         1    -0.466
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223   0.00102   -0.0169        -1
          1    0.0734     0.221        -1    0.0169
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022553, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001854
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000491
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036324
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.206744
         W1a Well: minimal relaxation eigenvalue = 0.0627635
         W1a Well: maximal relaxation eigenvalue = 4.71062
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001752
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.269181
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077383
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075138
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.320406
         W1b Well: minimal relaxation eigenvalue = 0.0700072
         W1b Well: maximal relaxation eigenvalue = 1.16188
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.01205, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.35e+05 7.87e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00185  7.53e-17  1.69e-53
        W1b       542         1  4.08e-14  9.13e-51
         P1  1.33e+16  2.45e+13         1  2.24e-37
         P2  5.93e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000636  1.07e-20  2.41e-57
        W1b  1.57e+03         1  1.69e-17  3.78e-54
         P1  9.31e+19  5.92e+16         1  2.24e-37
         P2  4.16e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.01621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75032, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.291934, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0627635
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.05      0.06         0         1
          1      20.7      1.16         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0662      0.06  -0.00122        -1
          1       1.3      1.16        -1   0.00122
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.06016, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75832, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.258839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.02489, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0627635
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0162         0         1
          1      6.05     0.414         1   -0.0807
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0155    0.0162  -0.00347        -1
          1      0.38     0.414        -1   0.00347
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0275, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.522744, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002756, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.532229, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0627635
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.131   0.00785         0         1
          1      3.49     0.348         1    -0.157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00825   0.00785  -0.00674        -1
          1     0.219     0.348        -1   0.00674
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.532611, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017973, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002746, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020776, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0627635
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.069   0.00344         0     0.999
          1      2.06       0.3         1    -0.281
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00433   0.00344   -0.0121        -1
          1     0.129       0.3        -1    0.0121
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020799, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017932, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002734, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020722, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0627635
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0359   0.00136         0     0.999
          1      1.27     0.246         1    -0.434
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00225   0.00136   -0.0186        -1
          1    0.0795     0.246        -1    0.0186
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020745, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001951
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000479
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036293
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.20473
         W1a Well: minimal relaxation eigenvalue = 0.0621284
         W1a Well: maximal relaxation eigenvalue = 3.6553
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001745
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.267152
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078694
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085786
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.321853
         W1b Well: minimal relaxation eigenvalue = 0.0684257
         W1b Well: maximal relaxation eigenvalue = 1.1857
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02096, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.71e+05 1.01e+12
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0026  4.89e-17  4.91e-52
        W1b       384         1  1.88e-14  1.89e-49
         P1  2.05e+16  5.33e+13         1     1e-35
         P2  2.04e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00116   7.2e-21  7.23e-56
        W1b       863         1  6.21e-18  6.24e-53
         P1  1.39e+20  1.61e+17         1     1e-35
         P2  1.38e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.02502, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76578, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.291951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0801, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0621284
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03    0.0692         0         1
          1      24.4      1.04         1   -0.0247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0643    0.0692  -0.00126        -1
          1      1.51      1.04        -1   0.00126
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.08255, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76746, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.260638, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03577, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0621284
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.249    0.0195         0         1
          1      6.74     0.423         1   -0.0722
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0155    0.0195  -0.00368        -1
          1     0.419     0.423        -1   0.00368
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.03816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.482361, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.491737, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0621284
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134   0.00972         0         1
          1      3.84     0.369         1    -0.142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00832   0.00972  -0.00725        -1
          1     0.239     0.369        -1   0.00725
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.49212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018085, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020912, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0621284
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0711    0.0044         0     0.999
          1      2.26     0.326         1    -0.258
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00442    0.0044   -0.0132        -1
          1      0.14     0.326        -1    0.0132
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020935, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002751, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020882, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0621284
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0373   0.00182         0     0.999
          1      1.38     0.273         1    -0.403
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00231   0.00182   -0.0206        -1
          1     0.086     0.273        -1    0.0206
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020906, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00197
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000468
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032801
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.21385
         W1a Well: minimal relaxation eigenvalue = 0.061438
         W1a Well: maximal relaxation eigenvalue = 5.74535
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001725
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.271485
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079113
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.087815
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.326946
         W1b Well: minimal relaxation eigenvalue = 0.0669196
         W1b Well: maximal relaxation eigenvalue = 1.2187
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03814, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.49e+05 1.29e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00365  3.29e-17  1.08e-50
        W1b       274         1  9.02e-15  2.96e-48
         P1  3.04e+16  1.11e+14         1  3.28e-34
         P2  9.24e+49  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00201     5e-21  1.64e-54
        W1b       497         1  2.49e-18  8.17e-52
         P1     2e+20  4.02e+17         1  3.28e-34
         P2  6.08e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.04197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.78413, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.296733, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.061438
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02    0.0794         0         1
          1      26.6      1.18         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0628    0.0794  -0.00131        -1
          1      1.64      1.18        -1   0.00131
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.09978, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.78726, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.263979, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05902, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.061438
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254    0.0233         0         1
          1      7.32     0.454         1   -0.0649
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0233  -0.00392        -1
          1      0.45     0.454        -1   0.00392
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0614, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.441023, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002807, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.450508, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.061438
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.138     0.012         0         1
          1      4.17     0.397         1    -0.129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00847     0.012  -0.00779        -1
          1     0.256     0.397        -1   0.00779
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.450893, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018409, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002796, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021261, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.061438
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.074   0.00561         0     0.999
          1      2.45     0.354         1    -0.237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00561   -0.0143        -1
          1      0.15     0.354        -1    0.0143
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021285, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018397, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021259, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.061438
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0392   0.00241         0     0.999
          1       1.5       0.3         1    -0.374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00241   0.00241   -0.0226        -1
          1    0.0924       0.3        -1    0.0226
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021285, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001896
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000452
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042594
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.196053
         W1a Well: minimal relaxation eigenvalue = 0.0607451
         W1a Well: maximal relaxation eigenvalue = 8.01126
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001718
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.25999
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073701
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089157
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.307966
         W1b Well: minimal relaxation eigenvalue = 0.0652551
         W1b Well: maximal relaxation eigenvalue = 1.22938
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.994769, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.59e+05 1.65e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00486  2.23e-17  1.81e-49
        W1b       206         1  4.59e-15  3.73e-47
         P1  4.48e+16  2.18e+14         1  8.12e-33
         P2  5.52e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00335  3.59e-21  2.92e-53
        W1b       299         1  1.07e-18  8.71e-51
         P1  2.78e+20  9.31e+17         1  8.12e-33
         P2  3.43e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 0.998483, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.64938, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.265355, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94036, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.964    0.0905         0         1
          1      29.2       1.3         1   -0.0182
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0586    0.0905  -0.00127        -1
          1      1.78       1.3        -1   0.00127
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.94275, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.65494, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244483, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90684, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.248    0.0273         0         1
          1      7.95     0.489         1   -0.0573
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0151    0.0273  -0.00399        -1
          1     0.483     0.489        -1   0.00399
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.90916, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.68763, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.696848, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.137    0.0144         0     0.999
          1      4.52     0.428         1    -0.116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00833    0.0144  -0.00806        -1
          1     0.274     0.428        -1   0.00806
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.697206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002627, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019941, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0747   0.00695         0     0.999
          1      2.65     0.384         1    -0.215
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00454   0.00695    -0.015        -1
          1     0.161     0.384        -1     0.015
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019965, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017239, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002622, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0607451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0401   0.00311         0     0.998
          1      1.63      0.33         1    -0.344
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00243   0.00311    -0.024        -1
          1    0.0992      0.33        -1     0.024
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01994, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001818
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000455
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.039862
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.191771
         W1a Well: minimal relaxation eigenvalue = 0.060221
         W1a Well: maximal relaxation eigenvalue = 5.99884
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001912
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.253329
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07394
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.095036
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.308436
         W1b Well: minimal relaxation eigenvalue = 0.063953
         W1b Well: maximal relaxation eigenvalue = 1.25809
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.987098, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.39e+05 2.08e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00685   1.6e-17  2.51e-48
        W1b       146         1  2.34e-15  3.67e-46
         P1  6.24e+16  4.27e+14         1  1.57e-31
         P2  3.98e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00537  2.66e-21  4.16e-52
        W1b       186         1  4.95e-19  7.76e-50
         P1  3.76e+20  2.02e+18         1  1.57e-31
         P2   2.4e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 0.990848, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.66324, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.277185, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95914, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.060221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.974     0.104         0         1
          1      33.5      1.13         1   -0.0163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0586     0.104  -0.00135        -1
          1      2.02      1.13        -1   0.00135
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.96186, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.66813, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246846, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9223, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.060221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.259    0.0327         0         1
          1      8.76     0.499         1   -0.0523
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0327  -0.00432        -1
          1     0.527     0.499        -1   0.00432
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.92465, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.657249, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002669, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.666307, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.060221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.145    0.0177         0     0.999
          1      4.94     0.453         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00874    0.0177  -0.00874        -1
          1     0.297     0.453        -1   0.00874
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.666684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017458, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002659, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020172, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.060221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0802   0.00884         0     0.999
          1      2.89     0.415         1    -0.197
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00483   0.00884   -0.0163        -1
          1     0.174     0.415        -1    0.0163
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020197, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017412, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002657, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020124, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.060221
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0436   0.00412         0     0.998
          1      1.78     0.363         1    -0.317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00412   -0.0262        -1
          1     0.107     0.363        -1    0.0262
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020148, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001885
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000429
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036617
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.192034
         W1a Well: minimal relaxation eigenvalue = 0.0596731
         W1a Well: maximal relaxation eigenvalue = 4.3899
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001777
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.253386
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.072352
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078898
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.289362
         W1b Well: minimal relaxation eigenvalue = 0.0627562
         W1b Well: maximal relaxation eigenvalue = 1.33318
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.946396, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.24e+05 2.62e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0096  1.15e-17   2.8e-47
        W1b       104         1   1.2e-15  2.91e-45
         P1  8.68e+16  8.34e+14         1  2.43e-30
         P2  3.58e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00832  2.01e-21  4.89e-51
        W1b       120         1  2.42e-19  5.88e-49
         P1  4.96e+20  4.13e+18         1  2.43e-30
         P2  2.04e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.950406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240594, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0596731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1     0.119         0         1
          1      37.8      1.03         1    -0.015
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0597     0.119  -0.00146        -1
          1      2.26      1.03        -1   0.00146
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57032, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.233042, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0596731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.275     0.039         0         1
          1      9.59     0.521         1   -0.0482
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0164     0.039  -0.00472        -1
          1     0.572     0.521        -1   0.00472
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.900125, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002546, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908687, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0596731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.156    0.0216         0     0.999
          1      5.38     0.485         1   -0.0971
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00933    0.0216  -0.00952        -1
          1     0.321     0.485        -1   0.00952
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.909063, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016414, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002496, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0596731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0875    0.0112         0     0.998
          1      3.15     0.451         1    -0.181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00522    0.0112   -0.0178        -1
          1     0.188     0.451        -1    0.0178
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018988, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016346, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002495, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018894, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0596731
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0483   0.00543         0     0.997
          1      1.94     0.398         1    -0.292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00288   0.00543   -0.0286        -1
          1     0.116     0.398        -1    0.0286
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018917, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001894
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000432
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036045
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186477
         W1a Well: minimal relaxation eigenvalue = 0.0590756
         W1a Well: maximal relaxation eigenvalue = 6.70682
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001911
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232877
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070905
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.101155
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.293354
         W1b Well: minimal relaxation eigenvalue = 0.0617767
         W1b Well: maximal relaxation eigenvalue = 1.43077
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.944702, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.69e+05 3.27e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0136   8.7e-18  2.69e-46
        W1b      73.7         1  6.41e-16  1.98e-44
         P1  1.15e+17  1.56e+15         1  3.09e-29
         P2  3.71e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0125  1.56e-21  4.83e-50
        W1b      79.9         1  1.25e-19  3.86e-48
         P1   6.4e+20  8.01e+18         1  3.09e-29
         P2  2.07e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.948395, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.584, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253031, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86989, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0590756
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.136         0         1
          1      41.2      1.13         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0629     0.136  -0.00166        -1
          1      2.44      1.13        -1   0.00166
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87228, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58524, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.237629, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82999, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0590756
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.301    0.0464         0     0.999
          1      10.4     0.564         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178    0.0464  -0.00529        -1
          1     0.613     0.564        -1   0.00529
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83229, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.846716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002588, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.855345, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0590756
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.173    0.0264         0     0.999
          1      5.83     0.525         1   -0.0904
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102    0.0264   -0.0105        -1
          1     0.344     0.525        -1    0.0105
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.855716, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019278, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0590756
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0983    0.0141         0     0.998
          1      3.42      0.49         1    -0.168
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00581    0.0141   -0.0196        -1
          1     0.202      0.49        -1    0.0196
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019303, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016532, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019127, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0590756
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.055   0.00715         0     0.996
          1      2.12     0.437         1     -0.27
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00715   -0.0314        -1
          1     0.125     0.437        -1    0.0314
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019151, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001767
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000433
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034496
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.190089
         W1a Well: minimal relaxation eigenvalue = 0.0584073
         W1a Well: maximal relaxation eigenvalue = 10.7257
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001657
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.253865
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071293
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.096618
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.296132
         W1b Well: minimal relaxation eigenvalue = 0.0608865
         W1b Well: maximal relaxation eigenvalue = 1.52929
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.965573, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.49e+05 4.08e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.019  6.72e-18  2.22e-45
        W1b      52.7         1  3.54e-16  1.17e-43
         P1  1.49e+17  2.83e+15         1  3.31e-28
         P2   4.5e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0183  1.24e-21  4.09e-49
        W1b      54.6         1  6.75e-20  2.23e-47
         P1  8.09e+20  1.48e+19         1  3.31e-28
         P2  2.45e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.969326, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59933, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.258968, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87614, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0584073
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15     0.155         0         1
          1      43.6      1.46         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0669     0.155  -0.00188        -1
          1      2.55      1.46        -1   0.00188
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60334, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240011, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85122, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0584073
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.333    0.0548         0     0.999
          1      11.1      0.63         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0194    0.0548  -0.00592        -1
          1     0.651      0.63        -1   0.00592
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81846, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002585, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.827156, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0584073
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.194     0.032         0     0.998
          1      6.28     0.575         1   -0.0845
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113     0.032   -0.0116        -1
          1     0.367     0.575        -1    0.0116
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.827527, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016766, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0584073
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.111    0.0177         0     0.997
          1       3.7     0.535         1    -0.156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0065    0.0177   -0.0214        -1
          1     0.216     0.535        -1    0.0214
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019409, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016738, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019354, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0584073
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0631   0.00933         0     0.995
          1      2.31     0.479         1    -0.249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00369   0.00933   -0.0343    -0.999
          1     0.135     0.479    -0.999    0.0343
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019377, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001845
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000421
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035387
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177382
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001822
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.23898
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068615
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.097934
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.286633
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.927761, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.69e+05 5.05e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  5.16e-18  1.55e-44
        W1b      38.2         1  1.97e-16  5.94e-43
         P1  1.94e+17  5.07e+15         1  3.01e-27
         P2  6.43e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  9.97e-22  3.01e-48
        W1b      38.2         1  3.81e-20  1.15e-46
         P1     1e+21  2.63e+19         1  3.01e-27
         P2  3.33e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.931494, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.255597, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.176         0         1
          1      47.7      1.56         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00212        -1
          1      2.76      1.56        -1   0.00212
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79338, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52364, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.75821, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.367    0.0644         0     0.999
          1      12.1     0.678         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0644  -0.00659        -1
          1     0.701     0.678        -1   0.00659
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.76049, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002477, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0385         0     0.998
          1      6.83     0.623         1   -0.0791
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0128        -1
          1     0.395     0.623        -1    0.0128
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00246, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018449, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0219         0     0.996
          1      4.03     0.582         1    -0.144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00729    0.0219   -0.0233        -1
          1     0.233     0.582        -1    0.0233
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018472, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015854, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002445, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018353, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0725     0.012         0     0.994
          1      2.53     0.525         1    -0.229
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419     0.012   -0.0371    -0.999
          1     0.146     0.525    -0.999    0.0371
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018379, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001795
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000415
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036757
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172494
         W1a Well: minimal relaxation eigenvalue = 0.0575534
         W1a Well: maximal relaxation eigenvalue = 6.13806
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001667
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.241664
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07101
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.092095
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.288202
         W1b Well: minimal relaxation eigenvalue = 0.0593928
         W1b Well: maximal relaxation eigenvalue = 2.03206
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.924755, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.49e+05 6.24e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0361  4.13e-18  9.83e-44
        W1b      27.7         1  1.14e-16  2.72e-42
         P1  2.42e+17  8.75e+15         1  2.38e-26
         P2  1.02e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0366  8.17e-22  1.95e-47
        W1b      27.3         1  2.23e-20  5.32e-46
         P1  1.22e+21  4.48e+19         1  2.38e-26
         P2  5.14e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.928484, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53737, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253454, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81013, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0575534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.198         0         1
          1      55.2       1.1         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0787     0.198  -0.00248        -1
          1      3.18       1.1        -1   0.00248
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81251, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5371, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.229217, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77397, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0575534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.415    0.0753         0     0.999
          1      13.4     0.695         1   -0.0394
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0239    0.0753  -0.00748        -1
          1     0.769     0.695        -1   0.00748
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.77633, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.953812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002492, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.962196, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0575534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246    0.0461         0     0.997
          1       7.5     0.666         1   -0.0749
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0461   -0.0142        -1
          1     0.432     0.666        -1    0.0142
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.962559, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016056, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002461, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0575534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.145     0.027         0     0.995
          1      4.43     0.632         1    -0.135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835     0.027   -0.0256        -1
          1     0.255     0.632        -1    0.0256
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018594, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018544, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0575534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0846    0.0154         0     0.992
          1      2.78     0.575         1    -0.212
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00487    0.0154   -0.0403    -0.999
          1      0.16     0.575    -0.999    0.0403
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018569, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001825
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033724
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.184895
         W1a Well: minimal relaxation eigenvalue = 0.056965
         W1a Well: maximal relaxation eigenvalue = 9.82609
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001661
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.23944
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070563
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.101382
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.284514
         W1b Well: minimal relaxation eigenvalue = 0.0588738
         W1b Well: maximal relaxation eigenvalue = 1.80041
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.936816, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.24e+05 7.67e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0497  3.35e-18  5.55e-43
        W1b      20.1         1  6.75e-17  1.12e-41
         P1  2.98e+17  1.48e+16         1  1.65e-25
         P2   1.8e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0501  6.79e-22  1.12e-46
        W1b      19.9         1  1.35e-20  2.24e-45
         P1  1.47e+21  7.38e+19         1  1.65e-25
         P2   8.9e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.940547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.53491, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.238603, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79843, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.056965
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.56     0.222         0     0.999
          1      58.3      1.45         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0891     0.222  -0.00296        -1
          1      3.32      1.45        -1   0.00296
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.80081, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54107, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77749, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.056965
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.479    0.0876         0     0.998
          1      14.4     0.772         1   -0.0386
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0273    0.0876   -0.0086        -1
          1     0.821     0.772        -1    0.0086
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.77981, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.976467, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002505, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.984827, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.056965
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.286    0.0549         0     0.996
          1      8.13     0.729         1   -0.0717
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0549    -0.016        -1
          1     0.463     0.729        -1     0.016
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.985202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016077, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002475, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018607, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.056965
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.17     0.033         0     0.994
          1      4.83     0.691         1    -0.127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00969     0.033   -0.0282        -1
          1     0.275     0.691        -1    0.0282
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018632, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002474, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018536, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.056965
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       0.1    0.0196         0      0.99
          1      3.05      0.63         1    -0.197
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00572    0.0196   -0.0438    -0.999
          1     0.174      0.63    -0.999    0.0438
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01856, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001713
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000406
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033341
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177276
         W1a Well: minimal relaxation eigenvalue = 0.0566157
         W1a Well: maximal relaxation eigenvalue = 6.45439
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001679
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.242847
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066753
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08433
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.272876
         W1b Well: minimal relaxation eigenvalue = 0.0583176
         W1b Well: maximal relaxation eigenvalue = 1.94699
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.899288, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.81e+05 9.39e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0666   2.7e-18  2.76e-42
        W1b        15         1  4.06e-17  4.15e-41
         P1   3.7e+17  2.46e+16         1  1.02e-24
         P2  3.62e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0675  5.73e-22  5.85e-46
        W1b      14.8         1  8.49e-21  8.67e-45
         P1  1.75e+21  1.18e+20         1  1.02e-24
         P2  1.71e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.903014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.4451, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.225848, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69982, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0566157
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.75     0.248         0     0.999
          1      65.8      1.21         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0994     0.248  -0.00345        -1
          1      3.73      1.21        -1   0.00345
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70216, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.44875, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.67304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0566157
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.543     0.101         0     0.997
          1      15.8     0.816         1   -0.0377
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0307     0.101  -0.00972        -1
          1     0.896     0.816        -1   0.00972
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005692, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19591, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0566157
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.327    0.0645         0     0.995
          1      8.91     0.788         1   -0.0685
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0185    0.0645   -0.0177        -1
          1     0.505     0.788        -1    0.0177
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19627, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015174, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002337, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017563, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0566157
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.196    0.0399         0     0.992
          1       5.3     0.752         1    -0.119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0399   -0.0306        -1
          1       0.3     0.752        -1    0.0306
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017587, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015077, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017474, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0566157
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.117    0.0244     0.012     0.988
          1      3.37     0.689         1    -0.182
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00664    0.0244    -0.047    -0.999
          1     0.191     0.689    -0.999     0.047
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017497, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001806
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033462
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.179303
         W1a Well: minimal relaxation eigenvalue = 0.0560626
         W1a Well: maximal relaxation eigenvalue = 10.1821
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001635
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.227298
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067039
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.097394
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.270942
         W1b Well: minimal relaxation eigenvalue = 0.0578115
         W1b Well: maximal relaxation eigenvalue = 2.47943
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.896721, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.54e+05 1.15e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0881  2.26e-18  1.28e-41
        W1b      11.4         1  2.56e-17  1.45e-40
         P1  4.43e+17   3.9e+16         1  5.66e-24
         P2  7.82e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0892  4.89e-22  2.77e-45
        W1b      11.2         1  5.48e-21   3.1e-44
         P1  2.05e+21  1.83e+20         1  5.66e-24
         P2  3.61e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.90079, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.228646, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70664, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0560626
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.98     0.275         0     0.999
          1      70.8      1.43         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.111     0.275  -0.00402        -1
          1      3.97      1.43        -1   0.00402
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45844, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0560626
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.618     0.115         0     0.997
          1      17.1       0.9         1   -0.0369
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0347     0.115    -0.011        -1
          1      0.96       0.9        -1     0.011
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.68563, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004176, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18022, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0560626
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.375    0.0752         0     0.994
          1      9.69     0.863         1   -0.0657
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021    0.0752   -0.0195        -1
          1     0.543     0.863        -1    0.0195
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015301, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002338, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017692, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0560626
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.227    0.0476         0      0.99
          1      5.79     0.822         1    -0.112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0127    0.0476   -0.0332    -0.999
          1     0.325     0.822    -0.999    0.0332
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017716, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002336, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01758, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0560626
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.137    0.0301    0.0147     0.985
          1      3.71     0.755         1    -0.169
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00768    0.0301   -0.0502    -0.999
          1     0.208     0.755    -0.999    0.0502
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017604, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001651
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0004
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090899
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162726
         W1a Well: minimal relaxation eigenvalue = 0.0554335
         W1a Well: maximal relaxation eigenvalue = 13.8646
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001572
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.225903
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063597
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.102423
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.255509
         W1b Well: minimal relaxation eigenvalue = 0.0573243
         W1b Well: maximal relaxation eigenvalue = 2.11973
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.92207, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.57e+05 1.39e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.115  1.87e-18  5.32e-41
        W1b      8.71         1  1.63e-17  4.63e-40
         P1  5.35e+17  6.14e+16         1  2.85e-23
         P2  1.88e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.116  4.22e-22   1.2e-44
        W1b       8.6         1  3.63e-21  1.03e-43
         P1  2.37e+21  2.76e+20         1  2.85e-23
         P2  8.33e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.925676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35384, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230969, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60385, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0554335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.24     0.303         0     0.998
          1      75.5      1.88         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.124     0.303  -0.00464        -1
          1      4.19      1.88        -1   0.00464
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60634, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3566, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.205415, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56854, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0554335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.703     0.131         0     0.996
          1      18.5         1         1   -0.0362
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.039     0.131   -0.0123        -1
          1      1.03         1        -1    0.0123
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.57083, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32289, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.023291, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35188, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0554335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.429    0.0867         0     0.993
          1      10.5     0.949         1   -0.0631
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0867   -0.0214        -1
          1     0.584     0.949        -1    0.0214
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35235, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016716, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002252, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019233, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0554335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.261    0.0562     0.012     0.988
          1      6.34     0.901         1    -0.106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0145    0.0562   -0.0358    -0.999
          1     0.351     0.901    -0.999    0.0358
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019275, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014406, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002241, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016697, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0554335
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.16    0.0366    0.0178     0.982
          1      4.09     0.828         1    -0.158
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00884    0.0366   -0.0534    -0.999
          1     0.227     0.828    -0.999    0.0534
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016721, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001715
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000402
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031614
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168707
         W1a Well: minimal relaxation eigenvalue = 0.0553285
         W1a Well: maximal relaxation eigenvalue = 7.39948
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001627
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.230287
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06369
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088842
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260255
         W1b Well: minimal relaxation eigenvalue = 0.0568592
         W1b Well: maximal relaxation eigenvalue = 2.55054
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.864545, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.31e+05 1.69e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.148   1.6e-18  2.09e-40
        W1b      6.78         1  1.08e-17  1.41e-39
         P1  6.26e+17  9.24e+16         1  1.31e-22
         P2  4.79e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.149  3.68e-22   4.8e-44
        W1b       6.7         1  2.46e-21  3.22e-43
         P1  2.72e+21  4.06e+20         1  1.31e-22
         P2  2.08e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.868219, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.38405, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235236, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63359, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0553285
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.49     0.334         0     0.998
          1      85.9      1.36         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.138     0.334  -0.00528        -1
          1      4.75      1.36        -1   0.00528
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.38588, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0553285
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.79     0.148         0     0.995
          1      20.4      1.05         1   -0.0354
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0437     0.148   -0.0136        -1
          1      1.13      1.05        -1    0.0136
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60348, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32557, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.022552, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35381, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0553285
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.485    0.0997         0     0.991
          1      11.6      1.02         1   -0.0605
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0268    0.0997   -0.0232        -1
          1     0.642      1.02        -1    0.0232
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35428, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016353, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002239, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018854, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0553285
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.298    0.0661    0.0144     0.986
          1         7     0.978         1   -0.0993
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0661   -0.0381    -0.999
          1     0.387     0.978    -0.999    0.0381
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018895, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014445, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002231, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016724, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0553285
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.184    0.0442    0.0211     0.979
          1      4.54     0.901         1    -0.146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0102    0.0442    -0.056    -0.998
          1     0.251     0.901    -0.998     0.056
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016748, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001727
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000395
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029926
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.176714
         W1a Well: minimal relaxation eigenvalue = 0.0547862
         W1a Well: maximal relaxation eigenvalue = 11.6342
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001662
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.235195
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.064984
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076289
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.263146
         W1b Well: minimal relaxation eigenvalue = 0.0564045
         W1b Well: maximal relaxation eigenvalue = 4.25144
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.867087, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 1.05e+05 2.04e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.187  1.38e-18  7.61e-40
        W1b      5.34         1  7.35e-18  4.07e-39
         P1  7.26e+17  1.36e+17         1  5.53e-22
         P2  1.31e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.189  3.23e-22  1.79e-43
        W1b      5.28         1  1.71e-21  9.44e-43
         P1  3.09e+21  5.86e+20         1  5.53e-22
         P2  5.59e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.8708, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41252, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68045, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547862
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.8     0.369         0     0.997
          1      91.1      1.83         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.153     0.369  -0.00596        -1
          1      4.99      1.83        -1   0.00596
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.68287, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41959, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.213655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64001, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547862
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.893     0.167         0     0.994
          1      22.1      1.16         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0489     0.167    -0.015        -1
          1      1.21      1.16        -1     0.015
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.6423, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30673, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.019357, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33186, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547862
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.55     0.114    0.0108     0.989
          1      12.6      1.12         1   -0.0582
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0301     0.114   -0.0252        -1
          1     0.692      1.12        -1    0.0252
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3323, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014768, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017173, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547862
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.34    0.0769    0.0173     0.983
          1      7.67      1.07         1    -0.094
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0186    0.0769   -0.0407    -0.999
          1      0.42      1.07    -0.999    0.0407
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002268, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016833, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0547862
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.212    0.0527    0.0249     0.975
          1         5     0.985         1    -0.137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0116    0.0527    -0.059    -0.998
          1     0.274     0.985    -0.998     0.059
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016856, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001748
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000393
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032883
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167824
         W1a Well: minimal relaxation eigenvalue = 0.0544252
         W1a Well: maximal relaxation eigenvalue = 10.9776
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001691
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.216133
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.061793
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083719
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.24616
         W1b Well: minimal relaxation eigenvalue = 0.0559747
         W1b Well: maximal relaxation eigenvalue = 2.04553
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.829552, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.27e+05 2.45e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.234  1.18e-18  2.55e-39
        W1b      4.27         1  5.02e-18  1.09e-38
         P1  8.51e+17  1.99e+17         1  2.17e-21
         P2  3.93e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.237  2.87e-22  6.21e-43
        W1b      4.22         1  1.21e-21  2.62e-42
         P1  3.49e+21  8.27e+20         1  2.17e-21
         P2  1.61e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.833491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33823, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.219574, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57162, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.12     0.399         0     0.997
          1       101      1.69         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.17     0.399  -0.00672        -1
          1       5.5      1.69        -1   0.00672
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.57401, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34432, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.203243, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5541, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1     0.185         0     0.992
          1      24.2      1.26         1   -0.0341
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0545     0.185   -0.0165        -1
          1      1.32      1.26        -1    0.0165
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55642, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34487, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164069, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51499, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.62     0.128     0.013     0.987
          1      13.8      1.22         1   -0.0561
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0337     0.128   -0.0271        -1
          1     0.753      1.22        -1    0.0271
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51563, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.035453, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002155, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.038132, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.386    0.0884    0.0204      0.98
          1      8.43      1.16         1    -0.089
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.021    0.0884    -0.043    -0.999
          1     0.459      1.16    -0.999     0.043
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.038195, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01378, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0544252
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.243    0.0621     0.029     0.971
          1      5.53      1.07         1    -0.127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0132    0.0621   -0.0615    -0.998
          1     0.301      1.07    -0.998    0.0615
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015991, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001757
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000384
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034488
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170737
         W1a Well: minimal relaxation eigenvalue = 0.0542121
         W1a Well: maximal relaxation eigenvalue = 7.04994
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001673
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228378
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060587
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068631
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.253544
         W1b Well: minimal relaxation eigenvalue = 0.0555744
         W1b Well: maximal relaxation eigenvalue = 2.10905
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.83738, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 1.02e+05 2.94e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.291  1.03e-18  8.16e-39
        W1b      3.44         1  3.55e-18  2.81e-38
         P1  9.69e+17  2.82e+17         1  7.91e-21
         P2  1.22e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.294  2.57e-22  2.03e-42
        W1b       3.4         1  8.73e-22  6.91e-42
         P1   3.9e+21  1.15e+21         1  7.91e-21
         P2  4.93e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.841727, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34814, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.226516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59598, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0542121
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.48     0.435         0     0.996
          1       111      1.65         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.189     0.435  -0.00749        -1
          1      6.04      1.65        -1   0.00749
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.5984, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34594, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.202678, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55509, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0542121
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.12     0.206         0      0.99
          1      26.5      1.36         1   -0.0334
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0607     0.206    -0.018        -1
          1      1.44      1.36        -1     0.018
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55742, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34786, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132999, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48697, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0542121
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.697     0.145    0.0154     0.985
          1      15.2      1.32         1    -0.054
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0378     0.145   -0.0291        -1
          1     0.825      1.32        -1    0.0291
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.032225, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002157, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0349, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0542121
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.437     0.102    0.0238     0.976
          1      9.33      1.27         1    -0.084
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0237     0.102   -0.0452    -0.999
          1     0.506      1.27    -0.999    0.0452
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.034963, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013784, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002138, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0542121
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.278    0.0728    0.0332     0.967
          1      6.16      1.17         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0151    0.0728   -0.0636    -0.998
          1     0.334      1.17    -0.998    0.0636
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015994, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001683
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000374
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034123
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163648
         W1a Well: minimal relaxation eigenvalue = 0.0536505
         W1a Well: maximal relaxation eigenvalue = 12.0756
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001553
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.210577
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059464
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076596
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.239434
         W1b Well: minimal relaxation eigenvalue = 0.0551742
         W1b Well: maximal relaxation eigenvalue = 2.10219
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.803829, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.43e+05 3.52e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.357  8.96e-19  2.43e-38
        W1b       2.8         1  2.51e-18   6.8e-38
         P1  1.12e+18  3.98e+17         1  2.71e-20
         P2  4.12e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.36  2.31e-22  6.26e-42
        W1b      2.77         1  6.41e-22  1.74e-41
         P1  4.33e+21  1.56e+21         1  2.71e-20
         P2   1.6e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.807548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29008, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217453, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52103, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536505
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.9     0.471         0     0.995
          1       120      1.94         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.209     0.471  -0.00839        -1
          1      6.45      1.94        -1   0.00839
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29137, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49337, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536505
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.26     0.227    0.0116     0.988
          1      28.8      1.49         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0675     0.227   -0.0197        -1
          1      1.54      1.49        -1    0.0197
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28874, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194801, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536505
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.785     0.162    0.0183     0.982
          1      16.6      1.45         1   -0.0524
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0421     0.162   -0.0313        -1
          1     0.888      1.45        -1    0.0313
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.169009, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002066, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.176267, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536505
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.494     0.115    0.0279     0.972
          1      10.2      1.38         1   -0.0804
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0265     0.115    -0.048    -0.999
          1     0.546      1.38    -0.999     0.048
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.176639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015309, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0536505
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.317    0.0843    0.0384     0.962
          1      6.76      1.28         1    -0.112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.017    0.0843   -0.0668    -0.998
          1     0.363      1.28    -0.998    0.0668
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015333, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001711
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035334
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164516
         W1a Well: minimal relaxation eigenvalue = 0.0534991
         W1a Well: maximal relaxation eigenvalue = 7.67036
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00161
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218461
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058411
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08136
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.239668
         W1b Well: minimal relaxation eigenvalue = 0.0547704
         W1b Well: maximal relaxation eigenvalue = 2.15934
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.817576, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.15e+05  4.2e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.433  7.98e-19  6.97e-38
        W1b      2.31         1  1.84e-18  1.61e-37
         P1  1.25e+18  5.42e+17         1  8.73e-20
         P2  1.44e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.438   2.1e-22  1.83e-41
        W1b      2.28         1  4.78e-22  4.18e-41
         P1  4.77e+21  2.09e+21         1  8.73e-20
         P2  5.47e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.821249, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2688, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.213481, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50909, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534991
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.28     0.512         0     0.994
          1       133      1.86         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.229     0.512  -0.00916        -1
          1       7.1      1.86        -1   0.00916
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.27031, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192294, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46916, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534991
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.251    0.0137     0.986
          1      31.6      1.61         1   -0.0321
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0745     0.251   -0.0211        -1
          1      1.69      1.61        -1    0.0211
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195351, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534991
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.873     0.181    0.0213     0.979
          1      18.2      1.57         1   -0.0502
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0467     0.181    -0.033    -0.999
          1     0.976      1.57    -0.999     0.033
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48175, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.153577, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002095, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.160948, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534991
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.554     0.131    0.0317     0.968
          1      11.3       1.5         1   -0.0757
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0297     0.131   -0.0497    -0.999
          1     0.604       1.5    -0.999    0.0497
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.16133, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013203, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015316, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0534991
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.359    0.0974    0.0429     0.957
          1      7.55      1.38         1    -0.104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0192    0.0974    -0.068    -0.998
          1     0.404      1.38    -0.998     0.068
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015341, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001693
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000378
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028998
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16686
         W1a Well: minimal relaxation eigenvalue = 0.0530452
         W1a Well: maximal relaxation eigenvalue = 11.2311
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001603
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.224003
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058654
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072583
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.239093
         W1b Well: minimal relaxation eigenvalue = 0.0543994
         W1b Well: maximal relaxation eigenvalue = 2.22243
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.80991, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.72e+05    5e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.521  7.16e-19   1.9e-37
        W1b      1.92         1  1.37e-18  3.65e-37
         P1   1.4e+18  7.28e+17         1  2.66e-19
         P2  5.25e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.527  1.91e-22  5.08e-41
        W1b       1.9         1  3.63e-22  9.64e-41
         P1  5.23e+21  2.76e+21         1  2.66e-19
         P2  1.97e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.813767, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221821, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51884, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530452
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.76     0.554         0     0.993
          1       143      2.18         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252     0.554     -0.01        -1
          1       7.6      2.18        -1      0.01
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.52121, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29948, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19596, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50167, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530452
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.55     0.275    0.0162     0.984
          1      34.3      1.77         1   -0.0316
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0824     0.275   -0.0228        -1
          1      1.82      1.77        -1    0.0228
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50401, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30003, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195845, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50204, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530452
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.976       0.2    0.0247     0.975
          1      19.9      1.71         1   -0.0487
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0518       0.2   -0.0351    -0.999
          1      1.05      1.71    -0.999    0.0351
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50434, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.135629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00209, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.142979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530452
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.622     0.147    0.0364     0.964
          1      12.3      1.64         1   -0.0726
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.033     0.147   -0.0523    -0.999
          1     0.655      1.64    -0.999    0.0523
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.143361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015444, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530452
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.406     0.111    0.0488     0.951
          1      8.29      1.51         1   -0.0985
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0215     0.111   -0.0709    -0.997
          1      0.44      1.51    -0.997    0.0709
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015468, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001703
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000375
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032367
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162823
         W1a Well: minimal relaxation eigenvalue = 0.0519868
         W1a Well: maximal relaxation eigenvalue = 19.7203
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001589
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214574
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057132
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073978
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.233062
         W1b Well: minimal relaxation eigenvalue = 0.0540187
         W1b Well: maximal relaxation eigenvalue = 2.60692
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.793331, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.47e+05 5.93e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.621  6.35e-19  4.88e-37
        W1b      1.61         1  1.02e-18  7.86e-37
         P1  1.58e+18  9.79e+17         1  7.69e-19
         P2  2.05e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.629  1.75e-22  1.35e-40
        W1b      1.59         1  2.79e-22  2.14e-40
         P1   5.7e+21  3.59e+21         1  7.69e-19
         P2  7.41e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.797037, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24997, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48253, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519868
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.32     0.598         0     0.991
          1       153      3.23         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.276     0.598    -0.011        -1
          1      7.93      3.23        -1     0.011
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44586, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519868
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.74     0.301    0.0191     0.981
          1      36.9      1.98         1   -0.0313
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0905     0.301   -0.0247        -1
          1      1.92      1.98        -1    0.0247
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44821, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25314, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191687, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45112, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519868
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.1      0.22     0.029     0.971
          1      21.3      1.89         1   -0.0481
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.057      0.22   -0.0379    -0.999
          1      1.11      1.89    -0.999    0.0379
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.2966, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002052, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.303795, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519868
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.699     0.163    0.0426     0.957
          1      13.2       1.8         1   -0.0716
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0364     0.163   -0.0564    -0.998
          1     0.684       1.8    -0.998    0.0564
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.304169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012927, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002021, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014995, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519868
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.456     0.125    0.0573     0.943
          1      8.81      1.67         1   -0.0977
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0237     0.125   -0.0768    -0.997
          1     0.458      1.67    -0.997    0.0768
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01502, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001646
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000385
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028672
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164669
         W1a Well: minimal relaxation eigenvalue = 0.0524683
         W1a Well: maximal relaxation eigenvalue = 9.80131
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001625
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21163
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057525
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075631
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.233842
         W1b Well: minimal relaxation eigenvalue = 0.0536761
         W1b Well: maximal relaxation eigenvalue = 2.56368
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.791109, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.13e+05 7.02e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.737  5.76e-19  1.22e-36
        W1b      1.36         1  7.82e-19  1.66e-36
         P1  1.74e+18  1.28e+18         1  2.12e-18
         P2  8.19e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.746  1.62e-22  3.43e-40
        W1b      1.34         1  2.17e-22   4.6e-40
         P1  6.18e+21  4.61e+21         1  2.12e-18
         P2  2.92e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.794794, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25748, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197465, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48113, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.79     0.644    0.0101      0.99
          1       172      2.37         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.304     0.644   -0.0119        -1
          1      9.01      2.37        -1    0.0119
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.9     0.329    0.0218     0.978
          1        41      2.09         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0999     0.329    -0.026        -1
          1      2.15      2.09        -1     0.026
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45666, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25547, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190504, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4523, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.2     0.244    0.0324     0.968
          1      23.9      2.03         1   -0.0454
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0632     0.244    -0.039    -0.999
          1      1.25      2.03    -0.999     0.039
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.29151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.298656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.776     0.184    0.0462     0.954
          1        15      1.93         1   -0.0657
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0407     0.184   -0.0563    -0.998
          1     0.786      1.93    -0.998    0.0563
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.299028, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012965, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001998, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524683
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.514     0.143    0.0602      0.94
          1      10.2      1.77         1    -0.087
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.027     0.143   -0.0745    -0.997
          1     0.533      1.77    -0.997    0.0745
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015033, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001638
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03095
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164164
         W1a Well: minimal relaxation eigenvalue = 0.0519849
         W1a Well: maximal relaxation eigenvalue = 13.7691
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001582
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211123
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056179
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074699
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.230217
         W1b Well: minimal relaxation eigenvalue = 0.0533221
         W1b Well: maximal relaxation eigenvalue = 3.23646
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.786238, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 1.02e+05 8.29e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.866  5.17e-19  2.89e-36
        W1b      1.15         1  5.97e-19  3.33e-36
         P1  1.93e+18  1.68e+18         1  5.58e-18
         P2  3.46e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.877   1.5e-22  8.38e-40
        W1b      1.14         1  1.71e-22  9.55e-40
         P1  6.67e+21  5.85e+21         1  5.58e-18
         P2  1.19e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.789932, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21572, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43983, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.39     0.695    0.0118     0.988
          1       185      2.78         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.332     0.695   -0.0128        -1
          1      9.61      2.78        -1    0.0128
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44225, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.11     0.358    0.0252     0.975
          1      44.4      2.28         1   -0.0298
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.358   -0.0277        -1
          1      2.31      2.28        -1    0.0277
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2124, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40351, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.34     0.268     0.037     0.963
          1      25.9      2.21         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0695     0.268   -0.0413    -0.999
          1      1.34      2.21    -0.999    0.0413
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40585, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.432967, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.439959, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.864     0.203    0.0523     0.948
          1      16.2       2.1         1   -0.0638
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0449     0.203   -0.0592    -0.998
          1     0.843       2.1    -0.998    0.0592
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.440337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012415, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001976, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014436, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.575      0.16    0.0679     0.932
          1        11      1.93         1   -0.0841
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0299      0.16    -0.078    -0.997
          1     0.573      1.93    -0.997     0.078
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014461, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001587
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000371
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029796
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159472
         W1a Well: minimal relaxation eigenvalue = 0.0519525
         W1a Well: maximal relaxation eigenvalue = 7.89467
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001598
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.207196
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.055702
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075547
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227512
         W1b Well: minimal relaxation eigenvalue = 0.0529989
         W1b Well: maximal relaxation eigenvalue = 2.89904
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.7745, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.63e+05 9.76e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  4.74e-19  6.68e-36
        W1b     0.988         1  4.68e-19   6.6e-36
         P1  2.11e+18  2.13e+18         1  1.41e-17
         P2   1.5e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.02   1.4e-22  1.97e-39
        W1b     0.976         1  1.36e-22  1.92e-39
         P1  7.16e+21  7.34e+21         1  1.41e-17
         P2  5.08e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.77845, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20848, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519525
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.01     0.745    0.0136     0.986
          1       205      2.69         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.364     0.745   -0.0137        -1
          1      10.7      2.69        -1    0.0137
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42988, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20801, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184643, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39858, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519525
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.32      0.39    0.0285     0.971
          1      49.1      2.46         1    -0.029
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.12      0.39   -0.0292        -1
          1      2.55      2.46        -1    0.0292
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40091, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20758, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186217, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4003, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519525
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.48     0.294    0.0412     0.959
          1      28.8      2.39         1   -0.0424
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0767     0.294   -0.0426    -0.999
          1       1.5      2.39    -0.999    0.0426
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40265, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.456468, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001961, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.463446, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519525
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.961     0.226    0.0569     0.943
          1      18.3      2.26         1   -0.0596
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0499     0.226   -0.0599    -0.998
          1     0.948      2.26    -0.998    0.0599
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.463816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001952, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014399, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519525
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.646     0.181    0.0722     0.928
          1      12.5      2.07         1   -0.0769
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0336     0.181   -0.0771    -0.997
          1      0.65      2.07    -0.997    0.0771
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014423, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001652
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000369
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032441
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167876
         W1a Well: minimal relaxation eigenvalue = 0.0515222
         W1a Well: maximal relaxation eigenvalue = 11.5849
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001924
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217601
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056283
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061407
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.227241
         W1b Well: minimal relaxation eigenvalue = 0.0526889
         W1b Well: maximal relaxation eigenvalue = 2.77412
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.78206, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.22e+05 1.15e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.18  4.36e-19  1.49e-35
        W1b     0.851         1  3.71e-19  1.27e-35
         P1  2.29e+18  2.69e+18         1  3.42e-17
         P2   6.7e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.19  1.31e-22  4.47e-39
        W1b      0.84         1   1.1e-22  3.76e-39
         P1  7.66e+21  9.11e+21         1  3.42e-17
         P2  2.24e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.785772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22177, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208456, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45708, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0515222
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.74     0.797    0.0158     0.984
          1       222      2.99         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.399     0.797   -0.0148        -1
          1      11.5      2.99        -1    0.0148
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4595, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22071, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185535, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41293, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0515222
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.56     0.421    0.0326     0.967
          1      53.1      2.68         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.132     0.421   -0.0311        -1
          1      2.74      2.68        -1    0.0311
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41528, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22319, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185261, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41463, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0515222
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.63      0.32    0.0466     0.953
          1      31.1       2.6         1   -0.0416
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0842      0.32   -0.0451    -0.999
          1       1.6       2.6    -0.999    0.0451
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41695, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.39692, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001975, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.403937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0515222
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.07     0.248     0.064     0.936
          1      19.7      2.46         1   -0.0582
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0549     0.248    -0.063    -0.998
          1      1.01      2.46    -0.998     0.063
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.404307, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012481, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001973, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0145, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0515222
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.719       0.2    0.0809     0.919
          1      13.5      2.25         1   -0.0749
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.037       0.2    -0.081    -0.997
          1     0.696      2.25    -0.997     0.081
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014523, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001601
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000368
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0322
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157048
         W1a Well: minimal relaxation eigenvalue = 0.0511941
         W1a Well: maximal relaxation eigenvalue = 12.5461
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001711
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.206181
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054638
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068789
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219664
         W1b Well: minimal relaxation eigenvalue = 0.0523727
         W1b Well: maximal relaxation eigenvalue = 2.72353
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.757827, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.26e+05 1.34e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.36  3.98e-19  3.18e-35
        W1b     0.738         1  2.93e-19  2.35e-35
         P1  2.52e+18  3.41e+18         1     8e-17
         P2  3.14e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.37  1.23e-22  9.81e-39
        W1b     0.728         1  8.93e-23  7.15e-39
         P1  8.15e+21  1.12e+22         1     8e-17
         P2  1.02e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.761728, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17937, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193449, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39361, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511941
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.5     0.852    0.0181     0.982
          1       242      3.26         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.435     0.852   -0.0158        -1
          1      12.4      3.26        -1    0.0158
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39607, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18013, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181149, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36736, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511941
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.82     0.454    0.0368     0.963
          1      57.9      2.92         1   -0.0282
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.144     0.454   -0.0328    -0.999
          1      2.96      2.92    -0.999    0.0328
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36997, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24048, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511941
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.8     0.348    0.0521     0.948
          1      33.9      2.82         1   -0.0406
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0923     0.348   -0.0472    -0.999
          1      1.74      2.82    -0.999    0.0472
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.680922, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.687757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511941
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.18     0.272    0.0709     0.929
          1      21.5      2.67         1   -0.0563
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0603     0.272   -0.0654    -0.998
          1       1.1      2.67    -0.998    0.0654
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.688138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012012, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001898, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511941
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.799     0.222    0.0888     0.911
          1      14.8      2.44         1   -0.0719
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0409     0.222   -0.0834    -0.997
          1     0.756      2.44    -0.997    0.0834
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013981, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001642
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028604
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15742
         W1a Well: minimal relaxation eigenvalue = 0.0511248
         W1a Well: maximal relaxation eigenvalue = 8.49008
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001701
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.203119
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054159
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07611
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.221183
         W1b Well: minimal relaxation eigenvalue = 0.0520809
         W1b Well: maximal relaxation eigenvalue = 2.66941
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.759222, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.89e+04 1.57e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.56  3.69e-19  6.67e-35
        W1b     0.643         1  2.37e-19  4.29e-35
         P1  2.71e+18  4.22e+18         1  1.81e-16
         P2   1.5e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.58  1.16e-22  2.09e-38
        W1b     0.635         1  7.34e-23  1.33e-38
         P1  8.65e+21  1.36e+22         1  1.81e-16
         P2  4.79e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.762925, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1838, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.203554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40005, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.31     0.909    0.0204      0.98
          1       265      3.45         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.476     0.909   -0.0167        -1
          1      13.6      3.45        -1    0.0167
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18416, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37045, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.09     0.491    0.0408     0.959
          1        64      3.15         1   -0.0273
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.158     0.491   -0.0341    -0.999
          1      3.27      3.15    -0.999    0.0341
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37279, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18328, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.98     0.379    0.0568     0.943
          1      37.8      3.04         1   -0.0387
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.379   -0.0482    -0.999
          1      1.93      3.04    -0.999    0.0482
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3721, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.544693, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.551502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.31       0.3    0.0757     0.924
          1      24.2      2.87         1   -0.0526
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0668       0.3   -0.0655    -0.998
          1      1.24      2.87    -0.998    0.0655
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.551867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012109, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014049, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0511248
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.895     0.247    0.0931     0.907
          1      16.8      2.61         1    -0.066
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0458     0.247    -0.082    -0.997
          1     0.857      2.61    -0.997     0.082
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014072, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001641
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027993
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158425
         W1a Well: minimal relaxation eigenvalue = 0.0491655
         W1a Well: maximal relaxation eigenvalue = 23.2524
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001744
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.205
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052657
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069692
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.211343
         W1b Well: minimal relaxation eigenvalue = 0.0517906
         W1b Well: maximal relaxation eigenvalue = 2.59779
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.743854, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 1.02e+05 1.84e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.78  3.39e-19  1.34e-34
        W1b     0.563         1  1.91e-19  7.54e-35
         P1  2.95e+18  5.24e+18         1  3.95e-16
         P2  7.47e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.8  1.09e-22  4.32e-38
        W1b     0.556         1  6.08e-23   2.4e-38
         P1  9.15e+21  1.65e+22         1  3.95e-16
         P2  2.32e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.747547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183857, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491655
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.6     0.966    0.0236     0.976
          1       285      4.77         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.52     0.966   -0.0181        -1
          1        14      4.77        -1    0.0181
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14641, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176004, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32838, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491655
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.5     0.523    0.0478     0.952
          1        67      3.53         1   -0.0282
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.172     0.523   -0.0376    -0.999
          1      3.29      3.53    -0.999    0.0376
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14549, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175639, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491655
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.24     0.403    0.0677     0.932
          1      38.4      3.37         1   -0.0409
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.403   -0.0544    -0.999
          1      1.89      3.37    -0.999    0.0544
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32941, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.686082, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001876, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.692823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491655
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.46     0.319    0.0928     0.907
          1      23.7       3.2         1   -0.0576
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0715     0.319   -0.0765    -0.997
          1      1.17       3.2    -0.997    0.0765
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.693195, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011738, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001847, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013629, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491655
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.979     0.264     0.118     0.882
          1      15.9      2.95         1   -0.0754
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0481     0.264   -0.0999    -0.995
          1     0.784      2.95    -0.995    0.0999
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013653, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001521
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000356
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027219
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154523
         W1a Well: minimal relaxation eigenvalue = 0.0504601
         W1a Well: maximal relaxation eigenvalue = 12.3331
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001727
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.197352
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053461
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073452
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216667
         W1b Well: minimal relaxation eigenvalue = 0.0514446
         W1b Well: maximal relaxation eigenvalue = 7.51528
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.741411, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.65e+05 2.14e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.02  3.17e-19  2.65e-34
        W1b     0.496         1  1.57e-19  1.32e-34
         P1  3.15e+18  6.36e+18         1  8.37e-16
         P2  3.77e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.04  1.04e-22  8.68e-38
        W1b      0.49         1  5.08e-23  4.25e-38
         P1  9.64e+21  1.97e+22         1  8.37e-16
         P2  1.15e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.745153, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15041, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.185615, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0504601
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        11      1.08    0.0256     0.974
          1       313      4.14         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.554      1.08   -0.0185        -1
          1      15.8      4.14        -1    0.0185
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15464, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176738, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33737, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0504601
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.69     0.581    0.0504      0.95
          1      75.1      3.72         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.581   -0.0373    -0.999
          1      3.79      3.72    -0.999    0.0373
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3397, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15322, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33566, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0504601
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.38     0.451    0.0693     0.931
          1      44.3      3.59         1   -0.0369
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.12     0.451   -0.0523    -0.999
          1      2.23      3.59    -0.999    0.0523
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33799, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.654393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.661136, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0504601
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58      0.36    0.0912     0.909
          1      28.3      3.38         1   -0.0497
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0795      0.36   -0.0705    -0.998
          1      1.43      3.38    -0.998    0.0705
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.661506, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011801, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001849, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013695, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0504601
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.09     0.299     0.111     0.889
          1      19.6      3.07         1   -0.0621
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0548     0.299   -0.0878    -0.996
          1      0.99      3.07    -0.996    0.0878
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013718, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001634
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032349
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159831
         W1a Well: minimal relaxation eigenvalue = 0.0494588
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001822
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.198347
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053574
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07035
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.2174
         W1b Well: minimal relaxation eigenvalue = 0.0512199
         W1b Well: maximal relaxation eigenvalue = 3.76307
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.750408, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.18e+05 2.48e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.28  2.98e-19  5.13e-34
        W1b     0.439         1  1.31e-19  2.25e-34
         P1  3.36e+18  7.66e+18         1  1.72e-15
         P2  1.95e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.31  9.87e-23   1.7e-37
        W1b     0.433         1  4.27e-23  7.36e-38
         P1  1.01e+22  2.34e+22         1  1.72e-15
         P2  5.88e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.754115, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187666, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37738, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0494588
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.4      1.11    0.0293     0.971
          1       339      4.85         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.611      1.11     -0.02        -1
          1      16.8      4.85        -1      0.02
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16427, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178974, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34929, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0494588
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.12     0.608    0.0577     0.942
          1      79.8      4.08         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.204     0.608   -0.0405    -0.999
          1      3.94      4.08    -0.999    0.0405
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3516, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16338, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0494588
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.64     0.474    0.0798      0.92
          1      46.1      3.92         1    -0.038
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.131     0.474   -0.0573    -0.998
          1      2.28      3.92    -0.998    0.0573
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34978, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.616245, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00188, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.623034, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0494588
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.74     0.381     0.106     0.894
          1      28.8      3.71         1   -0.0522
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.086     0.381   -0.0786    -0.997
          1      1.43      3.71    -0.997    0.0786
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.623408, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011888, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0138, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0494588
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.19      0.32     0.132     0.868
          1      19.6      3.39         1   -0.0666
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0587      0.32      -0.1    -0.995
          1      0.97      3.39    -0.995       0.1
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013825, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001581
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031388
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156303
         W1a Well: minimal relaxation eigenvalue = 0.0495892
         W1a Well: maximal relaxation eigenvalue = 17.5836
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001802
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.197256
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052111
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070263
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.210516
         W1b Well: minimal relaxation eigenvalue = 0.0509614
         W1b Well: maximal relaxation eigenvalue = 2.87204
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.736571, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.49e+05 2.88e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.57  2.76e-19  9.54e-34
        W1b      0.39         1  1.08e-19  3.72e-34
         P1  3.62e+18  9.28e+18         1  3.45e-15
         P2  1.05e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.6  9.42e-23  3.25e-37
        W1b     0.385         1  3.62e-23  1.25e-37
         P1  1.06e+22  2.76e+22         1  3.45e-15
         P2  3.08e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.740505, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12442, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0495892
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.5      1.17    0.0326     0.967
          1       370      5.09         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.668      1.17    -0.021        -1
          1      18.4      5.09        -1     0.021
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33879, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12316, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172148, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30115, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0495892
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.49     0.649    0.0629     0.937
          1      87.7      4.39         1   -0.0262
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223     0.649   -0.0419    -0.999
          1      4.35      4.39    -0.999    0.0419
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30347, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172531, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30143, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0495892
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.89      0.51    0.0857     0.914
          1      51.1      4.22         1   -0.0365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.143      0.51   -0.0584    -0.998
          1      2.54      4.22    -0.998    0.0584
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30375, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.752076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001844, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.758708, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0495892
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.91     0.414     0.112     0.888
          1      32.3      3.98         1   -0.0493
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0946     0.414   -0.0787    -0.997
          1       1.6      3.98    -0.997    0.0787
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.759076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011475, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001802, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0495892
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.31     0.351     0.137     0.863
          1      22.1      3.62         1   -0.0617
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0652     0.351   -0.0984    -0.995
          1       1.1      3.62    -0.995    0.0984
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013349, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001518
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000362
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031398
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159246
         W1a Well: minimal relaxation eigenvalue = 0.0498484
         W1a Well: maximal relaxation eigenvalue = 10.4006
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001536
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.200619
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053741
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072154
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.210713
         W1b Well: minimal relaxation eigenvalue = 0.0507151
         W1b Well: maximal relaxation eigenvalue = 2.84424
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.746596, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265    1e+05 3.34e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.88  2.61e-19  1.76e-33
        W1b     0.348         1  9.07e-20  6.11e-34
         P1  3.83e+18   1.1e+19         1  6.73e-15
         P2  5.69e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.91  9.01e-23  6.07e-37
        W1b     0.343         1  3.09e-23  2.08e-37
         P1  1.11e+22  3.23e+22         1  6.73e-15
         P2  1.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.750254, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12325, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192061, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34186, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498484
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.6      1.24     0.036     0.964
          1       409      5.08         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.729      1.24    -0.022        -1
          1      20.4      5.08        -1     0.022
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12324, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171979, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30109, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498484
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.88     0.697    0.0672     0.933
          1      98.4       4.7         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.243     0.697   -0.0424    -0.999
          1      4.91       4.7    -0.999    0.0424
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3034, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12431, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171221, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30123, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498484
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.16     0.555    0.0891     0.911
          1      58.5      4.51         1    -0.034
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.157     0.555   -0.0576    -0.998
          1      2.92      4.51    -0.998    0.0576
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30355, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.746932, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00182, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.753456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498484
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.11     0.455     0.113     0.887
          1      37.8      4.21         1   -0.0444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.105     0.455   -0.0751    -0.997
          1      1.88      4.21    -0.997    0.0751
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.753825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011517, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001802, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0498484
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.48     0.388     0.134     0.866
          1      26.4      3.79         1   -0.0538
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0737     0.388   -0.0909    -0.996
          1      1.32      3.79    -0.996    0.0909
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013386, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00161
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030161
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155943
         W1a Well: minimal relaxation eigenvalue = 0.049093
         W1a Well: maximal relaxation eigenvalue = 18.3315
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001584
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.197539
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05307
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070798
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.213165
         W1b Well: minimal relaxation eigenvalue = 0.0504032
         W1b Well: maximal relaxation eigenvalue = 7.1557
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.739027, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.63e+05 3.86e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.21  2.47e-19  3.17e-33
        W1b     0.312         1   7.7e-20  9.87e-34
         P1  4.05e+18   1.3e+19         1  1.28e-14
         P2  3.16e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  8.64e-23  1.11e-36
        W1b     0.308         1  2.66e-23  3.41e-37
         P1  1.16e+22  3.76e+22         1  1.28e-14
         P2  9.02e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.742508, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13952, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35161, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049093
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.7      1.37    0.0389     0.961
          1       439      5.98         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.772      1.37   -0.0226        -1
          1      21.5      5.98        -1    0.0226
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32102, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049093
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.28     0.759    0.0742     0.926
          1       104      5.13         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.259     0.759   -0.0447    -0.999
          1      5.09      5.13    -0.999    0.0447
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32336, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13946, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175721, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049093
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.42       0.6    0.0998       0.9
          1      60.4      4.93         1   -0.0345
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168       0.6   -0.0618    -0.998
          1      2.97      4.93    -0.998    0.0618
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32349, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.699883, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001914, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.70664, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049093
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.27      0.49     0.129     0.871
          1      38.1      4.64         1   -0.0462
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.112      0.49   -0.0825    -0.997
          1      1.87      4.64    -0.997    0.0825
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.707015, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011756, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001879, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013679, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.049093
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.418     0.156     0.844
          1      26.1      4.21         1   -0.0575
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0775     0.418    -0.102    -0.995
          1      1.28      4.21    -0.995     0.102
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013707, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001565
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000344
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034089
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152671
         W1a Well: minimal relaxation eigenvalue = 0.0492762
         W1a Well: maximal relaxation eigenvalue = 13.2806
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001625
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191075
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051591
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063025
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202361
         W1b Well: minimal relaxation eigenvalue = 0.0502104
         W1b Well: maximal relaxation eigenvalue = 3.04044
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.713171, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 9.28e+04 4.45e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  2.31e-19  5.52e-33
        W1b      0.28         1  6.48e-20  1.55e-33
         P1  4.32e+18  1.54e+19         1  2.39e-14
         P2  1.81e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.61  8.31e-23  1.98e-36
        W1b     0.277         1   2.3e-23  5.49e-37
         P1   1.2e+22  4.35e+22         1  2.39e-14
         P2  5.04e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.716811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09624, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.189761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30146, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0492762
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.4       1.4    0.0435     0.956
          1       481      5.99         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.856       1.4   -0.0241        -1
          1      23.7      5.99        -1    0.0241
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30389, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0971, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27085, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0492762
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.81     0.794      0.08      0.92
          1       115       5.5         1   -0.0244
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.286     0.794    -0.046    -0.999
          1      5.68       5.5    -0.999     0.046
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27319, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09811, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168896, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2726, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0492762
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.76     0.636     0.105     0.895
          1      68.2      5.27         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.185     0.636   -0.0621    -0.998
          1      3.36      5.27    -0.998    0.0621
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27488, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.854113, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.860876, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0492762
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.52     0.527     0.132     0.868
          1      43.8      4.92         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.124     0.527   -0.0805    -0.997
          1      2.16      4.92    -0.997    0.0805
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.86125, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011214, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013026, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0492762
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.454     0.156     0.844
          1      30.6      4.42         1   -0.0517
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0873     0.454   -0.0973    -0.995
          1      1.51      4.42    -0.995    0.0973
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013049, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00166
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000365
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029494
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158685
         W1a Well: minimal relaxation eigenvalue = 0.0481176
         W1a Well: maximal relaxation eigenvalue = 21.626
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001516
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192831
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051272
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057596
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.208583
         W1b Well: minimal relaxation eigenvalue = 0.0499763
         W1b Well: maximal relaxation eigenvalue = 3.07923
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.716291, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.56e+05 5.12e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.96   2.2e-19  9.57e-33
        W1b     0.253         1  5.57e-20  2.42e-33
         P1  4.54e+18   1.8e+19         1  4.35e-14
         P2  1.04e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         4  8.01e-23  3.48e-36
        W1b      0.25         1     2e-23  8.69e-37
         P1  1.25e+22     5e+22         1  4.35e-14
         P2  2.87e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.720002, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179327, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31004, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0481176
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.3      1.48    0.0481     0.952
          1       520       7.3         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.928      1.48   -0.0254        -1
          1        25       7.3        -1    0.0254
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31244, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10426, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.169716, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27966, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0481176
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.42     0.839    0.0898      0.91
          1       122      6.02         1   -0.0249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.309     0.839   -0.0495    -0.999
          1      5.86      6.02    -0.999    0.0495
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28198, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168197, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0481176
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.14     0.672      0.12      0.88
          1      70.2      5.77         1   -0.0344
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.199     0.672   -0.0682    -0.998
          1      3.38      5.77    -0.998    0.0682
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813447, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001821, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.819933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0481176
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.74     0.557     0.154     0.846
          1      43.7      5.42         1    -0.046
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.132     0.557    -0.091    -0.996
          1       2.1      5.42    -0.996     0.091
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.820295, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011284, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013107, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0481176
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.9     0.484     0.185     0.815
          1      29.6      4.92         1   -0.0575
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0913     0.484    -0.114    -0.994
          1      1.43      4.92    -0.994     0.114
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013131, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001554
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000343
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029127
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152329
         W1a Well: minimal relaxation eigenvalue = 0.0487531
         W1a Well: maximal relaxation eigenvalue = 14.9161
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001532
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193062
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050315
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065311
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.199757
         W1b Well: minimal relaxation eigenvalue = 0.0497369
         W1b Well: maximal relaxation eigenvalue = 3.1756
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70706, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 9.28e+04 5.89e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  2.07e-19  1.61e-32
        W1b     0.229         1  4.75e-20  3.68e-33
         P1  4.82e+18  2.11e+19         1  7.75e-14
         P2  6.22e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  7.74e-23     6e-36
        W1b     0.226         1  1.75e-23  1.36e-36
         P1  1.29e+22  5.72e+22         1  7.75e-14
         P2  1.67e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.71076, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07703, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184695, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487531
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.6      1.57    0.0519     0.948
          1       570      7.04         1   -0.0125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.01      1.57   -0.0262        -1
          1      27.8      7.04        -1    0.0262
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2832, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07599, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487531
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.89       0.9    0.0937     0.906
          1       136      6.44         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.336       0.9   -0.0494    -0.999
          1      6.63      6.44    -0.999    0.0494
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24966, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165335, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24632, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487531
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.47     0.727     0.122     0.878
          1      80.1      6.14         1   -0.0318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.218     0.727   -0.0662    -0.998
          1      3.91      6.14    -0.998    0.0662
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24889, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.919355, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.006538, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930621, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487531
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         3     0.608     0.152     0.848
          1      51.3      5.72         1    -0.041
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.146     0.608   -0.0855    -0.996
          1       2.5      5.72    -0.996    0.0855
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930998, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012787, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487531
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.12     0.529     0.178     0.822
          1      35.6      5.12         1   -0.0495
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.103     0.529    -0.103    -0.995
          1      1.74      5.12    -0.995     0.103
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012811, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001611
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030361
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155132
         W1a Well: minimal relaxation eigenvalue = 0.0446416
         W1a Well: maximal relaxation eigenvalue = 27.8587
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001587
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191724
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05092
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068249
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.19822
         W1b Well: minimal relaxation eigenvalue = 0.049516
         W1b Well: maximal relaxation eigenvalue = 3.22022
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711839, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.57e+05 6.76e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.81  1.98e-19  2.69e-32
        W1b     0.208         1  4.12e-20  5.59e-33
         P1  5.04e+18  2.42e+19         1  1.35e-13
         P2  3.72e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.87  7.49e-23  1.01e-35
        W1b     0.205         1  1.54e-23  2.08e-36
         P1  1.34e+22   6.5e+22         1  1.35e-13
         P2  9.86e+34   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.71547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07671, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121976, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21965, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446416
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      24.4      1.65    0.0571     0.943
          1       643      10.8         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.09      1.65   -0.0276        -1
          1      28.7      10.8        -1    0.0276
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22159, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02856, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166809, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19906, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446416
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.09     0.945     0.106     0.894
          1       149      7.12         1   -0.0247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.361     0.945   -0.0541    -0.999
          1      6.67      7.12    -0.999    0.0541
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20129, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25323, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446416
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.2      0.76     0.142     0.858
          1      84.5      6.76         1   -0.0344
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.232      0.76   -0.0752    -0.997
          1      3.77      6.76    -0.997    0.0752
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01315, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014553, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03248, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446416
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.42     0.636     0.184     0.816
          1      51.2      6.37         1   -0.0468
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.153     0.636    -0.102    -0.995
          1      2.28      6.37    -0.995     0.102
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03294, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00175, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013423, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446416
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.34     0.562     0.224     0.776
          1      33.7      5.82         1   -0.0601
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.104     0.562    -0.131    -0.991
          1       1.5      5.82    -0.991     0.131
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013456, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001655
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000352
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031167
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150604
         W1a Well: minimal relaxation eigenvalue = 0.0483076
         W1a Well: maximal relaxation eigenvalue = 15.7883
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00154
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.189981
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050829
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064009
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204178
         W1b Well: minimal relaxation eigenvalue = 0.0492666
         W1b Well: maximal relaxation eigenvalue = 4.74356
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.708214, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 9.79e+04 7.75e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.27   1.9e-19  4.42e-32
        W1b      0.19         1   3.6e-20  8.37e-33
         P1  5.26e+18  2.78e+19         1  2.32e-13
         P2  2.26e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.34  7.26e-23  1.69e-35
        W1b     0.187         1  1.36e-23  3.16e-36
         P1  1.38e+22  7.36e+22         1  2.32e-13
         P2  5.93e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.711949, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09322, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18905, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29574, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        24      1.79    0.0601      0.94
          1       676      8.16         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.16      1.79   -0.0278        -1
          1      32.6      8.16        -1    0.0278
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29816, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09377, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168389, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26798, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.06      1.03     0.107     0.893
          1       160      7.46         1   -0.0227
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.389      1.03   -0.0521    -0.999
          1      7.74      7.46    -0.999    0.0521
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09084, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167645, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26422, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.25     0.836     0.138     0.862
          1      94.2      7.12         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.253     0.836   -0.0694    -0.998
          1      4.55      7.12    -0.998    0.0694
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.870278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.877682, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.54     0.703      0.17      0.83
          1      60.1      6.62         1   -0.0389
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.171     0.703    -0.089    -0.996
          1      2.91      6.62    -0.996     0.089
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.878046, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01116, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001762, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012965, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0483076
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.51     0.615     0.198     0.802
          1      41.7      5.91         1   -0.0468
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.121     0.615    -0.107    -0.994
          1      2.01      5.91    -0.994     0.107
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012989, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001629
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02859
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147254
         W1a Well: minimal relaxation eigenvalue = 0.0484109
         W1a Well: maximal relaxation eigenvalue = 10.4618
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001573
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185667
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049565
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062055
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196572
         W1b Well: minimal relaxation eigenvalue = 0.0490383
         W1b Well: maximal relaxation eigenvalue = 5.49147
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.686922, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.69e+05 8.86e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.77   1.8e-19  7.06e-32
        W1b     0.173         1  3.12e-20  1.22e-32
         P1  5.55e+18   3.2e+19         1  3.92e-13
         P2  1.42e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.84  7.05e-23  2.76e-35
        W1b     0.171         1  1.21e-23  4.73e-36
         P1  1.42e+22  8.29e+22         1  3.92e-13
         P2  3.62e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.690332, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176259, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2607, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484109
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.8      1.91    0.0639     0.936
          1       737      8.73         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.25      1.91   -0.0284        -1
          1      35.7      8.73        -1    0.0284
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26311, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.061, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163046, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22954, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484109
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.71      1.11     0.111     0.889
          1       179         8         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.421      1.11   -0.0518    -0.999
          1      8.66         8    -0.999    0.0518
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23186, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06108, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162606, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22913, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484109
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.7     0.904      0.14      0.86
          1       107      7.58         1   -0.0281
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.276     0.904   -0.0674    -0.998
          1      5.19      7.58    -0.998    0.0674
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.972355, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.013056, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990078, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484109
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.89     0.764     0.169     0.831
          1        70      6.97         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.189     0.764   -0.0842    -0.996
          1      3.39      6.97    -0.996    0.0842
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990486, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010888, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012697, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0484109
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.8      0.67     0.192     0.808
          1      49.3      6.14         1   -0.0411
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.136      0.67   -0.0982    -0.995
          1      2.39      6.14    -0.995    0.0982
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012727, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001566
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000346
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03043
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153009
         W1a Well: minimal relaxation eigenvalue = 0.0478569
         W1a Well: maximal relaxation eigenvalue = 16.6827
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001552
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195176
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049089
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065657
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.193852
         W1b Well: minimal relaxation eigenvalue = 0.0488504
         W1b Well: maximal relaxation eigenvalue = 4.00404
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.704917, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 1.04e+05 1.01e+15
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.3  1.73e-19  1.12e-31
        W1b     0.159         1  2.75e-20  1.79e-32
         P1  5.77e+18  3.63e+19         1  6.49e-13
         P2  8.89e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.38  6.86e-23  4.45e-35
        W1b     0.157         1  1.08e-23  6.99e-36
         P1  1.46e+22  9.29e+22         1  6.49e-13
         P2  2.24e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.708882, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186964, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27978, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0478569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.5      1.98      0.07      0.93
          1       799      9.53         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.36      1.98     -0.03        -1
          1      38.2      9.53        -1      0.03
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28217, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07338, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164568, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24368, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0478569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.53      1.15     0.122     0.878
          1       189      8.69         1   -0.0221
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.456      1.15   -0.0553    -0.998
          1      9.05      8.69    -0.998    0.0553
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24598, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07172, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165139, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24259, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0478569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.2     0.943     0.156     0.844
          1       111      8.26         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.297     0.943   -0.0732    -0.997
          1      5.31      8.26    -0.997    0.0732
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.935812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0478569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.19     0.801      0.19      0.81
          1      70.6      7.64         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.201     0.801   -0.0933    -0.996
          1      3.38      7.64    -0.996    0.0933
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.947872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010965, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012748, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0478569
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.98     0.707      0.22      0.78
          1      48.8      6.79         1   -0.0447
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.143     0.707    -0.112    -0.994
          1      2.33      6.79    -0.994     0.112
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012773, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001462
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000339
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029701
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149234
         W1a Well: minimal relaxation eigenvalue = 0.0444134
         W1a Well: maximal relaxation eigenvalue = 27.2487
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001675
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.181459
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048431
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072953
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.192877
         W1b Well: minimal relaxation eigenvalue = 0.0486435
         W1b Well: maximal relaxation eigenvalue = 3.93391
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.691819, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.78e+04 1.15e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.85  1.65e-19  1.75e-31
        W1b     0.146         1  2.41e-20  2.55e-32
         P1  6.06e+18  4.15e+19         1  1.06e-12
         P2  5.72e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.94  6.68e-23  7.08e-35
        W1b     0.144         1  9.63e-24  1.02e-35
         P1   1.5e+22  1.04e+23         1  1.06e-12
         P2  1.41e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.695429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04755, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171719, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0444134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      33.1      2.08    0.0756     0.924
          1       888      13.6         1   -0.0119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.47      2.08   -0.0312        -1
          1      39.5      13.6        -1    0.0312
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24627, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04398, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0444134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        11      1.21     0.135     0.865
          1       207      9.57         1   -0.0228
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.489      1.21   -0.0597    -0.998
          1       9.2      9.57    -0.998    0.0597
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160417, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21389, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0444134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.09     0.986     0.176     0.824
          1       117      9.07         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.315     0.986   -0.0815    -0.997
          1      5.22      9.07    -0.997    0.0815
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21619, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01985, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04088, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0444134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.7     0.839     0.222     0.778
          1      71.4      8.48         1   -0.0418
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.209     0.839    -0.109    -0.994
          1      3.17      8.48    -0.994     0.109
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0414, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014271, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0444134
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.24     0.754     0.266     0.734
          1      47.1      7.68         1   -0.0528
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.144     0.754    -0.137    -0.991
          1      2.09      7.68    -0.991     0.137
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014311, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001558
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000338
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032751
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151724
         W1a Well: minimal relaxation eigenvalue = 0.0474686
         W1a Well: maximal relaxation eigenvalue = 17.2061
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001628
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180089
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047764
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06892
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195859
         W1b Well: minimal relaxation eigenvalue = 0.0484521
         W1b Well: maximal relaxation eigenvalue = 3.75436
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.694459, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.2e+05 1.32e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.43  1.59e-19  2.71e-31
        W1b     0.135         1  2.14e-20  3.64e-32
         P1  6.28e+18  4.67e+19         1   1.7e-12
         P2  3.69e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.53  6.52e-23  1.11e-34
        W1b     0.133         1  8.66e-24  1.47e-35
         P1  1.53e+22  1.15e+23         1   1.7e-12
         P2  9.02e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.698166, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04654, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172036, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24348, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0474686
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      33.6      2.19      0.08      0.92
          1       950        11         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.59      2.19   -0.0319    -0.999
          1      45.1        11    -0.999    0.0319
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2459, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21226, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0474686
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2      1.29     0.137     0.863
          1       224        10         1   -0.0214
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.532      1.29   -0.0582    -0.998
          1      10.6        10    -0.998    0.0582
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21461, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04602, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21151, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0474686
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.31      1.06     0.173     0.827
          1       131      9.48         1   -0.0281
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.347      1.06   -0.0764    -0.997
          1      6.23      9.48    -0.997    0.0764
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016203, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03777, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0474686
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.95      0.91      0.21      0.79
          1      83.4      8.75         1   -0.0357
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.235      0.91   -0.0968    -0.995
          1      3.96      8.75    -0.995    0.0968
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012696, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001682, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014591, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0474686
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.54     0.809      0.24      0.76
          1      57.4      7.75         1   -0.0425
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.809    -0.115    -0.993
          1      2.72      7.75    -0.993     0.115
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014658, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001543
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000416
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02837
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151118
         W1a Well: minimal relaxation eigenvalue = 0.0476552
         W1a Well: maximal relaxation eigenvalue = 11.5067
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001676
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.187337
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04911
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064137
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196887
         W1b Well: minimal relaxation eigenvalue = 0.0482649
         W1b Well: maximal relaxation eigenvalue = 3.71669
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.694025, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 6.71e+04  1.5e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.05  1.54e-19  4.14e-31
        W1b     0.124         1  1.91e-20  5.14e-32
         P1   6.5e+18  5.23e+19         1  2.69e-12
         P2  2.42e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.15  6.37e-23  1.72e-34
        W1b     0.123         1  7.82e-24   2.1e-35
         P1  1.57e+22  1.28e+23         1  2.69e-12
         P2  5.83e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.69773, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182648, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24774, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476552
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.3       2.3    0.0848     0.915
          1  1.03e+03      11.7         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.73       2.3   -0.0326    -0.999
          1      48.9      11.7    -0.999    0.0326
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25015, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04929, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21646, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476552
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.1      1.37     0.141     0.859
          1       249      10.7         1   -0.0204
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.579      1.37   -0.0577    -0.998
          1      11.9      10.7    -0.998    0.0577
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21888, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04994, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161275, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21687, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476552
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.97      1.14     0.174     0.826
          1       149        10         1   -0.0261
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.38      1.14   -0.0739    -0.997
          1      7.12        10    -0.997    0.0739
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21943, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00548, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015572, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0257, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476552
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.47     0.981     0.205     0.795
          1      97.3      9.15         1   -0.0321
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.261     0.981   -0.0907    -0.996
          1      4.64      9.15    -0.996    0.0907
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001686, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013998, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0476552
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.97     0.872      0.23      0.77
          1      68.4      7.96         1    -0.037
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.189     0.872    -0.104    -0.995
          1      3.26      7.96    -0.995     0.104
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001517
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028331
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.148727
         W1a Well: minimal relaxation eigenvalue = 0.0472699
         W1a Well: maximal relaxation eigenvalue = 15.0357
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001572
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185119
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04852
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064555
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195313
         W1b Well: minimal relaxation eigenvalue = 0.0480039
         W1b Well: maximal relaxation eigenvalue = 7.62645
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.687308, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.47e+05  1.7e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.7  1.47e-19  6.18e-31
        W1b     0.115         1  1.69e-20  7.11e-32
         P1  6.79e+18  5.91e+19         1   4.2e-12
         P2  1.62e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  6.24e-23  2.62e-34
        W1b     0.114         1  7.08e-24  2.98e-35
         P1   1.6e+22  1.41e+23         1   4.2e-12
         P2  3.82e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.690809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179996, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23065, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472699
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        38      2.57    0.0876     0.912
          1  1.11e+03      12.8         1    -0.011
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.8      2.57   -0.0326    -0.999
          1      52.5      12.8    -0.999    0.0326
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23308, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158955, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19486, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472699
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.8       1.5     0.147     0.853
          1       265      11.6         1   -0.0199
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.605       1.5   -0.0586    -0.998
          1      12.5      11.6    -0.998    0.0586
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1972, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02854, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19306, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472699
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.4      1.24     0.184     0.816
          1       156      10.9         1   -0.0259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.397      1.24    -0.076    -0.997
          1      7.38      10.9    -0.997     0.076
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19537, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02938, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.048679, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472699
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.75      1.06      0.22      0.78
          1       100        10         1   -0.0323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272      1.06    -0.095    -0.995
          1      4.73        10    -0.995     0.095
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08367, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016597, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001682, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472699
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.16      0.94     0.249     0.751
          1      69.3      8.76         1    -0.038
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.197      0.94    -0.111    -0.994
          1      3.28      8.76    -0.994     0.111
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018656, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001557
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028781
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157905
         W1a Well: minimal relaxation eigenvalue = 0.0442453
         W1a Well: maximal relaxation eigenvalue = 26.8489
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001565
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.181213
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046694
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075585
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202275
         W1b Well: minimal relaxation eigenvalue = 0.0478636
         W1b Well: maximal relaxation eigenvalue = 4.6245
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.709093, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 8.22e+04 1.93e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.37  1.43e-19  9.23e-31
        W1b     0.107         1  1.52e-20  9.85e-32
         P1  7.01e+18  6.57e+19         1  6.47e-12
         P2  1.08e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.49  6.11e-23  3.95e-34
        W1b     0.105         1  6.44e-24  4.16e-35
         P1  1.64e+22  1.55e+23         1  6.47e-12
         P2  2.53e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.712698, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02813, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182937, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442453
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      44.7       2.6    0.0964     0.904
          1  1.26e+03      14.5         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.98       2.6   -0.0348    -0.999
          1      55.6      14.5    -0.999    0.0348
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23462, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03927, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160467, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20518, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442453
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.8      1.53     0.166     0.834
          1       288      12.6         1   -0.0212
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.656      1.53   -0.0647    -0.998
          1      12.7      12.6    -0.998    0.0647
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20752, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03479, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.161055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20146, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442453
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.58      1.26      0.21      0.79
          1       163        12         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.424      1.26   -0.0867    -0.996
          1      7.23        12    -0.996    0.0867
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20378, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01942, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06248, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442453
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.39      1.09     0.259     0.741
          1      99.5      11.1         1   -0.0374
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.283      1.09    -0.114    -0.994
          1       4.4      11.1    -0.994     0.114
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.063, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014717, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0442453
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.45      0.99     0.304     0.696
          1      65.5      9.98         1   -0.0465
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.197      0.99    -0.141     -0.99
          1       2.9      9.98     -0.99     0.141
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.0167, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001534
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000331
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027077
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150807
         W1a Well: minimal relaxation eigenvalue = 0.047025
         W1a Well: maximal relaxation eigenvalue = 13.919
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001578
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179177
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046745
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063862
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.186512
         W1b Well: minimal relaxation eigenvalue = 0.0476898
         W1b Well: maximal relaxation eigenvalue = 4.18066
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.670717, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.89e+05 2.18e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.37e-19  1.35e-30
        W1b    0.0992         1  1.36e-20  1.34e-31
         P1   7.3e+18  7.35e+19         1  9.83e-12
         P2  7.42e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2     6e-23  5.89e-34
        W1b     0.098         1  5.87e-24  5.78e-35
         P1  1.67e+22   1.7e+23         1  9.83e-12
         P2   1.7e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.674345, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00553, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.047025
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      45.7      2.71       0.1       0.9
          1  1.31e+03      14.8         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.15      2.71   -0.0351    -0.999
          1      61.7      14.8    -0.999    0.0351
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19854, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155961, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16618, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.047025
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.3      1.63     0.164     0.836
          1       316      13.3         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.718      1.63   -0.0617    -0.998
          1      14.9      13.3    -0.998    0.0617
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00749, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.155672, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.047025
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        10      1.36     0.201     0.799
          1       188      12.4         1   -0.0249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.471      1.36   -0.0788    -0.997
          1      8.83      12.4    -0.997    0.0788
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17104, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.153571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16601, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.047025
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.89      1.18     0.236     0.764
          1       121      11.3         1   -0.0306
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.324      1.18   -0.0968    -0.995
          1      5.69      11.3    -0.995    0.0968
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16665, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.028458, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001644, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.030502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.047025
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.01      1.06     0.263     0.737
          1        84      9.75         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.236      1.06    -0.112    -0.994
          1      3.95      9.75    -0.994     0.112
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.030562, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001492
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000343
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028182
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163868
         W1a Well: minimal relaxation eigenvalue = 0.0452391
         W1a Well: maximal relaxation eigenvalue = 24.6717
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001743
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184867
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045342
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055069
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.199735
         W1b Well: minimal relaxation eigenvalue = 0.0475179
         W1b Well: maximal relaxation eigenvalue = 4.07133
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.69324, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 1.05e+05 2.47e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.33e-19  1.97e-30
        W1b    0.0924         1  1.23e-20  1.82e-31
         P1  7.51e+18  8.12e+19         1  1.48e-11
         P2  5.09e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11  5.89e-23  8.69e-34
        W1b    0.0913         1  5.38e-24  7.94e-35
         P1   1.7e+22  1.86e+23         1  1.48e-11
         P2  1.15e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.697461, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00156, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164454, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19121, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0452391
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      51.2      2.83     0.108     0.892
          1  1.46e+03      16.2         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.31      2.83   -0.0366    -0.999
          1        66      16.2    -0.999    0.0366
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19363, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01314, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157173, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.176, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0452391
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.9      1.69      0.18      0.82
          1       336      14.3         1   -0.0203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.766      1.69   -0.0667    -0.998
          1      15.2      14.3    -0.998    0.0667
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17835, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01431, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.156551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0452391
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        11      1.41     0.225     0.775
          1       192      13.5         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.496      1.41   -0.0882    -0.996
          1      8.67      13.5    -0.996    0.0882
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17856, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.013, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14696, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0452391
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.36      1.23     0.273     0.727
          1       118      12.5         1   -0.0347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.333      1.23    -0.113    -0.994
          1      5.32      12.5    -0.994     0.113
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14756, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.025929, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001691, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.028028, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0452391
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.19      1.12     0.315     0.685
          1        78      11.1         1   -0.0425
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.235      1.12    -0.138     -0.99
          1      3.53      11.1     -0.99     0.138
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.028097, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001598
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000348
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030697
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16491
         W1a Well: minimal relaxation eigenvalue = 0.046607
         W1a Well: maximal relaxation eigenvalue = 15.6059
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001579
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180851
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045902
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066205
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198896
         W1b Well: minimal relaxation eigenvalue = 0.0472792
         W1b Well: maximal relaxation eigenvalue = 7.82531
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703636, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.81e+05 2.79e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6   1.3e-19  2.84e-30
        W1b    0.0863         1  1.12e-20  2.45e-31
         P1  7.71e+18  8.94e+19         1  2.19e-11
         P2  3.52e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.7  5.79e-23  1.27e-33
        W1b    0.0852         1  4.93e-24  1.08e-34
         P1  1.73e+22  2.03e+23         1  2.19e-11
         P2  7.88e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.706954, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00071, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180441, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      51.5      3.19     0.108     0.892
          1  1.53e+03      17.1         1   -0.0105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       2.4      3.19   -0.0356    -0.999
          1      71.4      17.1    -0.999    0.0356
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19631, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01966, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158668, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1839, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.3      1.89     0.176     0.824
          1       366      15.3         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.806      1.89   -0.0625    -0.998
          1        17      15.3    -0.998    0.0625
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01939, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157443, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18216, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.4      1.57     0.215     0.785
          1       216      14.3         1   -0.0236
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.53      1.57     -0.08    -0.997
          1      10.1      14.3    -0.997      0.08
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18447, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00847, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.101366, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.84      1.35     0.252     0.748
          1       138        13         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.365      1.35   -0.0987    -0.995
          1      6.43        13    -0.995    0.0987
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.02314, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001688, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.025189, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.046607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.72      1.21     0.282     0.718
          1        95      11.2         1    -0.034
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.266      1.21    -0.115    -0.993
          1      4.43      11.2    -0.993     0.115
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.025247, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001509
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000333
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028322
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.143354
         W1a Well: minimal relaxation eigenvalue = 0.0448383
         W1a Well: maximal relaxation eigenvalue = 19.6104
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001809
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.180098
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04316
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.073413
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.178313
         W1b Well: minimal relaxation eigenvalue = 0.0457683
         W1b Well: maximal relaxation eigenvalue = 5.50735
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.6637, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301  6.4e+04 8.84e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        21  1.01e-19  6.62e-29
        W1b    0.0476         1  4.78e-21  3.15e-30
         P1  9.95e+18  2.09e+20         1  6.58e-10
         P2  1.51e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      21.3  5.14e-23  3.38e-32
        W1b     0.047         1  2.41e-24  1.59e-33
         P1  1.95e+22  4.14e+23         1  6.58e-10
         P2  2.96e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.667245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.952356, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171824, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0448383
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       111      4.99     0.168     0.832
          1  3.36e+03      33.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.98      4.99   -0.0439    -0.999
          1       151      33.2    -0.999    0.0439
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13804, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.966113, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150514, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12227, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0448383
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.6      3.08     0.253     0.747
          1       792        29         1   -0.0161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.64      3.08   -0.0737    -0.997
          1      35.5        29    -0.997    0.0737
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12461, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.971349, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150381, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12688, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0448383
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        24      2.62     0.299     0.701
          1       460      26.8         1   -0.0203
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.08      2.62   -0.0926    -0.996
          1      20.6      26.8    -0.996    0.0926
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12922, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.969727, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12654, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0448383
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.6      2.33     0.343     0.657
          1       287      23.7         1   -0.0248
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.742      2.33    -0.113    -0.994
          1      12.9      23.7    -0.994     0.113
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.211702, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001595, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.21762, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0448383
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.1      2.14     0.377     0.623
          1       191      19.7         1   -0.0288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.542      2.14    -0.131    -0.991
          1      8.57      19.7    -0.991     0.131
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.217995, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00165
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000336
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026841
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.144033
         W1a Well: minimal relaxation eigenvalue = 0.0439781
         W1a Well: maximal relaxation eigenvalue = 16.9594
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001802
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.170414
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041925
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063111
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.184091
         W1b Well: minimal relaxation eigenvalue = 0.0445083
         W1b Well: maximal relaxation eigenvalue = 5.36806
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.64709, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.47e+05 2.53e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.5  8.47e-20  7.81e-28
        W1b    0.0298         1  2.53e-21  2.33e-29
         P1  1.18e+19  3.96e+20         1  9.23e-09
         P2  1.28e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.9  4.87e-23   4.5e-31
        W1b    0.0295         1  1.44e-24  1.33e-32
         P1  2.05e+22  6.96e+23         1  9.23e-09
         P2  2.22e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.650698, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.912485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.09487, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0439781
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       224      7.86     0.223     0.777
          1  6.97e+03      58.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.86      7.86   -0.0494    -0.999
          1       306      58.7    -0.999    0.0494
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09728, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807977, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.144915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.958223, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0439781
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      73.5      5.03     0.311     0.689
          1  1.65e+03      48.9         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.23      5.03   -0.0777    -0.997
          1      72.8      48.9    -0.997    0.0777
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.960695, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.92721, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14426, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07655, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0439781
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.7      4.37     0.354     0.646
          1       963      43.4         1   -0.0163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.14      4.37   -0.0941    -0.996
          1      42.4      43.4    -0.996    0.0941
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.925265, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14374, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07426, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0439781
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      34.1      3.94     0.392     0.608
          1       596        36         1   -0.0192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.5      3.94    -0.111    -0.994
          1      26.2        36    -0.994     0.111
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.49264, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001533, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.498233, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0439781
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.5      3.62     0.421     0.579
          1       386      27.1         1   -0.0217
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.12      3.62    -0.124    -0.992
          1        17      27.1    -0.992     0.124
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.498601, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001399
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000327
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031155
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140632
         W1a Well: minimal relaxation eigenvalue = 0.0420755
         W1a Well: maximal relaxation eigenvalue = 23.637
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001862
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.160944
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040422
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071467
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.171284
         W1b Well: minimal relaxation eigenvalue = 0.0433386
         W1b Well: maximal relaxation eigenvalue = 10.6082
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.631866, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.22e+05 6.65e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      48.8  7.54e-20  5.72e-27
        W1b    0.0205         1  1.55e-21  1.17e-28
         P1  1.33e+19  6.47e+20         1  7.59e-08
         P2  1.75e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      49.4  4.82e-23  3.66e-30
        W1b    0.0203         1  9.77e-25  7.42e-32
         P1  2.07e+22  1.02e+24         1  7.59e-08
         P2  2.73e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.635175, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.863817, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420755
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       414      13.8     0.258     0.742
          1  1.33e+04        95         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.4      13.8   -0.0498    -0.999
          1       561        95    -0.999    0.0498
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00247901
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000731, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03363, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880057, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137034, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02195, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420755
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       131      8.68     0.347     0.653
          1  3.02e+03      76.1         1   -0.0109
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.53      8.68    -0.076    -0.997
          1       127      76.1    -0.997     0.076
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02425, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.878842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02108, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420755
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      85.7      7.48     0.393     0.607
          1  1.68e+03      66.2         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       3.6      7.48   -0.0922    -0.996
          1      70.7      66.2    -0.996    0.0922
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02335, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.875251, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137399, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01768, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420755
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        59       6.7     0.436     0.564
          1       980      53.7         1   -0.0159
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.48       6.7     -0.11    -0.994
          1      41.2      53.7    -0.994      0.11
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01992, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.482885, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001486, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.488318, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420755
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      43.3      6.17     0.473     0.527
          1       595        39         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.82      6.17    -0.127    -0.992
          1        25        39    -0.992     0.127
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.488678, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001529
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000327
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032718
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.145548
         W1a Well: minimal relaxation eigenvalue = 0.0400351
         W1a Well: maximal relaxation eigenvalue = 27.2209
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001889
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.156373
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037629
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079575
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.168266
         W1b Well: minimal relaxation eigenvalue = 0.0425222
         W1b Well: maximal relaxation eigenvalue = 7.67191
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.635794, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237  1.4e+05 1.63e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      66.3  6.97e-20  2.96e-26
        W1b    0.0151         1  1.05e-21  4.46e-28
         P1  1.43e+19  9.52e+20         1  4.24e-07
         P2  3.38e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      67.2  4.91e-23  2.08e-29
        W1b    0.0149         1  7.31e-25   3.1e-31
         P1  2.04e+22  1.37e+24         1  4.24e-07
         P2   4.8e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.639185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.828738, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.149731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.990942, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400351
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       845      19.7     0.313     0.687
          1  2.35e+04       119         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      33.8      19.7   -0.0557    -0.998
          1       942       119    -0.998    0.0557
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00310622
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000606, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.994572, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849629, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133009, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.987406, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400351
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       265      12.9     0.408     0.592
          1  5.21e+03      90.9         1   -0.0104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.6      12.9   -0.0844    -0.996
          1       209      90.9    -0.996    0.0844
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.989733, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.850329, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133014, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988083, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400351
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       172      11.4     0.456     0.544
          1  2.84e+03      75.8         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.89      11.4    -0.102    -0.995
          1       114      75.8    -0.995     0.102
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990344, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853654, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132929, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.991279, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400351
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       118      10.5     0.501     0.499
          1  1.59e+03      57.7         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.71      10.5    -0.122    -0.992
          1      63.7      57.7    -0.992     0.122
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.993512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.613469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001497, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.61877, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400351
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      85.7      9.87     0.541     0.459
          1       915      38.3         1   -0.0178
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.43      9.87    -0.143     -0.99
          1      36.6      38.3     -0.99     0.143
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.61912, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001519
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000307
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029779
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137819
         W1a Well: minimal relaxation eigenvalue = 0.0393705
         W1a Well: maximal relaxation eigenvalue = 27.3556
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001943
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15745
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038948
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.047369
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.15635
         W1b Well: minimal relaxation eigenvalue = 0.0417494
         W1b Well: maximal relaxation eigenvalue = 8.59892
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.583843, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 2.31e+04 3.74e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.8  6.63e-20  1.18e-25
        W1b    0.0117         1  7.73e-22  1.37e-27
         P1  1.51e+19  1.29e+21         1  1.78e-06
         P2   8.5e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      86.9   5.1e-23  9.05e-29
        W1b    0.0115         1  5.87e-25  1.04e-30
         P1  1.96e+22   1.7e+24         1  1.78e-06
         P2  1.11e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.587568, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823422, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147661, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.992821, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0393705
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.55e+03      30.5     0.351     0.649
          1  3.52e+04       122         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        61      30.5   -0.0582    -0.998
          1  1.39e+03       122    -0.998    0.0582
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00338453
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000609, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.996529, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.835533, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0393705
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       481      20.3     0.443     0.557
          1  7.61e+03      87.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.9      20.3   -0.0856    -0.996
          1       300      87.2    -0.996    0.0856
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973063, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.837256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.972611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0393705
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       311      18.1     0.489     0.511
          1  4.04e+03      68.9         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.3      18.1    -0.103    -0.995
          1       159      68.9    -0.995     0.103
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.837022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130388, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.972088, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0393705
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       214      16.6     0.533     0.467
          1  2.19e+03      48.6         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.41      16.6    -0.122    -0.992
          1      86.3      48.6    -0.992     0.122
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974304, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.674793, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002575, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.681227, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0393705
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       156      15.6     0.574     0.426
          1   1.2e+03      29.3         1   -0.0157
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.13      15.6    -0.144     -0.99
          1      47.4      29.3     -0.99     0.144
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.681582, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001452
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000314
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029424
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.131162
         W1a Well: minimal relaxation eigenvalue = 0.0397517
         W1a Well: maximal relaxation eigenvalue = 24.8091
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002078
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.159652
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038469
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063293
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154247
         W1b Well: minimal relaxation eigenvalue = 0.0409199
         W1b Well: maximal relaxation eigenvalue = 14.2077
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.592357, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.64e+04 8.17e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       107  6.43e-20  3.82e-25
        W1b   0.00937         1  6.03e-22  3.58e-27
         P1  1.55e+19  1.66e+21         1  5.94e-06
         P2  2.62e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       108  5.36e-23  3.19e-28
        W1b   0.00926         1  4.96e-25  2.95e-30
         P1  1.87e+22  2.01e+24         1  5.94e-06
         P2  3.14e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.595651, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.803513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959983, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0397517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.53e+03      53.1     0.368     0.632
          1   4.5e+04       108         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       100      53.1   -0.0563    -0.998
          1  1.79e+03       108    -0.998    0.0563
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00316985
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000591, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963912, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82159, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.955506, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0397517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       765        35     0.447     0.553
          1  9.49e+03      71.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      30.4        35    -0.078    -0.997
          1       377      71.2    -0.997     0.078
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.957766, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128449, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.95515, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0397517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       492      30.7     0.485     0.515
          1  4.94e+03      53.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      19.6      30.7   -0.0909    -0.996
          1       196      53.5    -0.996    0.0909
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.957371, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82345, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128598, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0397517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       336      27.5     0.524     0.476
          1   2.6e+03      35.4         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.4      27.5    -0.106    -0.994
          1       103      35.4    -0.994     0.106
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.95896, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.74925, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.009118, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.762245, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0397517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       244      24.9     0.564     0.436
          1  1.38e+03      20.1         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       9.7      24.9    -0.124    -0.992
          1      54.8      20.1    -0.992     0.124
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.762628, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001486
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000312
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028743
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135819
         W1a Well: minimal relaxation eigenvalue = 0.0143124
         W1a Well: maximal relaxation eigenvalue = 41.7561
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001948
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.15624
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037262
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056943
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149611
         W1b Well: minimal relaxation eigenvalue = 0.0404689
         W1b Well: maximal relaxation eigenvalue = 11.6783
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.580285, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.57e+05  1.7e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       129  6.34e-20  1.06e-24
        W1b   0.00777         1  4.93e-22  8.23e-27
         P1  1.58e+19  2.03e+21         1  1.67e-05
         P2  9.45e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       130  5.69e-23   9.5e-28
        W1b   0.00768         1  4.37e-25   7.3e-30
         P1  1.76e+22  2.29e+24         1  1.67e-05
         P2  1.05e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.584095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135867, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.946967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0143124
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.27e+04      71.8     0.427     0.573
          1  1.46e+05      75.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       182      71.8   -0.0655    -0.998
          1  2.09e+03      75.5    -0.998    0.0655
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.949211, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128654, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954645, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0143124
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.73e+03      48.5     0.525     0.475
          1  3.01e+04      50.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.4      48.5   -0.0969    -0.995
          1       431      50.6    -0.995    0.0969
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.991 0.009
         well projection threshold  = 0.2
         partition projection error = 0.00939354
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000615, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958469, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821223, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128807, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.95475, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0143124
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.32e+03      43.7     0.576     0.424
          1  1.54e+04      39.6         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      33.3      43.7    -0.119    -0.993
          1       221      39.6    -0.993     0.119
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.986 0.014
         well projection threshold  = 0.2
         partition projection error = 0.0141499
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000535, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.95824, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.819063, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.129201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.953157, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0143124
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.51e+03      41.3     0.631     0.369
          1  7.95e+03      28.1         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      21.6      41.3    -0.149    -0.989
          1       114      28.1    -0.989     0.149
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955463, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.817324, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.019739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.841386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0143124
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+03      40.3     0.687     0.313
          1  4.13e+03      17.4         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      14.8      40.3     -0.19    -0.982
          1      59.1      17.4    -0.982      0.19
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.841905, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00014
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.003825
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000311
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032559
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137155
         W1a Well: minimal relaxation eigenvalue = 0.0334478
         W1a Well: maximal relaxation eigenvalue = 32.1891
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002111
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.151922
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037826
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056097
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152293
         W1b Well: minimal relaxation eigenvalue = 0.0398906
         W1b Well: maximal relaxation eigenvalue = 13.9979
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.586574, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 4.34e+04 3.39e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       151  6.31e-20  2.58e-24
        W1b   0.00661         1  4.17e-22   1.7e-26
         P1  1.58e+19   2.4e+21         1  4.08e-05
         P2  3.88e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       153  6.07e-23  2.48e-27
        W1b   0.00653         1  3.97e-25  1.62e-29
         P1  1.65e+22  2.52e+24         1  4.08e-05
         P2  4.03e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.5902, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807905, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145071, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.964729, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.13e+03       113     0.465     0.535
          1  6.82e+04      49.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       306       113   -0.0705    -0.998
          1  2.28e+03      49.6    -0.998    0.0705
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.995 0.005
         well projection threshold  = 0.2
         partition projection error = 0.00496906
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000611, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810978, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127197, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942859, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.7e+03        77     0.559     0.441
          1   1.4e+04      31.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.5        77    -0.103    -0.995
          1       467      31.1    -0.995     0.103
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0105421
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000532, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.946647, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942981, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.71e+03      68.4      0.61      0.39
          1  7.09e+03      23.2         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.3      68.4    -0.126    -0.992
          1       237      23.2    -0.992     0.126
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945295, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.809643, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127794, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.15e+03        62     0.669     0.331
          1  3.63e+03      15.9         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      38.4        62    -0.162    -0.987
          1       121      15.9    -0.987     0.162
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.944621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.814513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.052185, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.871023, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334478
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       810      55.7     0.741     0.259
          1  1.87e+03      10.9         1   -0.0189
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      27.1      55.7    -0.226    -0.974
          1      62.5      10.9    -0.974     0.226
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.871534, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000197
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006807
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000306
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026841
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135458
         W1a Well: minimal relaxation eigenvalue = 0.0358726
         W1a Well: maximal relaxation eigenvalue = 30.1001
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002149
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.156852
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037603
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055548
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.153933
         W1b Well: minimal relaxation eigenvalue = 0.0391358
         W1b Well: maximal relaxation eigenvalue = 19.7942
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.58769, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 9.41e+04 6.52e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       174  6.37e-20  5.68e-24
        W1b   0.00574         1  3.65e-22  3.26e-26
         P1  1.57e+19  2.74e+21         1  8.91e-05
         P2  1.76e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       176  6.51e-23   5.8e-27
        W1b   0.00567         1  3.69e-25  3.29e-29
         P1  1.54e+22  2.71e+24         1  8.91e-05
         P2  1.72e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.591218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.823707, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146934, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9857, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0358726
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+04       188     0.518     0.482
          1  6.55e+04      40.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       478       188   -0.0813    -0.997
          1  2.35e+03      40.3    -0.997    0.0813
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.98798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.820756, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129084, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.954756, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0358726
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.84e+03       126     0.611     0.389
          1  1.33e+04      25.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       138       126    -0.118    -0.993
          1       478      25.9    -0.993     0.118
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.986 0.014
         well projection threshold  = 0.2
         partition projection error = 0.0139446
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822296, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.95588, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0358726
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.41e+03       110     0.664     0.336
          1  6.75e+03      20.6         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      86.4       110    -0.148    -0.989
          1       242      20.6    -0.989     0.148
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.958246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822459, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129143, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956333, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0358726
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.59e+03      96.8     0.731     0.269
          1  3.44e+03      16.8         1   -0.0156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.1      96.8    -0.202    -0.979
          1       123      16.8    -0.979     0.202
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.95867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821685, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.05871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884853, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0358726
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.1e+03      80.3     0.821     0.179
          1  1.78e+03      18.8         1   -0.0264
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      39.4      80.3    -0.329    -0.944
          1      63.8      18.8    -0.944     0.329
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885382, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000195
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.006796
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000306
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026319
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133332
         W1a Well: minimal relaxation eigenvalue = 0.0141193
         W1a Well: maximal relaxation eigenvalue = 42.1686
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002123
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.156156
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037916
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05708
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152921
         W1b Well: minimal relaxation eigenvalue = 0.0385946
         W1b Well: maximal relaxation eigenvalue = 22.0671
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.585827, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 2.06e+04 1.21e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       198  6.44e-20  1.14e-23
        W1b   0.00506         1  3.26e-22  5.78e-26
         P1  1.55e+19  3.07e+21         1  0.000177
         P2  8.76e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       200     7e-23  1.24e-26
        W1b     0.005         1   3.5e-25   6.2e-29
         P1  1.43e+22  2.86e+24         1  0.000177
         P2  8.07e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.589582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816152, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137381, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.971063, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0141193
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.41e+04       274     0.603     0.397
          1  1.69e+05      35.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       763       274    -0.108    -0.994
          1  2.39e+03      35.2    -0.994     0.108
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.973358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816215, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948856, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0141193
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.48e+04       179     0.707     0.293
          1  3.44e+04      26.5         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       209       179    -0.169    -0.986
          1       485      26.5    -0.986     0.169
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.951075, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128068, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948763, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0141193
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.87e+03       153     0.767     0.233
          1  1.74e+04      25.6         1   -0.0167
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       125       153    -0.228    -0.974
          1       246      25.6    -0.974     0.228
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.948 0.052
         well projection threshold  = 0.2
         partition projection error = 0.0519682
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000618, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.952367, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815508, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0141193
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.51e+03       129     0.838     0.162
          1  8.96e+03        31         1   -0.0263
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      77.8       129    -0.346    -0.938
          1       127        31    -0.938     0.346
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.815669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.093867, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914054, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0141193
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.46e+03      85.1     0.917    0.0833
          1  4.83e+03      62.1         1   -0.0557
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.8      85.1    -0.617    -0.787
          1      68.2      62.1    -0.787     0.617
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915277, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000255
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.010001
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000923
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026911
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135015
         W1a Well: minimal relaxation eigenvalue = 0.00106175
         W1a Well: maximal relaxation eigenvalue = 58.2625
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00206
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153524
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037218
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058223
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.153476
         W1b Well: minimal relaxation eigenvalue = 0.0383493
         W1b Well: maximal relaxation eigenvalue = 20.3624
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.589516, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.74e+05 2.19e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       221  6.55e-20  2.13e-23
        W1b   0.00453         1  2.97e-22  9.66e-26
         P1  1.53e+19  3.37e+21         1  0.000326
         P2  4.69e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       223  7.54e-23  2.45e-26
        W1b   0.00448         1  3.37e-25   1.1e-28
         P1  1.33e+22  2.96e+24         1  0.000326
         P2  4.07e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.593317, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808328, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147384, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.966791, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00106175
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.17e+06       361      0.73      0.27
          1  2.27e+06      46.1         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.24e+03       361    -0.179    -0.984
          1  2.41e+03      46.1    -0.984     0.179
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.969094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.806817, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127512, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00106175
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.06e+05       222     0.843     0.157
          1  4.68e+05      52.3         1   -0.0243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       325       222    -0.339    -0.941
          1       497      52.3    -0.941     0.339
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.941194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807733, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127105, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.939525, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00106175
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+05       168     0.897     0.103
          1  2.43e+05      79.3         1   -0.0395
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       185       168    -0.506    -0.862
          1       258      79.3    -0.862     0.506
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.941731, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807741, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940365, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00106175
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   9.7e+04      96.6     0.943    0.0574
          1  1.33e+05       137         1   -0.0744
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       103      96.6    -0.742    -0.671
          1       141       137    -0.671     0.742
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.942765, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.804811, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.936606, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00106175
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.17e+04      42.4     0.968    0.0317
          1  7.89e+04       190         1    -0.138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.9      42.4    -0.899    -0.437
          1      83.8       190    -0.437     0.899
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.938854, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002534
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.012974
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001704
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027316
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.14353
         W1a Well: minimal relaxation eigenvalue = 0.017491
         W1a Well: maximal relaxation eigenvalue = 40.0335
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002254
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.149564
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037122
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056451
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151499
         W1b Well: minimal relaxation eigenvalue = 0.0380331
         W1b Well: maximal relaxation eigenvalue = 21.0898
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.597666, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 6.22e+04 3.85e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       244  6.69e-20  3.75e-23
        W1b    0.0041         1  2.74e-22  1.54e-25
         P1   1.5e+19  3.65e+21         1  0.000561
         P2  2.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       247  8.13e-23  4.56e-26
        W1b   0.00405         1  3.29e-25  1.85e-28
         P1  1.23e+22  3.04e+24         1  0.000561
         P2  2.19e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.601772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795607, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139796, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945319, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017491
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.11e+05       372     0.903    0.0973
          1  1.43e+05       196         1    -0.038
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.94e+03       372    -0.511     -0.86
          1   2.5e+03       196     -0.86     0.511
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94765, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790701, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125459, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920937, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017491
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.54e+04      49.3     0.973    0.0275
          1  3.54e+04       347         1    -0.145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       444      49.3    -0.915    -0.403
          1       620       347    -0.403     0.915
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.923145, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793587, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125113, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923329, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017491
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.3e+04      18.4     0.983    0.0172
          1  2.15e+04       336         1    -0.234
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       227      18.4    -0.965    -0.264
          1       376       336    -0.264     0.965
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125798, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923809, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017491
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.56e+03      8.06     0.988    0.0117
          1  1.38e+04       315         1    -0.346
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115      8.06    -0.983    -0.182
          1       242       315    -0.182     0.983
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.967 0.033
         well projection threshold  = 0.2
         partition projection error = 0.014097
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000643, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927489, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125049, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924117, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.017491
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.31e+03       3.7     0.992         0
          1  9.41e+03       292         1    -0.483
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.9       3.7    -0.991    -0.131
          1       165       292    -0.131     0.991
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926412, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002293
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.091282
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002864
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027101
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130129
         W1a Well: minimal relaxation eigenvalue = 0.00486496
         W1a Well: maximal relaxation eigenvalue = 50.3935
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002078
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.156068
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037741
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051799
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150645
         W1b Well: minimal relaxation eigenvalue = 0.0325247
         W1b Well: maximal relaxation eigenvalue = 33.5368
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.664524, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.48e+04 6.61e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       267  6.85e-20  6.26e-23
        W1b   0.00375         1  2.57e-22  2.35e-25
         P1  1.46e+19  3.89e+21         1  0.000914
         P2   1.6e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       270  8.76e-23  8.01e-26
        W1b   0.00371         1  3.25e-25  2.97e-28
         P1  1.14e+22  3.08e+24         1  0.000914
         P2  1.25e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.668435, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794579, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141013, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.948322, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00486496
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.54e+05       106     0.975    0.0248
          1  6.01e+05       969         1    -0.148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.21e+03       106    -0.924    -0.383
          1  2.92e+03       969    -0.383     0.924
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.950657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793944, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125662, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924461, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00486496
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.23e+04      21.1     0.986    0.0141
          1  1.51e+05       682         1    -0.261
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       449      21.1    -0.974    -0.228
          1       735       682    -0.228     0.974
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926918, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.794166, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124464, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923244, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00486496
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.64e+04      11.9     0.989    0.0114
          1   8.7e+04       593         1    -0.324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       225      11.9    -0.983    -0.186
          1       423       593    -0.186     0.983
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.925445, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793882, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125276, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.923986, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00486496
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.33e+04       7.2     0.991         0
          1  5.19e+04       528         1    -0.399
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       113       7.2    -0.988    -0.152
          1       253       528    -0.152     0.988
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926131, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790778, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124713, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920109, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00486496
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.17e+04      4.46     0.992         0
          1  3.24e+04       482         1    -0.489
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      56.8      4.46    -0.992    -0.124
          1       158       482    -0.124     0.992
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922268, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.0022
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.09317
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00282
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029665
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136116
         W1a Well: minimal relaxation eigenvalue = 0.00028644
         W1a Well: maximal relaxation eigenvalue = 62.8203
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00219
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.148302
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037654
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059987
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.148724
         W1b Well: minimal relaxation eigenvalue = 0.0364254
         W1b Well: maximal relaxation eigenvalue = 26.9099
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.673375, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 1.11e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       289  7.03e-20  9.98e-23
        W1b   0.00346         1  2.43e-22  3.45e-25
         P1  1.42e+19  4.11e+21         1   0.00142
         P2     1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       293  9.45e-23  1.34e-25
        W1b   0.00342         1  3.23e-25  4.59e-28
         P1  1.06e+22   3.1e+24         1   0.00142
         P2  7.45e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.677289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.789299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140517, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.947599, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00028644
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.77e+06      8.71     0.992         0
          1  1.66e+07  1.23e+03         1    -0.428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.23e+03      8.71    -0.991    -0.136
          1  4.75e+03  1.23e+03    -0.136     0.991
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.949851, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788878, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124165, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91787, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00028644
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.56e+06      4.64     0.993         0
          1  4.26e+06       841         1    -0.516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       446      4.64    -0.994    -0.113
          1  1.22e+03       841    -0.113     0.994
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920037, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124243, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914811, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00028644
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.79e+05      3.83     0.994         0
          1  2.45e+06       754         1    -0.558
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       223      3.83    -0.994    -0.105
          1       701       754    -0.105     0.994
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.917226, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.790374, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124748, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00028644
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.9e+05      3.23     0.994         0
          1  1.44e+06       711         1    -0.604
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112      3.23    -0.995   -0.0969
          1       412       711   -0.0969     0.995
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.788753, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124289, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.917649, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00028644
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.95e+05       2.7     0.995         0
          1   8.7e+05       705         1    -0.655
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.9       2.7    -0.996   -0.0894
          1       249       705   -0.0894     0.996
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.919782, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002309
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.114641
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002962
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027689
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136285
         W1a Well: minimal relaxation eigenvalue = 0.0133332
         W1a Well: maximal relaxation eigenvalue = 42.4291
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002136
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.149255
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037143
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055288
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14412
         W1b Well: minimal relaxation eigenvalue = 0.036983
         W1b Well: maximal relaxation eigenvalue = 23.0357
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.684874, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.2e+05 1.82e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       311  7.23e-20  1.53e-22
        W1b   0.00321         1  2.32e-22  4.92e-25
         P1  1.38e+19   4.3e+21         1   0.00212
         P2  6.53e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       315  1.02e-22  2.16e-25
        W1b   0.00318         1  3.23e-25  6.85e-28
         P1  9.82e+21  3.09e+24         1   0.00212
         P2  4.64e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.688932, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774923, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.92803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0133332
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+05      2.44     0.995         0
          1  5.88e+05  1.55e+03         1     -0.68
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.19e+03      2.44    -0.997   -0.0831
          1  7.84e+03  1.55e+03   -0.0831     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930286, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771583, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898404, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0133332
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.29e+04      1.47     0.996         0
          1  1.66e+05  1.12e+03         1    -0.784
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       438      1.47    -0.997   -0.0722
          1  2.21e+03  1.12e+03   -0.0722     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122024, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901264, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0133332
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.65e+04       1.1     0.996         0
          1  1.03e+05     1e+03         1    -0.846
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       219       1.1    -0.998   -0.0668
          1  1.37e+03     1e+03   -0.0668     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903421, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0133332
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.24e+03     0.752     0.997         0
          1  6.67e+04       898         1    -0.921
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       110     0.752    -0.998   -0.0614
          1       889       898   -0.0614     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 2.345e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000642, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90637, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77226, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899124, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0133332
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.12e+03      0.46     0.997         0
          1  4.52e+04       775    -0.997         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        55      0.46    -0.998   -0.0564
          1       602       775   -0.0564     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 3.65733e-08
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000556, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902654, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002197
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133938
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034129
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035871
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133412
         W1a Well: minimal relaxation eigenvalue = 0.00536442
         W1a Well: maximal relaxation eigenvalue = 49.7447
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002352
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154411
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037038
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049444
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147674
         W1b Well: minimal relaxation eigenvalue = 0.0322738
         W1b Well: maximal relaxation eigenvalue = 32.8929
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.74349, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.66e+04 2.93e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       333  7.45e-20  2.27e-22
        W1b   0.00301         1  2.24e-22  6.82e-25
         P1  1.34e+19  4.47e+21         1   0.00305
         P2   4.4e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       337   1.1e-22  3.34e-25
        W1b   0.00297         1  3.26e-25  9.93e-28
         P1  9.12e+21  3.07e+24         1   0.00305
         P2  2.99e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.747359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77405, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137136, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922166, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00536442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.99e+05      1.43     0.996         0
          1  1.96e+06  2.64e+03         1    -0.826
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.14e+03      1.43    -0.998   -0.0662
          1  1.05e+04  2.64e+03   -0.0662     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.924445, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77339, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122354, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90027, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00536442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.99e+04      1.01     0.997         0
          1  5.11e+05   1.8e+03         1    -0.888
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       429      1.01    -0.998   -0.0616
          1  2.74e+03   1.8e+03   -0.0616     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902494, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77585, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122548, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00536442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     4e+04     0.847     0.997         0
          1     3e+05  1.58e+03         1    -0.925
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       214     0.847    -0.998   -0.0592
          1  1.61e+03  1.58e+03   -0.0592     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905428, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774349, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121744, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00536442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     2e+04     0.672     0.997         0
          1  1.84e+05   1.4e+03         1    -0.971
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107     0.672    -0.998   -0.0564
          1       986   1.4e+03   -0.0564     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902817, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775088, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90209, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00536442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     1e+04     0.491     0.997         0
          1  1.17e+05  1.24e+03    -0.975         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.7     0.491    -0.999   -0.0534
          1       630  1.24e+03   -0.0534     0.999
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904273, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002393
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13968
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034063
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0454
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135201
         W1a Well: minimal relaxation eigenvalue = 0.00158031
         W1a Well: maximal relaxation eigenvalue = 57.0056
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002356
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.152405
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036337
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054429
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141643
         W1b Well: minimal relaxation eigenvalue = 0.036122
         W1b Well: maximal relaxation eigenvalue = 25.3806
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.757418, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.35e+04 4.64e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       354  7.68e-20  3.27e-22
        W1b   0.00283         1  2.17e-22  9.23e-25
         P1   1.3e+19  4.61e+21         1   0.00425
         P2  3.06e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  1.18e-22  5.02e-25
        W1b   0.00279         1   3.3e-25   1.4e-27
         P1  8.47e+21  3.03e+24         1   0.00425
         P2  1.99e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.761503, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769267, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00158031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+06     0.728     0.997         0
          1  1.07e+07   2.9e+03         1    -0.975
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.09e+03     0.728    -0.999   -0.0544
          1   1.7e+04   2.9e+03   -0.0544     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920839, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770252, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121278, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00158031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.65e+05     0.611     0.997         0
          1  2.82e+06  2.09e+03    -0.986         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       419     0.611    -0.999   -0.0524
          1  4.45e+03  2.09e+03   -0.0524     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898521, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770025, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1216, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896499, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00158031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.33e+05     0.559     0.997         0
          1  1.65e+06   1.9e+03    -0.966         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       209     0.559    -0.999   -0.0513
          1   2.6e+03   1.9e+03   -0.0513     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898657, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770112, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897333, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00158031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.63e+04     0.495     0.997         0
          1  9.91e+05  1.79e+03    -0.942         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105     0.495    -0.999     -0.05
          1  1.57e+03  1.79e+03     -0.05     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899507, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770163, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121249, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895956, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00158031
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.32e+04     0.414     0.997         0
          1  6.16e+05  1.71e+03    -0.915         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      52.4     0.414    -0.999   -0.0486
          1       973  1.71e+03   -0.0486     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898105, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00236
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.139726
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034211
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049149
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138175
         W1a Well: minimal relaxation eigenvalue = 0.000206228
         W1a Well: maximal relaxation eigenvalue = 62.9502
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002059
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153555
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036041
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.248407
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143322
         W1b Well: minimal relaxation eigenvalue = 0.0301023
         W1b Well: maximal relaxation eigenvalue = 33.8164
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.960044, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 7.22e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       374  7.92e-20  4.58e-22
        W1b   0.00267         1  2.12e-22  1.22e-24
         P1  1.26e+19  4.72e+21         1   0.00577
         P2  2.19e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       379  1.27e-22  7.33e-25
        W1b   0.00264         1  3.35e-25  1.94e-27
         P1  7.88e+21  2.98e+24         1   0.00577
         P2  1.36e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.96408, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7573, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12813, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905914, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000206228
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.91e+06     0.496     0.997         0
          1   1.1e+08  4.64e+03     -0.94         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03     0.496    -0.999   -0.0485
          1  2.27e+04  4.64e+03   -0.0485     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90818, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765657, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121721, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891884, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000206228
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.98e+06     0.438     0.998         0
          1  2.72e+07  3.17e+03    -0.921         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       409     0.438    -0.999   -0.0476
          1  5.61e+03  3.17e+03   -0.0476     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768579, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123223, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896549, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000206228
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.91e+05     0.418     0.998         0
          1  1.53e+07  2.81e+03    -0.912         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204     0.418    -0.999   -0.0471
          1  3.15e+03  2.81e+03   -0.0471     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897998, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000206228
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.96e+05     0.397     0.998         0
          1  8.76e+06  2.58e+03    -0.901         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       102     0.397    -0.999   -0.0465
          1  1.81e+03  2.58e+03   -0.0465     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769478, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122077, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896318, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000206228
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.48e+05      0.37     0.998         0
          1  5.13e+06  2.46e+03    -0.889         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.1      0.37    -0.999   -0.0459
          1  1.06e+03  2.46e+03   -0.0459     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898482, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002322
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.140978
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034643
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.046263
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137987
         W1a Well: minimal relaxation eigenvalue = 0.00112136
         W1a Well: maximal relaxation eigenvalue = 58.7059
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002546
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153457
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036526
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04954
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146397
         W1b Well: minimal relaxation eigenvalue = 0.027729
         W1b Well: maximal relaxation eigenvalue = 35.1238
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.763686, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.62e+04 1.11e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       394  8.21e-20  6.28e-22
        W1b   0.00254         1  2.08e-22  1.59e-24
         P1  1.22e+19   4.8e+21         1   0.00765
         P2  1.59e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       399  1.36e-22  1.04e-24
        W1b   0.00251         1  3.42e-25  2.62e-27
         P1  7.33e+21  2.93e+24         1   0.00765
         P2  9.58e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.767867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138969, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928082, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00112136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.78e+06     0.337     0.998         0
          1  2.89e+07  6.08e+03    -0.884         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     2e+03     0.337    -0.999   -0.0445
          1  3.25e+04  6.08e+03   -0.0445     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930386, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00112136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.56e+05     0.302     0.998         0
          1  7.23e+06  4.07e+03    -0.871         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       399     0.302    -0.999   -0.0438
          1   8.1e+03  4.07e+03   -0.0438     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898317, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.771288, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.122087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898119, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.00112136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.78e+05     0.287     0.998         0
          1  4.11e+06  3.53e+03    -0.863         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       200     0.287    -0.999   -0.0434
          1  4.61e+03  3.53e+03   -0.0434     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900312, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766537, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00112136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.9e+04     0.269     0.998         0
          1   2.4e+06   3.1e+03    -0.854         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      99.8     0.269    -0.999    -0.043
          1  2.69e+03   3.1e+03    -0.043     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894518, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770129, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897642, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00112136
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.45e+04     0.246     0.998         0
          1  1.44e+06  2.74e+03    -0.843         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.9     0.246    -0.999   -0.0424
          1  1.61e+03  2.74e+03   -0.0424     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89983, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002221
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134583
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033975
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035773
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13674
         W1a Well: minimal relaxation eigenvalue = 0.000187408
         W1a Well: maximal relaxation eigenvalue = 63.1695
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002243
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.154747
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036637
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049316
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144923
         W1b Well: minimal relaxation eigenvalue = 0.0102591
         W1b Well: maximal relaxation eigenvalue = 45.8949
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.74396, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 1.67e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       414  8.48e-20  8.41e-22
        W1b   0.00242         1  2.05e-22  2.03e-24
         P1  1.18e+19  4.88e+21         1   0.00992
         P2  1.19e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       419  1.46e-22  1.45e-24
        W1b   0.00239         1   3.5e-25  3.47e-27
         P1  6.83e+21  2.86e+24         1   0.00992
         P2  6.89e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.748228, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139114, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918078, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000187408
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+07     0.295     0.998         0
          1  2.19e+08  1.04e+04    -0.853         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.95e+03     0.295    -0.999   -0.0419
          1  4.11e+04  1.04e+04   -0.0419     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92037, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121128, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000187408
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.08e+06     0.272     0.998         0
          1  5.13e+07  6.68e+03    -0.847         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       390     0.272    -0.999   -0.0416
          1  9.61e+03  6.68e+03   -0.0416     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894799, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759194, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119341, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883003, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000187408
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+06     0.264     0.998         0
          1   2.8e+07  5.63e+03    -0.843         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       195     0.264    -0.999   -0.0414
          1  5.24e+03  5.63e+03   -0.0414     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766375, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121654, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000187408
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   5.2e+05     0.257     0.998         0
          1  1.55e+07  4.84e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      97.4     0.257    -0.999   -0.0412
          1  2.91e+03  4.84e+03   -0.0412     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894895, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121443, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894009, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000187408
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.6e+05     0.249     0.998         0
          1  8.75e+06  4.26e+03    -0.835         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.7     0.249    -0.999    -0.041
          1  1.64e+03  4.26e+03    -0.041     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896151, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002291
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.145108
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033493
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042044
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13819
         W1a Well: minimal relaxation eigenvalue = 0.00847436
         W1a Well: maximal relaxation eigenvalue = 45.9461
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002241
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.144426
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036407
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057853
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142741
         W1b Well: minimal relaxation eigenvalue = 0.0300369
         W1b Well: maximal relaxation eigenvalue = 33.3341
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.757936, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 4.13e+05  2.5e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       433  8.76e-20  1.11e-21
        W1b   0.00231         1  2.03e-22  2.56e-24
         P1  1.14e+19  4.94e+21         1    0.0126
         P2  9.04e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       438  1.57e-22  1.98e-24
        W1b   0.00228         1  3.58e-25  4.52e-27
         P1  6.37e+21  2.79e+24         1    0.0126
         P2  5.05e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.761823, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759411, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127583, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903715, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00847436
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.24e+05     0.224     0.998         0
          1  7.97e+06  8.87e+03    -0.819         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   1.9e+03     0.224    -0.999   -0.0394
          1  6.76e+04  8.87e+03   -0.0394     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906242, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760521, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120977, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886049, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00847436
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.49e+04     0.196     0.998         0
          1  2.12e+06  5.88e+03    -0.808         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       380     0.196    -0.999   -0.0388
          1  1.79e+04  5.88e+03   -0.0388     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888236, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760121, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120161, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884999, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00847436
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.24e+04      0.18     0.998         0
          1  1.25e+06  4.86e+03    -0.801         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       190      0.18    -0.999   -0.0385
          1  1.06e+04  4.86e+03   -0.0385     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887164, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7584, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120119, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882956, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00847436
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.12e+04     0.164     0.998         0
          1  7.63e+05  3.82e+03    -0.793         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      95.1     0.164    -0.999   -0.0381
          1  6.46e+03  3.82e+03   -0.0381     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88512, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760933, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119669, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00847436
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.61e+03     0.152     0.998         0
          1  4.71e+05  2.73e+03    -0.786         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.5     0.152    -0.999   -0.0378
          1  3.99e+03  2.73e+03   -0.0378     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000105622
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000655, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889266, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002387
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.138901
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033523
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035888
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132976
         W1a Well: minimal relaxation eigenvalue = 0.00461581
         W1a Well: maximal relaxation eigenvalue = 50.6438
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002206
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.146585
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036624
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055495
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144507
         W1b Well: minimal relaxation eigenvalue = 0.0162636
         W1b Well: maximal relaxation eigenvalue = 40.9616
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.74191, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.36e+05 3.68e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       451  9.06e-20  1.43e-21
        W1b   0.00222         1  2.01e-22  3.17e-24
         P1   1.1e+19  4.98e+21         1    0.0158
         P2  6.99e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       456  1.68e-22  2.65e-24
        W1b   0.00219         1  3.68e-25  5.81e-27
         P1  5.95e+21  2.72e+24         1    0.0158
         P2  3.77e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.745772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754373, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.137818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909442, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00461581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.02e+05     0.202     0.998         0
          1  1.83e+07  1.31e+04    -0.805         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.86e+03     0.202    -0.999   -0.0379
          1  8.45e+04  1.31e+04   -0.0379     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91173, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759768, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120109, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884386, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00461581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.04e+04     0.186     0.998         0
          1  4.58e+06  8.58e+03    -0.798         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       371     0.186    -0.999   -0.0376
          1  2.11e+04  8.58e+03   -0.0376     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886562, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762752, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120451, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00461581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.02e+04     0.176     0.998         0
          1  2.63e+06  7.13e+03    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       186     0.176    -0.999   -0.0373
          1  1.21e+04  7.13e+03   -0.0373     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890675, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76313, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886887, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00461581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.01e+04     0.165     0.998         0
          1  1.55e+06  5.75e+03    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      92.8     0.165    -0.999   -0.0371
          1  7.15e+03  5.75e+03   -0.0371     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.889021, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120365, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883044, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00461581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.01e+04     0.155     0.998         0
          1  9.33e+05  4.31e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.4     0.155    -0.999   -0.0369
          1  4.31e+03  4.31e+03   -0.0369     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885205, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002172
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.145059
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033743
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036639
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132169
         W1a Well: minimal relaxation eigenvalue = 0.00232158
         W1a Well: maximal relaxation eigenvalue = 55.0495
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002101
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.145898
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035872
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057073
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142364
         W1b Well: minimal relaxation eigenvalue = 0.00521409
         W1b Well: maximal relaxation eigenvalue = 50.9309
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.746285, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.26e+05 5.35e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       469  9.36e-20  1.82e-21
        W1b   0.00213         1     2e-22  3.88e-24
         P1  1.07e+19  5.01e+21         1    0.0194
         P2   5.5e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       474   1.8e-22  3.49e-24
        W1b   0.00211         1  3.79e-25  7.37e-27
         P1  5.57e+21  2.64e+24         1    0.0194
         P2  2.86e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.750158, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128389, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902376, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00232158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.81e+05     0.187     0.998         0
          1  4.47e+07   2.2e+04    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.81e+03     0.187    -0.999   -0.0366
          1  1.04e+05   2.2e+04   -0.0366     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120029, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882683, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00232158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.56e+05     0.178     0.998         0
          1  1.05e+07  1.41e+04     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       363     0.178    -0.999   -0.0365
          1  2.44e+04  1.41e+04   -0.0365     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884913, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757235, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.882452, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00232158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.81e+04     0.172     0.998         0
          1  5.83e+06  1.16e+04    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       181     0.172    -0.999   -0.0364
          1  1.35e+04  1.16e+04   -0.0364     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.884607, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756202, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120827, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.881759, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00232158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.9e+04     0.165     0.998         0
          1   3.3e+06  9.53e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.6     0.165    -0.999   -0.0362
          1  7.67e+03  9.53e+03   -0.0362     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.883951, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.750687, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875671, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00232158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.95e+04     0.158     0.998         0
          1  1.91e+06  7.56e+03    -0.781         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.3     0.158    -0.999   -0.0361
          1  4.44e+03  7.56e+03   -0.0361     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877823, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 404.071, elapsed time[sec] = 8
