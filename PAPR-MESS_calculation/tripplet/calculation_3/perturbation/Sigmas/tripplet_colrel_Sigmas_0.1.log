Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.003533, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.004228, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.10648, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002674, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.054545, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.28672, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.29404, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001202, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001766, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.109728, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002871, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.034844, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.17377, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.17854, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001264, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001826, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00355, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000764, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001298, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002808, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010254, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000788, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001844, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003474, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00073, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001259, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002666, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.009512, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.01853, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.019099, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.719453, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002825, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.0172, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.70204, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.72362, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.010339, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.012189, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.086399, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.87515, elapsed time[sec] = 1
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 0.000118, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.87654, elapsed time[sec] = 1
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000778, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.104361, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.043267, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.050379, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.010529, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000575, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.372469, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.004715, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.491054, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 9.8677, elapsed time[sec] = 1
      Model::new_core:  done, cpu time[sec] = 9.86844, elapsed time[sec] = 1
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.119374, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.000957, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.50991, elapsed time[sec] = 0
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.65272, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 11.5226, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.7e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.2e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000902, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3.1e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000331, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010912, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.010963, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.87426e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.62356e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  2.18646e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  4.20247e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  9.11395e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  2.04507e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.57883e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  1.00673e+40  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  2.15873e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100   4.5032e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  9.13498e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.80321e+41  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.46766e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  6.50539e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.19227e+42   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  2.13772e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.75476e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  6.46873e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  1.09439e+43  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 15.7689, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.9e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001978
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000492
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.49921
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.22327
         W1a Well: minimal relaxation eigenvalue = 0.0683137
         W1a Well: maximal relaxation eigenvalue = 4.21349
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002337
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.28338
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07862
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.293535
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.336176
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.7435, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.47e+05 4.67e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00104  2.12e-16  7.52e-57
        W1b       960         1  2.04e-13  7.22e-54
         P1  4.71e+15  4.91e+12         1  3.55e-41
         P2  1.33e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000162  2.74e-20   9.7e-61
        W1b  6.19e+03         1  1.69e-16     6e-57
         P1  3.65e+19  5.91e+15         1  3.55e-41
         P2  1.03e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.74782, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.84633, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.296003, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18035, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.994    0.0402         0         1
          1      13.4      0.97         1   -0.0447
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0679    0.0402  -0.00144        -1
          1     0.915      0.97        -1   0.00144
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.18301, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.73312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.276814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01808, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.222   0.00941         0         1
          1      4.13     0.358         1    -0.129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0152   0.00941  -0.00416        -1
          1     0.282     0.358        -1   0.00416
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.02047, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.311011, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003057, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.32077, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.115   0.00419         0         1
          1      2.43      0.29         1    -0.235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00788   0.00419  -0.00759        -1
          1     0.166      0.29        -1   0.00759
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.321147, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019627, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00305, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022739, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0594   0.00166         0         1
          1      1.47     0.237         1    -0.386
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00406   0.00166   -0.0125        -1
          1       0.1     0.237        -1    0.0125
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019579, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003059, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022699, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0303  0.000595         0     0.999
          1     0.909     0.181         1     -0.55
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00207  0.000595   -0.0177        -1
          1    0.0621     0.181        -1    0.0177
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022724, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002057
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000505
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043939
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.221222
         W1a Well: minimal relaxation eigenvalue = 0.0670693
         W1a Well: maximal relaxation eigenvalue = 3.76037
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002279
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.289128
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.081823
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.092355
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.344943
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.10144, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.74e+05 6.09e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00132  1.25e-16  4.35e-55
        W1b       759         1  9.52e-14   3.3e-52
         P1  7.98e+15  1.05e+13         1  3.47e-39
         P2   2.3e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000331  1.67e-20  5.81e-59
        W1b  3.02e+03         1  5.06e-17  1.76e-55
         P1  5.98e+19  1.98e+16         1  3.47e-39
         P2  1.72e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.10537, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.8668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.311773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.20023, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.905    0.0457         0         1
          1      15.9     0.936         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0607    0.0457  -0.00129        -1
          1      1.06     0.936        -1   0.00129
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.2027, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.86285, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.276668, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14737, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.207     0.011         0         1
          1      4.66     0.371         1     -0.11
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0139     0.011  -0.00399        -1
          1     0.312     0.371        -1   0.00399
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.14969, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.16009, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003058, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.169984, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.109   0.00504         0         1
          1      2.72     0.311         1    -0.208
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00728   0.00504  -0.00754        -1
          1     0.182     0.311        -1   0.00754
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.170353, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003064, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022994, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0563   0.00207         0         1
          1      1.63     0.261         1    -0.351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00378   0.00207   -0.0127        -1
          1     0.109     0.261        -1    0.0127
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023018, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019876, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003052, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022991, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0289  0.000765         0     0.999
          1      1.01     0.205         1    -0.511
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00194  0.000765   -0.0185        -1
          1    0.0676     0.205        -1    0.0185
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023014, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001936
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000486
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043814
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.209729
         W1a Well: minimal relaxation eigenvalue = 0.0658303
         W1a Well: maximal relaxation eigenvalue = 4.83086
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001871
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.27621
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076294
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081712
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.320107
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03487, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.35e+05 7.87e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00185  7.53e-17  1.69e-53
        W1b       542         1  4.08e-14  9.13e-51
         P1  1.33e+16  2.45e+13         1  2.24e-37
         P2  5.93e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000636  1.07e-20  2.41e-57
        W1b  1.57e+03         1  1.69e-17  3.78e-54
         P1  9.31e+19  5.92e+16         1  2.24e-37
         P2  4.16e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.03899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.72855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.290259, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03428, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.886     0.053         0         1
          1        18     0.999         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0583     0.053   -0.0013        -1
          1      1.18     0.999        -1    0.0013
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.03668, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.72208, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.264203, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99373, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.208    0.0134         0         1
          1      5.17     0.393         1   -0.0972
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0137    0.0134  -0.00418        -1
          1     0.341     0.393        -1   0.00418
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.99633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.51328, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002833, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.522689, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.11   0.00634         0         1
          1         3     0.335         1    -0.187
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00724   0.00634  -0.00803        -1
          1     0.197     0.335        -1   0.00803
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.523067, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018417, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002825, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021301, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0576   0.00269         0     0.999
          1      1.79     0.286         1    -0.322
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00379   0.00269   -0.0138        -1
          1     0.118     0.286        -1    0.0138
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021325, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018449, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002799, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021307, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0298   0.00104         0     0.999
          1      1.11      0.23         1    -0.476
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00196   0.00104   -0.0205        -1
          1    0.0731      0.23        -1    0.0205
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02133, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002049
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000479
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036059
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.21096
         W1a Well: minimal relaxation eigenvalue = 0.0647287
         W1a Well: maximal relaxation eigenvalue = 3.73205
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001908
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.282409
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078784
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083728
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.330985
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04924, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.71e+05 1.01e+12
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0026  4.89e-17  4.91e-52
        W1b       384         1  1.88e-14  1.89e-49
         P1  2.05e+16  5.33e+13         1     1e-35
         P2  2.04e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00116   7.2e-21  7.23e-56
        W1b       863         1  6.21e-18  6.24e-53
         P1  1.39e+20  1.61e+17         1     1e-35
         P2  1.38e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.05309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.297018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.08972, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.877    0.0614         0         1
          1      21.1     0.908         1   -0.0264
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0568    0.0614  -0.00135        -1
          1      1.37     0.908        -1   0.00135
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.09218, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.77842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.262331, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.04851, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.211    0.0164         0         1
          1      5.77     0.406         1   -0.0867
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0137    0.0164  -0.00442        -1
          1     0.374     0.406        -1   0.00442
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.05086, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.453508, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.462898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.113   0.00796         0         1
          1      3.31     0.358         1    -0.169
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00732   0.00796  -0.00861        -1
          1     0.214     0.358        -1   0.00861
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.463276, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021508, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0598   0.00351         0     0.999
          1      1.97     0.313         1    -0.295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00387   0.00351   -0.0151        -1
          1     0.127     0.313        -1    0.0151
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018534, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00282, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021412, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0313   0.00142         0     0.999
          1      1.22     0.257         1    -0.443
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00202   0.00142   -0.0226        -1
          1     0.079     0.257        -1    0.0226
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021437, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002053
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000481
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.177526
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.214913
         W1a Well: minimal relaxation eigenvalue = 0.0635922
         W1a Well: maximal relaxation eigenvalue = 5.85651
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001773
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.285597
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079272
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08479
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.331668
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.2003, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.49e+05 1.29e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00365  3.29e-17  1.08e-50
        W1b       274         1  9.02e-15  2.96e-48
         P1  3.04e+16  1.11e+14         1  3.28e-34
         P2  9.24e+49  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00201     5e-21  1.64e-54
        W1b       497         1  2.49e-18  8.17e-52
         P1     2e+20  4.02e+17         1  3.28e-34
         P2  6.08e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.20413, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.78505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.301772, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.10317, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.875    0.0709         0         1
          1      23.1      1.02         1   -0.0232
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0556    0.0709   -0.0014        -1
          1      1.47      1.02        -1    0.0014
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.10562, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.79376, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.267667, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.06923, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.217    0.0198         0         1
          1       6.3     0.437         1   -0.0776
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0138    0.0198  -0.00469        -1
          1     0.401     0.437        -1   0.00469
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07159, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.421871, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00289, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.431452, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.117   0.00994         0     0.999
          1      3.61     0.386         1    -0.153
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00747   0.00994  -0.00923        -1
          1      0.23     0.386        -1   0.00923
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.431832, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018803, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.02175, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0629   0.00455         0     0.999
          1      2.14     0.341         1     -0.27
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.004   0.00455   -0.0163        -1
          1     0.136     0.341        -1    0.0163
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021775, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018743, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021669, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0332   0.00192         0     0.999
          1      1.33     0.284         1     -0.41
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00211   0.00192   -0.0248        -1
          1    0.0848     0.284        -1    0.0248
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021693, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001961
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000461
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035786
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.204257
         W1a Well: minimal relaxation eigenvalue = 0.0624809
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001772
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.278809
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075992
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083214
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.317554
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.02108, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.59e+05 1.65e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00486  2.23e-17  1.81e-49
        W1b       206         1  4.59e-15  3.73e-47
         P1  4.48e+16  2.18e+14         1  8.12e-33
         P2  5.52e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00335  3.59e-21  2.92e-53
        W1b       299         1  1.07e-18  8.71e-51
         P1  2.78e+20  9.31e+17         1  8.12e-33
         P2  3.43e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.02489, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.67606, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.274281, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97542, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.833    0.0812         0         1
          1      25.5      1.13         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.052    0.0812  -0.00136        -1
          1      1.59      1.13        -1   0.00136
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.97784, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68763, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.253572, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94867, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.214    0.0235         0         1
          1      6.88     0.471         1   -0.0684
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0134    0.0235  -0.00477        -1
          1      0.43     0.471        -1   0.00477
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.95103, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.679059, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002744, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.688425, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.118    0.0121         0     0.999
          1      3.93     0.417         1    -0.137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00737    0.0121  -0.00952        -1
          1     0.246     0.417        -1   0.00952
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.68879, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017635, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020422, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.064   0.00573         0     0.999
          1      2.33     0.372         1    -0.245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.004   0.00573   -0.0171        -1
          1     0.146     0.372        -1    0.0171
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020446, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017617, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002721, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0342   0.00253         0     0.998
          1      1.46     0.315         1    -0.377
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00214   0.00253   -0.0263        -1
          1     0.091     0.315        -1    0.0263
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020417, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001889
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000456
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032003
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.199303
         W1a Well: minimal relaxation eigenvalue = 0.0615737
         W1a Well: maximal relaxation eigenvalue = 6.0739
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001849
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.267924
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076873
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088028
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.32173
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.01095, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.39e+05 2.08e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00685   1.6e-17  2.51e-48
        W1b       146         1  2.34e-15  3.67e-46
         P1  6.24e+16  4.27e+14         1  1.57e-31
         P2  3.98e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00537  2.66e-21  4.16e-52
        W1b       186         1  4.95e-19  7.76e-50
         P1  3.76e+20  2.02e+18         1  1.57e-31
         P2   2.4e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.0148, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.69721, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.284744, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.00057, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.849     0.094         0         1
          1      29.3     0.991         1   -0.0176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0522     0.094  -0.00145        -1
          1       1.8     0.991        -1   0.00145
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.70848, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.254799, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.226    0.0284         0         1
          1       7.6     0.486         1    -0.062
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0139    0.0284  -0.00513        -1
          1     0.468     0.486        -1   0.00513
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.97333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.633857, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002747, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.642958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0151         0     0.999
          1      4.32     0.445         1    -0.124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00776    0.0151   -0.0103        -1
          1     0.266     0.445        -1    0.0103
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.643333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01787, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0693    0.0074         0     0.998
          1      2.56     0.404         1    -0.225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00427    0.0074   -0.0186        -1
          1     0.157     0.404        -1    0.0186
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020681, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017827, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002724, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020609, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0376   0.00341         0     0.998
          1       1.6     0.347         1    -0.347
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00231   0.00341   -0.0287        -1
          1    0.0982     0.347        -1    0.0287
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020632, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001928
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000442
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.046326
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.196388
         W1a Well: minimal relaxation eigenvalue = 0.0606607
         W1a Well: maximal relaxation eigenvalue = 4.42925
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001768
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.262247
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07154
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.081039
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.28882
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.969908, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.24e+05 2.62e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0096  1.15e-17   2.8e-47
        W1b       104         1   1.2e-15  2.91e-45
         P1  8.68e+16  8.34e+14         1  2.43e-30
         P2  3.58e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00832  2.01e-21  4.89e-51
        W1b       120         1  2.42e-19  5.88e-49
         P1  4.96e+20  4.13e+18         1  2.43e-30
         P2  2.04e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.97396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54347, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.238551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.879     0.108         0         1
          1      33.1     0.913         1   -0.0161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0533     0.108  -0.00157        -1
          1      2.01     0.913        -1   0.00157
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54869, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.231681, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78735, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0342         0     0.999
          1      8.36     0.511         1   -0.0568
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0147    0.0342  -0.00556        -1
          1     0.507     0.511        -1   0.00556
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.7896, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.871146, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.87958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.137    0.0187         0     0.999
          1      4.73     0.478         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00829    0.0187   -0.0111        -1
          1     0.287     0.478        -1    0.0111
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.879944, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016787, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019435, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0763   0.00949         0     0.998
          1       2.8      0.44         1    -0.206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00463   0.00949   -0.0202        -1
          1      0.17      0.44        -1    0.0202
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019459, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016709, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002572, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0419   0.00457         0     0.997
          1      1.75     0.383         1    -0.319
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00254   0.00457   -0.0313        -1
          1     0.106     0.383        -1    0.0313
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01936, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00192
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000441
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042414
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.193843
         W1a Well: minimal relaxation eigenvalue = 0.0597142
         W1a Well: maximal relaxation eigenvalue = 6.74834
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001801
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.237972
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.074019
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.104722
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.298772
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.975516, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.69e+05 3.27e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0136   8.7e-18  2.69e-46
        W1b      73.7         1  6.41e-16  1.98e-44
         P1  1.15e+17  1.56e+15         1  3.09e-29
         P2  3.71e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0125  1.56e-21  4.83e-50
        W1b      79.9         1  1.25e-19  3.86e-48
         P1   6.4e+20  8.01e+18         1  3.09e-29
         P2  2.07e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.979279, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58675, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.256753, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87628, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.942     0.124         0         1
          1      36.2         1         1   -0.0153
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0563     0.124  -0.00178        -1
          1      2.16         1        -1   0.00178
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87867, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58832, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83459, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.266    0.0411         0     0.999
          1      9.09     0.553         1    -0.053
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0411  -0.00617        -1
          1     0.543     0.553        -1   0.00617
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83689, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.831357, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002623, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.840105, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.153    0.0231         0     0.999
          1      5.14     0.518         1    -0.105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00912    0.0231   -0.0122        -1
          1     0.307     0.518        -1    0.0122
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.840471, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016951, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002602, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0864    0.0122         0     0.997
          1      3.05      0.48         1    -0.189
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00516    0.0122   -0.0221        -1
          1     0.182      0.48        -1    0.0221
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019633, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016902, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002599, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019555, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0482   0.00613         0     0.996
          1      1.92     0.422         1    -0.294
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00288   0.00613   -0.0342    -0.999
          1     0.114     0.422    -0.999    0.0342
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019579, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001832
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000448
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043328
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.19602
         W1a Well: minimal relaxation eigenvalue = 0.0587158
         W1a Well: maximal relaxation eigenvalue = 10.7587
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00181
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.264877
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073653
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.100708
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.301971
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00436, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.49e+05 4.08e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.019  6.72e-18  2.22e-45
        W1b      52.7         1  3.54e-16  1.17e-43
         P1  1.49e+17  2.83e+15         1  3.31e-28
         P2   4.5e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0183  1.24e-21  4.09e-49
        W1b      54.6         1  6.75e-20  2.23e-47
         P1  8.09e+20  1.48e+19         1  3.31e-28
         P2  2.45e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 1.00811, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.60864, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.260447, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88628, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.142         0         1
          1      38.5      1.28         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.142  -0.00202        -1
          1      2.26      1.28        -1   0.00202
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.88864, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.245726, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8753, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.296    0.0491         0     0.999
          1      9.81     0.615         1   -0.0497
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174    0.0491  -0.00685        -1
          1     0.576     0.615        -1   0.00685
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87766, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801911, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002647, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.810811, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0283         0     0.998
          1      5.58     0.567         1   -0.0974
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0283   -0.0134        -1
          1     0.327     0.567        -1    0.0134
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.811173, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002644, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019895, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0985    0.0154         0     0.997
          1      3.32     0.524         1    -0.175
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00579    0.0154   -0.0241        -1
          1     0.195     0.524        -1    0.0241
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019919, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017124, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002623, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019804, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0558   0.00811         0     0.995
          1       2.1     0.464         1     -0.27
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00327   0.00811   -0.0372    -0.999
          1     0.123     0.464    -0.999    0.0372
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019828, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001893
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000426
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037801
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182816
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001828
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.246159
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071648
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099771
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.286414
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.947286, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.69e+05 5.05e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  5.16e-18  1.55e-44
        W1b      38.2         1  1.97e-16  5.94e-43
         P1  1.94e+17  5.07e+15         1  3.01e-27
         P2  6.43e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  9.97e-22  3.01e-48
        W1b      38.2         1  3.81e-20  1.15e-46
         P1     1e+21  2.63e+19         1  3.01e-27
         P2  3.33e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.951032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.51943, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.259914, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.162         0         1
          1      42.3      1.37         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.064     0.162  -0.00227        -1
          1      2.45      1.37        -1   0.00227
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79596, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.525, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.23112, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76312, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.329    0.0581         0     0.999
          1      10.7     0.662         1   -0.0468
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.019    0.0581  -0.00757        -1
          1      0.62     0.662        -1   0.00757
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.76544, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.999609, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00804, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.193    0.0343         0     0.998
          1      6.09     0.615         1   -0.0905
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0112    0.0343   -0.0146        -1
          1     0.353     0.615        -1    0.0146
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0084, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016269, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002545, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018866, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.112    0.0193         0     0.996
          1      3.64     0.572         1    -0.161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0065    0.0193    -0.026        -1
          1     0.211     0.572        -1     0.026
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01889, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016201, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018798, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0645    0.0106         0     0.994
          1      2.31     0.511         1    -0.248
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00373    0.0106   -0.0401    -0.999
          1     0.134     0.511    -0.999    0.0401
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018821, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001825
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000429
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03482
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.187135
         W1a Well: minimal relaxation eigenvalue = 0.0572581
         W1a Well: maximal relaxation eigenvalue = 6.11952
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001803
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.257368
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073021
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.084771
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.29809
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.958528, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.49e+05 6.24e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0361  4.13e-18  9.83e-44
        W1b      27.7         1  1.14e-16  2.72e-42
         P1  2.42e+17  8.75e+15         1  2.38e-26
         P2  1.02e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0366  8.17e-22  1.95e-47
        W1b      27.3         1  2.23e-20  5.32e-46
         P1  1.22e+21  4.48e+19         1  2.38e-26
         P2  5.14e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.962578, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.263222, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84822, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.184         0     0.999
          1      48.8      1.01         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0706     0.184  -0.00265        -1
          1       2.8      1.01        -1   0.00265
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.85059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52572, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167637, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70017, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.374    0.0685         0     0.998
          1      11.9     0.688         1   -0.0448
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0214    0.0685   -0.0085        -1
          1     0.679     0.688        -1    0.0085
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.70201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0669, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07245, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.222    0.0415         0     0.997
          1      6.72     0.661         1    -0.085
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0127    0.0415   -0.0162        -1
          1     0.385     0.661        -1    0.0162
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016394, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002529, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.13    0.0241         0     0.995
          1      4.01     0.623         1    -0.149
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00746    0.0241   -0.0284        -1
          1      0.23     0.623        -1    0.0284
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019004, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016338, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002527, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018918, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0758    0.0137         0     0.992
          1      2.55     0.561         1    -0.228
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434    0.0137   -0.0433    -0.999
          1     0.146     0.561    -0.999    0.0433
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018944, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001885
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000445
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032169
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.191969
         W1a Well: minimal relaxation eigenvalue = 0.0563928
         W1a Well: maximal relaxation eigenvalue = 9.76691
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001779
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.258673
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.073146
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0903
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.293336
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.962008, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.24e+05 7.67e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0497  3.35e-18  5.55e-43
        W1b      20.1         1  6.75e-17  1.12e-41
         P1  2.98e+17  1.48e+16         1  1.65e-25
         P2   1.8e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0501  6.79e-22  1.12e-46
        W1b      19.9         1  1.35e-20  2.24e-45
         P1  1.47e+21  7.38e+19         1  1.65e-25
         P2   8.9e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.96582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.56853, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244985, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.42     0.207         0     0.999
          1        52       1.3         1   -0.0141
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0799     0.207  -0.00315        -1
          1      2.93       1.3        -1   0.00315
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.84212, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.57401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.23536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.81653, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.433    0.0802         0     0.998
          1      12.9      0.76         1   -0.0435
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0244    0.0802  -0.00968        -1
          1     0.725      0.76        -1   0.00968
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.81888, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.965376, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.973997, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.259    0.0498         0     0.996
          1      7.32     0.723         1   -0.0807
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0146    0.0498    -0.018        -1
          1     0.413     0.723        -1     0.018
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.974374, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016468, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002528, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019049, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154    0.0298         0     0.993
          1      4.39     0.681         1    -0.139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00866    0.0298   -0.0311        -1
          1     0.248     0.681        -1    0.0311
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019074, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016415, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002531, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0906    0.0177    0.0104      0.99
          1      2.82     0.615         1    -0.211
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00511    0.0177   -0.0469    -0.999
          1     0.159     0.615    -0.999    0.0469
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019024, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001736
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030232
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.186163
         W1a Well: minimal relaxation eigenvalue = 0.0557725
         W1a Well: maximal relaxation eigenvalue = 6.3968
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002069
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.255278
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.069408
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079198
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.284122
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.926816, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.81e+05 9.39e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0666   2.7e-18  2.76e-42
        W1b        15         1  4.06e-17  4.15e-41
         P1   3.7e+17  2.46e+16         1  1.02e-24
         P2  3.62e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0675  5.73e-22  5.85e-46
        W1b      14.8         1  8.49e-21  8.67e-45
         P1  1.75e+21  1.18e+20         1  1.02e-24
         P2  1.71e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.930599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.47138, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.232654, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73436, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.6     0.232         0     0.999
          1      58.7      1.12         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.089     0.232  -0.00366        -1
          1      3.27      1.12        -1   0.00366
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.73675, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.47744, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.225635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70992, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.494     0.093         0     0.997
          1      14.2      0.81         1    -0.042
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0275     0.093   -0.0108        -1
          1      0.79      0.81        -1    0.0108
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.71227, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18043, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004568, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1909, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.297     0.059         0     0.995
          1      8.05     0.783         1   -0.0764
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0166     0.059   -0.0197        -1
          1     0.449     0.783        -1    0.0197
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19127, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015465, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0024, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.178    0.0364         0     0.991
          1      4.85     0.743         1     -0.13
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00994    0.0364   -0.0335    -0.999
          1      0.27     0.743    -0.999    0.0335
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01542, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002411, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.106    0.0223    0.0128     0.987
          1      3.12     0.674         1    -0.194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00594    0.0223   -0.0501    -0.999
          1     0.174     0.674    -0.999    0.0501
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017907, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001809
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000417
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031867
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.187399
         W1a Well: minimal relaxation eigenvalue = 0.0549719
         W1a Well: maximal relaxation eigenvalue = 10.0621
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001782
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.241611
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.070356
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088295
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.282633
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.924003, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.54e+05 1.15e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0881  2.26e-18  1.28e-41
        W1b      11.4         1  2.56e-17  1.45e-40
         P1  4.43e+17   3.9e+16         1  5.66e-24
         P2  7.82e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0892  4.89e-22  2.77e-45
        W1b      11.2         1  5.48e-21   3.1e-44
         P1  2.05e+21  1.83e+20         1  5.66e-24
         P2  3.61e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.928101, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.48272, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235454, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.7414, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.81     0.258         0     0.999
          1      63.4      1.32         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0993     0.258  -0.00424        -1
          1      3.49      1.32        -1   0.00424
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.74381, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22485, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72075, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.565     0.107         0     0.996
          1      15.4     0.892         1   -0.0409
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.031     0.107   -0.0121        -1
          1     0.847     0.892        -1    0.0121
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16542, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003124, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17438, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.342    0.0693         0     0.994
          1       8.8     0.857         1   -0.0727
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0693   -0.0216        -1
          1     0.484     0.857        -1    0.0216
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17476, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002414, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018067, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.207    0.0438    0.0106     0.989
          1      5.32     0.813         1    -0.122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0114    0.0438   -0.0361    -0.999
          1     0.293     0.813    -0.999    0.0361
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018092, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015541, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002402, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017997, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.125    0.0278    0.0156     0.984
          1      3.45     0.739         1     -0.18
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00688    0.0278   -0.0533    -0.999
          1      0.19     0.739    -0.999    0.0533
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018022, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001652
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000409
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034817
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175229
         W1a Well: minimal relaxation eigenvalue = 0.0541168
         W1a Well: maximal relaxation eigenvalue = 13.6688
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001783
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.245618
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065974
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083033
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.269041
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.895358, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.57e+05 1.39e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.115  1.87e-18  5.32e-41
        W1b      8.71         1  1.63e-17  4.63e-40
         P1  5.35e+17  6.14e+16         1  2.85e-23
         P2  1.88e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.116  4.22e-22   1.2e-44
        W1b       8.6         1  3.63e-21  1.03e-43
         P1  2.37e+21  2.76e+20         1  2.85e-23
         P2  8.33e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.899114, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40293, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.242471, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66398, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.05     0.286         0     0.998
          1      68.1      1.68         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.111     0.286  -0.00488        -1
          1      3.69      1.68        -1   0.00488
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.66637, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215343, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63383, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.645     0.122         0     0.995
          1      16.8      0.99         1   -0.0398
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0349     0.122   -0.0135        -1
          1     0.907      0.99        -1    0.0135
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63615, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32035, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.02162, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34773, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.393    0.0805         0     0.992
          1      9.61     0.941         1   -0.0694
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0805   -0.0235        -1
          1      0.52     0.941        -1    0.0235
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34818, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015928, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002305, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018453, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0521     0.013     0.987
          1      5.85      0.89         1    -0.114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.013    0.0521   -0.0387    -0.999
          1     0.317      0.89    -0.999    0.0387
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014728, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00228, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017058, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.147    0.0341    0.0188     0.981
          1      3.82     0.812         1    -0.167
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00793    0.0341   -0.0565    -0.998
          1     0.207     0.812    -0.998    0.0565
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017081, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001736
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028705
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1784
         W1a Well: minimal relaxation eigenvalue = 0.0537563
         W1a Well: maximal relaxation eigenvalue = 7.27034
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001781
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.243971
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.067468
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08234
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.269941
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.892722, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.31e+05 1.69e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.148   1.6e-18  2.09e-40
        W1b      6.78         1  1.08e-17  1.41e-39
         P1  6.26e+17  9.24e+16         1  1.31e-22
         P2  4.79e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.149  3.68e-22   4.8e-44
        W1b       6.7         1  2.46e-21  3.22e-43
         P1  2.72e+21  4.06e+20         1  1.31e-22
         P2  2.08e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.896488, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.241947, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66912, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.29     0.316         0     0.998
          1      77.4      1.29         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.316  -0.00554        -1
          1      4.16      1.29        -1   0.00554
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.67154, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41786, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.216123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.64074, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.728     0.139         0     0.994
          1      18.5      1.05         1   -0.0386
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0391     0.139   -0.0148        -1
          1     0.997      1.05        -1    0.0148
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.64309, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.020294, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33461, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.447    0.0931         0      0.99
          1      10.6      1.02         1   -0.0661
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.024    0.0931   -0.0254        -1
          1     0.571      1.02        -1    0.0254
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33507, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002305, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.275    0.0617    0.0155     0.984
          1      6.49     0.968         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0148    0.0617    -0.041    -0.999
          1     0.349     0.968    -0.999     0.041
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017951, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00229, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017114, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.17    0.0415    0.0222     0.978
          1      4.26     0.884         1    -0.154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00914    0.0415   -0.0589    -0.998
          1     0.229     0.884    -0.998    0.0589
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017142, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001745
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000414
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030633
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.183428
         W1a Well: minimal relaxation eigenvalue = 0.0530077
         W1a Well: maximal relaxation eigenvalue = 11.4029
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001921
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.246847
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.066907
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074458
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.268503
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.892349, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 1.05e+05 2.04e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.187  1.38e-18  7.61e-40
        W1b      5.34         1  7.35e-18  4.07e-39
         P1  7.26e+17  1.36e+17         1  5.53e-22
         P2  1.31e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.189  3.23e-22  1.79e-43
        W1b      5.28         1  1.71e-21  9.44e-43
         P1  3.09e+21  5.86e+20         1  5.53e-22
         P2  5.59e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.89609, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.42409, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.238971, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69446, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.58      0.35         0     0.997
          1      82.7      1.68         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137      0.35  -0.00624        -1
          1      4.38      1.68        -1   0.00624
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.69684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.42923, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.215088, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.651, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.825     0.157         0     0.993
          1      20.2      1.15         1   -0.0376
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0437     0.157   -0.0163        -1
          1      1.07      1.15        -1    0.0163
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.65331, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28169, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015926, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.509     0.107    0.0117     0.988
          1      11.6      1.11         1   -0.0632
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.027     0.107   -0.0273        -1
          1     0.616      1.11        -1    0.0273
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014906, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002308, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.315    0.0722    0.0185     0.982
          1      7.14      1.06         1    -0.101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167    0.0722   -0.0435    -0.999
          1     0.378      1.06    -0.999    0.0435
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0149, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002288, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017239, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.197    0.0498    0.0261     0.974
          1      4.71     0.969         1    -0.143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0104    0.0498   -0.0618    -0.998
          1      0.25     0.969    -0.998    0.0618
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017263, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001775
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000405
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.0327
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174445
         W1a Well: minimal relaxation eigenvalue = 0.0524324
         W1a Well: maximal relaxation eigenvalue = 10.7298
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00169
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.227828
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06419
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083873
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.251702
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.855683, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.27e+05 2.45e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.234  1.18e-18  2.55e-39
        W1b      4.27         1  5.02e-18  1.09e-38
         P1  8.51e+17  1.99e+17         1  2.17e-21
         P2  3.93e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.237  2.87e-22  6.21e-43
        W1b      4.22         1  1.21e-21  2.62e-42
         P1  3.49e+21  8.27e+20         1  2.17e-21
         P2  1.61e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.859431, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34619, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.220322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5801, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.89     0.379         0     0.997
          1      91.8       1.6         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.379  -0.00702        -1
          1      4.81       1.6        -1   0.00702
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.58246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3378, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20439, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54866, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.929     0.175         0     0.991
          1      22.1      1.25         1   -0.0367
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0487     0.175   -0.0178        -1
          1      1.16      1.25        -1    0.0178
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55097, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3501, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49471, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.575     0.121     0.014     0.986
          1      12.8      1.21         1   -0.0605
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0302     0.121   -0.0293        -1
          1      0.67      1.21        -1    0.0293
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49535, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.032472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.035185, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.359    0.0835    0.0217     0.978
          1      7.89      1.15         1   -0.0947
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0835   -0.0458    -0.999
          1     0.414      1.15    -0.999    0.0458
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.035246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014078, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01632, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.227     0.059    0.0302      0.97
          1      5.24      1.06         1    -0.133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0119     0.059   -0.0643    -0.998
          1     0.275      1.06    -0.998    0.0643
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016345, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001766
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000398
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033248
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.177405
         W1a Well: minimal relaxation eigenvalue = 0.0519977
         W1a Well: maximal relaxation eigenvalue = 6.87135
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001871
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.232631
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06615
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069332
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.255202
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.854847, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 1.02e+05 2.94e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.291  1.03e-18  8.16e-39
        W1b      3.44         1  3.55e-18  2.81e-38
         P1  9.69e+17  2.82e+17         1  7.91e-21
         P2  1.22e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.294  2.57e-22  2.03e-42
        W1b       3.4         1  8.73e-22  6.91e-42
         P1   3.9e+21  1.15e+21         1  7.91e-21
         P2  4.93e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.858899, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35229, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.230103, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60332, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.23     0.415         0     0.996
          1       102      1.58         1   -0.0145
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.415  -0.00781        -1
          1      5.28      1.58        -1   0.00781
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.60575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35567, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206549, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.56857, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.04     0.195    0.0103      0.99
          1      24.4      1.35         1   -0.0358
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0543     0.195   -0.0193        -1
          1      1.27      1.35        -1    0.0193
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.57091, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.35023, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.112037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46822, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.65     0.137    0.0165     0.983
          1      14.1      1.32         1   -0.0579
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0338     0.137   -0.0312        -1
          1     0.735      1.32        -1    0.0312
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46903, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.029411, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00221, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.032082, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.408    0.0964    0.0252     0.975
          1      8.76      1.26         1    -0.089
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0212    0.0964   -0.0479    -0.999
          1     0.455      1.26    -0.999    0.0479
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.03215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016347, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.261    0.0696    0.0345     0.965
          1      5.85      1.15         1    -0.123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0136    0.0696   -0.0662    -0.998
          1     0.304      1.15    -0.998    0.0662
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016371, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001674
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00038
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032497
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167951
         W1a Well: minimal relaxation eigenvalue = 0.0512682
         W1a Well: maximal relaxation eigenvalue = 11.7432
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001695
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.215175
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.061493
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077503
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.24517
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.820134, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.43e+05 3.52e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.357  8.96e-19  2.43e-38
        W1b       2.8         1  2.51e-18   6.8e-38
         P1  1.12e+18  3.98e+17         1  2.71e-20
         P2  4.12e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.36  2.31e-22  6.26e-42
        W1b      2.77         1  6.41e-22  1.74e-41
         P1  4.33e+21  1.56e+21         1  2.71e-20
         P2   1.6e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.823886, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.63     0.451         0     0.995
          1       110      1.85         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.451  -0.00872        -1
          1      5.64      1.85        -1   0.00872
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53109, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29659, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197847, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50061, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.18     0.216    0.0124     0.988
          1      26.6      1.49         1   -0.0351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0603     0.216    -0.021        -1
          1      1.36      1.49        -1     0.021
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50297, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199328, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.734     0.154    0.0195      0.98
          1      15.4      1.44         1   -0.0558
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0376     0.154   -0.0333    -0.999
          1     0.791      1.44    -0.999    0.0333
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50579, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.134941, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002118, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.142358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.463      0.11    0.0293     0.971
          1      9.61      1.37         1   -0.0847
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238      0.11   -0.0506    -0.999
          1     0.493      1.37    -0.999    0.0506
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.142733, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013498, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015661, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.298     0.081    0.0398      0.96
          1      6.45      1.26         1    -0.116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0153     0.081   -0.0692    -0.998
          1     0.331      1.26    -0.998    0.0692
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015685, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001742
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000389
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03376
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170075
         W1a Well: minimal relaxation eigenvalue = 0.0509017
         W1a Well: maximal relaxation eigenvalue = 7.43617
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001675
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217327
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.0629
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08369
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.248709
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.837419, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.15e+05  4.2e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.433  7.98e-19  6.97e-38
        W1b      2.31         1  1.84e-18  1.61e-37
         P1  1.25e+18  5.42e+17         1  8.73e-20
         P2  1.44e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.438   2.1e-22  1.83e-41
        W1b      2.28         1  4.78e-22  4.18e-41
         P1  4.77e+21  2.09e+21         1  8.73e-20
         P2  5.47e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.841154, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2958, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22122, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54447, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.01     0.491         0     0.994
          1       122      1.81         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.204     0.491   -0.0095        -1
          1       6.2      1.81        -1    0.0095
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.54688, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29618, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197636, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50025, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.31      0.24    0.0145     0.985
          1      29.3      1.61         1    -0.034
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0665      0.24   -0.0224        -1
          1      1.49      1.61        -1    0.0224
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.5026, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3008, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.197098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5043, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.82     0.173    0.0225     0.977
          1      17.1      1.57         1   -0.0533
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0417     0.173    -0.035    -0.999
          1     0.869      1.57    -0.999     0.035
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.50663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.115435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.122837, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.522     0.125    0.0332     0.967
          1      10.7      1.49         1   -0.0794
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0265     0.125   -0.0522    -0.999
          1     0.544      1.49    -0.999    0.0522
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.123215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013535, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002126, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01571, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.339     0.094    0.0443     0.956
          1      7.23      1.36         1    -0.107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0173     0.094   -0.0702    -0.998
          1     0.368      1.36    -0.998    0.0702
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015737, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001699
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.0004
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030673
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.175619
         W1a Well: minimal relaxation eigenvalue = 0.0502875
         W1a Well: maximal relaxation eigenvalue = 10.8633
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001666
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.220965
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059693
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065568
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.243478
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.815937, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.72e+05    5e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.521  7.16e-19   1.9e-37
        W1b      1.92         1  1.37e-18  3.65e-37
         P1   1.4e+18  7.28e+17         1  2.66e-19
         P2  5.25e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.527  1.91e-22  5.08e-41
        W1b       1.9         1  3.63e-22  9.64e-41
         P1  5.23e+21  2.76e+21         1  2.66e-19
         P2  1.97e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.819666, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30303, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218109, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55014, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.46     0.532         0     0.993
          1       132       2.1         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.532   -0.0104        -1
          1      6.64       2.1        -1    0.0104
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55252, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30703, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198314, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51178, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.46     0.264    0.0171     0.983
          1        32      1.76         1   -0.0333
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0734     0.264    -0.024        -1
          1      1.61      1.76        -1     0.024
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51412, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.30345, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198867, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.50875, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.919     0.192    0.0261     0.974
          1      18.7      1.71         1   -0.0514
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0462     0.192   -0.0371    -0.999
          1      0.94      1.71    -0.999    0.0371
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51105, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.100298, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002142, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107681, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.587     0.141     0.038     0.962
          1      11.7      1.62         1   -0.0758
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0295     0.141   -0.0546    -0.999
          1     0.591      1.62    -0.999    0.0546
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.108052, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013593, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015781, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.385     0.108    0.0501      0.95
          1      7.97      1.48         1    -0.101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0193     0.108   -0.0729    -0.997
          1     0.401      1.48    -0.997    0.0729
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015805, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001694
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000382
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033346
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.169877
         W1a Well: minimal relaxation eigenvalue = 0.0491988
         W1a Well: maximal relaxation eigenvalue = 19.0868
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001631
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.222657
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059322
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065749
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.238017
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.808934, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.47e+05 5.93e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.621  6.35e-19  4.88e-37
        W1b      1.61         1  1.02e-18  7.86e-37
         P1  1.58e+18  9.79e+17         1  7.69e-19
         P2  2.05e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.629  1.75e-22  1.35e-40
        W1b      1.59         1  2.79e-22  2.14e-40
         P1   5.7e+21  3.59e+21         1  7.69e-19
         P2  7.41e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.812637, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25903, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217439, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49173, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.99     0.576         0     0.991
          1       141      2.95         1   -0.0144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.245     0.576   -0.0113        -1
          1      6.96      2.95        -1    0.0113
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49408, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26249, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19422, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.46299, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.64     0.289      0.02      0.98
          1      34.5      1.97         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0806     0.289   -0.0259        -1
          1       1.7      1.97        -1    0.0259
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46542, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193202, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34525, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.212    0.0304      0.97
          1      20.1      1.88         1   -0.0505
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0508     0.212   -0.0398    -0.999
          1     0.989      1.88    -0.999    0.0398
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.371584, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002094, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.37933, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.661     0.157    0.0442     0.956
          1      12.6      1.79         1   -0.0744
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0325     0.157   -0.0585    -0.998
          1      0.62      1.79    -0.998    0.0585
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.379692, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013123, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002076, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015246, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.433     0.122    0.0584     0.942
          1      8.53      1.64         1   -0.0999
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213     0.122   -0.0785    -0.997
          1      0.42      1.64    -0.997    0.0785
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01527, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001758
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000381
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03155
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.171312
         W1a Well: minimal relaxation eigenvalue = 0.0493603
         W1a Well: maximal relaxation eigenvalue = 9.42937
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001667
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.218068
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058722
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074219
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.238197
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.811747, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.13e+05 7.02e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.737  5.76e-19  1.22e-36
        W1b      1.36         1  7.82e-19  1.66e-36
         P1  1.74e+18  1.28e+18         1  2.12e-18
         P2  8.19e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.746  1.62e-22  3.43e-40
        W1b      1.34         1  2.17e-22   4.6e-40
         P1  6.18e+21  4.61e+21         1  2.12e-18
         P2  2.92e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.815502, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26252, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.20376, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49216, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.46     0.621    0.0104      0.99
          1       159      2.32         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.27     0.621   -0.0122        -1
          1      7.86      2.32        -1    0.0122
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49461, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192176, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4651, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.8     0.317    0.0228     0.977
          1      38.5      2.08         1   -0.0317
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.317   -0.0272        -1
          1       1.9      2.08        -1    0.0272
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46745, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26461, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.191877, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4626, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.236    0.0338     0.966
          1      22.6      2.02         1   -0.0475
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0564     0.236   -0.0408    -0.999
          1      1.12      2.02    -0.999    0.0408
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.46518, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.253402, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.260584, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.738     0.178    0.0478     0.952
          1      14.4      1.91         1   -0.0681
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0364     0.178   -0.0584    -0.998
          1     0.709      1.91    -0.998    0.0584
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.26095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002061, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015279, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.491     0.139    0.0614     0.939
          1      9.85      1.75         1   -0.0889
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0242     0.139   -0.0761    -0.997
          1     0.486      1.75    -0.997    0.0761
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015304, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00162
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028492
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.169134
         W1a Well: minimal relaxation eigenvalue = 0.0487517
         W1a Well: maximal relaxation eigenvalue = 13.2322
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00164
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.210923
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058238
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07489
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.230319
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.79106, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 1.02e+05 8.29e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.866  5.17e-19  2.89e-36
        W1b      1.15         1  5.97e-19  3.33e-36
         P1  1.93e+18  1.68e+18         1  5.58e-18
         P2  3.46e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.877   1.5e-22  8.38e-40
        W1b      1.14         1  1.71e-22  9.55e-40
         P1  6.67e+21  5.85e+21         1  5.58e-18
         P2  1.19e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.794792, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21673, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.209993, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44029, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.04     0.671    0.0121     0.988
          1       172      2.69         1   -0.0142
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.295     0.671   -0.0132        -1
          1       8.4      2.69        -1    0.0132
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41387, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         2     0.346    0.0262     0.974
          1      41.8      2.27         1   -0.0311
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0975     0.346   -0.0289        -1
          1      2.04      2.27        -1    0.0289
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41623, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22057, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186533, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41323, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.27     0.259    0.0385     0.962
          1      24.6       2.2         1   -0.0462
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0619     0.259    -0.043    -0.999
          1       1.2       2.2    -0.999     0.043
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41556, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.414178, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.421226, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.823     0.198    0.0539     0.946
          1      15.6      2.09         1   -0.0658
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0401     0.198   -0.0611    -0.998
          1     0.762      2.09    -0.998    0.0611
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.421603, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012656, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001997, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0147, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.55     0.157    0.0689     0.931
          1      10.7       1.9         1   -0.0855
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0268     0.157   -0.0793    -0.997
          1     0.524       1.9    -0.997    0.0793
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014724, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001705
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000371
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031902
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167716
         W1a Well: minimal relaxation eigenvalue = 0.0485115
         W1a Well: maximal relaxation eigenvalue = 7.55643
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001811
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21188
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058538
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069207
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.23125
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.789769, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.63e+05 9.76e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  4.74e-19  6.68e-36
        W1b     0.988         1  4.68e-19   6.6e-36
         P1  2.11e+18  2.13e+18         1  1.41e-17
         P2   1.5e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.02   1.4e-22  1.97e-39
        W1b     0.976         1  1.36e-22  1.92e-39
         P1  7.16e+21  7.34e+21         1  1.41e-17
         P2  5.08e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.793833, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21854, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212007, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44696, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.65      0.72     0.014     0.986
          1       192      2.66         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.322      0.72   -0.0141        -1
          1       9.3      2.66        -1    0.0141
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44938, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21902, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186729, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41167, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.21     0.377    0.0296      0.97
          1      46.5      2.46         1   -0.0302
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.377   -0.0304        -1
          1      2.25      2.46        -1    0.0304
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41401, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22054, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186738, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.41346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.41     0.285    0.0427     0.957
          1      27.5      2.38         1   -0.0441
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0683     0.285   -0.0443    -0.999
          1      1.34      2.38    -0.999    0.0443
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.41578, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.408036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002011, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.415064, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.919     0.221    0.0584     0.942
          1      17.6      2.25         1   -0.0613
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0446     0.221   -0.0616    -0.998
          1     0.856      2.25    -0.998    0.0616
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.415433, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012692, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002019, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014759, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.622     0.177    0.0733     0.927
          1      12.2      2.04         1   -0.0781
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0302     0.177   -0.0784    -0.997
          1     0.592      2.04    -0.997    0.0784
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014784, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001627
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000386
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032216
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.168356
         W1a Well: minimal relaxation eigenvalue = 0.0479634
         W1a Well: maximal relaxation eigenvalue = 11.0685
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001752
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211405
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059186
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077079
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.22569
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.793204, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.22e+05 1.15e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.18  4.36e-19  1.49e-35
        W1b     0.851         1  3.71e-19  1.27e-35
         P1  2.29e+18  2.69e+18         1  3.42e-17
         P2   6.7e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.19  1.31e-22  4.47e-39
        W1b      0.84         1   1.1e-22  3.76e-39
         P1  7.66e+21  9.11e+21         1  3.42e-17
         P2  2.24e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.796919, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.21269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.36     0.771    0.0162     0.984
          1       208      2.95         1    -0.014
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.353     0.771   -0.0152        -1
          1      9.99      2.95        -1    0.0152
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.454, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22958, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42405, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.44     0.408    0.0337     0.966
          1      50.5      2.68         1   -0.0297
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.117     0.408   -0.0322    -0.999
          1      2.42      2.68    -0.999    0.0322
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42639, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.22801, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187929, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4219, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.56     0.311    0.0481     0.952
          1      29.9      2.59         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0749     0.311   -0.0466    -0.999
          1      1.43      2.59    -0.999    0.0466
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.42438, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.384083, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002021, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.391191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.243    0.0655     0.935
          1      19.1      2.44         1   -0.0596
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.049     0.243   -0.0645    -0.998
          1     0.918      2.44    -0.998    0.0645
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.391555, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00201, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014848, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.693     0.197    0.0817     0.918
          1      13.3      2.22         1   -0.0757
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0332     0.197   -0.0818    -0.997
          1     0.636      2.22    -0.997    0.0818
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014872, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001631
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029396
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166438
         W1a Well: minimal relaxation eigenvalue = 0.0475024
         W1a Well: maximal relaxation eigenvalue = 11.9635
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001855
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.213788
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.057561
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060981
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.222988
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.770421, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.26e+05 1.34e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.36  3.98e-19  3.18e-35
        W1b     0.738         1  2.93e-19  2.35e-35
         P1  2.52e+18  3.41e+18         1     8e-17
         P2  3.14e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.37  1.23e-22  9.81e-39
        W1b     0.728         1  8.93e-23  7.15e-39
         P1  8.15e+21  1.12e+22         1     8e-17
         P2  1.02e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.774168, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18369, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40569, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.11     0.825    0.0185     0.981
          1       228      3.21         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.385     0.825   -0.0162        -1
          1      10.8      3.21        -1    0.0162
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40813, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1833, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18244, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37218, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.7     0.441     0.038     0.962
          1      55.2      2.91         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.128     0.441   -0.0339    -0.999
          1      2.62      2.91    -0.999    0.0339
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37454, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18211, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182444, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37057, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.73     0.339    0.0536     0.946
          1      32.7      2.81         1   -0.0418
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.082     0.339   -0.0486    -0.999
          1      1.55      2.81    -0.999    0.0486
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37288, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.538987, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001944, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.545903, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.13     0.267    0.0722     0.928
          1        21      2.65         1   -0.0574
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0538     0.267   -0.0667    -0.998
          1     0.996      2.65    -0.998    0.0667
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.546273, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012308, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001944, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.0143, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.773     0.218    0.0894     0.911
          1      14.6      2.41         1   -0.0724
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0367     0.218    -0.084    -0.996
          1     0.692      2.41    -0.996     0.084
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014325, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001675
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000376
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028872
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16376
         W1a Well: minimal relaxation eigenvalue = 0.0472471
         W1a Well: maximal relaxation eigenvalue = 8.06801
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001932
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217015
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056064
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067712
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.225695
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.778228, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.89e+04 1.57e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.56  3.69e-19  6.67e-35
        W1b     0.643         1  2.37e-19  4.29e-35
         P1  2.71e+18  4.22e+18         1  1.81e-16
         P2   1.5e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.58  1.16e-22  2.09e-38
        W1b     0.635         1  7.34e-23  1.33e-38
         P1  8.65e+21  1.36e+22         1  1.81e-16
         P2  4.79e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.781973, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18072, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190539, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39593, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.9     0.882    0.0209     0.979
          1       250      3.41         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.421     0.882   -0.0171        -1
          1      11.8      3.41        -1    0.0171
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39837, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18775, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181323, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.97     0.478     0.042     0.958
          1      61.2      3.14         1   -0.0282
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.14     0.478   -0.0351    -0.999
          1      2.89      3.14    -0.999    0.0351
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37725, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18495, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36958, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.91      0.37    0.0583     0.942
          1      36.5      3.03         1   -0.0398
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0901      0.37   -0.0496    -0.999
          1      1.73      3.03    -0.999    0.0496
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3721, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.525699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001962, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.532487, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.26     0.295     0.077     0.923
          1      23.7      2.85         1   -0.0536
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0596     0.295   -0.0667    -0.998
          1      1.12      2.85    -0.998    0.0667
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.532855, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012365, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001952, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014362, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.868     0.243    0.0937     0.906
          1      16.5      2.57         1   -0.0664
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.041     0.243   -0.0826    -0.997
          1     0.782      2.57    -0.997    0.0826
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014387, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001544
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029314
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165402
         W1a Well: minimal relaxation eigenvalue = 0.0456433
         W1a Well: maximal relaxation eigenvalue = 22.2072
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001661
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.205494
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054546
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051517
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.215119
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.740152, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 1.02e+05 1.84e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.78  3.39e-19  1.34e-34
        W1b     0.563         1  1.91e-19  7.54e-35
         P1  2.95e+18  5.24e+18         1  3.95e-16
         P2  7.47e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.8  1.09e-22  4.32e-38
        W1b     0.556         1  6.08e-23   2.4e-38
         P1  9.15e+21  1.65e+22         1  3.95e-16
         P2  2.32e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.743869, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188081, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36642, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.1     0.939    0.0241     0.976
          1       268      4.56         1   -0.0139
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.459     0.939   -0.0185        -1
          1      12.2      4.56        -1    0.0185
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36916, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15483, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177983, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3388, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.34     0.509     0.049     0.951
          1      63.9      3.51         1    -0.029
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.509   -0.0386    -0.999
          1      2.92      3.51    -0.999    0.0386
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34115, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15376, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17854, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33828, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.13     0.394    0.0691     0.931
          1      37.1      3.36         1   -0.0418
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0974     0.394   -0.0556    -0.998
          1      1.69      3.36    -0.998    0.0556
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3406, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.647361, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001932, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.654144, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.314    0.0937     0.906
          1      23.3      3.17         1   -0.0582
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0637     0.314   -0.0773    -0.997
          1      1.06      3.17    -0.997    0.0773
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.65451, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.944     0.262     0.118     0.882
          1      15.9      2.91         1    -0.075
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0431     0.262   -0.0994    -0.995
          1     0.725      2.91    -0.995    0.0994
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013954, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00162
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000369
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029271
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158715
         W1a Well: minimal relaxation eigenvalue = 0.0463534
         W1a Well: maximal relaxation eigenvalue = 11.6786
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001722
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211344
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05616
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069518
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.218195
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.761781, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.65e+05 2.14e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.02  3.17e-19  2.65e-34
        W1b     0.496         1  1.57e-19  1.32e-34
         P1  3.15e+18  6.36e+18         1  8.37e-16
         P2  3.77e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.04  1.04e-22  8.68e-38
        W1b      0.49         1  5.08e-23  4.25e-38
         P1  9.64e+21  1.97e+22         1  8.37e-16
         P2  1.15e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.765528, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15511, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192908, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3709, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.6      1.04    0.0262     0.974
          1       297      4.08         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.49      1.04   -0.0189        -1
          1      13.8      4.08        -1    0.0189
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37332, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15925, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176707, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34193, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.56     0.565    0.0516     0.948
          1      72.4      3.71         1    -0.027
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.165     0.565   -0.0383    -0.999
          1      3.36      3.71    -0.999    0.0383
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34423, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14464, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177604, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32797, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.3      0.44    0.0707     0.929
          1      43.2      3.57         1   -0.0377
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107      0.44   -0.0535    -0.999
          1         2      3.57    -0.999    0.0535
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33028, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.633765, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001912, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.640557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.53     0.354    0.0922     0.908
          1        28      3.35         1   -0.0503
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0708     0.354   -0.0713    -0.997
          1       1.3      3.35    -0.997    0.0713
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.640924, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012009, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001909, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013963, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.296     0.111     0.889
          1      19.6      3.02         1    -0.062
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0492     0.296   -0.0877    -0.996
          1     0.908      3.02    -0.996    0.0877
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013987, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001551
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031237
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164427
         W1a Well: minimal relaxation eigenvalue = 0.0454509
         W1a Well: maximal relaxation eigenvalue = 19.3099
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001756
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211203
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056953
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063406
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.220309
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.766287, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.18e+05 2.48e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.28  2.98e-19  5.13e-34
        W1b     0.439         1  1.31e-19  2.25e-34
         P1  3.36e+18  7.66e+18         1  1.72e-15
         P2  1.95e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.31  9.87e-23   1.7e-37
        W1b     0.433         1  4.27e-23  7.36e-38
         P1  1.01e+22  2.34e+22         1  1.72e-15
         P2  5.88e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.770032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16663, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39554, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.9      1.08    0.0299      0.97
          1       322      4.72         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.539      1.08   -0.0204        -1
          1      14.6      4.72        -1    0.0204
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39801, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16826, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35291, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.96     0.593    0.0589     0.941
          1      76.9      4.06         1   -0.0275
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.18     0.593   -0.0414    -0.999
          1      3.49      4.06    -0.999    0.0414
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16654, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.179778, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35237, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55     0.465     0.081     0.919
          1      45.1       3.9         1   -0.0387
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.465   -0.0583    -0.998
          1      2.05       3.9    -0.998    0.0583
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35474, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.583723, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.001921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.590555, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.68     0.376     0.107     0.893
          1      28.6      3.68         1   -0.0525
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0765     0.376    -0.079    -0.997
          1       1.3      3.68    -0.997     0.079
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.590926, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012121, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001925, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.16     0.318     0.131     0.869
          1      19.7      3.34         1   -0.0659
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0526     0.318    -0.099    -0.995
          1     0.897      3.34    -0.995     0.099
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014118, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001476
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029769
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162427
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 16.6298
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001636
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.202929
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052763
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061136
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.212715
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.739975, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.49e+05 2.88e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.57  2.76e-19  9.54e-34
        W1b      0.39         1  1.08e-19  3.72e-34
         P1  3.62e+18  9.28e+18         1  3.45e-15
         P2  1.05e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.6  9.42e-23  3.25e-37
        W1b     0.385         1  3.62e-23  1.25e-37
         P1  1.06e+22  2.76e+22         1  3.45e-15
         P2  3.08e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.743987, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12418, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198204, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        13      1.14    0.0332     0.967
          1       353      4.98         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.588      1.14   -0.0214        -1
          1        16      4.98        -1    0.0214
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33621, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12749, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173961, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3071, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.33     0.635    0.0641     0.936
          1        85      4.37         1   -0.0267
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.197     0.635   -0.0427    -0.999
          1      3.85      4.37    -0.999    0.0427
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174164, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3088, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.79     0.502    0.0868     0.913
          1      50.2       4.2         1    -0.037
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.502   -0.0592    -0.998
          1      2.28       4.2    -0.998    0.0592
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31112, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.743924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001865, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.750593, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.85     0.409     0.112     0.888
          1      32.2      3.94         1   -0.0494
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0841     0.409   -0.0788    -0.997
          1      1.46      3.94    -0.997    0.0788
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.750957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011718, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013615, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.29     0.348     0.135     0.865
          1      22.4      3.56         1    -0.061
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0583     0.348   -0.0972    -0.995
          1      1.01      3.56    -0.995    0.0972
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013638, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001593
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000364
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032489
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163636
         W1a Well: minimal relaxation eigenvalue = 0.0453442
         W1a Well: maximal relaxation eigenvalue = 9.77346
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001602
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193411
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05367
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070374
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.214144
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.745988, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265    1e+05 3.34e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.88  2.61e-19  1.76e-33
        W1b     0.348         1  9.07e-20  6.11e-34
         P1  3.83e+18   1.1e+19         1  6.73e-15
         P2  5.69e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.91  9.01e-23  6.07e-37
        W1b     0.343         1  3.09e-23  2.08e-37
         P1  1.11e+22  3.23e+22         1  6.73e-15
         P2  1.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.749739, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184769, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34153, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.2      1.21    0.0366     0.963
          1       391      5.05         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.642      1.21   -0.0224        -1
          1      17.7      5.05        -1    0.0224
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.34397, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30794, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.74     0.683    0.0683     0.932
          1      95.8      4.69         1   -0.0255
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.215     0.683   -0.0432    -0.999
          1      4.34      4.69    -0.999    0.0432
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31029, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13017, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173876, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.07     0.546    0.0902      0.91
          1      57.6      4.48         1   -0.0345
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.546   -0.0583    -0.998
          1      2.61      4.48    -0.998    0.0583
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31203, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.729293, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001864, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.735957, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.06      0.45     0.114     0.886
          1      37.7      4.17         1   -0.0445
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0935      0.45   -0.0753    -0.997
          1      1.71      4.17    -0.997    0.0753
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.736333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001845, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.45     0.385     0.133     0.867
          1      26.6      3.73         1   -0.0533
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0659     0.385   -0.0901    -0.996
          1      1.21      3.73    -0.996    0.0901
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013702, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.0016
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000365
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029966
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15954
         W1a Well: minimal relaxation eigenvalue = 0.0446386
         W1a Well: maximal relaxation eigenvalue = 17.2723
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001881
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.196923
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053311
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072711
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.216378
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.747144, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.63e+05 3.86e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.21  2.47e-19  3.17e-33
        W1b     0.312         1   7.7e-20  9.87e-34
         P1  4.05e+18   1.3e+19         1  1.28e-14
         P2  3.16e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  8.64e-23  1.11e-36
        W1b     0.308         1  2.66e-23  3.41e-37
         P1  1.16e+22  3.76e+22         1  1.28e-14
         P2  9.02e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.750687, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14438, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187494, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35769, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.3      1.33    0.0397      0.96
          1       421      5.85         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.681      1.33    -0.023        -1
          1      18.8      5.85        -1     0.023
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36012, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14026, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177276, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.14     0.742    0.0754     0.925
          1       101      5.12         1   -0.0254
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.229     0.742   -0.0455    -0.999
          1      4.51      5.12    -0.999    0.0455
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32609, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14301, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176145, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3251, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.33     0.589     0.101     0.899
          1      59.7       4.9         1   -0.0349
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.148     0.589   -0.0625    -0.998
          1      2.66       4.9    -0.998    0.0625
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32741, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.680873, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001885, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.687612, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.22     0.484     0.129     0.871
          1      38.2      4.59         1   -0.0461
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0992     0.484   -0.0824    -0.997
          1      1.71      4.59    -0.997    0.0824
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.687978, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001881, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01378, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.55     0.415     0.154     0.846
          1      26.6      4.14         1   -0.0566
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0694     0.415    -0.101    -0.995
          1      1.19      4.14    -0.995     0.101
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013808, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001566
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030841
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162067
         W1a Well: minimal relaxation eigenvalue = 0.0445813
         W1a Well: maximal relaxation eigenvalue = 12.4447
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001728
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191381
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051891
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064306
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21089
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.72962, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 9.28e+04 4.45e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  2.31e-19  5.52e-33
        W1b      0.28         1  6.48e-20  1.55e-33
         P1  4.32e+18  1.54e+19         1  2.39e-14
         P2  1.81e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.61  8.31e-23  1.98e-36
        W1b     0.277         1   2.3e-23  5.49e-37
         P1   1.2e+22  4.35e+22         1  2.39e-14
         P2  5.04e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.733359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10394, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193268, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3092, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.9      1.36    0.0442     0.956
          1       464      5.95         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.753      1.36   -0.0245        -1
          1      20.7      5.95        -1    0.0245
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31164, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10552, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170449, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28159, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.66      0.78     0.081     0.919
          1       113      5.48         1   -0.0247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252      0.78   -0.0466    -0.999
          1      5.03      5.48    -0.999    0.0466
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28391, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170308, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28341, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.67     0.628     0.106     0.894
          1      67.7      5.24         1   -0.0332
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.164     0.628   -0.0625    -0.998
          1      3.02      5.24    -0.998    0.0625
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28572, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816346, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001825, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.822869, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.47     0.523     0.132     0.868
          1      44.1      4.87         1   -0.0426
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.523   -0.0803    -0.997
          1      1.97      4.87    -0.997    0.0803
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.823241, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011456, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001827, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013327, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.75     0.452     0.154     0.846
          1      31.1      4.34         1   -0.0509
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0779     0.452   -0.0957    -0.995
          1      1.39      4.34    -0.995    0.0957
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013351, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001598
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000361
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031967
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158569
         W1a Well: minimal relaxation eigenvalue = 0.0436457
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001604
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199893
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051873
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063099
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20871
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.732166, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.56e+05 5.12e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.96   2.2e-19  9.57e-33
        W1b     0.253         1  5.57e-20  2.42e-33
         P1  4.54e+18   1.8e+19         1  4.35e-14
         P2  1.04e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         4  8.01e-23  3.48e-36
        W1b      0.25         1     2e-23  8.69e-37
         P1  1.25e+22     5e+22         1  4.35e-14
         P2  2.87e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.735886, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11039, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.181839, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.7      1.44    0.0487     0.951
          1       500      7.09         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.816      1.44   -0.0258        -1
          1      21.8      7.09        -1    0.0258
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17118, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.23     0.824    0.0907     0.909
          1       119         6         1   -0.0252
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.824   -0.0501    -0.999
          1      5.19         6    -0.999    0.0501
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29199, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172102, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29015, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.02     0.663      0.12      0.88
          1      69.5      5.73         1   -0.0345
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.176     0.663   -0.0686    -0.998
          1      3.03      5.73    -0.998    0.0686
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29245, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799823, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.806415, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.68     0.553     0.153     0.847
          1        44      5.36         1   -0.0456
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.117     0.553   -0.0904    -0.996
          1      1.92      5.36    -0.996    0.0904
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.806779, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011519, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013399, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.87     0.482     0.182     0.818
          1      30.3      4.84         1   -0.0562
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0815     0.482    -0.111    -0.994
          1      1.32      4.84    -0.994     0.111
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013423, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001491
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034463
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1576
         W1a Well: minimal relaxation eigenvalue = 0.0438766
         W1a Well: maximal relaxation eigenvalue = 13.9334
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001656
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192649
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051159
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069015
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.197854
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.720923, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 9.28e+04 5.89e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  2.07e-19  1.61e-32
        W1b     0.229         1  4.75e-20  3.68e-33
         P1  4.82e+18  2.11e+19         1  7.75e-14
         P2  6.22e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  7.74e-23     6e-36
        W1b     0.226         1  1.75e-23  1.36e-36
         P1  1.29e+22  5.72e+22         1  7.75e-14
         P2  1.67e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.724599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188913, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27632, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.1      1.53    0.0526     0.947
          1       552         7         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.883      1.53   -0.0265        -1
          1      24.2         7        -1    0.0265
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16781, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25757, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.74     0.886    0.0945     0.905
          1       134      6.41         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.296     0.886   -0.0499    -0.999
          1      5.87      6.41    -0.999    0.0499
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08363, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167915, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25727, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.38     0.718     0.122     0.878
          1        80       6.1         1   -0.0318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.718   -0.0664    -0.998
          1      3.51       6.1    -0.998    0.0664
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25981, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.904712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914235, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.96     0.604     0.151     0.849
          1        52      5.65         1   -0.0407
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.13     0.604   -0.0847    -0.996
          1      2.28      5.65    -0.996    0.0847
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914609, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011215, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.0018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013059, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.1     0.527     0.175     0.825
          1      36.5      5.03         1   -0.0484
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0921     0.527    -0.101    -0.995
          1       1.6      5.03    -0.995     0.101
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013083, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001519
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000358
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028096
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161748
         W1a Well: minimal relaxation eigenvalue = 0.0413519
         W1a Well: maximal relaxation eigenvalue = 26.2311
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00175
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204867
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051804
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066144
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200339
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.730824, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.57e+05 6.76e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.81  1.98e-19  2.69e-32
        W1b     0.208         1  4.12e-20  5.59e-33
         P1  5.04e+18  2.42e+19         1  1.35e-13
         P2  3.72e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.87  7.49e-23  1.01e-35
        W1b     0.205         1  1.54e-23  2.08e-36
         P1  1.34e+22   6.5e+22         1  1.35e-13
         P2  9.86e+34   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.734548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08695, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177041, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28575, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      23.1      1.62    0.0578     0.942
          1       606      10.1         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.956      1.62    -0.028        -1
          1      25.1      10.1        -1     0.028
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28851, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0876, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26165, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.68      0.93     0.107     0.893
          1       142      7.07         1    -0.025
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.318      0.93   -0.0548    -0.998
          1      5.88      7.07    -0.998    0.0548
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0887, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168027, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26251, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.94     0.751     0.143     0.857
          1      81.3      6.72         1   -0.0346
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.204     0.751   -0.0757    -0.997
          1      3.36      6.72    -0.997    0.0757
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26479, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.891022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003439, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.26     0.632     0.183     0.817
          1      50.1       6.3         1   -0.0466
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.135     0.632    -0.102    -0.995
          1      2.07       6.3    -0.995     0.102
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899586, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011358, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001779, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013185, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.25      0.56     0.221     0.779
          1      33.5      5.73         1   -0.0589
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0928      0.56    -0.128    -0.992
          1      1.39      5.73    -0.992     0.128
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01321, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001595
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000352
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031111
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161276
         W1a Well: minimal relaxation eigenvalue = 0.0432471
         W1a Well: maximal relaxation eigenvalue = 14.6962
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00184
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191632
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051075
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058117
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.204767
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.715963, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 9.79e+04 7.75e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.27   1.9e-19  4.42e-32
        W1b      0.19         1   3.6e-20  8.37e-33
         P1  5.26e+18  2.78e+19         1  2.32e-13
         P2  2.26e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.34  7.26e-23  1.69e-35
        W1b     0.187         1  1.36e-23  3.16e-36
         P1  1.38e+22  7.36e+22         1  2.32e-13
         P2  5.93e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.719994, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09522, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180712, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30234, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      23.6      1.75    0.0608     0.939
          1       657      8.12         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.02      1.75   -0.0282        -1
          1      28.4      8.12        -1    0.0282
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30478, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10036, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169945, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27608, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.93      1.01     0.108     0.892
          1       159      7.44         1   -0.0229
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.343      1.01   -0.0525    -0.999
          1      6.86      7.44    -0.999    0.0525
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27841, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10026, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170277, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27636, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.17     0.826     0.138     0.862
          1      94.6      7.07         1   -0.0303
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.826   -0.0695    -0.998
          1      4.09      7.07    -0.998    0.0695
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27868, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.841238, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00187, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.8478, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.51     0.698     0.169     0.831
          1      61.4      6.54         1   -0.0385
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.698    -0.088    -0.996
          1      2.65      6.54    -0.996     0.088
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.848163, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011392, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.5     0.613     0.194     0.806
          1      43.1      5.79         1   -0.0456
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.108     0.613    -0.104    -0.995
          1      1.86      5.79    -0.995     0.104
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013274, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001427
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028899
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15571
         W1a Well: minimal relaxation eigenvalue = 0.043148
         W1a Well: maximal relaxation eigenvalue = 9.68424
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001759
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.196848
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051166
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058022
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201902
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.710557, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.69e+05 8.86e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.77   1.8e-19  7.06e-32
        W1b     0.173         1  3.12e-20  1.22e-32
         P1  5.55e+18   3.2e+19         1  3.92e-13
         P2  1.42e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.84  7.05e-23  2.76e-35
        W1b     0.171         1  1.21e-23  4.73e-36
         P1  1.42e+22  8.29e+22         1  3.92e-13
         P2  3.62e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.714057, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06791, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26902, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.5      1.87    0.0647     0.935
          1       720      8.69         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.1      1.87   -0.0288        -1
          1      31.1      8.69        -1    0.0288
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27158, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06763, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165155, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23823, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       8.6      1.09     0.112     0.888
          1       178      7.97         1   -0.0218
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.371      1.09   -0.0522    -0.999
          1      7.68      7.97    -0.999    0.0522
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24055, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06949, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16534, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24092, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.65     0.893      0.14      0.86
          1       108      7.53         1   -0.0282
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.244     0.893   -0.0675    -0.998
          1      4.67      7.53    -0.998    0.0675
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24323, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.945501, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.009214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.959414, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.87     0.759     0.167     0.833
          1      71.5      6.89         1   -0.0348
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.167     0.759   -0.0834    -0.997
          1      3.08      6.89    -0.997    0.0834
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011083, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001738, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012863, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.8     0.667     0.188     0.812
          1      50.9      6.02         1   -0.0402
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.121     0.667   -0.0962    -0.995
          1      2.19      6.02    -0.995    0.0962
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012887, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001579
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000356
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02905
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157717
         W1a Well: minimal relaxation eigenvalue = 0.0426313
         W1a Well: maximal relaxation eigenvalue = 15.4781
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001677
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.185826
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050006
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059736
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.202368
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.701771, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 1.04e+05 1.01e+15
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.3  1.73e-19  1.12e-31
        W1b     0.159         1  2.75e-20  1.79e-32
         P1  5.77e+18  3.63e+19         1  6.49e-13
         P2  8.89e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.38  6.86e-23  4.45e-35
        W1b     0.157         1  1.08e-23  6.99e-36
         P1  1.46e+22  9.29e+22         1  6.49e-13
         P2  2.24e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.705732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07481, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.188211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27536, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.1      1.94    0.0707     0.929
          1       781      9.49         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.2      1.94   -0.0303        -1
          1      33.3      9.49        -1    0.0303
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27778, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0756, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166389, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24752, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       9.4      1.14     0.123     0.877
          1       188      8.66         1   -0.0222
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.401      1.14   -0.0556    -0.998
          1      8.02      8.66    -0.998    0.0556
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24983, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07479, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166264, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24678, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.13     0.934     0.155     0.845
          1       112       8.2         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.262     0.934    -0.073    -0.997
          1      4.78       8.2    -0.997     0.073
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.921472, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933226, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.17     0.797     0.188     0.812
          1      72.4      7.54         1   -0.0368
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.178     0.797   -0.0919    -0.996
          1      3.09      7.54    -0.996    0.0919
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001774, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012973, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.98     0.706     0.215     0.785
          1      50.7      6.65         1   -0.0434
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.706    -0.108    -0.994
          1      2.16      6.65    -0.994     0.108
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012997, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001486
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000349
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027512
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.155768
         W1a Well: minimal relaxation eigenvalue = 0.0406043
         W1a Well: maximal relaxation eigenvalue = 25.4688
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001832
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.191556
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049584
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04819
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196972
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.68734, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.78e+04 1.15e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.85  1.65e-19  1.75e-31
        W1b     0.146         1  2.41e-20  2.55e-32
         P1  6.06e+18  4.15e+19         1  1.06e-12
         P2  5.72e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.94  6.68e-23  7.08e-35
        W1b     0.144         1  9.63e-24  1.02e-35
         P1   1.5e+22  1.04e+23         1  1.06e-12
         P2  1.41e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.691043, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05007, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186624, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25752, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.8      2.04    0.0764     0.924
          1       848      12.9         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.29      2.04   -0.0316        -1
          1      34.4      12.9        -1    0.0316
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25997, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05289, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.6      1.19     0.136     0.864
          1       200      9.52         1    -0.023
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.429      1.19   -0.0602    -0.998
          1       8.1      9.52    -0.998    0.0602
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22394, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22035, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.82     0.976     0.177     0.823
          1       115      9.01         1   -0.0313
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.277     0.976   -0.0817    -0.997
          1      4.65      9.01    -0.997    0.0817
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22266, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.989198, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01427, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00814, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.53     0.835     0.221     0.779
          1      70.8      8.39         1   -0.0414
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.184     0.835    -0.108    -0.994
          1      2.87      8.39    -0.994     0.108
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00857, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011442, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001752, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013338, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.15     0.751     0.261     0.739
          1      47.4      7.53         1   -0.0515
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.128     0.751    -0.134    -0.991
          1      1.92      7.53    -0.991     0.134
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013371, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001468
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.18732
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156349
         W1a Well: minimal relaxation eigenvalue = 0.042072
         W1a Well: maximal relaxation eigenvalue = 15.9099
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001735
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19093
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049098
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065424
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201081
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.867666, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.2e+05 1.32e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.43  1.59e-19  2.71e-31
        W1b     0.135         1  2.14e-20  3.64e-32
         P1  6.28e+18  4.67e+19         1   1.7e-12
         P2  3.69e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.53  6.52e-23  1.11e-34
        W1b     0.133         1  8.66e-24  1.47e-35
         P1  1.53e+22  1.15e+23         1   1.7e-12
         P2  9.02e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.87136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186404, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24482, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      33.2      2.15    0.0807     0.919
          1       933        11         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       1.4      2.15   -0.0322    -0.999
          1      39.3        11    -0.999    0.0322
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24726, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05201, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163275, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22089, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.1      1.27     0.137     0.863
          1       224      9.96         1   -0.0214
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.467      1.27   -0.0584    -0.998
          1      9.43      9.96    -0.998    0.0584
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22327, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05624, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2261, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.25      1.05     0.172     0.828
          1       133      9.41         1    -0.028
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.305      1.05    -0.076    -0.997
          1       5.6      9.41    -0.997     0.076
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22839, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.991063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.014738, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.94     0.907     0.207     0.793
          1      85.9      8.63         1    -0.035
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.208     0.907   -0.0951    -0.995
          1      3.61      8.63    -0.995    0.0951
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01092, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011757, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013684, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.55     0.808     0.234     0.766
          1      59.9      7.57         1   -0.0411
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.149     0.808    -0.111    -0.994
          1      2.52      7.57    -0.994     0.111
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013721, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001517
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029384
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156066
         W1a Well: minimal relaxation eigenvalue = 0.0420327
         W1a Well: maximal relaxation eigenvalue = 10.5703
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001693
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.189702
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050525
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059292
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196169
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.697963, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 6.71e+04  1.5e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.05  1.54e-19  4.14e-31
        W1b     0.124         1  1.91e-20  5.14e-32
         P1   6.5e+18  5.23e+19         1  2.69e-12
         P2  2.42e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.15  6.37e-23  1.72e-34
        W1b     0.123         1  7.82e-24   2.1e-35
         P1  1.57e+22  1.28e+23         1  2.69e-12
         P2  5.83e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.70162, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05487, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173543, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        36      2.26    0.0855     0.915
          1  1.01e+03      11.7         1   -0.0116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.51      2.26   -0.0329    -0.999
          1      42.6      11.7    -0.999    0.0329
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25648, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163478, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.1      1.36     0.141     0.859
          1       251      10.6         1   -0.0204
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.508      1.36   -0.0578    -0.998
          1      10.5      10.6    -0.998    0.0578
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2263, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.05515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163141, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22394, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.94      1.13     0.173     0.827
          1       152      9.95         1    -0.026
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.334      1.13   -0.0735    -0.997
          1       6.4      9.95    -0.997    0.0735
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22663, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.987161, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.013854, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00566, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.48     0.978     0.203     0.797
          1       101      9.02         1   -0.0315
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.23     0.978   -0.0892    -0.996
          1      4.23      9.02    -0.996    0.0892
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00608, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011423, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001737, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         4     0.871     0.225     0.775
          1      71.4      7.78         1    -0.036
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.871    -0.102    -0.995
          1         3      7.78    -0.995     0.102
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013336, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001402
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028445
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156553
         W1a Well: minimal relaxation eigenvalue = 0.0416422
         W1a Well: maximal relaxation eigenvalue = 13.8216
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001651
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184401
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048545
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071591
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.191807
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698299, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.47e+05  1.7e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.7  1.47e-19  6.18e-31
        W1b     0.115         1  1.69e-20  7.11e-32
         P1  6.79e+18  5.91e+19         1   4.2e-12
         P2  1.62e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  6.24e-23  2.62e-34
        W1b     0.114         1  7.08e-24  2.98e-35
         P1   1.6e+22  1.41e+23         1   4.2e-12
         P2  3.82e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.701802, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18126, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24026, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      37.9      2.51    0.0887     0.911
          1   1.1e+03      12.7         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.58      2.51    -0.033    -0.999
          1      45.7      12.7    -0.999     0.033
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03413, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.8      1.48     0.148     0.852
          1       266      11.5         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.533      1.48   -0.0589    -0.998
          1      11.1      11.5    -0.998    0.0589
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20283, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03689, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160741, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20336, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.42      1.22     0.183     0.817
          1       160      10.8         1   -0.0258
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.351      1.22   -0.0758    -0.997
          1      6.65      10.8    -0.997    0.0758
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20568, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03435, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.022127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.79      1.05     0.217     0.783
          1       104      9.84         1   -0.0319
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.241      1.05   -0.0935    -0.996
          1      4.32      9.84    -0.996    0.0935
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06204, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014408, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00172, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016372, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.21     0.936     0.243     0.757
          1      72.8      8.54         1   -0.0369
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.175     0.936    -0.108    -0.994
          1      3.03      8.54    -0.994     0.108
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016416, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001554
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000396
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.033585
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15394
         W1a Well: minimal relaxation eigenvalue = 0.039915
         W1a Well: maximal relaxation eigenvalue = 24.9138
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001879
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17621
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048519
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06044
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.192892
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.682902, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 8.22e+04 1.93e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.37  1.43e-19  9.23e-31
        W1b     0.107         1  1.52e-20  9.85e-32
         P1  7.01e+18  6.57e+19         1  6.47e-12
         P2  1.08e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.49  6.11e-23  3.95e-34
        W1b     0.105         1  6.44e-24  4.16e-35
         P1  1.64e+22  1.55e+23         1  6.47e-12
         P2  2.53e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.686553, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04142, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174751, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24185, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      43.4      2.55    0.0973     0.903
          1  1.21e+03      14.3         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.73      2.55   -0.0352    -0.999
          1      48.3      14.3    -0.999    0.0352
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24426, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04597, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162175, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.4      1.51     0.166     0.834
          1       281      12.6         1   -0.0213
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.575      1.51   -0.0651    -0.998
          1      11.2      12.6    -0.998    0.0651
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21613, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162141, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21307, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.32      1.25      0.21      0.79
          1       161      11.9         1   -0.0284
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.372      1.25   -0.0867    -0.996
          1      6.44      11.9    -0.996    0.0867
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21564, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0188, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016244, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03969, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.24      1.08     0.257     0.743
          1      99.8        11         1   -0.0369
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249      1.08    -0.112    -0.994
          1      3.98        11    -0.994     0.112
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04016, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012805, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00171, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014732, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.38     0.986     0.298     0.702
          1      66.8      9.76         1   -0.0453
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.175     0.986    -0.137    -0.991
          1      2.66      9.76    -0.991     0.137
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014771, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001398
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000363
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032474
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.156438
         W1a Well: minimal relaxation eigenvalue = 0.0411961
         W1a Well: maximal relaxation eigenvalue = 12.7339
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001678
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.18301
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048213
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06513
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.187452
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.689317, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.89e+05 2.18e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.37e-19  1.35e-30
        W1b    0.0992         1  1.36e-20  1.34e-31
         P1   7.3e+18  7.35e+19         1  9.83e-12
         P2  7.42e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2     6e-23  5.89e-34
        W1b     0.098         1  5.87e-24  5.78e-35
         P1  1.67e+22   1.7e+23         1  9.83e-12
         P2   1.7e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.693047, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01339, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20467, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      45.6      2.66     0.101     0.899
          1   1.3e+03      14.7         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.88      2.66   -0.0354    -0.999
          1      53.7      14.7    -0.999    0.0354
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20712, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01387, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158077, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1775, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.3      1.61     0.164     0.836
          1       320      13.2         1   -0.0195
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.629      1.61   -0.0617    -0.998
          1      13.2      13.2    -0.998    0.0617
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17986, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01215, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157093, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17454, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.1      1.35     0.199     0.801
          1       193      12.3         1   -0.0247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.414      1.35   -0.0781    -0.997
          1      7.94      12.3    -0.997    0.0781
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17688, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01374, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122605, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14143, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.94      1.18     0.232     0.768
          1       126      11.1         1     -0.03
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.286      1.18   -0.0948    -0.995
          1      5.19      11.1    -0.995    0.0948
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14206, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.024345, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001669, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.026405, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.08      1.06     0.257     0.743
          1      88.4      9.49         1   -0.0343
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.209      1.06    -0.108    -0.994
          1      3.64      9.49    -0.994     0.108
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.026465, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001497
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000344
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029029
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161063
         W1a Well: minimal relaxation eigenvalue = 0.0400853
         W1a Well: maximal relaxation eigenvalue = 22.7706
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001656
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.167372
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046866
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.078231
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196733
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.696335, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 1.05e+05 2.47e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.33e-19  1.97e-30
        W1b    0.0924         1  1.23e-20  1.82e-31
         P1  7.51e+18  8.12e+19         1  1.48e-11
         P2  5.09e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11  5.89e-23  8.69e-34
        W1b    0.0913         1  5.38e-24  7.94e-35
         P1   1.7e+22  1.86e+23         1  1.48e-11
         P2  1.15e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.700367, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.017, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168011, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19928, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      50.5      2.79     0.108     0.892
          1  1.43e+03      16.1         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.02      2.79   -0.0369    -0.999
          1      57.4      16.1    -0.999    0.0369
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20171, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02222, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159761, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18753, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.7      1.67     0.181     0.819
          1       334      14.3         1   -0.0204
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.67      1.67   -0.0669    -0.998
          1      13.4      14.3    -0.998    0.0669
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18988, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01944, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158145, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18287, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.8       1.4     0.225     0.775
          1       193      13.4         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.435       1.4   -0.0878    -0.996
          1      7.74      13.4    -0.996    0.0878
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18519, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02323, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.09547, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1238, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.31      1.23      0.27      0.73
          1       120      12.3         1   -0.0342
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.293      1.23    -0.112    -0.994
          1      4.82      12.3    -0.994     0.112
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12437, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.022207, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001699, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.024263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.2      1.12     0.308     0.692
          1      81.1      10.8         1   -0.0412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.208      1.12    -0.134    -0.991
          1      3.25      10.8    -0.991     0.134
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.024318, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001473
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000349
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029924
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.165117
         W1a Well: minimal relaxation eigenvalue = 0.0406634
         W1a Well: maximal relaxation eigenvalue = 14.244
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00166
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.179712
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047451
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079608
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.194201
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.71293, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.81e+05 2.79e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6   1.3e-19  2.84e-30
        W1b    0.0863         1  1.12e-20  2.45e-31
         P1  7.71e+18  8.94e+19         1  2.19e-11
         P2  3.52e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.7  5.79e-23  1.27e-33
        W1b    0.0852         1  4.93e-24  1.08e-34
         P1  1.73e+22  2.03e+23         1  2.19e-11
         P2  7.88e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.716532, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02181, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180405, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22147, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      51.9      3.11     0.109     0.891
          1  1.53e+03        17         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.11      3.11   -0.0361    -0.999
          1      62.2        17    -0.999    0.0361
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2239, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.903154, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06759, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.5      1.85     0.177     0.823
          1       372      15.2         1   -0.0185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.71      1.85   -0.0629    -0.998
          1      15.1      15.2    -0.998    0.0629
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07003, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159612, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.5      1.55     0.214     0.786
          1       223      14.2         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.468      1.55   -0.0798    -0.997
          1      9.05      14.2    -0.997    0.0798
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159626, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18815, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.97      1.35     0.249     0.751
          1       145      12.8         1   -0.0287
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.324      1.35   -0.0972    -0.995
          1      5.88      12.8    -0.995    0.0972
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19075, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.038439, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001709, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04457, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.84      1.21     0.276     0.724
          1       101      10.9         1   -0.0329
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.238      1.21    -0.111    -0.994
          1       4.1      10.9    -0.994     0.111
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.044938, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001502
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00034
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027961
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162043
         W1a Well: minimal relaxation eigenvalue = 0.0383822
         W1a Well: maximal relaxation eigenvalue = 17.6661
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001844
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.166418
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.045307
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069404
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.192684
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.680765, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301  6.4e+04 8.84e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        21  1.01e-19  6.62e-29
        W1b    0.0476         1  4.78e-21  3.15e-30
         P1  9.95e+18  2.09e+20         1  6.58e-10
         P2  1.51e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      21.3  5.14e-23  3.38e-32
        W1b     0.047         1  2.41e-24  1.59e-33
         P1  1.95e+22  4.14e+23         1  6.58e-10
         P2  2.96e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.684768, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.980151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16856, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       113      4.91     0.169     0.831
          1  3.42e+03      33.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.35      4.91   -0.0442    -0.999
          1       131      33.1    -0.999    0.0442
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.978195, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.152487, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13605, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      37.4      3.05     0.253     0.747
          1       818      28.8         1   -0.0161
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.44      3.05   -0.0738    -0.997
          1      31.4      28.8    -0.997    0.0738
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13863, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.980081, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151827, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13712, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      24.6      2.61     0.297     0.703
          1       482      26.4         1   -0.0201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.946      2.61    -0.092    -0.996
          1      18.5      26.4    -0.996     0.092
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13942, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.979615, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.152312, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.13733, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      17.1      2.33     0.338     0.662
          1       305      23.1         1   -0.0243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.655      2.33    -0.111    -0.994
          1      11.7      23.1    -0.994     0.111
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.13966, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.132884, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001613, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.138766, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.6      2.14     0.369     0.631
          1       206      18.8         1   -0.0279
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.482      2.14    -0.127    -0.992
          1      7.89      18.8    -0.992     0.127
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.139129, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001412
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000333
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02912
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157997
         W1a Well: minimal relaxation eigenvalue = 0.0368009
         W1a Well: maximal relaxation eigenvalue = 14.9793
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001912
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.168034
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.042497
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.068443
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.180607
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.663458, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.47e+05 2.53e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.5  8.47e-20  7.81e-28
        W1b    0.0298         1  2.53e-21  2.33e-29
         P1  1.18e+19  3.96e+20         1  9.23e-09
         P2  1.28e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.9  4.87e-23   4.5e-31
        W1b    0.0295         1  1.44e-24  1.33e-32
         P1  2.05e+22  6.96e+23         1  9.23e-09
         P2  2.22e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.667174, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.925886, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.160921, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1097, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       233      7.77     0.223     0.777
          1  7.24e+03      58.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.58      7.77   -0.0496    -0.999
          1       267      58.5    -0.999    0.0496
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11207, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.935459, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146864, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08766, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      76.8         5     0.311     0.689
          1  1.75e+03      48.3         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.83         5   -0.0776    -0.997
          1      64.4      48.3    -0.997    0.0776
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09002, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.93621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146542, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08807, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        51      4.36     0.352     0.648
          1  1.03e+03      42.3         1   -0.0162
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.88      4.36   -0.0933    -0.996
          1        38      42.3    -0.996    0.0933
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09039, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.935479, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146055, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08664, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        36      3.93     0.387     0.613
          1       646      34.5         1   -0.0188
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.32      3.93    -0.108    -0.994
          1      23.8      34.5    -0.994     0.108
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.08894, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.346392, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001545, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.35212, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        27      3.61     0.413     0.587
          1       421      25.3         1    -0.021
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.993      3.61    -0.121    -0.993
          1      15.5      25.3    -0.993     0.121
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.352489, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001318
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000328
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02913
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152165
         W1a Well: minimal relaxation eigenvalue = 0.0349897
         W1a Well: maximal relaxation eigenvalue = 20.7817
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001919
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153043
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041291
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050624
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.180994
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.62337, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.22e+05 6.65e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      48.8  7.54e-20  5.72e-27
        W1b    0.0205         1  1.55e-21  1.17e-28
         P1  1.33e+19  6.47e+20         1  7.59e-08
         P2  1.75e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      49.4  4.82e-23  3.66e-30
        W1b    0.0203         1  9.77e-25  7.42e-32
         P1  2.07e+22  1.02e+24         1  7.59e-08
         P2  2.73e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.626776, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.913197, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150368, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.08622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       437      13.5     0.261     0.739
          1   1.4e+04      94.2         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      15.3      13.5   -0.0505    -0.999
          1       488      94.2    -0.999    0.0505
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00255232
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000729, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.09105, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.914371, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06283, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       140      8.53     0.352     0.648
          1  3.21e+03      74.4         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       4.9      8.53   -0.0775    -0.997
          1       112      74.4    -0.997    0.0775
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06522, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.914381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143436, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06303, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      91.8      7.38     0.397     0.603
          1  1.81e+03      63.6         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.21      7.38   -0.0937    -0.996
          1      63.2      63.6    -0.996    0.0937
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.913454, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142844, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06144, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      63.8      6.64     0.438     0.562
          1  1.07e+03      50.2         1    -0.016
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.23      6.64    -0.111    -0.994
          1      37.4      50.2    -0.994     0.111
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06372, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.443548, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001531, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.449181, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      47.2      6.11     0.472     0.528
          1       653        35         1   -0.0183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.65      6.11    -0.127    -0.992
          1      22.8        35    -0.992     0.127
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.449549, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001409
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000336
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028332
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.143019
         W1a Well: minimal relaxation eigenvalue = 0.0334303
         W1a Well: maximal relaxation eigenvalue = 23.764
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001915
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.145664
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040791
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.07258
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.176837
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.623024, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237  1.4e+05 1.63e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      66.3  6.97e-20  2.96e-26
        W1b    0.0151         1  1.05e-21  4.46e-28
         P1  1.43e+19  9.52e+20         1  4.24e-07
         P2  3.38e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      67.2  4.91e-23  2.08e-29
        W1b    0.0149         1  7.31e-25   3.1e-31
         P1  2.04e+22  1.37e+24         1  4.24e-07
         P2   4.8e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.626622, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.889128, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05902, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       880      19.5     0.314     0.686
          1  2.45e+04       118         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.4      19.5   -0.0561    -0.998
          1       818       118    -0.998    0.0561
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00314766
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000793, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.88656, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138841, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03056, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       278      12.8      0.41      0.59
          1  5.48e+03      88.5         1   -0.0105
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.31      12.8   -0.0851    -0.996
          1       183      88.5    -0.996    0.0851
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03298, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.887799, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03219, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       182      11.3     0.457     0.543
          1  3.01e+03      72.2         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.07      11.3    -0.103    -0.995
          1       100      72.2    -0.995     0.103
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03456, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.887766, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03163, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       125      10.4     0.501     0.499
          1   1.7e+03      53.1         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.19      10.4    -0.122    -0.993
          1      56.9      53.1    -0.993     0.122
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03396, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.562379, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001477, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.567885, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      92.1      9.78     0.538     0.462
          1       981      33.7         1   -0.0176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.08      9.78    -0.142     -0.99
          1      32.8      33.7     -0.99     0.142
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.568255, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001369
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000319
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028139
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.141977
         W1a Well: minimal relaxation eigenvalue = 0.0324287
         W1a Well: maximal relaxation eigenvalue = 23.6011
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00213
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.145268
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040444
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.05644
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.164505
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.592848, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 2.31e+04 3.74e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.8  6.63e-20  1.18e-25
        W1b    0.0117         1  7.73e-22  1.37e-27
         P1  1.51e+19  1.29e+21         1  1.78e-06
         P2   8.5e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      86.9   5.1e-23  9.05e-29
        W1b    0.0115         1  5.87e-25  1.04e-30
         P1  1.96e+22   1.7e+24         1  1.78e-06
         P2  1.11e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.596433, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.843081, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.156768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+03      30.3     0.352     0.648
          1  3.71e+04       121         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        53      30.3   -0.0585    -0.998
          1   1.2e+03       121    -0.998    0.0585
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00342254
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00882, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.864799, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13656, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00645, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       512      20.2     0.446     0.554
          1  8.08e+03        84         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      16.6      20.2   -0.0864    -0.996
          1       262        84    -0.996    0.0864
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00883, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.866101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136294, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00741, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       334        18     0.491     0.509
          1  4.32e+03      64.5         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.8        18    -0.103    -0.995
          1       140      64.5    -0.995     0.103
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00978, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.868171, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135607, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       231      16.5     0.534     0.466
          1  2.35e+03      43.7         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      7.51      16.5    -0.123    -0.992
          1      76.3      43.7    -0.992     0.123
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.699813, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002705, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.706522, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       171      15.4     0.573     0.427
          1  1.29e+03      25.1         1   -0.0156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.53      15.4    -0.143     -0.99
          1      41.9      25.1     -0.99     0.143
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.706887, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001346
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000318
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027003
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139782
         W1a Well: minimal relaxation eigenvalue = 0.0317692
         W1a Well: maximal relaxation eigenvalue = 21.0497
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002103
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.151049
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.039306
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057676
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.160425
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.591546, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.64e+04 8.17e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       107  6.43e-20  3.82e-25
        W1b   0.00937         1  6.03e-22  3.58e-27
         P1  1.55e+19  1.66e+21         1  5.94e-06
         P2  2.62e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       108  5.36e-23  3.19e-28
        W1b   0.00926         1  4.96e-25  2.95e-30
         P1  1.87e+22  2.01e+24         1  5.94e-06
         P2  3.14e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.595032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.851279, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01617, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.77e+03      52.3     0.371     0.629
          1  4.89e+04       106         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        88      52.3    -0.057    -0.998
          1  1.55e+03       106    -0.998     0.057
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00324481
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000607, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02018, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.854042, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13423, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993302, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       851      34.4     0.452     0.548
          1  1.04e+04      67.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        27      34.4   -0.0795    -0.997
          1       329      67.6    -0.997    0.0795
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00632599
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000557, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.996904, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.849953, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.989633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       554      30.2     0.491     0.509
          1  5.41e+03      49.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.6      30.2   -0.0929    -0.996
          1       172      49.1    -0.996    0.0929
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.991946, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.852467, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135721, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.993411, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       384      27.1      0.53      0.47
          1  2.86e+03        31         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      12.2      27.1    -0.108    -0.994
          1      90.7        31    -0.994     0.108
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.99578, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.73375, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005183, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742916, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       283      24.4      0.57      0.43
          1  1.51e+03      16.7         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.98      24.4    -0.127    -0.992
          1      48.1      16.7    -0.992     0.127
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.743284, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001273
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000318
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027951
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.140257
         W1a Well: minimal relaxation eigenvalue = 0.0185831
         W1a Well: maximal relaxation eigenvalue = 36.1758
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002093
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.14711
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038479
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058891
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154668
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.583143, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.57e+05  1.7e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       129  6.34e-20  1.06e-24
        W1b   0.00777         1  4.93e-22  8.23e-27
         P1  1.58e+19  2.03e+21         1  1.67e-05
         P2  9.45e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       130  5.69e-23   9.5e-28
        W1b   0.00768         1  4.37e-25   7.3e-30
         P1  1.76e+22  2.29e+24         1  1.67e-05
         P2  1.05e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.587083, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.826236, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146183, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.983241, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.53e+03      71.4     0.428     0.572
          1  9.75e+04      74.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       158      71.4   -0.0659    -0.998
          1  1.81e+03      74.7    -0.998    0.0659
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00434071
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000605, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.987024, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.836485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133429, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974929, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.53e+03      48.2     0.528     0.472
          1  2.02e+04      48.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.9      48.2   -0.0983    -0.995
          1       375      48.7    -0.995    0.0983
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.990 0.010
         well projection threshold  = 0.2
         partition projection error = 0.00967199
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000565, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.978759, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.83683, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133034, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974664, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.59e+03      43.5      0.58      0.42
          1  1.03e+04      37.1         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.5      43.5    -0.121    -0.993
          1       192      37.1    -0.993     0.121
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.985 0.015
         well projection threshold  = 0.2
         partition projection error = 0.0146523
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000545, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.978224, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.83705, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132494, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97437, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.04e+03      41.1     0.635     0.365
          1  5.33e+03      25.3         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      19.4      41.1    -0.152    -0.988
          1      99.1      25.3    -0.988     0.152
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.976954, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816319, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.011776, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.832084, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       724      39.8     0.692     0.308
          1  2.78e+03        15         1   -0.0174
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.5      39.8    -0.194    -0.981
          1      51.6        15    -0.981     0.194
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.832537, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000118
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.002269
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000309
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029498
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139495
         W1a Well: minimal relaxation eigenvalue = 0.0294345
         W1a Well: maximal relaxation eigenvalue = 27.1693
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00213
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133583
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037721
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063602
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.154717
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.575647, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 4.34e+04 3.39e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       151  6.31e-20  2.58e-24
        W1b   0.00661         1  4.17e-22   1.7e-26
         P1  1.58e+19   2.4e+21         1  4.08e-05
         P2  3.88e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       153  6.07e-23  2.48e-27
        W1b   0.00653         1  3.97e-25  1.62e-29
         P1  1.65e+22  2.52e+24         1  4.08e-05
         P2  4.03e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.579531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.822779, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.14275, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.984105, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.03e+03       113     0.467     0.533
          1  6.71e+04      48.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       266       113   -0.0709    -0.997
          1  1.98e+03      48.9    -0.997    0.0709
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.995 0.005
         well projection threshold  = 0.2
         partition projection error = 0.00503237
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000614, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.987827, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825454, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130435, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961268, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.71e+03      76.2     0.563     0.437
          1  1.37e+04      29.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      79.9      76.2    -0.104    -0.995
          1       405      29.7    -0.995     0.104
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.989 0.011
         well projection threshold  = 0.2
         partition projection error = 0.0108885
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000565, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964874, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825386, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130623, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.960793, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+03      67.6     0.615     0.385
          1     7e+03      21.5         1   -0.0106
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.1      67.6    -0.129    -0.992
          1       206      21.5    -0.992     0.129
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963162, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.825358, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131115, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961425, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.18e+03      61.2     0.676     0.324
          1  3.58e+03      14.4         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      34.7      61.2    -0.167    -0.986
          1       105      14.4    -0.986     0.167
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.963771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818935, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.041456, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.864742, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       842      54.4     0.751     0.249
          1  1.85e+03        10         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      24.8      54.4    -0.238    -0.971
          1      54.4        10    -0.971     0.238
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.865289, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000185
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.005651
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000307
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027199
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133529
         W1a Well: minimal relaxation eigenvalue = 0.0292226
         W1a Well: maximal relaxation eigenvalue = 25.0455
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002111
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.142156
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037796
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.048702
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.155204
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.565099, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 9.41e+04 6.52e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       174  6.37e-20  5.68e-24
        W1b   0.00574         1  3.65e-22  3.26e-26
         P1  1.57e+19  2.74e+21         1  8.91e-05
         P2  1.76e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       176  6.51e-23   5.8e-27
        W1b   0.00567         1  3.69e-25  3.29e-29
         P1  1.54e+22  2.71e+24         1  8.91e-05
         P2  1.72e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.56865, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146324, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988234, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.43e+04       185     0.521     0.479
          1  6.96e+04      39.6         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       417       185   -0.0822    -0.997
          1  2.04e+03      39.6    -0.997    0.0822
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.990531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.827954, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131321, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.964199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.19e+03       124     0.617     0.383
          1  1.42e+04      24.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       122       124    -0.121    -0.993
          1       415      24.9    -0.993     0.121
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.985 0.015
         well projection threshold  = 0.2
         partition projection error = 0.0147216
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000607, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968108, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829216, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131194, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.965358, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.66e+03       108     0.673     0.327
          1  7.19e+03      19.5         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      77.6       108    -0.154    -0.988
          1       210      19.5    -0.988     0.154
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.967781, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.826592, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130473, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.961748, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.78e+03      94.1     0.744     0.256
          1  3.67e+03      16.2         1   -0.0167
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52      94.1    -0.215    -0.977
          1       107      16.2    -0.977     0.215
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.964095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821085, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.022845, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.848335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.24e+03      75.2     0.841     0.159
          1  1.91e+03      20.6         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      36.3      75.2    -0.373    -0.928
          1      55.8      20.6    -0.928     0.373
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.848827, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000146
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.004167
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000315
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030568
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.139476
         W1a Well: minimal relaxation eigenvalue = 0.019451
         W1a Well: maximal relaxation eigenvalue = 35.6595
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002192
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132895
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037428
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044211
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150231
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.55381, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 2.06e+04 1.21e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       198  6.44e-20  1.14e-23
        W1b   0.00506         1  3.26e-22  5.78e-26
         P1  1.55e+19  3.07e+21         1  0.000177
         P2  8.76e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       200     7e-23  1.24e-26
        W1b     0.005         1   3.5e-25   6.2e-29
         P1  1.43e+22  2.86e+24         1  0.000177
         P2  8.07e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.557238, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.804279, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135574, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.958248, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.43e+04       270     0.606     0.394
          1  1.06e+05      34.8         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       666       270    -0.109    -0.994
          1  2.07e+03      34.8    -0.994     0.109
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.960735, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810142, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127072, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941791, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   9.5e+03       175     0.715     0.285
          1  2.16e+04      26.1         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       185       175    -0.175    -0.984
          1       421      26.1    -0.984     0.175
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.969 0.031
         well projection threshold  = 0.2
         partition projection error = 0.0307798
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000599, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945431, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808597, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941325, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.76e+03       150     0.777     0.223
          1   1.1e+04      25.6         1   -0.0177
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112       150    -0.241    -0.971
          1       214      25.6    -0.971     0.241
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.942 0.058
         well projection threshold  = 0.2
         partition projection error = 0.0580856
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000526, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945034, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12799, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.941509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.61e+03       124     0.852     0.148
          1  5.68e+03      33.5         1   -0.0292
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      70.3       124     -0.38    -0.925
          1       110      33.5    -0.925      0.38
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94385, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821206, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.068353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.893893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.26e+03      70.7     0.931    0.0694
          1  3.12e+03      73.6         1   -0.0679
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      43.9      70.7     -0.69    -0.724
          1      60.8      73.6    -0.724      0.69
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894437, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000225
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.007608
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000328
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026315
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134886
         W1a Well: minimal relaxation eigenvalue = 0.00167849
         W1a Well: maximal relaxation eigenvalue = 49.8239
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002015
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.13782
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03681
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054017
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151792
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.564314, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.74e+05 2.19e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       221  6.55e-20  2.13e-23
        W1b   0.00453         1  2.97e-22  9.66e-26
         P1  1.53e+19  3.37e+21         1  0.000326
         P2  4.69e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       223  7.54e-23  2.45e-26
        W1b   0.00448         1  3.37e-25   1.1e-28
         P1  1.33e+22  2.96e+24         1  0.000326
         P2  4.07e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.568291, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810829, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147068, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.966395, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.45e+05       358     0.732     0.268
          1  1.24e+06      45.8         1   -0.0124
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.08e+03       358    -0.181    -0.984
          1  2.08e+03      45.8    -0.984     0.181
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968736, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128582, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.943509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.7e+05       217     0.849     0.151
          1  2.57e+05      54.3         1   -0.0255
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       286       217    -0.354    -0.935
          1       431      54.3    -0.935     0.354
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945748, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.812724, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127953, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945344, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.71e+04       158     0.905    0.0953
          1  1.34e+05        86         1    -0.043
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       163       158    -0.539    -0.843
          1       225        86    -0.843     0.539
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.947531, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.812931, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12861, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.946401, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.39e+04      83.9     0.949    0.0513
          1  7.44e+04       148         1   -0.0837
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.5      83.9    -0.779    -0.627
          1       125       148    -0.627     0.779
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.948643, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.81356, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.114401, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.932372, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.85e+04      34.9     0.972    0.0283
          1  4.52e+04       197         1    -0.156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.9      34.9    -0.918    -0.397
          1      75.8       197    -0.397     0.918
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.932916, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000265
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.010644
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001511
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030126
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135761
         W1a Well: minimal relaxation eigenvalue = 0.0233994
         W1a Well: maximal relaxation eigenvalue = 33.2244
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001988
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132316
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037215
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058805
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.151283
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.571901, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 6.22e+04 3.85e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       244  6.69e-20  3.75e-23
        W1b    0.0041         1  2.74e-22  1.54e-25
         P1   1.5e+19  3.65e+21         1  0.000561
         P2  2.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       247  8.13e-23  4.56e-26
        W1b   0.00405         1  3.29e-25  1.85e-28
         P1  1.23e+22  3.04e+24         1  0.000561
         P2  2.19e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.575667, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.798177, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.946417, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.21e+04       366     0.904    0.0957
          1  9.24e+04       199         1   -0.0388
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.69e+03       366    -0.518    -0.855
          1  2.16e+03       199    -0.855     0.518
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.948725, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.792762, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126529, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924101, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.65e+04      44.5     0.974    0.0261
          1  2.33e+04       348         1    -0.153
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       385      44.5    -0.922    -0.386
          1       545       348    -0.386     0.922
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926316, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796297, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125843, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926745, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.4e+03      16.4     0.984    0.0164
          1  1.43e+04       334         1    -0.247
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       196      16.4    -0.968    -0.251
          1       334       334    -0.251     0.968
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.937 0.063
         well projection threshold  = 0.2
         partition projection error = 0.0357113
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000653, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.930789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.800021, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.931967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.25e+03      7.06     0.989    0.0111
          1   9.3e+03       312         1    -0.365
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      99.5      7.06    -0.985    -0.173
          1       218       312    -0.173     0.985
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.934326, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.800398, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126375, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.931642, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.14e+03      3.13     0.992         0
          1  6.42e+03       286         1    -0.509
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      50.2      3.13    -0.992    -0.125
          1       150       286    -0.125     0.992
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933961, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002258
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.052906
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.003011
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027386
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135884
         W1a Well: minimal relaxation eigenvalue = 0.00775347
         W1a Well: maximal relaxation eigenvalue = 42.2807
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002011
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133257
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037626
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057426
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.148937
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.613168, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.48e+04 6.61e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       267  6.85e-20  6.26e-23
        W1b   0.00375         1  2.57e-22  2.35e-25
         P1  1.46e+19  3.89e+21         1  0.000914
         P2   1.6e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       270  8.76e-23  8.01e-26
        W1b   0.00371         1  3.25e-25  2.97e-28
         P1  1.14e+22  3.08e+24         1  0.000914
         P2  1.25e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.617094, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801534, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143266, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.949926, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.47e+05      97.6     0.976     0.024
          1  3.29e+05       957         1    -0.152
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.91e+03      97.6    -0.928    -0.373
          1  2.55e+03       957    -0.373     0.928
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.952268, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.799074, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126825, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930892, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.01e+04      19.1     0.986    0.0136
          1  8.37e+04       667         1    -0.271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       389      19.1    -0.975     -0.22
          1       649       667     -0.22     0.975
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.801116, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.126612, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.932351, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.52e+04      10.8     0.989     0.011
          1  4.87e+04       580         1    -0.338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       195      10.8    -0.984    -0.178
          1       377       580    -0.178     0.984
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.934555, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.800389, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126513, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.93149, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+04      6.47     0.991         0
          1  2.94e+04       517         1    -0.417
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        98      6.47    -0.989    -0.145
          1       228       517    -0.145     0.989
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933854, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.798873, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126359, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930062, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.35e+03      3.93     0.993         0
          1  1.87e+04       472         1    -0.513
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.2      3.93    -0.993    -0.119
          1       145       472    -0.119     0.993
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.986 0.014
         well projection threshold  = 0.2
         partition projection error = 0.00331819
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000621, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933701, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002036
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.060343
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002629
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028198
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136241
         W1a Well: minimal relaxation eigenvalue = 0.000545536
         W1a Well: maximal relaxation eigenvalue = 51.7734
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002185
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128417
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037324
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057942
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146317
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.614521, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 1.11e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       289  7.03e-20  9.98e-23
        W1b   0.00346         1  2.43e-22  3.45e-25
         P1  1.42e+19  4.11e+21         1   0.00142
         P2     1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       293  9.45e-23  1.34e-25
        W1b   0.00342         1  3.23e-25  4.59e-28
         P1  1.06e+22   3.1e+24         1   0.00142
         P2  7.45e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.618454, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793918, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.952277, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.53e+06      8.54     0.992         0
          1  7.57e+06  1.22e+03         1     -0.43
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.93e+03      8.54    -0.991    -0.135
          1  4.13e+03  1.22e+03    -0.135     0.991
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.954548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.793844, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126116, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924743, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.07e+05      4.51     0.993         0
          1  1.97e+06       830         1    -0.521
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       386      4.51    -0.994    -0.112
          1  1.07e+03       830    -0.112     0.994
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796353, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12516, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.926124, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.54e+05       3.7     0.994         0
          1  1.14e+06       746         1    -0.565
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       193       3.7    -0.995    -0.103
          1       621       746    -0.103     0.995
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92849, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.795469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125687, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925725, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.77e+05      3.08     0.994         0
          1  6.76e+05       706         1    -0.614
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      96.6      3.08    -0.995   -0.0953
          1       369       706   -0.0953     0.995
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.796262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.927091, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.86e+04      2.52     0.995         0
          1  4.15e+05       703         1    -0.671
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.4      2.52    -0.996   -0.0874
          1       226       703   -0.0874     0.996
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.929257, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002184
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.079745
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002839
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027809
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135731
         W1a Well: minimal relaxation eigenvalue = 0.0200784
         W1a Well: maximal relaxation eigenvalue = 34.677
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002242
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134828
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037646
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055905
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143998
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.635419, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.2e+05 1.82e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       311  7.23e-20  1.53e-22
        W1b   0.00321         1  2.32e-22  4.92e-25
         P1  1.38e+19   4.3e+21         1   0.00212
         P2  6.53e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       315  1.02e-22  2.16e-25
        W1b   0.00318         1  3.23e-25  6.85e-28
         P1  9.82e+21  3.09e+24         1   0.00212
         P2  4.64e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.639514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783574, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129933, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928881, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.43e+04      2.43     0.995         0
          1  3.38e+05  1.55e+03         1    -0.681
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.89e+03      2.43    -0.997    -0.083
          1   6.8e+03  1.55e+03    -0.083     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931167, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.782505, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910705, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+04      1.43     0.996         0
          1  9.66e+04  1.11e+03         1    -0.788
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       379      1.43    -0.997   -0.0717
          1  1.94e+03  1.11e+03   -0.0717     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.912873, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.782847, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123765, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911424, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.45e+03      1.05     0.996         0
          1  6.03e+04       992         1    -0.854
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       190      1.05    -0.998   -0.0663
          1  1.21e+03       992   -0.0663     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 9.39063e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000637, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783139, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124285, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.912246, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.73e+03     0.697     0.997         0
          1  3.95e+04       881         1    -0.931
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        95     0.697    -0.998   -0.0608
          1       794       881   -0.0608     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 1.74533e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00057, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915798, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123221, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910884, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.37e+03     0.416     0.997         0
          1   2.7e+04       751    -0.985         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.6     0.416    -0.998   -0.0558
          1       543       751   -0.0558     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 7.22958e-07
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000551, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914662, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002182
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121966
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.032823
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028882
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13669
         W1a Well: minimal relaxation eigenvalue = 0.00908652
         W1a Well: maximal relaxation eigenvalue = 40.8989
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002035
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133967
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036519
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049559
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.146768
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.703958, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.66e+04 2.93e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       333  7.45e-20  2.27e-22
        W1b   0.00301         1  2.24e-22  6.82e-25
         P1  1.34e+19  4.47e+21         1   0.00305
         P2   4.4e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       337   1.1e-22  3.34e-25
        W1b   0.00297         1  3.26e-25  9.93e-28
         P1  9.12e+21  3.07e+24         1   0.00305
         P2  2.99e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 0.707875, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.781007, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.141534, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940448, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.04e+05      1.42     0.996         0
          1  1.01e+06  2.61e+03         1    -0.827
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.85e+03      1.42    -0.998   -0.0661
          1  9.16e+03  2.61e+03   -0.0661     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.942752, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780444, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123555, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908547, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.08e+04     0.988     0.997         0
          1  2.65e+05  1.77e+03         1    -0.892
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       371     0.988    -0.998   -0.0614
          1  2.41e+03  1.77e+03   -0.0614     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.910744, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780098, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124814, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.909694, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.04e+04     0.818     0.997         0
          1  1.57e+05  1.55e+03         1    -0.931
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       185     0.818    -0.998   -0.0588
          1  1.43e+03  1.55e+03   -0.0588     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.911872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780106, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12388, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908752, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.02e+04     0.637     0.997         0
          1  9.74e+04  1.37e+03         1     -0.98
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      92.8     0.637    -0.998   -0.0559
          1       885  1.37e+03   -0.0559     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.910947, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.780855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123378, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.908798, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.11e+03     0.454     0.997         0
          1  6.29e+04   1.2e+03    -0.965         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.4     0.454    -0.999   -0.0528
          1       572   1.2e+03   -0.0528     0.999
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 3.73603e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00063, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91246, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002383
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120523
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.031351
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028189
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137584
         W1a Well: minimal relaxation eigenvalue = 0.00289402
         W1a Well: maximal relaxation eigenvalue = 46.8593
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002362
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133816
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036551
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.052404
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144847
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70273, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.35e+04 4.64e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       354  7.68e-20  3.27e-22
        W1b   0.00283         1  2.17e-22  9.23e-25
         P1   1.3e+19  4.61e+21         1   0.00425
         P2  3.06e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  1.18e-22  5.02e-25
        W1b   0.00279         1   3.3e-25   1.4e-27
         P1  8.47e+21  3.03e+24         1   0.00425
         P2  1.99e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.7068, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133366, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.26e+05     0.727     0.997         0
          1  5.08e+06   2.9e+03         1    -0.975
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.81e+03     0.727    -0.999   -0.0544
          1  1.47e+04   2.9e+03   -0.0544     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.927189, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774912, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902743, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.25e+05     0.605     0.997         0
          1  1.34e+06  2.07e+03    -0.985         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       362     0.605    -0.999   -0.0523
          1  3.89e+03  2.07e+03   -0.0523     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904925, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774684, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12367, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90313, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.26e+04     0.548     0.997         0
          1  7.91e+05  1.89e+03    -0.963         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       181     0.548    -0.999   -0.0511
          1  2.29e+03  1.89e+03   -0.0511     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905304, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123307, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903533, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.13e+04     0.477     0.997         0
          1   4.8e+05  1.77e+03    -0.938         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.6     0.477    -0.999   -0.0498
          1  1.39e+03  1.77e+03   -0.0498     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905715, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773274, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123361, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90141, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.57e+04      0.39     0.997         0
          1  3.01e+05  1.68e+03    -0.909         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.3      0.39    -0.999   -0.0483
          1       872  1.68e+03   -0.0483     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903564, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002274
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.114482
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033978
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038867
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.137947
         W1a Well: minimal relaxation eigenvalue = 0.000466789
         W1a Well: maximal relaxation eigenvalue = 51.268
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002275
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136127
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036418
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050979
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140076
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.706889, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 7.22e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       374  7.92e-20  4.58e-22
        W1b   0.00267         1  2.12e-22  1.22e-24
         P1  1.26e+19  4.72e+21         1   0.00577
         P2  2.19e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       379  1.27e-22  7.33e-25
        W1b   0.00264         1  3.35e-25  1.94e-27
         P1  7.88e+21  2.98e+24         1   0.00577
         P2  1.36e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.710743, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773487, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140236, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+06     0.495     0.997         0
          1  4.22e+07  4.61e+03     -0.94         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.77e+03     0.495    -0.999   -0.0485
          1  1.97e+04  4.61e+03   -0.0485     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926945, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774691, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124196, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903625, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.58e+05     0.434     0.998         0
          1  1.05e+07  3.12e+03     -0.92         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       354     0.434    -0.999   -0.0475
          1  4.91e+03  3.12e+03   -0.0475     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12273, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+05     0.413     0.998         0
          1  5.96e+06  2.77e+03     -0.91         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       177     0.413    -0.999    -0.047
          1  2.78e+03  2.77e+03    -0.047     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903749, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775088, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+05     0.389     0.998         0
          1  3.44e+06  2.55e+03    -0.899         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      88.4     0.389    -0.999   -0.0464
          1  1.61e+03  2.55e+03   -0.0464     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.77385, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122298, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.900693, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.47e+04     0.358     0.998         0
          1  2.04e+06  2.43e+03    -0.886         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      44.2     0.358    -0.999   -0.0457
          1       951  2.43e+03   -0.0457     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.902859, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002142
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.127172
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.038153
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044494
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135714
         W1a Well: minimal relaxation eigenvalue = 0.00217979
         W1a Well: maximal relaxation eigenvalue = 47.9358
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002228
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134132
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036018
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049468
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142496
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.725482, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.62e+04 1.11e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       394  8.21e-20  6.28e-22
        W1b   0.00254         1  2.08e-22  1.59e-24
         P1  1.22e+19   4.8e+21         1   0.00765
         P2  1.59e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       399  1.36e-22  1.04e-24
        W1b   0.00251         1  3.42e-25  2.62e-27
         P1  7.33e+21  2.93e+24         1   0.00765
         P2  9.58e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.729358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773575, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139306, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933381, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.92e+05     0.336     0.998         0
          1  1.29e+07  6.03e+03    -0.884         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.73e+03     0.336    -0.999   -0.0445
          1  2.82e+04  6.03e+03   -0.0445     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.935652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770323, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123168, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898024, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.58e+05       0.3     0.998         0
          1  3.26e+06  4.01e+03     -0.87         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       345       0.3    -0.999   -0.0438
          1   7.1e+03  4.01e+03   -0.0438     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.900201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773961, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.92e+04     0.284     0.998         0
          1  1.86e+06  3.47e+03    -0.862         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       173     0.284    -0.999   -0.0434
          1  4.06e+03  3.47e+03   -0.0434     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904345, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774856, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123047, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.902789, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.96e+04     0.265     0.998         0
          1   1.1e+06  3.04e+03    -0.852         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      86.3     0.265    -0.999   -0.0429
          1  2.39e+03  3.04e+03   -0.0429     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904959, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.775424, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.904075, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.98e+04      0.24     0.998         0
          1  6.62e+05  2.68e+03    -0.841         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      43.2      0.24    -0.999   -0.0423
          1  1.44e+03  2.68e+03   -0.0423     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906232, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002235
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.112597
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034413
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038421
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.13753
         W1a Well: minimal relaxation eigenvalue = 0.000509723
         W1a Well: maximal relaxation eigenvalue = 50.4489
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002191
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132816
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036186
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.052084
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140936
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702867, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 1.67e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       414  8.48e-20  8.41e-22
        W1b   0.00242         1  2.05e-22  2.03e-24
         P1  1.18e+19  4.88e+21         1   0.00992
         P2  1.19e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       419  1.46e-22  1.45e-24
        W1b   0.00239         1   3.5e-25  3.47e-27
         P1  6.83e+21  2.86e+24         1   0.00992
         P2  6.89e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.706772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773261, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140412, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.924328, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   3.3e+06     0.294     0.998         0
          1  7.01e+07  1.03e+04    -0.853         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.68e+03     0.294    -0.999   -0.0419
          1  3.57e+04  1.03e+04   -0.0419     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773984, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901861, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.61e+05      0.27     0.998         0
          1  1.65e+07  6.53e+03    -0.846         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       337      0.27    -0.999   -0.0416
          1  8.41e+03  6.53e+03   -0.0416     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904071, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.774977, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122378, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901887, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.31e+05     0.263     0.998         0
          1  9.05e+06   5.5e+03    -0.842         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       168     0.263    -0.999   -0.0414
          1  4.61e+03   5.5e+03   -0.0414     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.904056, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.773199, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122805, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.901037, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.65e+05     0.255     0.998         0
          1  5.05e+06  4.72e+03    -0.838         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      84.2     0.255    -0.999   -0.0412
          1  2.57e+03  4.72e+03   -0.0412     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.903229, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7708, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897842, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.26e+04     0.245     0.998         0
          1  2.87e+06  4.15e+03    -0.833         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      42.1     0.245    -0.999   -0.0409
          1  1.46e+03  4.15e+03   -0.0409     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90001, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002146
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.122404
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033742
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.040281
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133646
         W1a Well: minimal relaxation eigenvalue = 0.0151463
         W1a Well: maximal relaxation eigenvalue = 36.5563
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002174
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123465
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035691
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059339
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145205
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.710962, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 4.13e+05  2.5e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       433  8.76e-20  1.11e-21
        W1b   0.00231         1  2.03e-22  2.56e-24
         P1  1.14e+19  4.94e+21         1    0.0126
         P2  9.04e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       438  1.57e-22  1.98e-24
        W1b   0.00228         1  3.58e-25  4.52e-27
         P1  6.37e+21  2.79e+24         1    0.0126
         P2  5.05e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.71487, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764028, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128632, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+05     0.224     0.998         0
          1  3.86e+06  8.86e+03    -0.819         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.64e+03     0.224    -0.999   -0.0394
          1  5.85e+04  8.86e+03   -0.0394     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915517, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762361, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121459, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888334, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.17e+04     0.195     0.998         0
          1  1.03e+06   5.8e+03    -0.807         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       329     0.195    -0.999   -0.0388
          1  1.56e+04   5.8e+03   -0.0388     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890521, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762837, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121613, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889199, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+04     0.179     0.998         0
          1  6.15e+05  4.75e+03      -0.8         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       164     0.179    -0.999   -0.0384
          1  9.31e+03  4.75e+03   -0.0384     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764238, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890111, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.43e+03     0.163     0.998         0
          1  3.76e+05  3.69e+03    -0.792         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      82.2     0.163    -0.999   -0.0381
          1  5.69e+03  3.69e+03   -0.0381     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.92169e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000662, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893779, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763754, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121442, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889917, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.72e+03      0.15     0.998         0
          1  2.33e+05  2.58e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      41.1      0.15    -0.999   -0.0377
          1  3.53e+03  2.58e+03   -0.0377     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000106254
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000566, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893681, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00232
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118331
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033414
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038924
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136901
         W1a Well: minimal relaxation eigenvalue = 0.00887509
         W1a Well: maximal relaxation eigenvalue = 40.4422
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002127
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132234
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03601
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.046333
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142819
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.702253, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.36e+05 3.68e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       451  9.06e-20  1.43e-21
        W1b   0.00222         1  2.01e-22  3.17e-24
         P1   1.1e+19  4.98e+21         1    0.0158
         P2  6.99e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       456  1.68e-22  2.65e-24
        W1b   0.00219         1  3.68e-25  5.81e-27
         P1  5.95e+21  2.72e+24         1    0.0158
         P2  3.77e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.706377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135715, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.910883, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+05     0.202     0.998         0
          1  8.26e+06   1.3e+04    -0.805         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.61e+03     0.202    -0.999   -0.0379
          1  7.33e+04   1.3e+04   -0.0379     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913169, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762565, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12104, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888304, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.62e+04     0.185     0.998         0
          1  2.08e+06  8.41e+03    -0.798         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       321     0.185    -0.999   -0.0375
          1  1.85e+04  8.41e+03   -0.0375     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890499, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121038, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888813, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+04     0.175     0.998         0
          1   1.2e+06  6.94e+03    -0.793         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       161     0.175    -0.999   -0.0373
          1  1.07e+04  6.94e+03   -0.0373     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890998, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764949, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121373, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891026, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.05e+03     0.164     0.998         0
          1  7.12e+05  5.52e+03    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      80.3     0.164    -0.999   -0.0371
          1  6.32e+03  5.52e+03   -0.0371     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.93711e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000638, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894653, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764121, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890291, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.52e+03     0.154     0.998         0
          1  4.31e+05  4.05e+03    -0.783         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      40.2     0.154    -0.999   -0.0368
          1  3.82e+03  4.05e+03   -0.0368     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000104506
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000562, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.89378, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002122
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.123508
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033643
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044758
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.130102
         W1a Well: minimal relaxation eigenvalue = 0.00478203
         W1a Well: maximal relaxation eigenvalue = 43.6492
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002026
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121574
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035604
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057925
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144438
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.708238, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.26e+05 5.35e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       469  9.36e-20  1.82e-21
        W1b   0.00213         1     2e-22  3.88e-24
         P1  1.07e+19  5.01e+21         1    0.0194
         P2   5.5e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       474   1.8e-22  3.49e-24
        W1b   0.00211         1  3.79e-25  7.37e-27
         P1  5.57e+21  2.64e+24         1    0.0194
         P2  2.86e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.712128, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76134, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130226, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.911486, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.28e+05     0.187     0.998         0
          1  1.88e+07  2.17e+04    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.57e+03     0.187    -0.999   -0.0366
          1     9e+04  2.17e+04   -0.0366     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.913771, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.761506, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12184, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888106, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.56e+04     0.177     0.998         0
          1  4.45e+06  1.37e+04     -0.79         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       314     0.177    -0.999   -0.0365
          1  2.13e+04  1.37e+04   -0.0365     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890318, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121095, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.888858, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.28e+04     0.171     0.998         0
          1  2.48e+06  1.13e+04    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       157     0.171    -0.999   -0.0364
          1  1.18e+04  1.13e+04   -0.0364     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891047, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760579, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121249, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886497, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.64e+04     0.164     0.998         0
          1  1.41e+06  9.15e+03    -0.784         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      78.4     0.164    -0.999   -0.0362
          1  6.75e+03  9.15e+03   -0.0362     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888689, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.760835, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.88667, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   8.2e+03     0.157     0.998         0
          1  8.23e+05  7.14e+03    -0.781         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      39.2     0.157    -0.999    -0.036
          1  3.93e+03  7.14e+03    -0.036     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000102353
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000613, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.890284, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 404.882, elapsed time[sec] = 8
