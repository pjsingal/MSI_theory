Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1a
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.631223      0.0978754      0.0898156
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.003805, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.004486, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -4.22
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.092983, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002359, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.028599, elapsed time[sec] = 0
         effective power exponent at 404.218 kcal/mol = 11.9109
      interpolating states number/density done, cpu time[sec] = 1.06662, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.07419, elapsed time[sec] = 0
   WELL: W1b
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.563236       0.143434       0.114321
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001129, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001683, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -9.59
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.099857, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.002873, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.034381, elapsed time[sec] = 0
         effective power exponent at 409.59 kcal/mol = 11.8843
      interpolating states number/density done, cpu time[sec] = 1.08333, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.08786, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001048, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001634, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00329, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         20.5397        1.11483        1.05743
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000786, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001335, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002835, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.009876, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         10.0783       0.877183       0.848353
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000819, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001798, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003407, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         1.43468
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000714, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001241, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002646, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.009414, elapsed time[sec] = 0
   BARRIER: B1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::Rotd::Rotd :  starts
            WARNING: zero number of states energy is not initialized: will try to estimate it from the data
            grid size = 179
            effective power exponent at 2349.05 kcal/mol = 2.62206
            zero number of states energy = 0 1/cm
         Model::Rotd::Rotd :  done, cpu time[sec] = 0.019849, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.020688, elapsed time[sec] = 0
      ground state energy, kcal/mol:   0
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.674064, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.003202, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.016927, elapsed time[sec] = 0
         effective power exponent at 399.998 kcal/mol = 9.01406
      interpolating states number/density done, cpu time[sec] = 1.59273, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 1.61581, elapsed time[sec] = 0
   BARRIER: B2
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::MultiRotor::MultiRotor:  starts
            1-th internal rotation definition:
            InternalRotation starts
            InternalRotation done
            mass fourier expansion starts
               mass fourier expansion size = 11
               1D internal mobilities for original geometry, 1/cm:     2.38988
               generalized mass matrix [amu * bohr * bohr] for original geometry:
               #\#           1
               1       25.1895
               external rotational constants for original geometry [1/cm]:   0.557973   0.167719   0.131451
               internal mobility matrix for original geometry, 1/cm:
               #\#           1
               1       2.38988
               (single rotor) internal mobility, 1/ cm:
                 0        2.38988
                 1        2.20744
                 2        2.08829
                 3        2.10827
                 4        2.20103
                 5        2.25342
                 6        2.20438
                 7        2.11426
                 8        2.09619
                 9         2.2157
                10        2.39396
               averaged internal mobility matrix, 1/cm:
               #\#           1
               1       2.20662
            mass fourier expansion done, cpu time[sec] = 0.010309, elapsed time[sec] = 0
            potential fourier expansion starts
               potential fourier expansion size = 13
               different order potential correlation terms contributions, %:
                 #            1
                 %          100
               first order correlation contributions to the potential from different rotations, %:
                 R            0
                 %          100
               high order harmonics potential contributions, %:
               R\#        1        2        3        4        5        6
                 0     74.5     22.7     2.52    0.199   0.0681   0.0307
               1            100
               2            100
               3            100
               4            100
               5            100
               6            100
               7            100
               8            100
               9            100
               10           100
               Model potential:
                         phi_1    V, kcal/mol            f_1
                             0        16.7486        120.871
                            30        17.7751        96.9004
                            60        20.1047       -95.2444
                            90        21.2707       -52.5891
                           120        21.6984       -56.5185
                           150        21.6864        22.3203
                           180        21.6576         29.568
                           210        21.7923       -25.3172
                           240        21.7858       -32.4695
                           270        21.6497       -44.1185
                           300        20.8262       -123.237
                           330        18.1266        105.699

            potential fourier expansion done, cpu time[sec] = 0.010294, elapsed time[sec] = 0
            descretization starts
               angular integration grid size = 100
               potential minimum energy correction [kcal/mol] = -0.00252455
               potential maximum energy correction [kcal/mol] = 0.000687961
               potential energy surface, kcal/mol:
                      E, kcal/mol        phi_1
                 min      16.7461       1.3748
                 max      21.8384      225.164
               vibrational frequencies, 1/cm:
               #           min          max         mean
               1       90.4407      216.102      152.833
               2       152.159      329.582      231.583
               3       361.262      417.187          384
               4       575.815      708.328      638.667
               5       752.933      1078.64       913.75
               6       1091.36      1171.65      1124.83
               7       1336.22      1371.16      1353.33
               8       1419.85      1450.01      1429.75
               9        1394.5      1678.16      1549.17
               10      3633.04       3700.2      3676.25
               hindered rotation frequencies f at minimum, 1/cm:
               #            f
               1      120.112
               effective one-dimensional internal mobilities[1/cm]:   2.38423
               ground energy in the harmonic oscilator approximation = 16.9178 kcal/mol
            descretization done, cpu time[sec] = 0.083312, elapsed time[sec] = 0
            one-dimensional uncoupled rotors model initialization starts
               Model::HinderedRotor::HinderedRotor:  starts
                  effective rotational constant[1/cm]  = 2.20662
                  analytic  frequency at minimum[1/cm] = 115.526
                  numerical frequency at minimum[1/cm] = 115.526
                  minimum energy[kcal/mol]             = -3.68072
                  maximum energy[kcal/mol]             = 1.41158
                  maximum frequency[1/cm]              = 122.504
                  ground energy [kcal/mol]             = -3.51499
                  highest energy level [kcal/mol]      = 1564.69
                  number of levels                     = 997
                  10 lowest excited states [kcal/mol] relative to the ground: 0.332 0.664 0.994 1.32 1.64 1.96 2.27 2.57 2.86
                  Statistical Weight (*** - deep tunneling regime):
                   T, K        Quantum             PG             PI  ***
                    100        1.23188        1.23328        1.23185
                    200        1.76929        1.76927        1.76937
                    300          2.362        2.36118        2.36219
                    400        3.00482         3.0031        3.00497
                    500        3.72158        3.71912        3.72179
                    600        4.52812        4.52493        4.52832
                    700        5.42535         5.4216        5.42557
                    800        6.40448        6.40028         6.4047
                    900        7.45219        7.44772        7.45245
                   1000        8.55448        8.54982        8.55477
               Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 8.16121, elapsed time[sec] = 0
               Model::HinderedRotor::set:  starts
               Model::HinderedRotor::set:  done, cpu time[sec] = 7.8e-05, elapsed time[sec] = 0
               one-dimensional uncoupled rotors model ground energy [kcal/mol] = 16.9118
            one-dimensional uncoupled rotors model initialization done, cpu time[sec] = 8.1624, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  starts
               potential fourier expansion size = 12
               vibrational frequencies fourier expansion sizes:   13   13   13   13   13   13   13   13   13   13
               internal mobility matrix fourier expansion size = 11
               external rotation factor fourier expansion size = 11
               quantum phase space dimensions:   77
               reference hamiltonian size = 77
               number of vibrational population states = 3886
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000539, elapsed time[sec] = 0
               classically estimated number of energy levels = 62
               setting reference hamiltonian ... done, cpu time[sec] = 0.074844, elapsed time[sec] = 0
               setting external rotation factor matrix elements ... done, cpu time[sec] = 0.033233, elapsed time[sec] = 0
               stripped hamiltonian size = 77
               diagonalizing hamiltonian ... done, cpu time[sec] = 0.035598, elapsed time[sec] = 0
               averaging external rotation factor over quantum state ... done, cpu time[sec] = 0.007158, elapsed time[sec] = 0
               quantum states  # = 63
               first 10 energy levels, kcal/mol: 16.9178 17.2619 17.6051 17.9455 18.2815 18.6117 18.9346 19.2488 19.553 19.8456
               ground state energy      [kcal/mol] = 16.9178
               potential energy minimum [kcal/mol] = 16.7461
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.000438, elapsed time[sec] = 0
            Model::MultiRotor::_set_qfactor:  done, cpu time[sec] = 0.265701, elapsed time[sec] = 0
            interpolating states number/density starts
               Model::MultiRotor::_set_states_base:  ... done, cpu time[sec] = 0.003565, elapsed time[sec] = 0
               angular integration ... done
               classical states interpolation ... done
               effective power exponent at 99.9973 kcal/mol = 10.7995
               number of states (E - energy in kcal/mol relative to the ground level):
                   E    Classical  Q-corrected     Q-Factor 1D-Classical   1D-Quantum  1D-Q-Factor
                 0.1      7231.25      4983.71     0.689191      7758.12      5715.17     0.736669
                 0.2        15684      14096.1     0.898757      16918.6      15491.9      0.91567
                 0.3      28365.4      25862.9     0.911778      30668.9        28051     0.914641
                 0.4      45642.4      40923.4     0.896609      50705.6      45485.7     0.897056
                 0.5      68417.3      63415.9     0.926899      79059.6      73158.5     0.925359
                 0.6      98405.9      93674.7     0.951922       118006       111419     0.944184
                 0.7       137464       129658     0.943213       170294       159695     0.937758
                 0.8       187650       179240     0.955182       238362       226433     0.949952
                 0.9       251403       242633     0.965117       325547       311745     0.957604
                   1       330944       320374     0.968061       435022       416864     0.958261
                 1.1       429249       414835      0.96642       572156       548354       0.9584
                 1.2       550313       535804     0.973636       741489       716584     0.966411
                 1.3       697134       680872     0.976673       949208       918370     0.967512
                 1.4       873232       852912      0.97673  1.20107e+06  1.16395e+06     0.969094
                 1.5  1.08234e+06  1.06004e+06     0.979396  1.50374e+06  1.46135e+06     0.971806
                 1.6  1.32854e+06  1.30466e+06     0.982031  1.86418e+06  1.81558e+06     0.973934
                 1.7   1.6174e+06  1.58914e+06     0.982525  2.29027e+06  2.23151e+06     0.974343
                 1.8   1.9551e+06  1.92053e+06     0.982318  2.79298e+06   2.7218e+06     0.974516
                 1.9  2.34786e+06  2.31223e+06     0.984821  3.38256e+06  3.30419e+06     0.976832
                   2  2.80346e+06  2.76314e+06     0.985617   4.0712e+06  3.97873e+06     0.977287
                 2.1   3.3299e+06  3.28534e+06     0.986618  4.86961e+06  4.76501e+06      0.97852
                 2.2  3.93523e+06  3.88404e+06     0.986991  5.79304e+06   5.6715e+06     0.979019
                 2.3  4.62891e+06  4.57389e+06     0.988114  6.85608e+06   6.7198e+06     0.980124
                 2.4  5.42172e+06  5.36115e+06     0.988829  8.07604e+06  7.92229e+06     0.980962
                 2.5  6.32516e+06   6.2566e+06     0.989161  9.47047e+06  9.29654e+06     0.981634
                 2.6  7.35133e+06  7.27567e+06     0.989708  1.10603e+07   1.0862e+07     0.982065
                 2.7  8.51351e+06  8.42885e+06     0.990057  1.28683e+07  1.26455e+07     0.982689
                 2.8  9.82582e+06  9.73524e+06     0.990781  1.49165e+07  1.46697e+07     0.983453
                 2.9  1.13035e+07  1.12017e+07     0.990999  1.72316e+07  1.69498e+07     0.983649
                   3  1.29637e+07  1.28527e+07     0.991436  1.98396e+07  1.95259e+07     0.984185
                 3.1  1.48258e+07  1.47041e+07      0.99179  2.27734e+07  2.24206e+07     0.984508
                 3.2  1.69093e+07  1.67775e+07     0.992207   2.6065e+07   2.5675e+07     0.985035
                 3.3  1.92389e+07  1.90917e+07     0.992349  2.97536e+07  2.93147e+07     0.985248
                 3.4  2.18375e+07  2.16808e+07     0.992823  3.38755e+07  3.33973e+07     0.985884
                 3.5  2.47301e+07  2.45611e+07     0.993164  3.84722e+07  3.79432e+07     0.986249
                 3.6  2.79452e+07  2.77572e+07     0.993273  4.35887e+07  4.29978e+07     0.986444
                 3.7  3.15099e+07  3.13047e+07     0.993489  4.92757e+07  4.86248e+07      0.98679
                 3.8  3.54561e+07   3.5235e+07     0.993764  5.55873e+07  5.48726e+07     0.987143
                 3.9  3.98204e+07  3.95808e+07     0.993983  6.25803e+07  6.17917e+07     0.987398
                   4  4.46386e+07  4.43725e+07     0.994039  7.03192e+07  6.94442e+07     0.987557
                 4.1  4.99553e+07  4.96721e+07     0.994332   7.8869e+07  7.79122e+07     0.987868
                 4.2  5.58145e+07    5.551e+07     0.994544  8.83032e+07  8.72541e+07     0.988119
                 4.3   6.2263e+07  6.19323e+07     0.994689  9.86969e+07  9.75442e+07     0.988321
                 4.4  6.93523e+07  6.89902e+07     0.994778  1.10139e+08  1.08872e+08       0.9885
                 4.5  7.71384e+07  7.67526e+07        0.995  1.22721e+08  1.21344e+08     0.988782
                 4.6  8.56777e+07   8.5261e+07     0.995137  1.36542e+08  1.35037e+08     0.988976
                 4.7  9.50359e+07  9.45868e+07     0.995275  1.51704e+08  1.50064e+08     0.989184
                 4.8  1.05284e+08  1.04798e+08     0.995379  1.68323e+08  1.66532e+08     0.989359
                 4.9  1.16507e+08  1.15984e+08      0.99551  1.86527e+08  1.84572e+08     0.989517
                   5  1.28793e+08  1.28229e+08     0.995621  2.06455e+08  2.04324e+08     0.989679
                 5.1  1.42231e+08  1.41622e+08     0.995714   2.2825e+08   2.2593e+08     0.989835
                 5.2  1.56918e+08  1.56267e+08      0.99585  2.52059e+08  2.49532e+08     0.989974
                 5.3  1.72961e+08  1.72259e+08     0.995942  2.78049e+08  2.75307e+08      0.99014
                 5.4  1.90478e+08  1.89731e+08      0.99608  3.06394e+08   3.0342e+08     0.990292
                 5.5   2.0959e+08   2.0878e+08     0.996137   3.3729e+08  3.34056e+08     0.990413
                 5.6  2.30425e+08  2.29565e+08     0.996267  3.70936e+08  3.67439e+08     0.990574
                 5.7  2.53128e+08  2.52202e+08     0.996341  4.07547e+08  4.03759e+08     0.990705
                 5.8  2.77849e+08  2.76859e+08     0.996436  4.47354e+08  4.43252e+08      0.99083
                 5.9  3.04754e+08  3.03686e+08     0.996494  4.90604e+08  4.86158e+08     0.990937
                   6  3.34024e+08  3.32889e+08       0.9966  5.37563e+08  5.32772e+08     0.991088
                 6.1   3.6584e+08  3.64625e+08      0.99668  5.88507e+08  5.83318e+08     0.991182
                 6.2  4.00405e+08  3.99099e+08     0.996738   6.4374e+08  6.38132e+08     0.991289
                 6.3  4.37937e+08  4.36544e+08     0.996817  7.03576e+08  6.97516e+08     0.991386
                 6.4  4.78658e+08  4.77172e+08     0.996895  7.68357e+08  7.61839e+08     0.991518
                 6.5  5.22815e+08  5.21236e+08     0.996979  8.38434e+08  8.31406e+08     0.991618
                 6.6  5.70674e+08  5.68971e+08     0.997015  9.14191e+08  9.06618e+08     0.991716
                 6.7  6.22514e+08  6.20719e+08     0.997117   9.9604e+08  9.87903e+08     0.991831
                 6.8  6.78636e+08  6.76707e+08     0.997159  1.08442e+09  1.07566e+09     0.991923
                 6.9  7.39352e+08  7.37305e+08     0.997232  1.17978e+09  1.17037e+09     0.992027
                   7  8.04988e+08  8.02794e+08     0.997275   1.2826e+09  1.27248e+09     0.992107
                 7.1  8.75921e+08  8.73594e+08     0.997343  1.39341e+09  1.38255e+09     0.992211
                 7.2  9.52542e+08   9.5006e+08     0.997395  1.51274e+09  1.50107e+09     0.992282
                 7.3  1.03525e+09  1.03261e+09     0.997449  1.64119e+09  1.62869e+09     0.992381
                 7.4  1.12447e+09  1.12167e+09     0.997505  1.77936e+09  1.76593e+09     0.992454
                 7.5  1.22067e+09  1.21769e+09     0.997556  1.92789e+09  1.91353e+09     0.992548
                 7.6  1.32434e+09  1.32117e+09     0.997612  2.08749e+09  2.07209e+09     0.992624
                 7.7  1.43599e+09  1.43261e+09     0.997645  2.25888e+09   2.2424e+09     0.992704
                 7.8  1.55618e+09  1.55262e+09     0.997712  2.44282e+09   2.4252e+09      0.99279
                 7.9  1.68548e+09  1.68167e+09     0.997742  2.64012e+09  2.62127e+09     0.992862
                   8  1.82451e+09  1.82049e+09     0.997799  2.85164e+09  2.83152e+09     0.992945
                 8.1  1.97393e+09  1.96964e+09     0.997827  3.07829e+09  3.05676e+09     0.993004
                 8.2  2.13444e+09  2.12992e+09     0.997879  3.32105e+09  3.29809e+09     0.993086
                 8.3   2.3068e+09  2.30199e+09     0.997914  3.58091e+09  3.55637e+09     0.993146
                 8.4  2.49177e+09  2.48667e+09     0.997954  3.85894e+09  3.83277e+09     0.993219
                 8.5  2.69017e+09  2.68478e+09     0.997993  4.15626e+09  4.12833e+09     0.993279
                 8.6  2.90289e+09  2.89717e+09     0.998032  4.47406e+09  4.44432e+09     0.993353
                 8.7  3.13083e+09   3.1248e+09     0.998074  4.81361e+09  4.78191e+09     0.993414
                 8.8    3.375e+09  3.36859e+09     0.998099  5.17621e+09  5.14245e+09     0.993477
                 8.9  3.63644e+09  3.62969e+09     0.998143  5.56328e+09  5.52735e+09     0.993542
                   9  3.91623e+09  3.90906e+09     0.998167  5.97627e+09  5.93801e+09     0.993599
                 9.1  4.21555e+09    4.208e+09     0.998209  6.41672e+09  6.37606e+09     0.993664
                 9.2  4.53562e+09  4.52759e+09      0.99823  6.88625e+09  6.84296e+09     0.993714
                 9.3  4.87774e+09   4.8693e+09      0.99827  7.38658e+09  7.34061e+09     0.993777
                 9.4  5.24328e+09  5.23433e+09     0.998294  7.91952e+09  7.87063e+09     0.993826
                 9.5  5.63368e+09  5.62424e+09     0.998325  8.48698e+09  8.43508e+09     0.993885
                 9.6  6.05046e+09  6.04049e+09     0.998353  9.09091e+09  9.03576e+09     0.993934
                 9.7  6.49521e+09   6.4847e+09     0.998381  9.73339e+09  9.67491e+09     0.993991
                 9.8  6.96964e+09  6.95856e+09      0.99841  1.04166e+10  1.03546e+10      0.99404
            interpolating states number/density done, cpu time[sec] = 0.369306, elapsed time[sec] = 0
            statistical weight (*** - deep tunneling regime):
             T, K    Classical PathIntegral
               50        10688      6757.82
              100      27224.8      24092.6
              150      66360.9      62826.4
              200       147693       143243
              250       305623       299783
              300       598443       590656
              350  1.12472e+06  1.11429e+06
              400  2.05055e+06  2.03661e+06
              450  3.65303e+06  3.63445e+06
              500  6.38725e+06  6.36264e+06
              550  1.09869e+07  1.09545e+07
              600  1.86116e+07  1.85692e+07
              650  3.10593e+07  3.10042e+07
              700  5.10646e+07  5.09935e+07
              750  8.27138e+07  8.26227e+07
              800  1.32011e+08  1.31895e+08
              850   2.0764e+08  2.07494e+08
              900  3.21981e+08  3.21797e+08
              950  4.92443e+08  4.92214e+08
             1000  7.43198e+08  7.42914e+08
         Model::MultiRotor::MultiRotor:  done, cpu time[sec] = 8.91979, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 8.92056, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -1.52
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.124955, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 0.001069, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 1.81387, elapsed time[sec] = 1
         effective power exponent at 409.787 kcal/mol = 11.029
      interpolating states number/density done, cpu time[sec] = 1.96279, elapsed time[sec] = 1
   Model::RRHO::RRHO:  done, cpu time[sec] = 10.8848, elapsed time[sec] = 1
   BARRIER: B8
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
            molecular geometry will be used to estimate rotational constants
            rotational configuration: nonlinear
            rotational constants[1/cm]:        0.553193       0.118076       0.103088
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 2.1e-05, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -3.46
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.000887, elapsed time[sec] = 0
         electronic states contribution ... done, cpu time[sec] = 3e-05, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000307, elapsed time[sec] = 0
         effective power exponent at 403.457 kcal/mol = 11.9257
      interpolating states number/density done, cpu time[sec] = 0.010421, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 0.01047, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q          W1a          W1b          HO2          HO2         H2O2           O2           B8           B1           B2
     100  1.82034e+32  4.39442e+30  1.48701e+28  1.48701e+28   7.0211e+27  2.47093e+27  1.96525e+31  2.44463e+34  1.57335e+43
     200  9.48094e+33  7.95155e+31  1.18995e+29  1.18995e+29   6.0117e+28  1.39779e+28  6.96597e+32  7.43803e+35  1.35759e+36
     300   1.3685e+35  6.40029e+32  4.03539e+29  4.03539e+29  2.30222e+29  3.85372e+28  8.05077e+33  5.03514e+36   5.4322e+34
     400  1.08162e+36  3.49294e+33   9.7275e+29   9.7275e+29  6.38838e+29  7.93349e+28  5.36955e+34  1.90337e+37  4.22317e+34
     500  6.01132e+36  1.50278e+34  1.96089e+30  1.96089e+30  1.48894e+30  1.39588e+29  2.58966e+35  5.47395e+37  7.98541e+34
     600  2.64602e+37  5.48251e+34  3.54333e+30  3.54333e+30  3.10526e+30  2.22872e+29  1.00792e+36  1.35697e+38  1.99526e+35
     700  9.84426e+37  1.76705e+35  5.94356e+30  5.94356e+30  5.98525e+30  3.33151e+29  3.36228e+36  3.06583e+38  5.38703e+35
     800  3.22047e+38  5.16302e+35  9.43992e+30  9.43992e+30  1.08648e+31  4.74727e+29  9.97121e+36  6.48805e+38  1.45543e+36
     900  9.50977e+38   1.3919e+36  1.43734e+31  1.43734e+31  1.88024e+31  6.52182e+29  2.69298e+37  1.30526e+39  3.81325e+36
    1000  2.58185e+39  3.50694e+36  2.11565e+31  2.11565e+31  3.12873e+31  8.70349e+29  6.73648e+37  2.51856e+39  9.57188e+36
    1100  6.53275e+39  8.33841e+36  3.02824e+31  3.02824e+31  5.03737e+31  1.13428e+30  1.58031e+38  4.68866e+39  2.29414e+37
    1200  1.55651e+40  1.88524e+37  4.23355e+31  4.23355e+31  7.88485e+31  1.44923e+30  3.50961e+38  8.45754e+39   5.2533e+37
    1300  3.52053e+40  4.07768e+37   5.8002e+31   5.8002e+31  1.20436e+32  1.82066e+30  7.43344e+38  1.48313e+40  1.15201e+38
    1400  7.60805e+40  8.47953e+37  7.80816e+31  7.80816e+31  1.80049e+32  2.25421e+30  1.51039e+39  2.53531e+40  2.42664e+38
    1500  1.57917e+41  1.70225e+38  1.03499e+32  1.03499e+32  2.64082e+32  2.75569e+30  2.95824e+39  4.23432e+40  4.92544e+38
    1600  3.16197e+41  3.31028e+38  1.35316e+32  1.35316e+32  3.80777e+32   3.3311e+30  5.60707e+39   6.9228e+40  9.66259e+38
    1700  6.12972e+41  6.25413e+38  1.74747e+32  1.74747e+32  5.40638e+32   3.9866e+30  1.03188e+40  1.10985e+41  1.83729e+39
    1800  1.15402e+42  1.15086e+39  2.23169e+32  2.23169e+32  7.56933e+32   4.7285e+30  1.84898e+40  1.74734e+41  3.39476e+39
    1900  2.11551e+42  2.06721e+39  2.82138e+32  2.82138e+32  1.04628e+33  5.56329e+30  3.23352e+40   2.7052e+41  6.10938e+39
    2000  3.78475e+42  3.63141e+39  3.53405e+32  3.53405e+32   1.4293e+33  6.49759e+30  5.53042e+40  4.12329e+41  1.07311e+40
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q          W1a          W1b           B8           B1           B2
     100  3.03967e+41  3.99522e+51  7.16371e+38  2.44463e+34  3.30169e+46
     200  3.87426e+38  2.39757e+42  4.20573e+36  7.43803e+35  6.21905e+37
     300  1.62356e+38   6.2003e+39  2.66938e+36  5.03514e+36  6.95471e+35
     400  2.18646e+38  6.06528e+38  4.17222e+36  1.90337e+37  2.85836e+35
     500  4.20247e+38  2.33681e+38  8.42533e+36  5.47395e+37  3.68706e+35
     600  9.11395e+38  1.70642e+38  1.83532e+37  1.35697e+38  7.13924e+35
     700  2.04507e+39  1.74317e+38  4.04463e+37  3.06583e+38   1.6066e+36
     800  4.57883e+39  2.15146e+38  8.78947e+37  6.48805e+38  3.78644e+36
     900  1.00673e+40  2.96719e+38  1.86391e+38  1.30526e+39  8.92065e+36
    1000  2.15873e+40  4.37313e+38  3.84242e+38  2.51856e+39  2.05678e+37
    1100   4.5032e+40  6.70523e+38  7.69432e+38  4.68866e+39  4.59845e+37
    1200  9.13498e+40  1.05177e+39  1.49762e+39  8.45754e+39  9.93706e+37
    1300  1.80321e+41  1.66961e+39  2.83701e+39  1.48313e+40  2.07486e+38
    1400  3.46766e+41  2.66328e+39  5.23856e+39  2.53531e+40  4.19068e+38
    1500  6.50539e+41   4.2488e+39  9.44382e+39  4.23432e+40  8.20174e+38
    1600  1.19227e+42   6.7574e+39  1.66473e+40   6.9228e+40  1.55852e+39
    1700  2.13772e+42  1.06912e+40  2.87368e+40  1.10985e+41  2.88128e+39
    1800  3.75476e+42  1.68032e+40  4.86438e+40  1.74734e+41   5.1923e+39
    1900  6.46873e+42  2.62102e+40  8.08464e+40   2.7052e+41  9.13766e+39
    2000  1.09439e+43  4.05515e+40  1.32082e+41  4.12329e+41  1.57304e+40
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B8            D           B1            D           B2            D
     100            1           -0            1           -0   2.1605e+12      -5.6439
     200            1           -0            1           -0      11085.7     -3.70151
     300            1           -0            1           -0      58.5559     -2.42635
     400            1           -0            1           -0      8.57539     -1.70811
     500            1           -0            1           -0      3.71379     -1.30365
     600            1           -0            1           -0      2.41876     -1.05312
     700            1           -0            1           -0      1.88712     -0.88338
     800            1           -0            1           -0      1.61339    -0.760444
     900            1           -0            1           -0      1.45198    -0.666973
    1000            1           -0            1           -0      1.34794    -0.593332
    1100            1           -0            1           -0      1.27653    -0.533681
    1200            1           -0            1           -0      1.22519    -0.484314
    1300            1           -0            1           -0      1.18694    -0.442729
    1400            1           -0            1           -0      1.15762    -0.407192
    1500            1           -0            1           -0      1.13462    -0.376457
    1600            1           -0            1           -0      1.11622    -0.349589
    1700            1           -0            1           -0      1.10128    -0.325915
    1800            1           -0            1           -0      1.08896    -0.304848
    1900            1           -0            1           -0      1.07869    -0.286012
    2000            1           -0            1           -0      1.07004    -0.269051
Model::init:  done, cpu time[sec] = 14.7111, elapsed time[sec] = 1
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 4170 1/cm
      Energy step      = 28 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001941
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000497
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.192621
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.216434
         W1a Well: minimal relaxation eigenvalue = 0.0683137
         W1a Well: maximal relaxation eigenvalue = 4.21349
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1486 1/cm
         W1b Well: average energy = -8.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002174
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.284236
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078527
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.302541
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.328824
         W1b Well: minimal relaxation eigenvalue = 0.0782085
         W1b Well: maximal relaxation eigenvalue = 1.14172
         W1b Well:       grid size = 242
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2606 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 272
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.43236, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 242
      MasterEquation::Barrier::truncate: real weight = 2.32813e+24
      MasterEquation::Barrier::truncate: effective weight = 1.83844e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1486  -1234 1.47e+05 4.67e+11
        W1b  -2606  -2606 4.01e+04 4.58e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 6.13e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 4.11e+13
         B2  -2606 2.93e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00104  2.12e-16  7.52e-57
        W1b       960         1  2.04e-13  7.22e-54
         P1  4.71e+15  4.91e+12         1  3.55e-41
         P2  1.33e+56  1.38e+53  2.82e+40         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000162  2.74e-20   9.7e-61
        W1b  6.19e+03         1  1.69e-16     6e-57
         P1  3.65e+19  5.91e+15         1  3.55e-41
         P2  1.03e+60  1.67e+56  2.82e+40         1
   MasterEquation::set:  done, cpu time[sec] = 1.43685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.83229, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.294416, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1639, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14    0.0446         0         1
          1      14.7      1.09         1   -0.0428
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0777    0.0446  -0.00138        -1
          1         1      1.09        -1   0.00138
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.16685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.82035, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.276759, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.10485, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.254     0.011         0         1
          1      4.61     0.379         1    -0.113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0174     0.011  -0.00366        -1
          1     0.315     0.379        -1   0.00366
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.1072, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.245475, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002928, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.255021, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.132   0.00501         0         1
          1      2.71     0.302         1    -0.209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00904   0.00501  -0.00673        -1
          1     0.185     0.302        -1   0.00673
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.255395, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019271, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002916, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022245, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0683   0.00204         0         1
          1      1.63     0.248         1    -0.352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00467   0.00204   -0.0114        -1
          1     0.111     0.248        -1    0.0114
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019278, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002906, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022243, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0683137
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0349  0.000744         0     0.999
          1         1     0.193         1    -0.516
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00239  0.000744   -0.0167        -1
          1    0.0685     0.193        -1    0.0167
         *Z       ---       ---  3.35e+14  1.04e+16
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022266, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 4379 1/cm
      Energy step      = 29 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 77
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001989
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000503
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.095393
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.217351
         W1a Well: minimal relaxation eigenvalue = 0.0670693
         W1a Well: maximal relaxation eigenvalue = 3.76037
         W1a Well:       grid size = 202
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -8.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001995
         W1b Well: collisional kernel bandwidth = 77
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.289006
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.084932
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.086918
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.334991
         W1b Well: minimal relaxation eigenvalue = 0.0755824
         W1b Well: maximal relaxation eigenvalue = 1.16134
         W1b Well:       grid size = 244
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2697 1/cm
         B8 Barrier:        grid size = 193
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 270
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.13638, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 244
      MasterEquation::Barrier::truncate: real weight = 9.98537e+23
      MasterEquation::Barrier::truncate: effective weight = 9.88082e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1218 1.74e+05 6.09e+11
        W1b  -2697  -2697 2.75e+04 5.63e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 8.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 5.31e+13
         B2  -2697 4.03e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00132  1.25e-16  4.35e-55
        W1b       759         1  9.52e-14   3.3e-52
         P1  7.98e+15  1.05e+13         1  3.47e-39
         P2   2.3e+54  3.03e+51  2.88e+38         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000331  1.67e-20  5.81e-59
        W1b  3.02e+03         1  5.06e-17  1.76e-55
         P1  5.98e+19  1.98e+16         1  3.47e-39
         P2  1.72e+58   5.7e+54  2.88e+38         1
   MasterEquation::set:  done, cpu time[sec] = 1.14034, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.88101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.316821, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.2197, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03    0.0506         0         1
          1      17.5      1.06         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0693    0.0506  -0.00123        -1
          1      1.18      1.06        -1   0.00123
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.22215, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.8904, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.285005, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18337, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0128         0         1
          1      5.22     0.389         1    -0.096
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0159    0.0128  -0.00348        -1
          1      0.35     0.389        -1   0.00348
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.18571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.188391, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002987, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.198222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.124   0.00599         0         1
          1      3.04     0.321         1    -0.183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834   0.00599  -0.00664        -1
          1     0.204     0.321        -1   0.00664
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.198611, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019538, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002969, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022569, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0647   0.00251         0         1
          1      1.81     0.271         1    -0.318
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00434   0.00251   -0.0116        -1
          1     0.121     0.271        -1    0.0116
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022593, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 210 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.019512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002973, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.022544, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0670693
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0333  0.000949         0     0.999
          1      1.11     0.217         1    -0.478
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00223  0.000949   -0.0174        -1
          1    0.0745     0.217        -1    0.0174
         *Z       ---       ---  2.88e+14  7.94e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.022568, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 4587 1/cm
      Energy step      = 31 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001917
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000472
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.036547
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.207028
         W1a Well: minimal relaxation eigenvalue = 0.0658303
         W1a Well: maximal relaxation eigenvalue = 4.83086
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1489 1/cm
         W1b Well: average energy = -8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001813
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.276029
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.077917
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075231
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.310567
         W1b Well: minimal relaxation eigenvalue = 0.0733005
         W1b Well: maximal relaxation eigenvalue = 1.16877
         W1b Well:       grid size = 237
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2760 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1241 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 259
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3442 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00983, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 237
      MasterEquation::Barrier::truncate: real weight = 4.71822e+23
      MasterEquation::Barrier::truncate: effective weight = 5.55309e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1489  -1241 1.35e+05 7.87e+11
        W1b  -2760  -2760 2.08e+04 6.88e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1241 1.06e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 6.79e+13
         B2  -2760 5.48e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00185  7.53e-17  1.69e-53
        W1b       542         1  4.08e-14  9.13e-51
         P1  1.33e+16  2.45e+13         1  2.24e-37
         P2  5.93e+52   1.1e+50  4.47e+36         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1  0.000636  1.07e-20  2.41e-57
        W1b  1.57e+03         1  1.69e-17  3.78e-54
         P1  9.31e+19  5.92e+16         1  2.24e-37
         P2  4.16e+56  2.64e+53  4.47e+36         1
   MasterEquation::set:  done, cpu time[sec] = 1.01394, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.73547, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.299905, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05087, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01    0.0585         0         1
          1      19.9      1.14         1   -0.0288
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0664    0.0585  -0.00124        -1
          1      1.31      1.14        -1   0.00124
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.0533, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.735, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.267461, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01003, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.237    0.0155         0         1
          1      5.81     0.411         1   -0.0846
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0155  -0.00363        -1
          1     0.382     0.411        -1   0.00363
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.01297, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.552834, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002792, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.562287, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126   0.00748         0         1
          1      3.35     0.345         1    -0.164
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00828   0.00748  -0.00705        -1
          1     0.221     0.345        -1   0.00705
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.562656, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018028, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002786, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020871, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.066   0.00325         0     0.999
          1      1.99     0.297         1    -0.291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00435   0.00325   -0.0125        -1
          1     0.131     0.297        -1    0.0125
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020895, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 220 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018004, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002776, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020836, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0658303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0343   0.00128         0     0.999
          1      1.22     0.243         1    -0.444
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00226   0.00128   -0.0191        -1
          1    0.0805     0.243        -1    0.0191
         *Z       ---       ---  2.48e+14  5.76e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02086, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 4796 1/cm
      Energy step      = 32 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 75
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001988
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00048
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035607
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.207959
         W1a Well: minimal relaxation eigenvalue = 0.0647287
         W1a Well: maximal relaxation eigenvalue = 3.73205
         W1a Well:       grid size = 196
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00187
         W1b Well: collisional kernel bandwidth = 75
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.278458
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.078465
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083559
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.322423
         W1b Well: minimal relaxation eigenvalue = 0.0711919
         W1b Well: maximal relaxation eigenvalue = 1.19199
         W1b Well:       grid size = 238
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2819 1/cm
         B8 Barrier:        grid size = 188
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 257
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3427 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.03266, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 238
      MasterEquation::Barrier::truncate: real weight = 2.45735e+23
      MasterEquation::Barrier::truncate: effective weight = 3.20279e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1219 1.71e+05 1.01e+12
        W1b  -2819  -2819 1.59e+04 8.38e+09
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 1.39e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 8.64e+13
         B2  -2819 7.41e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0026  4.89e-17  4.91e-52
        W1b       384         1  1.88e-14  1.89e-49
         P1  2.05e+16  5.33e+13         1     1e-35
         P2  2.04e+51   5.3e+48  9.95e+34         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00116   7.2e-21  7.23e-56
        W1b       863         1  6.21e-18  6.24e-53
         P1  1.39e+20  1.61e+17         1     1e-35
         P2  1.38e+55   1.6e+52  9.95e+34         1
   MasterEquation::set:  done, cpu time[sec] = 1.0365, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75943, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.300117, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0812, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.997    0.0677         0         1
          1      23.5      1.03         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0645    0.0677  -0.00128        -1
          1      1.52      1.03        -1   0.00128
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.08364, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.76407, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.266722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03846, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.24    0.0188         0         1
          1       6.5      0.42         1   -0.0752
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0188  -0.00384        -1
          1     0.421      0.42        -1   0.00384
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.04086, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.479064, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002782, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.488339, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.129   0.00933         0         1
          1      3.71     0.367         1    -0.148
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00835   0.00933  -0.00754        -1
          1      0.24     0.367        -1   0.00754
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.488719, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018225, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002801, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021083, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0684    0.0042         0     0.999
          1      2.19     0.323         1    -0.266
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00443    0.0042   -0.0136        -1
          1     0.142     0.323        -1    0.0136
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 230 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018167, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002787, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0647287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0358   0.00173         0     0.999
          1      1.34     0.269         1    -0.412
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00232   0.00173    -0.021        -1
          1     0.087     0.269        -1     0.021
         *Z       ---       ---  2.21e+14  4.33e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021035, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 5004 1/cm
      Energy step      = 33 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 76
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001999
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000472
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.041959
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.209887
         W1a Well: minimal relaxation eigenvalue = 0.0635922
         W1a Well: maximal relaxation eigenvalue = 5.85651
         W1a Well:       grid size = 197
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -7.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001946
         W1b Well: collisional kernel bandwidth = 76
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.278793
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.079858
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.097217
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.31988
         W1b Well: minimal relaxation eigenvalue = 0.0691991
         W1b Well: maximal relaxation eigenvalue = 1.22451
         W1b Well:       grid size = 239
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2882 1/cm
         B8 Barrier:        grid size = 189
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 256
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3443 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.05396, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 239
      MasterEquation::Barrier::truncate: real weight = 1.38559e+23
      MasterEquation::Barrier::truncate: effective weight = 1.93756e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1232 1.49e+05 1.29e+12
        W1b  -2882  -2882 1.15e+04 1.02e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  1.8e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 1.09e+14
         B2  -2882 9.92e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00365  3.29e-17  1.08e-50
        W1b       274         1  9.02e-15  2.96e-48
         P1  3.04e+16  1.11e+14         1  3.28e-34
         P2  9.24e+49  3.37e+47  3.04e+33         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00201     5e-21  1.64e-54
        W1b       497         1  2.49e-18  8.17e-52
         P1     2e+20  4.02e+17         1  3.28e-34
         P2  6.08e+53  1.22e+51  3.04e+33         1
   MasterEquation::set:  done, cpu time[sec] = 1.05775, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.75437, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.297239, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.06789, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.992     0.078         0         1
          1      25.8      1.16         1   -0.0219
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.078  -0.00133        -1
          1      1.64      1.16        -1   0.00133
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.07032, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.74039, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.264444, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.01242, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.246    0.0226         0         1
          1       7.1     0.452         1   -0.0672
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0156    0.0226  -0.00406        -1
          1     0.451     0.452        -1   0.00406
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 2.01484, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.446662, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002836, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.455942, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134    0.0116         0         1
          1      4.05     0.395         1    -0.133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0085    0.0116  -0.00805        -1
          1     0.257     0.395        -1   0.00805
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.456321, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018503, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002813, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021374, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0718    0.0054         0     0.999
          1      2.38     0.351         1    -0.243
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00456    0.0054   -0.0147        -1
          1     0.151     0.351        -1    0.0147
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.021398, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 240 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.018455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002815, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.021327, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0635922
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.038   0.00232         0     0.999
          1      1.47     0.297         1    -0.381
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00242   0.00232    -0.023        -1
          1    0.0933     0.297        -1     0.023
         *Z       ---       ---  1.99e+14   3.3e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.02135, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 5213 1/cm
      Energy step      = 35 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001907
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000448
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037021
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.20131
         W1a Well: minimal relaxation eigenvalue = 0.0624809
         W1a Well: maximal relaxation eigenvalue = 8.14056
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1507 1/cm
         W1b Well: average energy = -7.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00177
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.272015
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075555
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083447
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.31201
         W1b Well: minimal relaxation eigenvalue = 0.0670802
         W1b Well: maximal relaxation eigenvalue = 1.23461
         W1b Well:       grid size = 234
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -2976 1/cm
         B8 Barrier:        grid size = 184
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1226 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 247
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3432 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.00641, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 234
      MasterEquation::Barrier::truncate: real weight = 8.27765e+22
      MasterEquation::Barrier::truncate: effective weight = 1.28344e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1507  -1226 1.59e+05 1.65e+12
        W1b  -2976  -2976 6.97e+03 1.23e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1226 2.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 1.37e+14
         B2  -2976 1.32e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00486  2.23e-17  1.81e-49
        W1b       206         1  4.59e-15  3.73e-47
         P1  4.48e+16  2.18e+14         1  8.12e-33
         P2  5.52e+48  2.68e+46  1.23e+32         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00335  3.59e-21  2.92e-53
        W1b       299         1  1.07e-18  8.71e-51
         P1  2.78e+20  9.31e+17         1  8.12e-33
         P2  3.43e+52  1.15e+50  1.23e+32         1
   MasterEquation::set:  done, cpu time[sec] = 1.01021, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.66685, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.277023, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97012, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.941    0.0891         0         1
          1      28.5      1.29         1   -0.0184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588    0.0891  -0.00128        -1
          1      1.78      1.29        -1   0.00128
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.97256, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.65728, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.252454, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.91713, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.242    0.0267         0         1
          1      7.75     0.488         1    -0.059
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0152    0.0267  -0.00411        -1
          1     0.484     0.488        -1   0.00411
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91948, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.720493, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002662, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.729606, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.134     0.014         0     0.999
          1      4.41     0.426         1    -0.119
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00836     0.014  -0.00829        -1
          1     0.275     0.426        -1   0.00829
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.729983, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002635, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020035, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0728   0.00675         0     0.999
          1      2.59     0.382         1     -0.22
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00455   0.00675   -0.0153        -1
          1     0.162     0.382        -1    0.0153
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020059, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 250 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01728, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002636, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0624809
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0391   0.00301         0     0.998
          1       1.6     0.328         1    -0.349
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00244   0.00301   -0.0243        -1
          1       0.1     0.328        -1    0.0243
         *Z       ---       ---   1.8e+14  2.58e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019995, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 5421 1/cm
      Energy step      = 36 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 74
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001835
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00046
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032238
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.196744
         W1a Well: minimal relaxation eigenvalue = 0.0615737
         W1a Well: maximal relaxation eigenvalue = 6.0739
         W1a Well:       grid size = 192
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -7.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00186
         W1b Well: collisional kernel bandwidth = 74
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.268589
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.07627
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088329
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.309333
         W1b Well: minimal relaxation eigenvalue = 0.0653613
         W1b Well: maximal relaxation eigenvalue = 1.26245
         W1b Well:       grid size = 235
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3038 1/cm
         B8 Barrier:        grid size = 185
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1238 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -14 1/cm
         B2 Barrier:        grid size = 246
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3434 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.996168, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 235
      MasterEquation::Barrier::truncate: real weight = 5.27243e+22
      MasterEquation::Barrier::truncate: effective weight = 8.5301e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1238 1.39e+05 2.08e+12
        W1b  -3038  -3038 5.14e+03 1.48e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1238 2.95e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -14  1.7e+14
         B2  -3038 1.75e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00685   1.6e-17  2.51e-48
        W1b       146         1  2.34e-15  3.67e-46
         P1  6.24e+16  4.27e+14         1  1.57e-31
         P2  3.98e+47  2.72e+45  6.38e+30         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00537  2.66e-21  4.16e-52
        W1b       186         1  4.95e-19  7.76e-50
         P1  3.76e+20  2.02e+18         1  1.57e-31
         P2   2.4e+51  1.29e+49  6.38e+30         1
   MasterEquation::set:  done, cpu time[sec] = 1.0003, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.68622, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.288875, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99348, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.956     0.103         0         1
          1      32.8      1.12         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0588     0.103  -0.00136        -1
          1      2.02      1.12        -1   0.00136
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.99617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.67883, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.257532, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.94381, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.255    0.0322         0         1
          1      8.58     0.498         1   -0.0535
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0157    0.0322  -0.00443        -1
          1     0.529     0.498        -1   0.00443
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.94616, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.677281, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002702, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.686292, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.142    0.0173         0     0.999
          1      4.84     0.452         1    -0.108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00877    0.0173  -0.00894        -1
          1     0.298     0.452        -1   0.00894
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.68668, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017469, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002707, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020231, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0787   0.00864         0     0.999
          1      2.84     0.414         1    -0.201
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00484   0.00864   -0.0166        -1
          1     0.175     0.414        -1    0.0166
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020258, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 260 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017457, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002686, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020198, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0615737
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0428   0.00402         0     0.998
          1      1.75     0.361         1    -0.321
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00263   0.00402   -0.0266        -1
          1     0.108     0.361        -1    0.0266
         *Z       ---       ---  1.67e+14  2.01e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020222, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 5630 1/cm
      Energy step      = 38 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001902
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00043
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035383
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.193199
         W1a Well: minimal relaxation eigenvalue = 0.0606607
         W1a Well: maximal relaxation eigenvalue = 4.42925
         W1a Well:       grid size = 187
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -7.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001776
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.267813
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.076955
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072465
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.292251
         W1b Well: minimal relaxation eigenvalue = 0.0637773
         W1b Well: maximal relaxation eigenvalue = 1.33709
         W1b Well:       grid size = 230
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3110 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1248 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 239
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.962109, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 230
      MasterEquation::Barrier::truncate: real weight = 3.56515e+22
      MasterEquation::Barrier::truncate: effective weight = 6.13364e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1248 1.24e+05 2.62e+12
        W1b  -3110  -3110 3.08e+03 1.79e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1248 3.76e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 2.11e+14
         B2  -3110 2.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0096  1.15e-17   2.8e-47
        W1b       104         1   1.2e-15  2.91e-45
         P1  8.68e+16  8.34e+14         1  2.43e-30
         P2  3.58e+46  3.43e+44  4.12e+29         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1   0.00832  2.01e-21  4.89e-51
        W1b       120         1  2.42e-19  5.88e-49
         P1  4.96e+20  4.13e+18         1  2.43e-30
         P2  2.04e+50   1.7e+48  4.12e+29         1
   MasterEquation::set:  done, cpu time[sec] = 0.966165, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58742, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.250648, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87088, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.987     0.118         0         1
          1      37.3      1.02         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0599     0.118  -0.00148        -1
          1      2.26      1.02        -1   0.00148
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87327, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59093, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240954, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83893, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.272    0.0385         0         1
          1      9.45      0.52         1    -0.049
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0165    0.0385   -0.0048        -1
          1     0.573      0.52        -1    0.0048
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.84128, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.911611, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002522, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.920566, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.154    0.0213         0     0.999
          1      5.31     0.485         1   -0.0987
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00935    0.0213  -0.00967        -1
          1     0.322     0.485        -1   0.00967
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.920938, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016492, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002505, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01905, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0863     0.011         0     0.998
          1      3.11      0.45         1    -0.184
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00524     0.011    -0.018        -1
          1     0.188      0.45        -1     0.018
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019073, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 270 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016411, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002504, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018968, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0606607
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0476   0.00534         0     0.997
          1      1.92     0.397         1    -0.295
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00289   0.00534   -0.0289        -1
          1     0.117     0.397        -1    0.0289
         *Z       ---       ---  1.54e+14  1.57e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018993, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 5838 1/cm
      Energy step      = 39 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001884
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000437
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031229
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.192192
         W1a Well: minimal relaxation eigenvalue = 0.0597142
         W1a Well: maximal relaxation eigenvalue = 6.74834
         W1a Well:       grid size = 188
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -7.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001855
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.242559
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075328
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.094711
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.294759
         W1b Well: minimal relaxation eigenvalue = 0.0624366
         W1b Well: maximal relaxation eigenvalue = 1.434
         W1b Well:       grid size = 231
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3171 1/cm
         B8 Barrier:        grid size = 181
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 238
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.954954, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 231
      MasterEquation::Barrier::truncate: real weight = 2.51275e+22
      MasterEquation::Barrier::truncate: effective weight = 4.4521e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1220 1.69e+05 3.27e+12
        W1b  -3171  -3171 1.79e+03 2.14e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 4.75e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12  2.6e+14
         B2  -3171 2.99e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0136   8.7e-18  2.69e-46
        W1b      73.7         1  6.41e-16  1.98e-44
         P1  1.15e+17  1.56e+15         1  3.09e-29
         P2  3.71e+45  5.04e+43  3.23e+28         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0125  1.56e-21  4.83e-50
        W1b      79.9         1  1.25e-19  3.86e-48
         P1   6.4e+20  8.01e+18         1  3.09e-29
         P2  2.07e+49  2.59e+47  3.23e+28         1
   MasterEquation::set:  done, cpu time[sec] = 0.95876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.58915, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.260641, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.88263, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.06     0.135         0         1
          1      40.8      1.12         1   -0.0143
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0631     0.135  -0.00167        -1
          1      2.44      1.12        -1   0.00167
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.88504, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.59257, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.244977, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.84472, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.299     0.046         0     0.999
          1      10.3     0.564         1   -0.0459
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0178     0.046  -0.00534        -1
          1     0.614     0.564        -1   0.00534
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.84707, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.877101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002578, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885729, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.172    0.0262         0     0.999
          1      5.78     0.525         1   -0.0914
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0103    0.0262   -0.0106        -1
          1     0.345     0.525        -1    0.0106
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886111, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016649, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002563, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019266, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0974     0.014         0     0.998
          1      3.39     0.489         1    -0.169
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00582     0.014   -0.0197        -1
          1     0.202     0.489        -1    0.0197
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01929, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 280 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016578, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002547, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019179, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0597142
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0545   0.00708         0     0.996
          1       2.1     0.436         1    -0.271
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00325   0.00708   -0.0316        -1
          1     0.126     0.436        -1    0.0316
         *Z       ---       ---  1.45e+14  1.25e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019203, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 6047 1/cm
      Energy step      = 40 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -1.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00178
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000442
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032816
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.195397
         W1a Well: minimal relaxation eigenvalue = 0.0587158
         W1a Well: maximal relaxation eigenvalue = 10.7587
         W1a Well:       grid size = 189
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -7.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001712
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.265649
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075146
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08909
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.299181
         W1b Well: minimal relaxation eigenvalue = 0.0612068
         W1b Well: maximal relaxation eigenvalue = 1.53103
         W1b Well:       grid size = 232
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3233 1/cm
         B8 Barrier:        grid size = 182
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -33 1/cm
         B2 Barrier:        grid size = 237
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.981462, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 232
      MasterEquation::Barrier::truncate: real weight = 1.86003e+22
      MasterEquation::Barrier::truncate: effective weight = 3.37922e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1232 1.49e+05 4.08e+12
        W1b  -3233  -3233 1.24e+03 2.56e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 5.97e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -33  3.2e+14
         B2  -3233 3.88e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.019  6.72e-18  2.22e-45
        W1b      52.7         1  3.54e-16  1.17e-43
         P1  1.49e+17  2.83e+15         1  3.31e-28
         P2   4.5e+44  8.56e+42  3.03e+27         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0183  1.24e-21  4.09e-49
        W1b      54.6         1  6.75e-20  2.23e-47
         P1  8.09e+20  1.48e+19         1  3.31e-28
         P2  2.45e+48  4.48e+46  3.03e+27         1
   MasterEquation::set:  done, cpu time[sec] = 0.985275, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.62531, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.268824, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.912, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.155         0         1
          1      43.4      1.46         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.067     0.155  -0.00189        -1
          1      2.55      1.46        -1   0.00189
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.91444, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.61441, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.246407, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.8683, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0546         0     0.999
          1      11.1      0.63         1   -0.0432
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0195    0.0546  -0.00595        -1
          1     0.651      0.63        -1   0.00595
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.87067, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.839005, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002617, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.847706, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.193    0.0319         0     0.998
          1      6.26     0.575         1   -0.0849
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0113    0.0319   -0.0117        -1
          1     0.367     0.575        -1    0.0117
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.848082, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016831, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002605, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.111    0.0176         0     0.997
          1      3.69     0.534         1    -0.156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00651    0.0176   -0.0215        -1
          1     0.216     0.534        -1    0.0215
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019514, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 290 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016794, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.002596, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019448, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0587158
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0629   0.00929         0     0.995
          1       2.3     0.479         1     -0.25
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00369   0.00929   -0.0344    -0.999
          1     0.135     0.479    -0.999    0.0344
         *Z       ---       ---  1.38e+14     1e+15
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019472, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 6255 1/cm
      Energy step      = 42 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001856
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000425
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034386
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.176514
         W1a Well: minimal relaxation eigenvalue = 0.057859
         W1a Well: maximal relaxation eigenvalue = 11.148
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -7.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002212
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.248694
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.075034
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.090349
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.291851
         W1b Well: minimal relaxation eigenvalue = 0.0600403
         W1b Well: maximal relaxation eigenvalue = 1.63052
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3321 1/cm
         B8 Barrier:        grid size = 178
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 231
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.940071, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 1.41718e+22
      MasterEquation::Barrier::truncate: effective weight = 2.71014e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1220 1.69e+05 5.05e+12
        W1b  -3321  -3321      541 3.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 7.47e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3  3.9e+14
         B2  -3321    5e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  5.16e-18  1.55e-44
        W1b      38.2         1  1.97e-16  5.94e-43
         P1  1.94e+17  5.07e+15         1  3.01e-27
         P2  6.43e+43  1.68e+42  3.32e+26         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0262  9.97e-22  3.01e-48
        W1b      38.2         1  3.81e-20  1.15e-46
         P1     1e+21  2.63e+19         1  3.01e-27
         P2  3.33e+47  8.71e+45  3.32e+26         1
   MasterEquation::set:  done, cpu time[sec] = 0.943871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54128, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.267708, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.82334, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.176         0         1
          1      47.7      1.56         1   -0.0131
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0713     0.176  -0.00212        -1
          1      2.76      1.56        -1   0.00212
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.82575, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.52866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235098, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.77095, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.367    0.0644         0     0.999
          1      12.1     0.678         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0213    0.0644  -0.00659        -1
          1     0.701     0.678        -1   0.00659
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.77331, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02921, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002493, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.03759, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.216    0.0385         0     0.998
          1      6.83     0.623         1   -0.0791
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0125    0.0385   -0.0128        -1
          1     0.395     0.623        -1    0.0128
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.03796, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016021, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002458, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018532, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.126    0.0219         0     0.996
          1      4.03     0.582         1    -0.144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00729    0.0219   -0.0233        -1
          1     0.233     0.582        -1    0.0233
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018556, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015968, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002466, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018487, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.057859
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0    0.0725     0.012         0     0.994
          1      2.53     0.525         1    -0.229
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00419     0.012   -0.0371    -0.999
          1     0.146     0.525    -0.999    0.0371
         *Z       ---       ---  1.31e+14  8.09e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018511, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 6464 1/cm
      Energy step      = 43 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 72
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001805
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000424
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03405
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.181302
         W1a Well: minimal relaxation eigenvalue = 0.0572581
         W1a Well: maximal relaxation eigenvalue = 6.11952
         W1a Well:       grid size = 185
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = -7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001873
         W1b Well: collisional kernel bandwidth = 72
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.255016
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.072362
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085505
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.292473
         W1b Well: minimal relaxation eigenvalue = 0.0590898
         W1b Well: maximal relaxation eigenvalue = 2.0284
         W1b Well:       grid size = 229
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 179
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3425 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.94349, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 229
      MasterEquation::Barrier::truncate: real weight = 1.12304e+22
      MasterEquation::Barrier::truncate: effective weight = 2.20058e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1232 1.49e+05 6.24e+12
        W1b  -3383  -3383      235 3.62e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232 9.31e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 4.75e+14
         B2  -3383 6.42e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0361  4.13e-18  9.83e-44
        W1b      27.7         1  1.14e-16  2.72e-42
         P1  2.42e+17  8.75e+15         1  2.38e-26
         P2  1.02e+43  3.67e+41   4.2e+25         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0366  8.17e-22  1.95e-47
        W1b      27.3         1  2.23e-20  5.32e-46
         P1  1.22e+21  4.48e+19         1  2.38e-26
         P2  5.14e+46  1.88e+45   4.2e+25         1
   MasterEquation::set:  done, cpu time[sec] = 0.94729, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.5534, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.261094, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83414, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.199         0         1
          1      55.5       1.1         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0786     0.199  -0.00248        -1
          1      3.18       1.1        -1   0.00248
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83654, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54258, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.235118, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78498, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.416    0.0756         0     0.999
          1      13.4     0.696         1   -0.0392
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0238    0.0756  -0.00744        -1
          1     0.769     0.696        -1   0.00744
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.78734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00229, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00249, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01071, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.247    0.0463         0     0.997
          1      7.54     0.666         1   -0.0746
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0142    0.0463   -0.0142        -1
          1     0.432     0.666        -1    0.0142
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016133, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002472, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018659, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.146    0.0271         0     0.995
          1      4.44     0.633         1    -0.134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00834    0.0271   -0.0255        -1
          1     0.254     0.633        -1    0.0255
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018683, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 310 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016083, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002469, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018606, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0572581
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.085    0.0154         0     0.992
          1      2.79     0.576         1    -0.211
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00487    0.0154   -0.0401    -0.999
          1      0.16     0.576    -0.999    0.0401
         *Z       ---       ---  1.26e+14  6.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018629, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 6672 1/cm
      Energy step      = 44 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 73
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001846
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000435
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030297
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.18944
         W1a Well: minimal relaxation eigenvalue = 0.0563928
         W1a Well: maximal relaxation eigenvalue = 9.76691
         W1a Well:       grid size = 186
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1512 1/cm
         W1b Well: average energy = -6.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001884
         W1b Well: collisional kernel bandwidth = 73
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.251614
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071813
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093483
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.288067
         W1b Well: minimal relaxation eigenvalue = 0.0582828
         W1b Well: maximal relaxation eigenvalue = 1.795
         W1b Well:       grid size = 228
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 180
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 230
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3448 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.947464, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 228
      MasterEquation::Barrier::truncate: real weight = 9.13054e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83104e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1512  -1247 1.24e+05 7.67e+12
        W1b  -3359  -3359      386 4.29e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 1.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 5.75e+14
         B2  -3359 8.19e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0497  3.35e-18  5.55e-43
        W1b      20.1         1  6.75e-17  1.12e-41
         P1  2.98e+17  1.48e+16         1  1.65e-25
         P2   1.8e+42  8.95e+40  6.04e+24         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0501  6.79e-22  1.12e-46
        W1b      19.9         1  1.35e-20  2.24e-45
         P1  1.47e+21  7.38e+19         1  1.65e-25
         P2   8.9e+45  4.46e+44  6.04e+24         1
   MasterEquation::set:  done, cpu time[sec] = 0.951268, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.55739, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.248073, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.83114, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.58     0.223         0     0.999
          1      58.9      1.45         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.223  -0.00295        -1
          1      3.32      1.45        -1   0.00295
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.83357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.54814, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.239854, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79504, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.482    0.0882         0     0.998
          1      14.5     0.772         1   -0.0382
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0272    0.0882  -0.00852        -1
          1      0.82     0.772        -1   0.00852
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.79739, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.998869, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002523, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0073, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.289    0.0552         0     0.996
          1       8.2      0.73         1    -0.071
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0552   -0.0158        -1
          1     0.462      0.73        -1    0.0158
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00769, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016147, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00251, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01871, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.171    0.0333         0     0.994
          1      4.86     0.692         1    -0.126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00967    0.0333    -0.028        -1
          1     0.274     0.692        -1     0.028
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 320 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002503, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018659, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0563928
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.101    0.0197         0      0.99
          1      3.07     0.631         1    -0.196
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00571    0.0197   -0.0436    -0.999
          1     0.173     0.631    -0.999    0.0436
         *Z       ---       ---  1.22e+14  5.49e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018682, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 6881 1/cm
      Energy step      = 46 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001715
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000414
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030171
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.181897
         W1a Well: minimal relaxation eigenvalue = 0.0557725
         W1a Well: maximal relaxation eigenvalue = 6.3968
         W1a Well:       grid size = 182
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -6.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00179
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.250939
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.071941
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.075676
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.278078
         W1b Well: minimal relaxation eigenvalue = 0.0574528
         W1b Well: maximal relaxation eigenvalue = 1.93711
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -18 1/cm
         B2 Barrier:        grid size = 225
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.910577, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 7.66425e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60571e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1214 1.81e+05 9.39e+12
        W1b  -3376  -3376      301 5.08e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 1.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -18 6.94e+14
         B2  -3376 1.04e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0666   2.7e-18  2.76e-42
        W1b        15         1  4.06e-17  4.15e-41
         P1   3.7e+17  2.46e+16         1  1.02e-24
         P2  3.62e+41  2.41e+40  9.79e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0675  5.73e-22  5.85e-46
        W1b      14.8         1  8.49e-21  8.67e-45
         P1  1.75e+21  1.18e+20         1  1.02e-24
         P2  1.71e+45  1.15e+44  9.79e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.914399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.46455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.232918, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72659, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.77     0.249         0     0.999
          1      66.7      1.21         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.099     0.249  -0.00343        -1
          1      3.72      1.21        -1   0.00343
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.729, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45684, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.224607, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.549     0.102         0     0.998
          1        16     0.816         1   -0.0372
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0306     0.102  -0.00959        -1
          1     0.894     0.816        -1   0.00959
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.69061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2129, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007836, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22667, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.331    0.0651         0     0.996
          1      9.02     0.789         1   -0.0676
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0184    0.0651   -0.0174        -1
          1     0.503     0.789        -1    0.0174
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015234, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002351, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017636, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.198    0.0403         0     0.992
          1      5.36     0.754         1    -0.118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0111    0.0403   -0.0303        -1
          1     0.299     0.754        -1    0.0303
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01766, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 330 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002347, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017528, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0557725
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.119    0.0247    0.0119     0.988
          1       3.4     0.691         1    -0.181
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00661    0.0247   -0.0466    -0.999
          1      0.19     0.691    -0.999    0.0466
         *Z       ---       ---  1.18e+14  4.57e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017552, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 7089 1/cm
      Energy step      = 47 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001784
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00041
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031354
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.182839
         W1a Well: minimal relaxation eigenvalue = 0.0549719
         W1a Well: maximal relaxation eigenvalue = 10.0621
         W1a Well:       grid size = 183
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00178
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.235354
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.068537
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.089624
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.275872
         W1b Well: minimal relaxation eigenvalue = 0.0566861
         W1b Well: maximal relaxation eigenvalue = 2.46007
         W1b Well:       grid size = 223
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3392 1/cm
         B8 Barrier:        grid size = 177
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 224
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.905453, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 223
      MasterEquation::Barrier::truncate: real weight = 6.56401e+21
      MasterEquation::Barrier::truncate: effective weight = 1.40306e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1229 1.54e+05 1.15e+13
        W1b  -3392  -3392      189 5.99e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 1.75e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 8.34e+14
         B2  -3392 1.31e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0881  2.26e-18  1.28e-41
        W1b      11.4         1  2.56e-17  1.45e-40
         P1  4.43e+17   3.9e+16         1  5.66e-24
         P2  7.82e+40  6.89e+39  1.77e+23         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1    0.0892  4.89e-22  2.77e-45
        W1b      11.2         1  5.48e-21   3.1e-44
         P1  2.05e+21  1.83e+20         1  5.66e-24
         P2  3.61e+44  3.22e+43  1.77e+23         1
   MasterEquation::set:  done, cpu time[sec] = 0.909573, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.46776, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.236175, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72648, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.277         0     0.999
          1      72.1      1.44         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.11     0.277  -0.00398        -1
          1      3.96      1.44        -1   0.00398
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.72891, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.45896, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.22872, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69447, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.627     0.117         0     0.997
          1      17.4     0.901         1   -0.0363
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0345     0.117   -0.0108        -1
          1     0.958     0.901        -1    0.0108
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.69682, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20814, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.007015, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22096, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.38    0.0761         0     0.994
          1      9.85     0.864         1   -0.0646
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0209    0.0761   -0.0192        -1
          1     0.541     0.864        -1    0.0192
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.22134, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015239, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002385, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017675, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.23    0.0483         0      0.99
          1      5.88     0.824         1     -0.11
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0126    0.0483   -0.0327    -0.999
          1     0.323     0.824    -0.999    0.0327
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017699, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 340 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015213, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002365, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017628, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0549719
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.139    0.0305    0.0146     0.985
          1      3.76     0.757         1    -0.168
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00764    0.0305   -0.0497    -0.999
          1     0.207     0.757    -0.999    0.0497
         *Z       ---       ---  1.15e+14  3.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017653, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 7298 1/cm
      Energy step      = 49 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001635
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000404
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.034649
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172148
         W1a Well: minimal relaxation eigenvalue = 0.0541168
         W1a Well: maximal relaxation eigenvalue = 13.6688
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1522 1/cm
         W1b Well: average energy = -6.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001755
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.240857
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06577
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.085052
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.261567
         W1b Well: minimal relaxation eigenvalue = 0.0559499
         W1b Well: maximal relaxation eigenvalue = 2.10073
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3384 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -3 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.881253, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.75076e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28323e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1522  -1228 1.57e+05 1.39e+13
        W1b  -3384  -3384      274 7.05e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 2.15e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -3 9.99e+14
         B2  -3384 1.65e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.115  1.87e-18  5.32e-41
        W1b      8.71         1  1.63e-17  4.63e-40
         P1  5.35e+17  6.14e+16         1  2.85e-23
         P2  1.88e+40  2.16e+39  3.51e+22         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.116  4.22e-22   1.2e-44
        W1b       8.6         1  3.63e-21  1.03e-43
         P1  2.37e+21  2.76e+20         1  2.85e-23
         P2  8.33e+43  9.69e+42  3.51e+22         1
   MasterEquation::set:  done, cpu time[sec] = 0.885014, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40362, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240892, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.28     0.306         0     0.998
          1      77.3      1.88         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.123     0.306  -0.00459        -1
          1      4.18      1.88        -1   0.00459
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.66574, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40488, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217099, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62865, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.716     0.133         0     0.996
          1      18.9         1         1   -0.0355
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0387     0.133    -0.012        -1
          1      1.03         1        -1     0.012
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.63095, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.3299, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.022706, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3583, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.436     0.088         0     0.993
          1      10.8      0.95         1   -0.0618
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0236     0.088    -0.021        -1
          1     0.582      0.95        -1     0.021
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35879, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016808, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002253, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019315, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.266    0.0571    0.0118     0.988
          1      6.46     0.903         1    -0.104
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0144    0.0571   -0.0352    -0.999
          1     0.349     0.903    -0.999    0.0352
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019356, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 350 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014522, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002245, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016817, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0541168
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.162    0.0372    0.0176     0.982
          1      4.15     0.831         1    -0.156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   0.00878    0.0372   -0.0528    -0.999
          1     0.225     0.831    -0.999    0.0528
         *Z       ---       ---  1.12e+14  3.31e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01684, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 7506 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = -0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001709
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000397
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028222
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.172076
         W1a Well: minimal relaxation eigenvalue = 0.0537563
         W1a Well: maximal relaxation eigenvalue = 7.27034
         W1a Well:       grid size = 180
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1494 1/cm
         W1b Well: average energy = -6.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001818
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.242964
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06867
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.08188
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.262412
         W1b Well: minimal relaxation eigenvalue = 0.0552474
         W1b Well: maximal relaxation eigenvalue = 2.52051
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 175
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1244 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3444 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.877408, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 5.12412e+21
      MasterEquation::Barrier::truncate: effective weight = 1.16598e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1494  -1244 1.31e+05 1.69e+13
        W1b  -3394  -3394      199 8.27e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1244 2.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.19e+15
         B2  -3394 2.07e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.148   1.6e-18  2.09e-40
        W1b      6.78         1  1.08e-17  1.41e-39
         P1  6.26e+17  9.24e+16         1  1.31e-22
         P2  4.79e+39  7.07e+38  7.65e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.149  3.68e-22   4.8e-44
        W1b       6.7         1  2.46e-21  3.22e-43
         P1  2.72e+21  4.06e+20         1  1.31e-22
         P2  2.08e+43  3.11e+42  7.65e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.881136, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.40018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.243072, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.65723, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.55     0.338         0     0.998
          1      88.2      1.37         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.137     0.338  -0.00521        -1
          1      4.74      1.37        -1   0.00521
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.65964, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39329, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.216636, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.61653, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807      0.15         0     0.995
          1        21      1.05         1   -0.0346
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0434      0.15   -0.0133        -1
          1      1.13      1.05        -1    0.0133
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.61887, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.023697, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.37483, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.495     0.101         0     0.991
          1      11.9      1.02         1   -0.0591
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0266     0.101   -0.0227        -1
          1     0.639      1.02        -1    0.0227
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.37534, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.0179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002235, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.020429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.304    0.0672    0.0142     0.986
          1      7.15     0.981         1   -0.0974
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0163    0.0672   -0.0374    -0.999
          1     0.384     0.981    -0.999    0.0374
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.020473, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 360 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014513, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002246, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016808, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0537563
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.188    0.0449    0.0208     0.979
          1      4.62     0.905         1    -0.144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0101    0.0449   -0.0552    -0.998
          1     0.249     0.905    -0.998    0.0552
         *Z       ---       ---  1.11e+14  2.88e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016833, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 7715 1/cm
      Energy step      = 51 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 71
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001726
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000399
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032353
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.174386
         W1a Well: minimal relaxation eigenvalue = 0.0530077
         W1a Well: maximal relaxation eigenvalue = 11.4029
         W1a Well:       grid size = 181
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -6.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001696
         W1b Well: collisional kernel bandwidth = 71
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.237017
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.06413
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.079587
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.260309
         W1b Well: minimal relaxation eigenvalue = 0.0545668
         W1b Well: maximal relaxation eigenvalue = 4.18713
         W1b Well:       grid size = 218
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3403 1/cm
         B8 Barrier:        grid size = 176
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 152
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 219
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.868579, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 218
      MasterEquation::Barrier::truncate: real weight = 4.65057e+21
      MasterEquation::Barrier::truncate: effective weight = 1.08159e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1261 1.05e+05 2.04e+13
        W1b  -3403  -3403       92 9.69e+10
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 3.19e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 1.42e+15
         B2  -3403 2.58e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.187  1.38e-18  7.61e-40
        W1b      5.34         1  7.35e-18  4.07e-39
         P1  7.26e+17  1.36e+17         1  5.53e-22
         P2  1.31e+39  2.46e+38  1.81e+21         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.189  3.23e-22  1.79e-43
        W1b      5.28         1  1.71e-21  9.44e-43
         P1  3.09e+21  5.86e+20         1  5.53e-22
         P2  5.59e+42  1.06e+42  1.81e+21         1
   MasterEquation::set:  done, cpu time[sec] = 0.872281, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.41016, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.240561, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.68158, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.87     0.374         0     0.997
          1        94      1.84         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.374  -0.00587        -1
          1      4.98      1.84        -1   0.00587
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.684, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.39736, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.217496, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62152, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.914     0.169         0     0.994
          1      22.8      1.16         1   -0.0338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0484     0.169   -0.0146        -1
          1      1.21      1.16        -1    0.0146
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.62386, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.32214, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.022058, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.3499, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.563     0.116    0.0105     0.989
          1        13      1.12         1   -0.0567
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0298     0.116   -0.0245        -1
          1     0.688      1.12        -1    0.0245
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35039, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.016183, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002279, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.018716, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.348    0.0783    0.0169     0.983
          1      7.86      1.07         1    -0.092
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0185    0.0783   -0.0398    -0.999
          1     0.417      1.07    -0.999    0.0398
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.018756, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 370 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.014587, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002268, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016905, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0530077
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.217    0.0537    0.0246     0.975
          1      5.11     0.991         1    -0.134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0115    0.0537   -0.0581    -0.998
          1     0.271     0.991    -0.998    0.0581
         *Z       ---       ---   1.1e+14  2.53e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016929, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 7923 1/cm
      Energy step      = 53 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001752
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000396
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031397
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.169782
         W1a Well: minimal relaxation eigenvalue = 0.0524324
         W1a Well: maximal relaxation eigenvalue = 10.7298
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1511 1/cm
         W1b Well: average energy = -6.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001865
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.222093
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.063046
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083198
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.242996
         W1b Well: minimal relaxation eigenvalue = 0.0539181
         W1b Well: maximal relaxation eigenvalue = 2.01928
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3366 1/cm
         B8 Barrier:        grid size = 173
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 215
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3472 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.25544, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.2796e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03398e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1511  -1246 1.27e+05 2.45e+13
        W1b  -3366  -3366      401 1.13e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 3.86e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.68e+15
         B2  -3366 3.19e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.234  1.18e-18  2.55e-39
        W1b      4.27         1  5.02e-18  1.09e-38
         P1  8.51e+17  1.99e+17         1  2.17e-21
         P2  3.93e+38   9.2e+37  4.62e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.237  2.87e-22  6.21e-43
        W1b      4.22         1  1.21e-21  2.62e-42
         P1  3.49e+21  8.27e+20         1  2.17e-21
         P2  1.61e+42  3.82e+41  4.62e+20         1
   MasterEquation::set:  done, cpu time[sec] = 1.25937, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33777, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222174, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57339, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.21     0.405         0     0.997
          1       105       1.7         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.405  -0.00662        -1
          1      5.49       1.7        -1   0.00662
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.57582, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34014, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.208026, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55471, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.03     0.188         0     0.992
          1        25      1.26         1   -0.0331
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0539     0.188    -0.016        -1
          1      1.31      1.26        -1     0.016
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55706, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1096, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.027562, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14274, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.636     0.131    0.0126     0.987
          1      14.3      1.22         1   -0.0545
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0333     0.131   -0.0264        -1
          1     0.748      1.22        -1    0.0264
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14338, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.064668, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002131, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.067334, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.396    0.0902      0.02      0.98
          1      8.67      1.17         1   -0.0869
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0207    0.0902    -0.042    -0.999
          1     0.455      1.17    -0.999     0.042
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.067399, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 380 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013835, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002123, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016006, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0524324
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.249    0.0633    0.0285     0.972
          1      5.67      1.08         1    -0.125
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0131    0.0633   -0.0605    -0.998
          1     0.297      1.08    -0.998    0.0605
         *Z       ---       ---  1.08e+14  2.22e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016031, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 8132 1/cm
      Energy step      = 54 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 70
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001743
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000388
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.03305
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.17291
         W1a Well: minimal relaxation eigenvalue = 0.0519977
         W1a Well: maximal relaxation eigenvalue = 6.87135
         W1a Well:       grid size = 178
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -5.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001905
         W1b Well: collisional kernel bandwidth = 70
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.228237
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.065255
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069446
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.250368
         W1b Well: minimal relaxation eigenvalue = 0.0533089
         W1b Well: maximal relaxation eigenvalue = 2.07783
         W1b Well:       grid size = 213
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3370 1/cm
         B8 Barrier:        grid size = 174
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 214
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.839926, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 213
      MasterEquation::Barrier::truncate: real weight = 4.00713e+21
      MasterEquation::Barrier::truncate: effective weight = 9.8634e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1264 1.02e+05 2.94e+13
        W1b  -3370  -3370      386 1.32e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 4.67e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 1.98e+15
         B2  -3370 3.95e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.291  1.03e-18  8.16e-39
        W1b      3.44         1  3.55e-18  2.81e-38
         P1  9.69e+17  2.82e+17         1  7.91e-21
         P2  1.22e+38  3.56e+37  1.26e+20         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.294  2.57e-22  2.03e-42
        W1b       3.4         1  8.73e-22  6.91e-42
         P1   3.9e+21  1.15e+21         1  7.91e-21
         P2  4.93e+41  1.45e+41  1.26e+20         1
   MasterEquation::set:  done, cpu time[sec] = 0.844025, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.34184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.228512, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.59141, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.59     0.442         0     0.996
          1       116      1.65         1   -0.0137
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187     0.442  -0.00736        -1
          1      6.03      1.65        -1   0.00736
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.59385, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33665, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206853, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54975, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.15      0.21         0     0.991
          1      27.6      1.36         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.06      0.21   -0.0175        -1
          1      1.43      1.36        -1    0.0175
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.55207, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.33221, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.15824, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.717     0.148     0.015     0.985
          1      15.8      1.33         1   -0.0524
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0373     0.148   -0.0282        -1
          1     0.819      1.33        -1    0.0282
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49701, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.036491, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002193, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.039204, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.449     0.104    0.0233     0.977
          1      9.62      1.27         1    -0.082
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0234     0.104   -0.0441    -0.999
          1       0.5      1.27    -0.999    0.0441
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.039274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 390 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013915, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.016133, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0519977
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.286    0.0743    0.0326     0.967
          1      6.33      1.17         1    -0.116
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0149    0.0743   -0.0625    -0.998
          1     0.329      1.17    -0.998    0.0625
         *Z       ---       ---  1.07e+14  1.99e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.016158, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 8340 1/cm
      Energy step      = 56 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001662
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000386
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032002
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162269
         W1a Well: minimal relaxation eigenvalue = 0.0512682
         W1a Well: maximal relaxation eigenvalue = 11.7432
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001849
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209403
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060156
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.080142
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.241252
         W1b Well: minimal relaxation eigenvalue = 0.0527086
         W1b Well: maximal relaxation eigenvalue = 2.06838
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1236 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.805374, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.78317e+21
      MasterEquation::Barrier::truncate: effective weight = 9.66099e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1236 1.43e+05 3.52e+13
        W1b  -3364  -3364      424 1.54e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1236 5.62e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 2.34e+15
         B2  -3364 4.86e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.357  8.96e-19  2.43e-38
        W1b       2.8         1  2.51e-18   6.8e-38
         P1  1.12e+18  3.98e+17         1  2.71e-20
         P2  4.12e+37  1.47e+37  3.69e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      0.36  2.31e-22  6.26e-42
        W1b      2.77         1  6.41e-22  1.74e-41
         P1  4.33e+21  1.56e+21         1  2.71e-20
         P2   1.6e+41  5.76e+40  3.69e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.809099, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.27645, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.222238, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.51207, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.03     0.479         0     0.995
          1       126      1.95         1   -0.0138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.207     0.479  -0.00823        -1
          1      6.44      1.95        -1   0.00823
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.51445, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28808, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200627, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       1.3     0.232    0.0113     0.989
          1        30       1.5         1   -0.0319
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0666     0.232   -0.0191        -1
          1      1.54       1.5        -1    0.0191
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49739, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.26808, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196738, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47112, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.81     0.165    0.0178     0.982
          1      17.2      1.45         1   -0.0507
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0415     0.165   -0.0303        -1
          1     0.882      1.45        -1    0.0303
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47343, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.183241, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.190424, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.51     0.118    0.0271     0.973
          1      10.5      1.39         1   -0.0782
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0261     0.118   -0.0467    -0.999
          1     0.541      1.39    -0.999    0.0467
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.190795, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013292, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015415, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0512682
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.326     0.086    0.0377     0.962
          1      6.97      1.28         1     -0.11
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0167     0.086   -0.0654    -0.998
          1     0.357      1.28    -0.998    0.0654
         *Z       ---       ---  1.06e+14  1.77e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015438, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 8549 1/cm
      Energy step      = 57 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001684
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000384
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032751
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164051
         W1a Well: minimal relaxation eigenvalue = 0.0509017
         W1a Well: maximal relaxation eigenvalue = 7.43617
         W1a Well:       grid size = 176
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1483 1/cm
         W1b Well: average energy = -5.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001631
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.214059
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.060311
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083108
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.2396
         W1b Well: minimal relaxation eigenvalue = 0.0521135
         W1b Well: maximal relaxation eigenvalue = 2.12093
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1255 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3478 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.813897, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.62832e+21
      MasterEquation::Barrier::truncate: effective weight = 9.42657e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1483  -1255 1.15e+05  4.2e+13
        W1b  -3364  -3364      429 1.79e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1255 6.74e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 2.75e+15
         B2  -3364 5.97e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.433  7.98e-19  6.97e-38
        W1b      2.31         1  1.84e-18  1.61e-37
         P1  1.25e+18  5.42e+17         1  8.73e-20
         P2  1.44e+37  6.21e+36  1.15e+19         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.438   2.1e-22  1.83e-41
        W1b      2.28         1  4.78e-22  4.18e-41
         P1  4.77e+21  2.09e+21         1  8.73e-20
         P2  5.47e+40  2.39e+40  1.15e+19         1
   MasterEquation::set:  done, cpu time[sec] = 0.817599, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28665, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.221576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.44     0.522         0     0.994
          1       139      1.87         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.226     0.522  -0.00897        -1
          1      7.09      1.87        -1   0.00897
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53732, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28866, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.199744, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.44     0.256    0.0133     0.987
          1        33      1.62         1    -0.031
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0734     0.256   -0.0204        -1
          1      1.68      1.62        -1    0.0204
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49742, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.29063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19871, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49549, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.903     0.185    0.0206     0.979
          1        19      1.58         1   -0.0486
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.046     0.185   -0.0319    -0.999
          1     0.968      1.58    -0.999    0.0319
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49785, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.146965, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002082, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.154275, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.572     0.134    0.0309     0.969
          1      11.7      1.51         1   -0.0736
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.134   -0.0483    -0.999
          1     0.597      1.51    -0.999    0.0483
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.154659, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 410 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013289, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002087, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015429, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0509017
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      0.37    0.0995    0.0421     0.958
          1       7.8      1.39         1    -0.102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0188    0.0995   -0.0666    -0.998
          1     0.397      1.39    -0.998    0.0666
         *Z       ---       ---  1.06e+14  1.61e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015454, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 8757 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 0.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001712
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000391
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029306
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.171286
         W1a Well: minimal relaxation eigenvalue = 0.0502875
         W1a Well: maximal relaxation eigenvalue = 10.8633
         W1a Well:       grid size = 177
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -5.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001832
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.219446
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.062439
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06559
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.23844
         W1b Well: minimal relaxation eigenvalue = 0.0515578
         W1b Well: maximal relaxation eigenvalue = 2.17895
         W1b Well:       grid size = 209
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 172
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1219 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 211
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.80646, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 209
      MasterEquation::Barrier::truncate: real weight = 3.49899e+21
      MasterEquation::Barrier::truncate: effective weight = 9.25635e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1219 1.72e+05    5e+13
        W1b  -3365  -3365      429 2.07e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1219 8.07e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 3.21e+15
         B2  -3365 7.29e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.521  7.16e-19   1.9e-37
        W1b      1.92         1  1.37e-18  3.65e-37
         P1   1.4e+18  7.28e+17         1  2.66e-19
         P2  5.25e+36  2.74e+36  3.76e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.527  1.91e-22  5.08e-41
        W1b       1.9         1  3.63e-22  9.64e-41
         P1  5.23e+21  2.76e+21         1  2.66e-19
         P2  1.97e+40  1.04e+40  3.76e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.810187, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28846, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.220323, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53731, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.95     0.565         0     0.993
          1       151       2.2         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.249     0.565  -0.00982        -1
          1      7.59       2.2        -1   0.00982
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.53991, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.28275, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.201025, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49011, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.61     0.282    0.0156     0.984
          1      36.1      1.77         1   -0.0305
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.081     0.282    -0.022        -1
          1      1.81      1.77        -1     0.022
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.49247, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.2812, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.198818, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48637, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.01     0.205    0.0239     0.976
          1      20.8      1.72         1    -0.047
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0509     0.205   -0.0339    -0.999
          1      1.05      1.72    -0.999    0.0339
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48872, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.160473, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002101, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.167787, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.644      0.15    0.0354     0.965
          1      12.9      1.65         1   -0.0704
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0324      0.15   -0.0507    -0.999
          1     0.647      1.65    -0.999    0.0507
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.168168, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 420 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013373, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002093, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.015515, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0502875
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.419     0.114    0.0477     0.952
          1      8.59      1.52         1   -0.0962
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0211     0.114   -0.0693    -0.998
          1     0.432      1.52    -0.998    0.0693
         *Z       ---       ---  1.06e+14  1.47e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015538, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 8966 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001647
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000383
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.035744
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.167734
         W1a Well: minimal relaxation eigenvalue = 0.0491988
         W1a Well: maximal relaxation eigenvalue = 19.0868
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1534 1/cm
         W1b Well: average energy = -5.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001601
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.217155
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05776
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066138
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.232045
         W1b Well: minimal relaxation eigenvalue = 0.0510003
         W1b Well: maximal relaxation eigenvalue = 2.54209
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3394 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -34 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.796042, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.41939e+21
      MasterEquation::Barrier::truncate: effective weight = 9.3579e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1534  -1234 1.47e+05 5.93e+13
        W1b  -3394  -3394      281  2.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 9.63e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -34 3.76e+15
         B2  -3394 8.88e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.621  6.35e-19  4.88e-37
        W1b      1.61         1  1.02e-18  7.86e-37
         P1  1.58e+18  9.79e+17         1  7.69e-19
         P2  2.05e+36  1.27e+36   1.3e+18         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.629  1.75e-22  1.35e-40
        W1b      1.59         1  2.79e-22  2.14e-40
         P1   5.7e+21  3.59e+21         1  7.69e-19
         P2  7.41e+39  4.66e+39   1.3e+18         1
   MasterEquation::set:  done, cpu time[sec] = 0.799752, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.218057, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.53     0.611         0     0.992
          1       161      3.25         1   -0.0136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.272     0.611   -0.0107        -1
          1      7.92      3.25        -1    0.0107
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.47861, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23553, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.196555, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43824, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.81     0.308    0.0184     0.982
          1      38.9      1.99         1   -0.0301
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0889     0.308   -0.0237        -1
          1      1.91      1.99        -1    0.0237
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44057, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.23395, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193212, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43312, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.226    0.0279     0.972
          1      22.4       1.9         1   -0.0462
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0559     0.226   -0.0364    -0.999
          1       1.1       1.9    -0.999    0.0364
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43543, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.334306, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.34155, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.724     0.167    0.0411     0.959
          1      13.8      1.81         1   -0.0691
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0356     0.167   -0.0544    -0.999
          1     0.679      1.81    -0.999    0.0544
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.341927, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 430 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012896, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002001, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014944, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0491988
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.472     0.128    0.0556     0.944
          1       9.2      1.68         1   -0.0948
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0232     0.128   -0.0745    -0.997
          1     0.453      1.68    -0.997    0.0745
         *Z       ---       ---  1.06e+14  1.34e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014967, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 9175 1/cm
      Energy step      = 61 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 69
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001709
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000382
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032095
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.170687
         W1a Well: minimal relaxation eigenvalue = 0.0493603
         W1a Well: maximal relaxation eigenvalue = 9.42937
         W1a Well:       grid size = 175
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1500 1/cm
         W1b Well: average energy = -5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00175
         W1b Well: collisional kernel bandwidth = 69
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.211127
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.059055
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.074397
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.235337
         W1b Well: minimal relaxation eigenvalue = 0.0504867
         W1b Well: maximal relaxation eigenvalue = 2.49621
         W1b Well:       grid size = 206
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 171
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1256 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 207
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.802169, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 206
      MasterEquation::Barrier::truncate: real weight = 3.36929e+21
      MasterEquation::Barrier::truncate: effective weight = 9.37474e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1500  -1256 1.13e+05 7.02e+13
        W1b  -3391  -3391      307 2.77e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1256 1.15e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 4.38e+15
         B2  -3391 1.08e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.737  5.76e-19  1.22e-36
        W1b      1.36         1  7.82e-19  1.66e-36
         P1  1.74e+18  1.28e+18         1  2.12e-18
         P2  8.19e+35  6.03e+35  4.72e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.746  1.62e-22  3.43e-40
        W1b      1.34         1  2.17e-22   4.6e-40
         P1  6.18e+21  4.61e+21         1  2.12e-18
         P2  2.92e+39  2.17e+39  4.72e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.805906, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25507, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.206236, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.48666, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.06     0.658         0      0.99
          1       182      2.38         1   -0.0135
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.658   -0.0116        -1
          1      8.99      2.38        -1    0.0116
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.48907, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.25526, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194395, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45592, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.98     0.337     0.021     0.979
          1      43.4      2.09         1   -0.0291
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.098     0.337    -0.025        -1
          1      2.14      2.09        -1     0.025
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45826, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.24899, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.195437, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.45064, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25      0.25    0.0312     0.969
          1      25.2      2.03         1   -0.0437
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0619      0.25   -0.0375    -0.999
          1      1.24      2.03    -0.999    0.0375
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.45296, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.282442, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.289567, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.807     0.188    0.0447     0.955
          1      15.7      1.94         1   -0.0636
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0398     0.188   -0.0545    -0.999
          1     0.775      1.94    -0.999    0.0545
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.289934, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 440 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012939, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002009, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014994, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0493603
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.533     0.146    0.0588     0.941
          1      10.6      1.79         1   -0.0848
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0263     0.146   -0.0726    -0.997
          1     0.523      1.79    -0.997    0.0726
         *Z       ---       ---  1.07e+14  1.24e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.015018, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 9383 1/cm
      Energy step      = 63 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001571
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000379
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029188
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161664
         W1a Well: minimal relaxation eigenvalue = 0.0487517
         W1a Well: maximal relaxation eigenvalue = 13.2322
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001627
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.201312
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.05942
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.076541
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.224941
         W1b Well: minimal relaxation eigenvalue = 0.0499692
         W1b Well: maximal relaxation eigenvalue = 3.13721
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3406 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.771967, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33424e+21
      MasterEquation::Barrier::truncate: effective weight = 9.58161e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1264 1.02e+05 8.29e+13
        W1b  -3406  -3406      209 3.19e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 1.36e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 5.09e+15
         B2  -3406 1.31e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.866  5.17e-19  2.89e-36
        W1b      1.15         1  5.97e-19  3.33e-36
         P1  1.93e+18  1.68e+18         1  5.58e-18
         P2  3.46e+35     3e+35  1.79e+17         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1     0.877   1.5e-22  8.38e-40
        W1b      1.14         1  1.71e-22  9.55e-40
         P1  6.67e+21  5.85e+21         1  5.58e-18
         P2  1.19e+39  1.05e+39  1.79e+17         1
   MasterEquation::set:  done, cpu time[sec] = 0.775715, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20617, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.211928, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.43114, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.7      0.71    0.0115     0.989
          1       197       2.8         1   -0.0134
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.327      0.71   -0.0125        -1
          1       9.6       2.8        -1    0.0125
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43358, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20966, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18754, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40335, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       2.2     0.368    0.0242     0.976
          1      47.1      2.29         1   -0.0286
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.368   -0.0266        -1
          1       2.3      2.29        -1    0.0266
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40572, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20644, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18578, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39816, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.39     0.275    0.0356     0.964
          1      27.4      2.22         1   -0.0426
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.068     0.275   -0.0396    -0.999
          1      1.33      2.22    -0.999    0.0396
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40046, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.452715, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001967, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.459643, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.899     0.208    0.0506     0.949
          1      17.1      2.12         1   -0.0615
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0438     0.208   -0.0571    -0.998
          1     0.833      2.12    -0.998    0.0571
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.460019, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 450 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01246, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001954, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014459, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0487517
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.597     0.164     0.066     0.934
          1      11.5      1.95         1   -0.0816
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0291     0.164   -0.0757    -0.997
          1     0.563      1.95    -0.997    0.0757
         *Z       ---       ---  1.06e+14  1.14e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014484, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 9592 1/cm
      Energy step      = 64 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001661
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00037
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032447
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.164451
         W1a Well: minimal relaxation eigenvalue = 0.0485115
         W1a Well: maximal relaxation eigenvalue = 7.55643
         W1a Well:       grid size = 173
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1480 1/cm
         W1b Well: average energy = -4.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001742
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.210383
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056318
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070433
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.228236
         W1b Well: minimal relaxation eigenvalue = 0.0494867
         W1b Well: maximal relaxation eigenvalue = 2.80751
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3400 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1223 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3464 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.781275, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.33301e+21
      MasterEquation::Barrier::truncate: effective weight = 9.73022e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1480  -1223 1.63e+05 9.76e+13
        W1b  -3400  -3400      266 3.67e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1223 1.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8  5.9e+15
         B2  -3400 1.58e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.01  4.74e-19  6.68e-36
        W1b     0.988         1  4.68e-19   6.6e-36
         P1  2.11e+18  2.13e+18         1  1.41e-17
         P2   1.5e+35  1.51e+35  7.09e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.02   1.4e-22  1.97e-39
        W1b     0.976         1  1.36e-22  1.92e-39
         P1  7.16e+21  7.34e+21         1  1.41e-17
         P2  5.08e+38   5.2e+38  7.09e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.785272, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20051, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.212951, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42981, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.37     0.762    0.0133     0.987
          1       219       2.7         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.358     0.762   -0.0134        -1
          1      10.6       2.7        -1    0.0134
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.43221, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.19219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18606, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38432, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.43       0.4    0.0275     0.973
          1      52.3      2.47         1   -0.0279
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.118       0.4    -0.028        -1
          1      2.54      2.47        -1     0.028
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38665, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.18855, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.186884, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38149, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.54     0.302    0.0396      0.96
          1      30.5       2.4         1   -0.0408
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0749     0.302    -0.041    -0.999
          1      1.48       2.4    -0.999     0.041
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.38383, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.486262, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001948, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.493191, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0         1     0.232    0.0551     0.945
          1      19.2      2.28         1   -0.0576
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0486     0.232   -0.0579    -0.998
          1     0.933      2.28    -0.998    0.0579
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.493564, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 460 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012401, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001957, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014407, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0485115
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.672     0.185    0.0704      0.93
          1      13.1      2.09         1   -0.0749
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0326     0.185   -0.0751    -0.997
          1     0.636      2.09    -0.997    0.0751
         *Z       ---       ---  1.08e+14  1.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014432, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 9800 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 68
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001595
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000377
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030688
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.166413
         W1a Well: minimal relaxation eigenvalue = 0.0479634
         W1a Well: maximal relaxation eigenvalue = 11.0685
         W1a Well:       grid size = 174
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1510 1/cm
         W1b Well: average energy = -4.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001745
         W1b Well: collisional kernel bandwidth = 68
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.208433
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056103
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.077941
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21841
         W1b Well: minimal relaxation eigenvalue = 0.0490231
         W1b Well: maximal relaxation eigenvalue = 2.68355
         W1b Well:       grid size = 203
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 170
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier:        grid size = 204
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.777169, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 203
      MasterEquation::Barrier::truncate: real weight = 3.3423e+21
      MasterEquation::Barrier::truncate: effective weight = 9.90972e+17
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1510  -1250 1.22e+05 1.15e+14
        W1b  -3395  -3395      307 4.22e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250  1.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15 6.83e+15
         B2  -3395 1.89e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.18  4.36e-19  1.49e-35
        W1b     0.851         1  3.71e-19  1.27e-35
         P1  2.29e+18  2.69e+18         1  3.42e-17
         P2   6.7e+34  7.87e+34  2.92e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.19  1.31e-22  4.47e-39
        W1b      0.84         1   1.1e-22  3.76e-39
         P1  7.66e+21  9.11e+21         1  3.42e-17
         P2  2.24e+38  2.66e+38  2.92e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.780883, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21868, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.211508, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.44372, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.16     0.815    0.0154     0.985
          1       238      3.01         1   -0.0133
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.391     0.815   -0.0144        -1
          1      11.4      3.01        -1    0.0144
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.44617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.21384, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190012, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40994, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.69     0.432    0.0313     0.969
          1      56.8      2.69         1   -0.0275
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.432   -0.0298        -1
          1      2.72      2.69        -1    0.0298
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.4123, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.20982, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187271, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40302, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.71     0.329    0.0448     0.955
          1      33.1      2.61         1   -0.0399
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0821     0.329   -0.0432    -0.999
          1      1.59      2.61    -0.999    0.0432
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.40536, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.430368, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001973, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.437321, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.11     0.255    0.0618     0.938
          1      20.9      2.48         1    -0.056
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0534     0.255   -0.0606    -0.998
          1         1      2.48    -0.998    0.0606
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.437703, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 470 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012582, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001963, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01459, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0479634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.749     0.205    0.0786     0.921
          1      14.2      2.27         1   -0.0726
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0359     0.205   -0.0784    -0.997
          1     0.683      2.27    -0.997    0.0784
         *Z       ---       ---  1.09e+14     1e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014613, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 10009 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 1.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001614
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000363
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028705
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.163049
         W1a Well: minimal relaxation eigenvalue = 0.0475024
         W1a Well: maximal relaxation eigenvalue = 11.9635
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1515 1/cm
         W1b Well: average energy = -4.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001633
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209685
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.058265
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062102
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.221496
         W1b Well: minimal relaxation eigenvalue = 0.0485588
         W1b Well: maximal relaxation eigenvalue = 2.63177
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3391 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1247 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.762436, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.38265e+21
      MasterEquation::Barrier::truncate: effective weight = 1.03332e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1515  -1247 1.26e+05 1.34e+14
        W1b  -3391  -3391      343 4.84e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1247 2.24e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 7.88e+15
         B2  -3391 2.27e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.36  3.98e-19  3.18e-35
        W1b     0.738         1  2.93e-19  2.35e-35
         P1  2.52e+18  3.41e+18         1     8e-17
         P2  3.14e+34  4.26e+34  1.25e+16         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.37  1.23e-22  9.81e-39
        W1b     0.728         1  8.93e-23  7.15e-39
         P1  8.15e+21  1.12e+22         1     8e-17
         P2  1.02e+38   1.4e+38  1.25e+16         1
   MasterEquation::set:  done, cpu time[sec] = 0.76614, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1737, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.204766, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39493, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.99     0.872    0.0176     0.982
          1       261      3.28         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.427     0.872   -0.0154        -1
          1      12.4      3.28        -1    0.0154
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39736, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16713, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183107, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35604, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.97     0.467    0.0353     0.965
          1      62.1      2.93         1    -0.027
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.141     0.467   -0.0314        -1
          1      2.95      2.93        -1    0.0314
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35878, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1636, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.183702, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.89     0.358      0.05      0.95
          1      36.2      2.83         1   -0.0388
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0899     0.358   -0.0451    -0.999
          1      1.72      2.83    -0.999    0.0451
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35579, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.583193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001917, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.589971, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.23     0.279    0.0682     0.932
          1      22.9      2.69         1    -0.054
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0586     0.279   -0.0628    -0.998
          1      1.09      2.69    -0.998    0.0628
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.590337, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 480 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01212, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001894, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014063, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0475024
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.834     0.227    0.0861     0.914
          1      15.6      2.47         1   -0.0695
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0396     0.227   -0.0806    -0.997
          1     0.742      2.47    -0.997    0.0806
         *Z       ---       ---  1.09e+14  9.37e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014086, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 10217 1/cm
      Energy step      = 68 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001643
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000373
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02795
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161461
         W1a Well: minimal relaxation eigenvalue = 0.0472471
         W1a Well: maximal relaxation eigenvalue = 8.06801
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1479 1/cm
         W1b Well: average energy = -4.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001716
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.209078
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056051
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067698
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.219155
         W1b Well: minimal relaxation eigenvalue = 0.0481235
         W1b Well: maximal relaxation eigenvalue = 2.57808
         W1b Well:       grid size = 200
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3383 1/cm
         B8 Barrier:        grid size = 169
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1274 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 201
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3451 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.760249, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 200
      MasterEquation::Barrier::truncate: real weight = 3.42776e+21
      MasterEquation::Barrier::truncate: effective weight = 1.06326e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1479  -1274 8.89e+04 1.57e+14
        W1b  -3383  -3383      391 5.55e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1274 2.63e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 9.08e+15
         B2  -3383 2.72e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.56  3.69e-19  6.67e-35
        W1b     0.643         1  2.37e-19  4.29e-35
         P1  2.71e+18  4.22e+18         1  1.81e-16
         P2   1.5e+34  2.33e+34  5.54e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.58  1.16e-22  2.09e-38
        W1b     0.635         1  7.34e-23  1.33e-38
         P1  8.65e+21  1.36e+22         1  1.81e-16
         P2  4.79e+37  7.55e+37  5.54e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.763939, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.17184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.194022, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.38964, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.87     0.931    0.0199      0.98
          1       286      3.47         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.466     0.931   -0.0163        -1
          1      13.5      3.47        -1    0.0163
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3921, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16568, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184028, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35633, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.26     0.505    0.0392     0.961
          1      68.7      3.16         1   -0.0262
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.154     0.505   -0.0327    -0.999
          1      3.25      3.16    -0.999    0.0327
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.16502, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182852, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35393, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.09      0.39    0.0546     0.945
          1      40.4      3.06         1   -0.0371
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0987      0.39   -0.0462    -0.999
          1      1.91      3.06    -0.999    0.0462
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35653, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.586407, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001926, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.59324, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.37     0.308    0.0731     0.927
          1      25.7      2.89         1   -0.0507
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0648     0.308   -0.0631    -0.998
          1      1.22      2.89    -0.998    0.0631
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.593622, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 490 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001899, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01408, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0472471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     0.935     0.252    0.0905     0.909
          1      17.7      2.64         1    -0.064
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0442     0.252   -0.0796    -0.997
          1     0.838      2.64    -0.997    0.0796
         *Z       ---       ---   1.1e+14  8.85e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014103, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 10426 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001498
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000363
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028298
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161303
         W1a Well: minimal relaxation eigenvalue = 0.0456433
         W1a Well: maximal relaxation eigenvalue = 22.2072
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1544 1/cm
         W1b Well: average energy = -4.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001646
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.202494
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053459
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051851
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.21493
         W1b Well: minimal relaxation eigenvalue = 0.0476938
         W1b Well: maximal relaxation eigenvalue = 2.50241
         W1b Well:       grid size = 197
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3364 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1264 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3433 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.731199, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 197
      MasterEquation::Barrier::truncate: real weight = 3.5019e+21
      MasterEquation::Barrier::truncate: effective weight = 1.11824e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1544  -1264 1.02e+05 1.84e+14
        W1b  -3364  -3364      484 6.34e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1264 3.08e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 1.04e+16
         B2  -3364 3.24e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      1.78  3.39e-19  1.34e-34
        W1b     0.563         1  1.91e-19  7.54e-35
         P1  2.95e+18  5.24e+18         1  3.95e-16
         P2  7.47e+33  1.33e+34  2.53e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       1.8  1.09e-22  4.32e-38
        W1b     0.556         1  6.08e-23   2.4e-38
         P1  9.15e+21  1.65e+22         1  3.95e-16
         P2  2.32e+37  4.17e+37  2.53e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.734906, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14306, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.190576, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35734, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.2     0.991    0.0229     0.977
          1       307      4.82         1   -0.0132
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509     0.991   -0.0176        -1
          1        14      4.82        -1    0.0176
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.35982, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13899, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17835, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32333, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.68     0.538    0.0456     0.954
          1      72.1      3.54         1   -0.0269
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.168     0.538   -0.0358    -0.999
          1      3.29      3.54    -0.999    0.0358
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32574, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13205, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178539, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31643, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.34     0.415    0.0644     0.936
          1      41.3      3.39         1   -0.0387
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.107     0.415   -0.0516    -0.999
          1      1.89      3.39    -0.999    0.0516
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31878, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.694507, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001885, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.701225, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.52     0.328    0.0884     0.912
          1      25.5      3.22         1   -0.0546
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0694     0.328   -0.0726    -0.997
          1      1.16      3.22    -0.997    0.0726
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.701601, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011744, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001868, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0456433
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.02     0.271     0.113     0.887
          1      17.1      2.97         1   -0.0717
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0466     0.271   -0.0951    -0.995
          1      0.78      2.97    -0.995    0.0951
         *Z       ---       ---  1.11e+14  8.35e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013681, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 10634 1/cm
      Energy step      = 71 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001597
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000357
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028127
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158756
         W1a Well: minimal relaxation eigenvalue = 0.0463534
         W1a Well: maximal relaxation eigenvalue = 11.6786
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -4.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001871
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.210813
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056397
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.070002
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.213962
         W1b Well: minimal relaxation eigenvalue = 0.0472282
         W1b Well: maximal relaxation eigenvalue = 7.1735
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3423 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1222 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -15 1/cm
         B2 Barrier: nonpositive number of states at -3424 1/cm => truncating
         B2 Barrier:        grid size = 198
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3423 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.757117, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1222 1.65e+05 2.14e+14
        W1b  -3423  -3423     69.9 7.24e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1222 3.61e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -15  1.2e+16
         B2  -3423 3.85e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.02  3.17e-19  2.65e-34
        W1b     0.496         1  1.57e-19  1.32e-34
         P1  3.15e+18  6.36e+18         1  8.37e-16
         P2  3.77e+33   7.6e+33   1.2e+15         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.04  1.04e-22  8.68e-38
        W1b      0.49         1  5.08e-23  4.25e-38
         P1  9.64e+21  1.97e+22         1  8.37e-16
         P2  1.15e+37  2.35e+37   1.2e+15         1
   MasterEquation::set:  done, cpu time[sec] = 0.760867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.15153, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.192745, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36635, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.7       1.1    0.0249     0.975
          1       340      4.16         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.543       1.1   -0.0179        -1
          1      15.8      4.16        -1    0.0179
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.36876, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14776, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180711, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33442, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.91     0.596    0.0483     0.952
          1      81.4      3.73         1   -0.0251
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.181     0.596   -0.0357    -0.999
          1      3.77      3.73    -0.999    0.0357
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33676, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14909, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.18032, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33538, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.51     0.463    0.0663     0.934
          1      47.8      3.61         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.463     -0.05    -0.999
          1      2.22      3.61    -0.999      0.05
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33772, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.657509, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001888, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.664242, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.66     0.369    0.0877     0.912
          1      30.4       3.4         1   -0.0476
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0769     0.369   -0.0675    -0.998
          1      1.41       3.4    -0.998    0.0675
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.664611, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 510 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001889, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013792, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0463534
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.14     0.306     0.108     0.892
          1        21       3.1         1   -0.0598
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0528     0.306   -0.0846    -0.996
          1     0.972       3.1    -0.996    0.0846
         *Z       ---       ---  1.13e+14  7.95e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013816, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 10843 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001532
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000369
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031086
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.160921
         W1a Well: minimal relaxation eigenvalue = 0.0454509
         W1a Well: maximal relaxation eigenvalue = 19.3099
         W1a Well:       grid size = 172
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1541 1/cm
         W1b Well: average energy = -3.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001908
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.204941
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054101
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.062206
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.215273
         W1b Well: minimal relaxation eigenvalue = 0.0468631
         W1b Well: maximal relaxation eigenvalue = 3.59217
         W1b Well:       grid size = 198
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3413 1/cm
         B8 Barrier:        grid size = 168
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1252 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3485 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.747626, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 198
      MasterEquation::Barrier::truncate: real weight = 3.69075e+21
      MasterEquation::Barrier::truncate: effective weight = 1.2123e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1541  -1252 1.18e+05 2.48e+14
        W1b  -3413  -3413      227 8.26e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1252 4.21e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 1.37e+16
         B2  -3413 4.57e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.28  2.98e-19  5.13e-34
        W1b     0.439         1  1.31e-19  2.25e-34
         P1  3.36e+18  7.66e+18         1  1.72e-15
         P2  1.95e+33  4.45e+33  5.81e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.31  9.87e-23   1.7e-37
        W1b     0.433         1  4.27e-23  7.36e-38
         P1  1.01e+22  2.34e+22         1  1.72e-15
         P2  5.88e+36  1.36e+37  5.81e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.751373, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04047, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.200601, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26831, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.14    0.0284     0.972
          1       369      4.89         1   -0.0128
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.598      1.14   -0.0194        -1
          1      16.8      4.89        -1    0.0194
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27081, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1443, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.178765, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32876, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.36     0.626    0.0551     0.945
          1      86.7      4.09         1   -0.0256
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.198     0.626   -0.0386    -0.999
          1      3.94      4.09    -0.999    0.0386
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33107, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.14351, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180063, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.79     0.488     0.076     0.924
          1      50.1      3.94         1   -0.0361
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.488   -0.0544    -0.999
          1      2.28      3.94    -0.999    0.0544
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33182, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.756374, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001883, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.763098, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.83     0.392     0.101     0.899
          1      31.2      3.73         1   -0.0495
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0832     0.392   -0.0745    -0.997
          1      1.42      3.73    -0.997    0.0745
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.763535, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 520 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011923, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001873, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013841, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0454509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.25     0.328     0.126     0.874
          1      21.2      3.42         1   -0.0633
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0566     0.328   -0.0952    -0.995
          1     0.963      3.42    -0.995    0.0952
         *Z       ---       ---  1.15e+14   7.6e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013865, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 11051 1/cm
      Energy step      = 74 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001445
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000369
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031415
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.16045
         W1a Well: minimal relaxation eigenvalue = 0.0453475
         W1a Well: maximal relaxation eigenvalue = 16.6298
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001892
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.201377
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052471
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.063197
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209264
         W1b Well: minimal relaxation eigenvalue = 0.0464759
         W1b Well: maximal relaxation eigenvalue = 2.74685
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3378 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1232 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -48 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3452 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.736631, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.80522e+21
      MasterEquation::Barrier::truncate: effective weight = 1.28464e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1232 1.49e+05 2.88e+14
        W1b  -3378  -3378      438  9.4e+11
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1232  4.9e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -48 1.57e+16
         B2  -3378 5.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.57  2.76e-19  9.54e-34
        W1b      0.39         1  1.08e-19  3.72e-34
         P1  3.62e+18  9.28e+18         1  3.45e-15
         P2  1.05e+33  2.69e+33   2.9e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       2.6  9.42e-23  3.25e-37
        W1b     0.385         1  3.62e-23  1.25e-37
         P1  1.06e+22  2.76e+22         1  3.45e-15
         P2  3.08e+36     8e+36   2.9e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.741119, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11515, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.19314, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31925, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      14.4       1.2    0.0316     0.968
          1       404      5.14         1   -0.0127
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.653       1.2   -0.0204        -1
          1      18.3      5.14        -1    0.0204
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.32163, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10314, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175075, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28375, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.76     0.668      0.06      0.94
          1      95.7       4.4         1   -0.0249
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.216     0.668   -0.0398    -0.999
          1      4.34       4.4    -0.999    0.0398
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28634, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11067, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17378, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29005, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.06     0.526    0.0816     0.918
          1      55.7      4.24         1   -0.0346
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.139     0.526   -0.0554    -0.998
          1      2.53      4.24    -0.998    0.0554
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29238, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784999, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001829, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.791492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.426     0.107     0.893
          1        35         4         1   -0.0467
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0913     0.426   -0.0747    -0.997
          1      1.59         4    -0.997    0.0747
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.791867, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 530 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011485, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001832, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01336, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453475
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.38     0.359     0.131     0.869
          1        24      3.65         1   -0.0588
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0627     0.359   -0.0937    -0.996
          1      1.09      3.65    -0.996    0.0937
         *Z       ---       ---  1.16e+14  7.23e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013384, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 11260 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 2.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001549
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031835
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.159606
         W1a Well: minimal relaxation eigenvalue = 0.0453442
         W1a Well: maximal relaxation eigenvalue = 9.77346
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1490 1/cm
         W1b Well: average energy = -3.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.0019
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.189185
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.056093
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069767
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.209211
         W1b Well: minimal relaxation eigenvalue = 0.0461068
         W1b Well: maximal relaxation eigenvalue = 2.7165
         W1b Well:       grid size = 195
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3365 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1265 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3440 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.73418, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 195
      MasterEquation::Barrier::truncate: real weight = 3.94676e+21
      MasterEquation::Barrier::truncate: effective weight = 1.35054e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1490  -1265    1e+05 3.34e+14
        W1b  -3365  -3365      500 1.07e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1265  5.7e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 1.79e+16
         B2  -3365 6.39e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.88  2.61e-19  1.76e-33
        W1b     0.348         1  9.07e-20  6.11e-34
         P1  3.83e+18   1.1e+19         1  6.73e-15
         P2  5.69e+32  1.64e+33  1.49e+14         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      2.91  9.01e-23  6.07e-37
        W1b     0.343         1  3.09e-23  2.08e-37
         P1  1.11e+22  3.23e+22         1  6.73e-15
         P2  1.65e+36   4.8e+36  1.49e+14         1
   MasterEquation::set:  done, cpu time[sec] = 0.737915, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11954, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.184286, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.33014, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.7      1.27    0.0349     0.965
          1       448       5.1         1   -0.0126
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.712      1.27   -0.0213        -1
          1      20.3       5.1        -1    0.0213
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.33258, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10355, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174878, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28418, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.21     0.718    0.0643     0.936
          1       108      4.72         1   -0.0239
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.236     0.718   -0.0405    -0.999
          1      4.88      4.72    -0.999    0.0405
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28652, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.11486, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173895, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29455, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.36     0.571    0.0853     0.915
          1      63.7      4.53         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.152     0.571   -0.0549    -0.998
          1      2.89      4.53    -0.998    0.0549
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.29687, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767384, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.773901, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.23     0.467     0.109     0.891
          1      40.9      4.25         1   -0.0424
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.101     0.467   -0.0718    -0.997
          1      1.85      4.25    -0.997    0.0718
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.774272, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 540 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011535, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001838, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013416, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0453442
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.56     0.396      0.13      0.87
          1      28.5      3.83         1   -0.0517
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0705     0.396   -0.0874    -0.996
          1      1.29      3.83    -0.996    0.0874
         *Z       ---       ---  1.18e+14  6.96e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013441, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 11468 1/cm
      Energy step      = 76 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 67
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001566
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000355
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028151
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157496
         W1a Well: minimal relaxation eigenvalue = 0.0446386
         W1a Well: maximal relaxation eigenvalue = 17.2723
         W1a Well:       grid size = 171
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1528 1/cm
         W1b Well: average energy = -3.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002063
         W1b Well: collisional kernel bandwidth = 67
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.194799
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052898
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.072842
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.215754
         W1b Well: minimal relaxation eigenvalue = 0.0456911
         W1b Well: maximal relaxation eigenvalue = 6.77268
         W1b Well:       grid size = 196
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3428 1/cm
         B8 Barrier:        grid size = 167
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1224 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -8 1/cm
         B2 Barrier:        grid size = 196
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3428 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.740878, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1528  -1224 1.63e+05 3.86e+14
        W1b  -3428  -3428       92 1.21e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1224 6.62e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -8 2.03e+16
         B2  -3428 7.52e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.21  2.47e-19  3.17e-33
        W1b     0.312         1   7.7e-20  9.87e-34
         P1  4.05e+18   1.3e+19         1  1.28e-14
         P2  3.16e+32  1.01e+33   7.8e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.25  8.64e-23  1.11e-36
        W1b     0.308         1  2.66e-23  3.41e-37
         P1  1.16e+22  3.76e+22         1  1.28e-14
         P2  9.02e+35  2.93e+36   7.8e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.744427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.13007, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.34298, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.9       1.4    0.0378     0.962
          1       482      6.04         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.755       1.4   -0.0219        -1
          1      21.5      6.04        -1    0.0219
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.3454, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1237, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.178086, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30744, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.64     0.781    0.0708     0.929
          1       114      5.15         1   -0.0237
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252     0.781   -0.0425    -0.999
          1      5.08      5.15    -0.999    0.0425
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30975, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.12233, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177196, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30516, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.63     0.617    0.0951     0.905
          1      66.2      4.95         1   -0.0327
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.162     0.617   -0.0586    -0.998
          1      2.96      4.95    -0.998    0.0586
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30753, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.731868, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.00186, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.738484, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.41     0.503     0.123     0.877
          1      41.7      4.67         1   -0.0438
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.108     0.503   -0.0782    -0.997
          1      1.86      4.67    -0.997    0.0782
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.738871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 550 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011661, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001866, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.01357, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0446386
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.67     0.428     0.149     0.851
          1      28.5      4.25         1   -0.0546
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0744     0.428   -0.0974    -0.995
          1      1.27      4.25    -0.995    0.0974
         *Z       ---       ---   1.2e+14   6.7e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013597, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 11677 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001526
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028332
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157011
         W1a Well: minimal relaxation eigenvalue = 0.0445813
         W1a Well: maximal relaxation eigenvalue = 12.4447
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1505 1/cm
         W1b Well: average energy = -3.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001768
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.195206
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.051189
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06468
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20274
         W1b Well: minimal relaxation eigenvalue = 0.0453697
         W1b Well: maximal relaxation eigenvalue = 2.88944
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3454 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.717236, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.27287e+21
      MasterEquation::Barrier::truncate: effective weight = 1.52062e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1505  -1270 9.28e+04 4.45e+14
        W1b  -3376  -3376      464 1.38e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 7.66e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 2.31e+16
         B2  -3376 8.84e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.57  2.31e-19  5.52e-33
        W1b      0.28         1  6.48e-20  1.55e-33
         P1  4.32e+18  1.54e+19         1  2.39e-14
         P2  1.81e+32  6.46e+32  4.19e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.61  8.31e-23  1.98e-36
        W1b     0.277         1   2.3e-23  5.49e-37
         P1   1.2e+22  4.35e+22         1  2.39e-14
         P2  5.04e+35  1.82e+36  4.19e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.720953, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.1023, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.193364, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.30828, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.7      1.44    0.0421     0.958
          1       531      6.02         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.836      1.44   -0.0233        -1
          1      23.7      6.02        -1    0.0233
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31071, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.08924, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.171311, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26631, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.21     0.818    0.0764     0.924
          1       127      5.52         1   -0.0232
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.277     0.818   -0.0437    -0.999
          1      5.65      5.52    -0.999    0.0437
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26863, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09019, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170991, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26712, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.01     0.655       0.1       0.9
          1      74.8       5.3         1   -0.0312
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.179     0.655   -0.0589    -0.998
          1      3.34       5.3    -0.998    0.0589
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26948, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.854851, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002259, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.861772, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.68     0.541     0.127     0.873
          1      47.9      4.96         1   -0.0407
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.119     0.541   -0.0766    -0.997
          1      2.14      4.96    -0.997    0.0766
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.862151, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 560 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.01127, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001794, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013107, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0445813
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      1.87     0.464      0.15      0.85
          1      33.3      4.46         1   -0.0494
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0834     0.464   -0.0929    -0.996
          1      1.48      4.46    -0.996    0.0929
         *Z       ---       ---  1.22e+14  6.44e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01313, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 11885 1/cm
      Energy step      = 79 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001591
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000359
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.030579
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154091
         W1a Well: minimal relaxation eigenvalue = 0.0436457
         W1a Well: maximal relaxation eigenvalue = 20.3421
         W1a Well:       grid size = 170
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1545 1/cm
         W1b Well: average energy = -3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001834
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.199164
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.054124
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.064233
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.20477
         W1b Well: minimal relaxation eigenvalue = 0.0450234
         W1b Well: maximal relaxation eigenvalue = 2.92296
         W1b Well:       grid size = 193
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3362 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1229 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.725878, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 193
      MasterEquation::Barrier::truncate: real weight = 4.45783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.60682e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1545  -1229 1.56e+05 5.12e+14
        W1b  -3362  -3362      527 1.56e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1229 8.86e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 2.62e+16
         B2  -3362 1.04e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      3.96   2.2e-19  9.57e-33
        W1b     0.253         1  5.57e-20  2.42e-33
         P1  4.54e+18   1.8e+19         1  4.35e-14
         P2  1.04e+32  4.13e+32   2.3e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1         4  8.01e-23  3.48e-36
        W1b      0.25         1     2e-23  8.69e-37
         P1  1.25e+22     5e+22         1  4.35e-14
         P2  2.87e+35  1.15e+36   2.3e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.729608, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.10581, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.182504, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.31053, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      20.7      1.52    0.0465     0.954
          1       572      7.38         1   -0.0123
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.905      1.52   -0.0245        -1
          1        25      7.38        -1    0.0245
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.31297, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09496, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.172732, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27343, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.85     0.865    0.0854     0.915
          1       134      6.04         1   -0.0236
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.299     0.865   -0.0469    -0.999
          1      5.85      6.04    -0.999    0.0469
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27574, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09547, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.173469, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27466, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.4     0.692     0.114     0.886
          1      77.3       5.8         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.692   -0.0643    -0.998
          1      3.37       5.8    -0.998    0.0643
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27697, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.838118, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.844611, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.91     0.572     0.146     0.854
          1      48.1      5.45         1   -0.0433
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.127     0.572   -0.0858    -0.996
          1       2.1      5.45    -0.996    0.0858
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.844986, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 570 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011392, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001822, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013256, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0436457
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.01     0.494     0.177     0.823
          1      32.5      4.96         1   -0.0542
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0875     0.494    -0.107    -0.994
          1      1.42      4.96    -0.994     0.107
         *Z       ---       ---  1.24e+14  6.24e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01328, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 12094 1/cm
      Energy step      = 81 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001494
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000346
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031753
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.154145
         W1a Well: minimal relaxation eigenvalue = 0.0438766
         W1a Well: maximal relaxation eigenvalue = 13.9334
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1514 1/cm
         W1b Well: average energy = -2.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001652
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.194315
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050554
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.065511
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.195583
         W1b Well: minimal relaxation eigenvalue = 0.0446764
         W1b Well: maximal relaxation eigenvalue = 3.00488
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3376 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1270 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3458 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.709951, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.67327e+21
      MasterEquation::Barrier::truncate: effective weight = 1.72726e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1514  -1270 9.28e+04 5.89e+14
        W1b  -3376  -3376      476 1.76e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1270 1.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 2.97e+16
         B2  -3376 1.21e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.37  2.07e-19  1.61e-32
        W1b     0.229         1  4.75e-20  3.68e-33
         P1  4.82e+18  2.11e+19         1  7.75e-14
         P2  6.22e+31  2.72e+32  1.29e+13         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.42  7.74e-23     6e-36
        W1b     0.226         1  1.75e-23  1.36e-36
         P1  1.29e+22  5.72e+22         1  7.75e-14
         P2  1.67e+35  7.38e+35  1.29e+13         1
   MasterEquation::set:  done, cpu time[sec] = 0.713617, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06901, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188403, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26351, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      22.3      1.61    0.0502      0.95
          1       633      7.08         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.98      1.61   -0.0253        -1
          1      27.8      7.08        -1    0.0253
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26625, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06038, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169498, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       7.4     0.928    0.0894     0.911
          1       150      6.46         1   -0.0225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.325     0.928   -0.0469    -0.999
          1       6.6      6.46    -0.999    0.0469
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06179, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.168517, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23573, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.78     0.749     0.116     0.884
          1      88.5      6.18         1   -0.0301
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.21     0.749   -0.0627    -0.998
          1      3.88      6.18    -0.998    0.0627
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23805, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.956775, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.010731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.97215, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       3.2     0.624     0.145     0.855
          1      56.5      5.76         1   -0.0389
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.14     0.624    -0.081    -0.997
          1      2.48      5.76    -0.997     0.081
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.972526, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 580 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010997, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001775, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012814, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0438766
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.24     0.541      0.17      0.83
          1      39.1      5.17         1    -0.047
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0    0.0984     0.541   -0.0978    -0.995
          1      1.72      5.17    -0.995    0.0978
         *Z       ---       ---  1.26e+14  6.02e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012837, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 12302 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 3.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001466
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000366
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027558
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.157861
         W1a Well: minimal relaxation eigenvalue = 0.0413519
         W1a Well: maximal relaxation eigenvalue = 26.2311
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1556 1/cm
         W1b Well: average energy = -2.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001676
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19672
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050763
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066948
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.193812
         W1b Well: minimal relaxation eigenvalue = 0.0443493
         W1b Well: maximal relaxation eigenvalue = 3.04408
         W1b Well:       grid size = 191
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3359 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.711034, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 191
      MasterEquation::Barrier::truncate: real weight = 4.89783e+21
      MasterEquation::Barrier::truncate: effective weight = 1.83264e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1556  -1228 1.57e+05 6.76e+14
        W1b  -3359  -3359      545 1.99e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 1.18e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 3.36e+16
         B2  -3359 1.41e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.81  1.98e-19  2.69e-32
        W1b     0.208         1  4.12e-20  5.59e-33
         P1  5.04e+18  2.42e+19         1  1.35e-13
         P2  3.72e+31  1.79e+32  7.38e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      4.87  7.49e-23  1.01e-35
        W1b     0.205         1  1.54e-23  2.08e-36
         P1  1.34e+22   6.5e+22         1  1.35e-13
         P2  9.86e+34   4.8e+35  7.38e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.714754, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0807, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.17699, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.27876, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      25.7       1.7    0.0551     0.945
          1       692        11         1   -0.0121
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.06       1.7   -0.0266        -1
          1      28.6        11        -1    0.0266
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.28119, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07923, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169502, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25427, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.44     0.976     0.101     0.899
          1       161      7.16         1   -0.0234
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.349     0.976   -0.0512    -0.999
          1      6.66      7.16    -0.999    0.0512
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25658, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.07862, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.169206, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2534, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       5.4     0.784     0.135     0.865
          1      90.9       6.8         1   -0.0324
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.784   -0.0708    -0.997
          1      3.76       6.8    -0.997    0.0708
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25571, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.91818, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.005415, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.928213, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.55     0.653     0.175     0.825
          1      55.1       6.4         1    -0.044
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.147     0.653    -0.096    -0.995
          1      2.28       6.4    -0.995     0.096
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928594, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 590 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011143, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001763, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012948, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0413519
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.42     0.572     0.213     0.787
          1      36.2      5.86         1   -0.0564
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.1     0.572    -0.123    -0.992
          1       1.5      5.86    -0.992     0.123
         *Z       ---       ---  1.28e+14  5.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.012972, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 12511 1/cm
      Energy step      = 83 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 66
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001558
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000361
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.031089
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.15756
         W1a Well: minimal relaxation eigenvalue = 0.0432471
         W1a Well: maximal relaxation eigenvalue = 14.6962
         W1a Well:       grid size = 169
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1516 1/cm
         W1b Well: average energy = -2.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001673
         W1b Well: collisional kernel bandwidth = 66
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.184722
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.053415
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058362
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201989
         W1b Well: minimal relaxation eigenvalue = 0.0440055
         W1b Well: maximal relaxation eigenvalue = 4.44608
         W1b Well:       grid size = 192
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3424 1/cm
         B8 Barrier:        grid size = 166
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1266 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 192
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3424 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.704691, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1516  -1266 9.79e+04 7.75e+14
        W1b  -3424  -3424      218 2.24e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1266 1.35e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 3.79e+16
         B2  -3424 1.65e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.27   1.9e-19  4.42e-32
        W1b      0.19         1   3.6e-20  8.37e-33
         P1  5.26e+18  2.78e+19         1  2.32e-13
         P2  2.26e+31  1.19e+32   4.3e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.34  7.26e-23  1.69e-35
        W1b     0.187         1  1.36e-23  3.16e-36
         P1  1.38e+22  7.36e+22         1  2.32e-13
         P2  5.93e+34  3.16e+35   4.3e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.708427, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09208, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180768, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.29878, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.2      1.84    0.0582     0.942
          1       753       8.2         1   -0.0117
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.13      1.84   -0.0269        -1
          1      32.6       8.2        -1    0.0269
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.30121, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0901, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170261, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26593, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.71      1.06     0.102     0.898
          1       178       7.5         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.376      1.06   -0.0494    -0.999
          1      7.71       7.5    -0.999    0.0494
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.26825, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.09219, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.170422, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26813, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.64      0.86     0.131     0.869
          1       105      7.16         1   -0.0286
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.244      0.86   -0.0657    -0.998
          1      4.53      7.16    -0.998    0.0657
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27046, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.865094, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.002652, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.87243, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.79     0.721     0.163     0.837
          1      66.7      6.66         1   -0.0368
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.164     0.721   -0.0842    -0.996
          1      2.88      6.66    -0.996    0.0842
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.872803, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.011244, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001784, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.013072, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0432471
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.67     0.629     0.189     0.811
          1      46.1      5.97         1   -0.0443
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.116     0.629    -0.101    -0.995
          1      1.99      5.97    -0.995     0.101
         *Z       ---       ---  1.31e+14  5.71e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.013095, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 12719 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001419
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000347
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027632
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149649
         W1a Well: minimal relaxation eigenvalue = 0.043148
         W1a Well: maximal relaxation eigenvalue = 9.68424
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1475 1/cm
         W1b Well: average energy = -2.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001695
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.193508
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050026
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059722
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.200745
         W1b Well: minimal relaxation eigenvalue = 0.0436804
         W1b Well: maximal relaxation eigenvalue = 5.13258
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3430 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1220 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -30 1/cm
         B2 Barrier:        grid size = 190
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3430 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.699207, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1475  -1220 1.69e+05 8.86e+14
        W1b  -3430  -3430      179 2.53e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1220 1.55e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -30 4.27e+16
         B2  -3430 1.92e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.77   1.8e-19  7.06e-32
        W1b     0.173         1  3.12e-20  1.22e-32
         P1  5.55e+18   3.2e+19         1  3.92e-13
         P2  1.42e+31  8.18e+31  2.55e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      5.84  7.05e-23  2.76e-35
        W1b     0.171         1  1.21e-23  4.73e-36
         P1  1.42e+22  8.29e+22         1  3.92e-13
         P2  3.62e+34  2.12e+35  2.55e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.702741, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04969, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.177884, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25127, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.3      1.96    0.0619     0.938
          1       825      8.78         1   -0.0114
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.22      1.96   -0.0275        -1
          1      35.6      8.78        -1    0.0275
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25374, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04341, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167148, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2162, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.43      1.14     0.106     0.894
          1       200      8.04         1   -0.0206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.407      1.14   -0.0493    -0.999
          1      8.61      8.04    -0.999    0.0493
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21857, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04242, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.15     0.928     0.134     0.866
          1       119      7.64         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.265     0.928   -0.0642    -0.998
          1      5.14      7.64    -0.998    0.0642
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21787, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00228, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.015694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02262, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.17     0.783     0.162     0.838
          1      77.4      7.04         1   -0.0335
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.18     0.783   -0.0802    -0.997
          1      3.34      7.04    -0.997    0.0802
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02311, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 610 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012312, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001731, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.043148
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      2.98     0.684     0.185     0.815
          1      54.4      6.22         1   -0.0393
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.129     0.684   -0.0939    -0.996
          1      2.35      6.22    -0.996    0.0939
         *Z       ---       ---  1.33e+14  5.55e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014261, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 12928 1/cm
      Energy step      = 86 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001525
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028219
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153274
         W1a Well: minimal relaxation eigenvalue = 0.0426313
         W1a Well: maximal relaxation eigenvalue = 15.4781
         W1a Well:       grid size = 168
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1520 1/cm
         W1b Well: average energy = -2.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001654
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.18806
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050464
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061966
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.196733
         W1b Well: minimal relaxation eigenvalue = 0.0433893
         W1b Well: maximal relaxation eigenvalue = 3.74461
         W1b Well:       grid size = 190
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3411 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1261 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 191
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3497 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.695707, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 190
      MasterEquation::Barrier::truncate: real weight = 5.7298e+21
      MasterEquation::Barrier::truncate: effective weight = 2.2487e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1520  -1261 1.04e+05 1.01e+15
        W1b  -3411  -3411      332 2.84e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1261 1.78e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 4.81e+16
         B2  -3411 2.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       6.3  1.73e-19  1.12e-31
        W1b     0.159         1  2.75e-20  1.79e-32
         P1  5.77e+18  3.63e+19         1  6.49e-13
         P2  8.89e+30   5.6e+31  1.54e+12         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.38  6.86e-23  4.45e-35
        W1b     0.157         1  1.08e-23  6.99e-36
         P1  1.46e+22  9.29e+22         1  6.49e-13
         P2  2.24e+34  1.43e+35  1.54e+12         1
   MasterEquation::set:  done, cpu time[sec] = 0.699699, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06804, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.188077, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.26896, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      31.1      2.04    0.0676     0.932
          1       895      9.59         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.33      2.04   -0.0289        -1
          1      38.2      9.59        -1    0.0289
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.27138, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06136, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167452, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23426, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.3      1.19     0.116     0.884
          1       212      8.74         1   -0.0209
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.44      1.19   -0.0525    -0.999
          1      9.02      8.74    -0.999    0.0525
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.2366, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.06247, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167881, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.236, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.69     0.971     0.148     0.852
          1       124      8.31         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.285     0.971   -0.0691    -0.998
          1      5.29      8.31    -0.998    0.0691
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23833, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.952364, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.010823, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.967825, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.5     0.821     0.182     0.818
          1      78.8      7.69         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.192     0.821    -0.088    -0.996
          1      3.36      7.69    -0.996     0.088
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.968194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 620 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.010976, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001748, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.012767, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0426313
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.18     0.722      0.21      0.79
          1      54.3      6.85         1   -0.0422
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.136     0.722    -0.105    -0.994
          1      2.31      6.85    -0.994     0.105
         *Z       ---       ---  1.36e+14  5.43e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01279, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 13136 1/cm
      Energy step      = 88 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001468
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000353
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027554
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152764
         W1a Well: minimal relaxation eigenvalue = 0.0406043
         W1a Well: maximal relaxation eigenvalue = 25.4688
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1559 1/cm
         W1b Well: average energy = -2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001737
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.192306
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.052356
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.049265
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.191859
         W1b Well: minimal relaxation eigenvalue = 0.0430873
         W1b Well: maximal relaxation eigenvalue = 3.67286
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3407 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1295 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -63 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3495 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.683679, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.0475e+21
      MasterEquation::Barrier::truncate: effective weight = 2.4287e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1559  -1295 6.78e+04 1.15e+15
        W1b  -3407  -3407      365 3.19e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1295 2.04e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -63 5.41e+16
         B2  -3407 2.58e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.85  1.65e-19  1.75e-31
        W1b     0.146         1  2.41e-20  2.55e-32
         P1  6.06e+18  4.15e+19         1  1.06e-12
         P2  5.72e+30  3.92e+31  9.44e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      6.94  6.68e-23  7.08e-35
        W1b     0.144         1  9.63e-24  1.02e-35
         P1   1.5e+22  1.04e+23         1  1.06e-12
         P2  1.41e+34   9.8e+34  9.44e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.687353, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04341, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187601, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2517, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      35.3      2.15     0.073     0.927
          1       969      13.9         1   -0.0115
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.43      2.15   -0.0301        -1
          1      39.4      13.9        -1    0.0301
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.25413, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03758, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164031, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20724, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.6      1.25     0.129     0.871
          1       226      9.63         1   -0.0216
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.471      1.25   -0.0565    -0.998
          1      9.17      9.63    -0.998    0.0565
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20957, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03794, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16472, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20799, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.45      1.01     0.168     0.832
          1       128      9.12         1   -0.0294
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.303      1.01   -0.0767    -0.997
          1       5.2      9.12    -0.997    0.0767
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21029, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02123, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.01675, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0426, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.92     0.859     0.212     0.788
          1      77.7      8.53         1   -0.0392
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       0.2     0.859    -0.102    -0.995
          1      3.16      8.53    -0.995     0.102
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04307, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 630 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.013001, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001697, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406043
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.39     0.765     0.253     0.747
          1      51.2      7.73         1   -0.0495
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.138     0.765    -0.128    -0.992
          1      2.08      7.73    -0.992     0.128
         *Z       ---       ---  1.39e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.014948, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 13345 1/cm
      Energy step      = 89 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00146
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000351
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.032079
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.151224
         W1a Well: minimal relaxation eigenvalue = 0.042072
         W1a Well: maximal relaxation eigenvalue = 15.9099
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1517 1/cm
         W1b Well: average energy = -1.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001731
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19185
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048895
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066716
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.193077
         W1b Well: minimal relaxation eigenvalue = 0.0428015
         W1b Well: maximal relaxation eigenvalue = 3.50496
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3386 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1250 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -4 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3476 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.70151, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.40655e+21
      MasterEquation::Barrier::truncate: effective weight = 2.60216e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1517  -1250  1.2e+05 1.32e+15
        W1b  -3386  -3386      468 3.59e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1250 2.33e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -4 6.07e+16
         B2  -3386 2.98e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.43  1.59e-19  2.71e-31
        W1b     0.135         1  2.14e-20  3.64e-32
         P1  6.28e+18  4.67e+19         1   1.7e-12
         P2  3.69e+30  2.75e+31  5.88e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      7.53  6.52e-23  1.11e-34
        W1b     0.133         1  8.66e-24  1.47e-35
         P1  1.53e+22  1.15e+23         1   1.7e-12
         P2  9.02e+33  6.79e+34  5.88e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.705275, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03783, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.187069, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23093, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      36.9      2.25    0.0773     0.923
          1  1.07e+03      11.1         1   -0.0113
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.55      2.25   -0.0307        -1
          1        45      11.1        -1    0.0307
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23346, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20243, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.2      1.33     0.131     0.869
          1       252      10.1         1   -0.0202
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.513      1.33   -0.0551    -0.998
          1      10.6      10.1    -0.998    0.0551
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20482, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03251, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163298, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.20117, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.91      1.09     0.165     0.835
          1       147      9.54         1   -0.0265
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.333      1.09   -0.0721    -0.997
          1       6.2      9.54    -0.997    0.0721
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.20349, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0342, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.029992, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06919, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.33     0.932       0.2       0.8
          1      93.5      8.81         1   -0.0336
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.224     0.932   -0.0912    -0.996
          1      3.93      8.81    -0.996    0.0912
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.06971, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 640 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015322, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001695, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017303, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.042072
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      3.79     0.826     0.229     0.771
          1      64.2      7.82         1     -0.04
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.159     0.826    -0.108    -0.994
          1       2.7      7.82    -0.994     0.108
         *Z       ---       ---  1.42e+14   5.2e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017374, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 13553 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 4.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 65
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001466
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00036
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028168
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.152613
         W1a Well: minimal relaxation eigenvalue = 0.0420327
         W1a Well: maximal relaxation eigenvalue = 10.5703
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1476 1/cm
         W1b Well: average energy = -1.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001764
         W1b Well: collisional kernel bandwidth = 65
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.183148
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.049273
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056542
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.189553
         W1b Well: minimal relaxation eigenvalue = 0.0425231
         W1b Well: maximal relaxation eigenvalue = 3.46702
         W1b Well:       grid size = 188
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3367 1/cm
         B8 Barrier:        grid size = 165
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1296 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 189
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3457 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.67673, elapsed time[sec] = 1
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 188
      MasterEquation::Barrier::truncate: real weight = 6.78023e+21
      MasterEquation::Barrier::truncate: effective weight = 2.78496e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1476  -1296 6.71e+04  1.5e+15
        W1b  -3367  -3367      549 4.02e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1296 2.66e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36  6.8e+16
         B2  -3367 3.44e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.05  1.54e-19  4.14e-31
        W1b     0.124         1  1.91e-20  5.14e-32
         P1   6.5e+18  5.23e+19         1  2.69e-12
         P2  2.42e+30  1.94e+31  3.72e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      8.15  6.37e-23  1.72e-34
        W1b     0.123         1  7.82e-24   2.1e-35
         P1  1.57e+22  1.28e+23         1  2.69e-12
         P2  5.83e+33  4.75e+34  3.72e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.680414, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04496, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.176179, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.24585, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        40      2.37     0.082     0.918
          1  1.16e+03      11.8         1   -0.0111
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.68      2.37   -0.0315        -1
          1      48.8      11.8        -1    0.0315
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.24829, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04007, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165291, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21095, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.2      1.41     0.135     0.865
          1       281      10.7         1   -0.0194
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.557      1.41   -0.0549    -0.998
          1      11.8      10.7    -0.998    0.0549
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21333, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.04022, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.166499, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21231, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.64      1.17     0.166     0.834
          1       168      10.1         1   -0.0248
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.363      1.17   -0.0701    -0.998
          1      7.06      10.1    -0.998    0.0701
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21493, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02023, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.016506, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.04137, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.89      1.01     0.197     0.803
          1       109      9.24         1   -0.0304
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.248      1.01    -0.086    -0.996
          1      4.58      9.24    -0.996     0.086
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.04185, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 650 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.012786, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001705, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.014701, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0420327
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.25     0.891     0.221     0.779
          1      76.3      8.06         1   -0.0352
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.179     0.891   -0.0994    -0.995
          1      3.21      8.06    -0.995    0.0994
         *Z       ---       ---  1.45e+14  5.11e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.01474, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 13762 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001395
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000344
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027931
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.150243
         W1a Well: minimal relaxation eigenvalue = 0.0416422
         W1a Well: maximal relaxation eigenvalue = 13.8216
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1509 1/cm
         W1b Well: average energy = -1.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001539
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.176975
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.050124
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067767
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.185373
         W1b Well: minimal relaxation eigenvalue = 0.0421959
         W1b Well: maximal relaxation eigenvalue = 7.05198
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3441 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3441 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.675031, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1509  -1234 1.47e+05  1.7e+15
        W1b  -3441  -3441      128  4.5e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 3.03e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37 7.62e+16
         B2  -3441 3.96e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.7  1.47e-19  6.18e-31
        W1b     0.115         1  1.69e-20  7.11e-32
         P1  6.79e+18  5.91e+19         1   4.2e-12
         P2  1.62e+30  1.41e+31  2.38e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       8.8  6.24e-23  2.62e-34
        W1b     0.114         1  7.08e-24  2.98e-35
         P1   1.6e+22  1.41e+23         1   4.2e-12
         P2  3.82e+33  3.36e+34  2.38e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.678548, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02805, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180642, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.23355, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      42.1      2.64    0.0851     0.915
          1  1.26e+03      12.9         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      2.64   -0.0315        -1
          1      52.4      12.9        -1    0.0315
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23597, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02842, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.162309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19673, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        14      1.54     0.141     0.859
          1       299      11.6         1    -0.019
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.584      1.54   -0.0558    -0.998
          1      12.5      11.6    -0.998    0.0558
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19917, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.03076, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.163366, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19967, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      9.16      1.27     0.176     0.824
          1       176        11         1   -0.0245
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.381      1.27   -0.0721    -0.997
          1      7.35        11    -0.997    0.0721
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.202, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02684, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.047238, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.23      1.08      0.21      0.79
          1       113      10.1         1   -0.0306
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.26      1.08     -0.09    -0.996
          1       4.7      10.1    -0.996      0.09
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07961, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 660 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.015939, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.017911, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0416422
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      4.48     0.957     0.238     0.762
          1        78      8.84         1    -0.036
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.186     0.957    -0.106    -0.994
          1      3.25      8.84    -0.994     0.106
         *Z       ---       ---  1.48e+14  5.01e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.017959, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 13970 1/cm
      Energy step      = 93 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.7e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001522
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000391
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027469
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.162563
         W1a Well: minimal relaxation eigenvalue = 0.039915
         W1a Well: maximal relaxation eigenvalue = 24.9138
         W1a Well:       grid size = 167
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1560 1/cm
         W1b Well: average energy = -1.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001743
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.17022
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046913
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067242
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.201511
         W1b Well: minimal relaxation eigenvalue = 0.0419555
         W1b Well: maximal relaxation eigenvalue = 4.2753
         W1b Well:       grid size = 187
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3421 1/cm
         B8 Barrier:        grid size = 164
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1282 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -73 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3513 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.692826, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 187
      MasterEquation::Barrier::truncate: real weight = 7.63727e+21
      MasterEquation::Barrier::truncate: effective weight = 3.2417e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1560  -1282 8.22e+04 1.93e+15
        W1b  -3421  -3421      320 5.04e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1282 3.44e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -73 8.51e+16
         B2  -3421 4.56e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.37  1.43e-19  9.23e-31
        W1b     0.107         1  1.52e-20  9.85e-32
         P1  7.01e+18  6.57e+19         1  6.47e-12
         P2  1.08e+30  1.02e+31  1.55e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      9.49  6.11e-23  3.95e-34
        W1b     0.105         1  6.44e-24  4.16e-35
         P1  1.64e+22  1.55e+23         1  6.47e-12
         P2  2.53e+33   2.4e+34  1.55e+11         1
   MasterEquation::set:  done, cpu time[sec] = 0.696423, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02952, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.174659, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.22949, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      48.2      2.68    0.0932     0.907
          1  1.39e+03      14.6         1    -0.011
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.93      2.68   -0.0336    -0.999
          1      55.5      14.6    -0.999    0.0336
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.23194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02441, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164882, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19482, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      15.8      1.58     0.158     0.842
          1       318      12.7         1     -0.02
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.632      1.58   -0.0612    -0.998
          1      12.7      12.7    -0.998    0.0612
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1972, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.02474, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.164513, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19478, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.2       1.3     0.201     0.799
          1       180      12.1         1   -0.0268
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.407       1.3   -0.0817    -0.997
          1      7.19      12.1    -0.997    0.0817
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19714, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0256, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.044942, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      6.76      1.11     0.247     0.753
          1       110      11.2         1   -0.0351
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.27      1.11    -0.107    -0.994
          1      4.38      11.2    -0.994     0.107
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0761, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 670 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.017353, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001701, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.019372, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.039915
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       4.7         1      0.29      0.71
          1      72.2        10         1   -0.0436
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.187         1    -0.132    -0.991
          1      2.88        10    -0.991     0.132
         *Z       ---       ---  1.51e+14  4.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.019423, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 14179 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001361
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000354
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.03163
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.149895
         W1a Well: minimal relaxation eigenvalue = 0.0411961
         W1a Well: maximal relaxation eigenvalue = 12.7339
         W1a Well:       grid size = 165
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1496 1/cm
         W1b Well: average energy = -1.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001748
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.178823
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.047807
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.061761
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.181108
         W1b Well: minimal relaxation eigenvalue = 0.041694
         W1b Well: maximal relaxation eigenvalue = 3.86731
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3395 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1210 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -70 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3490 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.66786, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.12714e+21
      MasterEquation::Barrier::truncate: effective weight = 3.52355e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1496  -1210 1.89e+05 2.18e+15
        W1b  -3395  -3395      455 5.63e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1210 3.91e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -70 9.51e+16
         B2  -3395 5.23e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.1  1.37e-19  1.35e-30
        W1b    0.0992         1  1.36e-20  1.34e-31
         P1   7.3e+18  7.35e+19         1  9.83e-12
         P2  7.42e+29  7.48e+30  1.02e+11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.2     6e-23  5.89e-34
        W1b     0.098         1  5.87e-24  5.78e-35
         P1  1.67e+22   1.7e+23         1  9.83e-12
         P2   1.7e+33  1.73e+34  1.02e+11         1
   MasterEquation::set:  done, cpu time[sec] = 1.67157, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0034, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.165971, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19403, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      50.7      2.79    0.0971     0.903
          1  1.49e+03      14.9         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.09      2.79   -0.0339    -0.999
          1      61.5      14.9    -0.999    0.0339
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19645, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.999645, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158674, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16414, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      16.8      1.68     0.157     0.843
          1       359      13.4         1   -0.0185
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      0.69      1.68   -0.0586    -0.998
          1      14.8      13.4    -0.998    0.0586
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16649, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.99897, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158208, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16239, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      10.9       1.4     0.192     0.808
          1       213      12.5         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.451       1.4   -0.0745    -0.997
          1      8.77      12.5    -0.997    0.0745
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16471, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.00184, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159084, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.16636, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.47      1.21     0.226     0.774
          1       137      11.4         1   -0.0289
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.308      1.21   -0.0915    -0.996
          1      5.64      11.4    -0.996    0.0915
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.16893, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 680 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.033761, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.039781, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0411961
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.39      1.08     0.253     0.747
          1      94.8      9.85         1   -0.0335
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.222      1.08    -0.106    -0.994
          1      3.91      9.85    -0.994     0.106
         *Z       ---       ---  1.54e+14  4.86e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.040158, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 14387 1/cm
      Energy step      = 96 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.5e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001469
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000337
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.413612
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.158348
         W1a Well: minimal relaxation eigenvalue = 0.0400853
         W1a Well: maximal relaxation eigenvalue = 22.7706
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1548 1/cm
         W1b Well: average energy = -0.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001606
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.165468
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.048977
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069247
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.191384
         W1b Well: minimal relaxation eigenvalue = 0.0414392
         W1b Well: maximal relaxation eigenvalue = 3.76399
         W1b Well:       grid size = 185
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3373 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1260 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3469 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.06391, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 185
      MasterEquation::Barrier::truncate: real weight = 8.63606e+21
      MasterEquation::Barrier::truncate: effective weight = 3.78408e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1548  -1260 1.05e+05 2.47e+15
        W1b  -3373  -3373      549 6.29e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1260 4.43e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.06e+17
         B2  -3373    6e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      10.8  1.33e-19  1.97e-30
        W1b    0.0924         1  1.23e-20  1.82e-31
         P1  7.51e+18  8.12e+19         1  1.48e-11
         P2  5.09e+29   5.5e+30  6.77e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        11  5.89e-23  8.69e-34
        W1b    0.0913         1  5.38e-24  7.94e-35
         P1   1.7e+22  1.86e+23         1  1.48e-11
         P2  1.15e+33  1.26e+34  6.77e+10         1
   MasterEquation::set:  done, cpu time[sec] = 1.0679, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01381, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.167214, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19524, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      56.1      2.93     0.104     0.896
          1  1.64e+03      16.3         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.25      2.93   -0.0353    -0.999
          1      65.9      16.3    -0.999    0.0353
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.19764, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01063, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.159568, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17568, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.4      1.75     0.172     0.828
          1       378      14.4         1   -0.0192
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.736      1.75   -0.0631    -0.998
          1      15.1      14.4    -0.998    0.0631
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17804, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01135, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.160611, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17743, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      11.8      1.45     0.215     0.785
          1       215      13.6         1   -0.0253
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.475      1.45    -0.083    -0.997
          1      8.63      13.6    -0.997     0.083
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.17977, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0097, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132035, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.14674, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      7.91      1.26     0.261     0.739
          1       132      12.6         1   -0.0326
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.317      1.26    -0.107    -0.994
          1      5.29      12.6    -0.994     0.107
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.14734, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 690 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.025572, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001659, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.027622, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0400853
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      5.55      1.14     0.301     0.699
          1      87.5      11.2         1   -0.0398
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.223      1.14     -0.13    -0.992
          1      3.51      11.2    -0.992      0.13
         *Z       ---       ---  1.58e+14   4.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.027682, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 14596 1/cm
      Energy step      = 97 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 5.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.6e-05
         W1a Well: collisional kernel bandwidth = 64
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001482
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00035
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.02939
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.161164
         W1a Well: minimal relaxation eigenvalue = 0.0406634
         W1a Well: maximal relaxation eigenvalue = 14.244
         W1a Well:       grid size = 166
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1506 1/cm
         W1b Well: average energy = -0.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001543
         W1b Well: collisional kernel bandwidth = 64
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.174842
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.046065
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.080839
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.198909
         W1b Well: minimal relaxation eigenvalue = 0.0411446
         W1b Well: maximal relaxation eigenvalue = 7.17622
         W1b Well:       grid size = 186
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3446 1/cm
         B8 Barrier:        grid size = 163
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1214 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 186
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3446 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.707153, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1506  -1214 1.81e+05 2.79e+15
        W1b  -3446  -3446      142 7.01e+12
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1214 5.02e+16
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51 1.18e+17
         B2  -3446 6.87e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.6   1.3e-19  2.84e-30
        W1b    0.0863         1  1.12e-20  2.45e-31
         P1  7.71e+18  8.94e+19         1  2.19e-11
         P2  3.52e+29  4.08e+30  4.56e+10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      11.7  5.79e-23  1.27e-33
        W1b    0.0852         1  4.93e-24  1.08e-34
         P1  1.73e+22  2.03e+23         1  2.19e-11
         P2  7.88e+32  9.25e+33  4.56e+10         1
   MasterEquation::set:  done, cpu time[sec] = 0.710555, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.180078, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.21694, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      57.6      3.27     0.105     0.895
          1  1.75e+03      17.3         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.34      3.27   -0.0345    -0.999
          1      71.3      17.3    -0.999    0.0345
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.21936, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01749, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16042, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18346, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      19.1      1.93     0.169     0.831
          1       418      15.4         1   -0.0176
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.778      1.93   -0.0597    -0.998
          1        17      15.4    -0.998    0.0597
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18583, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.01623, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.158495, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18005, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      12.5       1.6     0.206     0.794
          1       246      14.4         1   -0.0224
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.509       1.6   -0.0761    -0.997
          1        10      14.4    -0.997    0.0761
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.18235, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 1.0169, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.089725, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11166, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      8.57      1.38     0.243     0.757
          1       157      13.1         1   -0.0276
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.348      1.38   -0.0937    -0.996
          1      6.39      13.1    -0.996    0.0937
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11249, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.021455, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001653, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.023463, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0406634
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       6.2      1.23     0.272     0.728
          1       108      11.3         1   -0.0322
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.252      1.23    -0.109    -0.994
          1       4.4      11.3    -0.994     0.109
         *Z       ---       ---  1.62e+14  4.76e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.023519, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 16681 1/cm
      Energy step      = 111 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 7.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.8e-05
         W1a Well: collisional kernel bandwidth = 63
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001471
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000342
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027185
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147971
         W1a Well: minimal relaxation eigenvalue = 0.0383822
         W1a Well: maximal relaxation eigenvalue = 17.6661
         W1a Well:       grid size = 164
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 1.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001771
         W1b Well: collisional kernel bandwidth = 63
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.166646
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.043613
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.066817
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.187516
         W1b Well: minimal relaxation eigenvalue = 0.0389116
         W1b Well: maximal relaxation eigenvalue = 4.96511
         W1b Well:       grid size = 181
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3410 1/cm
         B8 Barrier:        grid size = 162
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1301 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 182
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.65649, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 181
      MasterEquation::Barrier::truncate: real weight = 1.77503e+22
      MasterEquation::Barrier::truncate: effective weight = 8.99501e+18
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1301  6.4e+04 8.84e+15
        W1b  -3410  -3410      464 1.99e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1301 1.63e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 3.26e+17
         B2  -3410 2.45e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1        21  1.01e-19  6.62e-29
        W1b    0.0476         1  4.78e-21  3.15e-30
         P1  9.95e+18  2.09e+20         1  6.58e-10
         P2  1.51e+28  3.18e+29  1.52e+09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      21.3  5.14e-23  3.38e-32
        W1b     0.047         1  2.41e-24  1.59e-33
         P1  1.95e+22  4.14e+23         1  6.58e-10
         P2  2.96e+31  6.29e+32  1.52e+09         1
   MasterEquation::set:  done, cpu time[sec] = 0.660042, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.962504, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.175773, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.15284, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       126      5.15     0.163     0.837
          1  3.92e+03      33.5         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.84      5.15   -0.0424    -0.999
          1       150      33.5    -0.999    0.0424
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.15521, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.967907, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.154651, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12814, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      41.1      3.16     0.244     0.756
          1       921      29.2         1   -0.0154
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.58      3.16   -0.0703    -0.998
          1      35.4      29.2    -0.998    0.0703
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.1307, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.966927, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151592, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.12363, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      26.8      2.69     0.288     0.712
          1       535      26.9         1   -0.0193
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.03      2.69    -0.088    -0.996
          1      20.5      26.9    -0.996     0.088
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12594, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.966353, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.151834, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1239, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      18.3      2.38      0.33      0.67
          1       334      23.9         1   -0.0235
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.704      2.38    -0.107    -0.994
          1      12.8      23.9    -0.994     0.107
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.12624, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.188579, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001593, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.194446, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0383822
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      13.3      2.17     0.364     0.636
          1       222      19.8         1   -0.0272
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     0.511      2.17    -0.124    -0.992
          1      8.54      19.8    -0.992     0.124
         *Z       ---       ---  2.05e+14  4.47e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.194819, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 18766 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 9.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 1.9e-05
         W1a Well: collisional kernel bandwidth = 62
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001359
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000331
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029998
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.153791
         W1a Well: minimal relaxation eigenvalue = 0.0368009
         W1a Well: maximal relaxation eigenvalue = 14.9793
         W1a Well:       grid size = 162
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1484 1/cm
         W1b Well: average energy = 3.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001804
         W1b Well: collisional kernel bandwidth = 62
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.16759
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.04321
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.067914
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.181393
         W1b Well: minimal relaxation eigenvalue = 0.0370676
         W1b Well: maximal relaxation eigenvalue = 4.76446
         W1b Well:       grid size = 177
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3358 1/cm
         B8 Barrier:        grid size = 160
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1234 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -109 1/cm
         B2 Barrier:        grid size = 178
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3483 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.660214, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 177
      MasterEquation::Barrier::truncate: real weight = 3.50393e+22
      MasterEquation::Barrier::truncate: effective weight = 1.99985e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1484  -1234 1.47e+05 2.53e+16
        W1b  -3358  -3358      893 5.17e+13
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1234 4.77e+17
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -109 8.18e+17
         B2  -3358 7.69e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.5  8.47e-20  7.81e-28
        W1b    0.0298         1  2.53e-21  2.33e-29
         P1  1.18e+19  3.96e+20         1  9.23e-09
         P2  1.28e+27  4.29e+28  1.08e+08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      33.9  4.87e-23   4.5e-31
        W1b    0.0295         1  1.44e-24  1.33e-32
         P1  2.05e+22  6.96e+23         1  9.23e-09
         P2  2.22e+30  7.55e+31  1.08e+08         1
   MasterEquation::set:  done, cpu time[sec] = 0.66382, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.929344, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.16287, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.11591, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       260      8.13     0.217     0.783
          1   8.3e+03      59.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.56      8.13   -0.0478    -0.999
          1       306      59.3    -0.999    0.0478
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.11836, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.923836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.146353, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07591, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      84.2      5.17     0.302     0.698
          1  1.97e+03      49.4         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       3.1      5.17   -0.0745    -0.997
          1      72.5      49.4    -0.997    0.0745
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07824, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.922963, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147422, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07557, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      55.3      4.47     0.343     0.657
          1  1.15e+03      43.7         1   -0.0156
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      2.04      4.47   -0.0899    -0.996
          1      42.2      43.7    -0.996    0.0899
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07789, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.92133, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.147551, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07388, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      38.5      4.01      0.38      0.62
          1       709      36.3         1   -0.0183
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.42      4.01    -0.105    -0.994
          1      26.1      36.3    -0.994     0.105
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0762, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.375885, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001524, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.381803, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0368009
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      28.5      3.67     0.408     0.592
          1       459      27.3         1   -0.0206
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.05      3.67    -0.118    -0.993
          1      16.9      27.3    -0.993     0.118
         *Z       ---       ---  2.62e+14  4.53e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.382218, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 20851 1/cm
      Energy step      = 139 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 11.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 61
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001288
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000319
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026948
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.147281
         W1a Well: minimal relaxation eigenvalue = 0.0349897
         W1a Well: maximal relaxation eigenvalue = 20.7817
         W1a Well:       grid size = 161
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1527 1/cm
         W1b Well: average energy = 5.2 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001947
         W1b Well: collisional kernel bandwidth = 61
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.152815
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.041091
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051793
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.178319
         W1b Well: minimal relaxation eigenvalue = 0.0354682
         W1b Well: maximal relaxation eigenvalue = 9.21668
         W1b Well:       grid size = 175
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3473 1/cm
         B8 Barrier:        grid size = 159
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1249 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -138 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3473 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.614471, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1527  -1249 1.22e+05 6.65e+16
        W1b  -3473  -3473      274 1.26e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1249 1.27e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -138  1.9e+18
         B2  -3473 2.18e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      48.8  7.54e-20  5.72e-27
        W1b    0.0205         1  1.55e-21  1.17e-28
         P1  1.33e+19  6.47e+20         1  7.59e-08
         P2  1.75e+26  8.52e+27  1.32e+07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      49.4  4.82e-23  3.66e-30
        W1b    0.0203         1  9.77e-25  7.42e-32
         P1  2.07e+22  1.02e+24         1  7.59e-08
         P2  2.73e+29  1.35e+31  1.32e+07         1
   MasterEquation::set:  done, cpu time[sec] = 0.617854, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.899871, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.150698, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.07252, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       488      14.1     0.255     0.745
          1   1.6e+04        96         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      17.1      14.1   -0.0488    -0.999
          1       561        96    -0.999    0.0488
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.998 0.002
         well projection threshold  = 0.2
         partition projection error = 0.00238426
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.00142, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.07852, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.903712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143882, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05283, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       154      8.84     0.343     0.657
          1  3.63e+03      76.4         1   -0.0107
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.38      8.84   -0.0744    -0.997
          1       127      76.4    -0.997    0.0744
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05524, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.904994, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142446, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.0526, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      99.8      7.58     0.387     0.613
          1  2.03e+03      66.1         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.49      7.58   -0.0902    -0.996
          1        71      66.1    -0.996    0.0902
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.904157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142881, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.05222, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      68.5      6.77      0.43      0.57
          1  1.19e+03      53.2         1   -0.0155
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       2.4      6.77    -0.107    -0.994
          1      41.6      53.2    -0.994     0.107
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.05451, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.48832, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.001511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.493908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0349897
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0        50      6.21     0.466     0.534
          1       723      38.2         1   -0.0179
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      1.75      6.21    -0.124    -0.992
          1      25.3      38.2    -0.992     0.124
         *Z       ---       ---  3.36e+14  4.82e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.494283, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 22936 1/cm
      Energy step      = 153 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 14.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 60
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001413
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000325
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026248
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.146618
         W1a Well: minimal relaxation eigenvalue = 0.0334303
         W1a Well: maximal relaxation eigenvalue = 23.764
         W1a Well:       grid size = 160
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1543 1/cm
         W1b Well: average energy = 7.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.001959
         W1b Well: collisional kernel bandwidth = 60
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.144339
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03939
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071237
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.173296
         W1b Well: minimal relaxation eigenvalue = 0.0341951
         W1b Well: maximal relaxation eigenvalue = 6.56165
         W1b Well:       grid size = 172
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3379 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1237 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 173
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3532 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.616843, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 172
      MasterEquation::Barrier::truncate: real weight = 1.33635e+23
      MasterEquation::Barrier::truncate: effective weight = 9.33696e+19
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1543  -1237  1.4e+05 1.63e+17
        W1b  -3379  -3379      970 2.87e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1237 3.16e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 4.11e+18
         B2  -3379  5.7e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      66.3  6.97e-20  2.96e-26
        W1b    0.0151         1  1.05e-21  4.46e-28
         P1  1.43e+19  9.52e+20         1  4.24e-07
         P2  3.38e+25  2.24e+27  2.36e+06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      67.2  4.91e-23  2.08e-29
        W1b    0.0149         1  7.31e-25   3.1e-31
         P1  2.04e+22  1.37e+24         1  4.24e-07
         P2   4.8e+28  3.22e+30  2.36e+06         1
   MasterEquation::set:  done, cpu time[sec] = 0.620376, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.752103, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.157902, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.922986, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       984      20.4     0.307     0.693
          1  2.81e+04       121         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.9      20.4   -0.0543    -0.999
          1       941       121    -0.999    0.0543
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00294547
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000626, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.926822, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.875959, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139655, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02076, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       306      13.2     0.401     0.599
          1  6.24e+03      91.5         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      10.2      13.2   -0.0818    -0.997
          1       209      91.5    -0.997    0.0818
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.0232, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.880305, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139618, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02502, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       198      11.6     0.447     0.553
          1   3.4e+03      75.9         1   -0.0122
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      6.61      11.6   -0.0989    -0.995
          1       114      75.9    -0.995    0.0989
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02738, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.876255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.138863, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02018, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       135      10.6     0.492     0.508
          1  1.91e+03      57.3         1   -0.0146
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      4.51      10.6    -0.118    -0.993
          1      63.9      57.3    -0.993     0.118
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.02246, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.71841, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004032, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.726411, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0334303
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0      97.8      9.91     0.531     0.469
          1   1.1e+03      37.6         1   -0.0171
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      3.27      9.91    -0.138     -0.99
          1      36.8      37.6     -0.99     0.138
         *Z       ---       ---  4.31e+14  5.29e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.726784, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 25021 1/cm
      Energy step      = 167 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 16.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.1e-05
         W1a Well: collisional kernel bandwidth = 59
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001368
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000316
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027008
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.14102
         W1a Well: minimal relaxation eigenvalue = 0.0324287
         W1a Well: maximal relaxation eigenvalue = 23.6011
         W1a Well:       grid size = 159
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1531 1/cm
         W1b Well: average energy = 9.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002055
         W1b Well: collisional kernel bandwidth = 59
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.141815
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040572
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055305
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.155311
         W1b Well: minimal relaxation eigenvalue = 0.0330648
         W1b Well: maximal relaxation eigenvalue = 7.24287
         W1b Well:       grid size = 170
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3368 1/cm
         B8 Barrier:        grid size = 158
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1364 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -28 1/cm
         B2 Barrier:        grid size = 171
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3535 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.57683, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 170
      MasterEquation::Barrier::truncate: real weight = 2.53417e+23
      MasterEquation::Barrier::truncate: effective weight = 1.9327e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1531  -1364 2.31e+04 3.74e+17
        W1b  -3368  -3368 1.18e+03 6.22e+14
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1364 7.36e+18
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -28 8.43e+18
         B2  -3368 1.38e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      85.8  6.63e-20  1.18e-25
        W1b    0.0117         1  7.73e-22  1.37e-27
         P1  1.51e+19  1.29e+21         1  1.78e-06
         P2   8.5e+24  7.29e+26  5.63e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1      86.9   5.1e-23  9.05e-29
        W1b    0.0115         1  5.87e-25  1.04e-30
         P1  1.96e+22   1.7e+24         1  1.78e-06
         P2  1.11e+28   9.6e+29  5.63e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.580447, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.853644, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.154953, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01361, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+03      31.6     0.345     0.655
          1  4.27e+04       124         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      59.4      31.6   -0.0567    -0.998
          1  1.38e+03       124    -0.998    0.0567
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00321741
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000626, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.01743, elapsed time[sec] = 1
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.859806, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135824, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.00052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       564      20.8     0.436     0.564
          1  9.23e+03      87.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      18.3      20.8   -0.0832    -0.997
          1       299      87.7    -0.997    0.0832
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00289, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.857582, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135006, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.997629, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       364      18.4     0.481     0.519
          1  4.91e+03      68.8         1   -0.0108
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      11.8      18.4   -0.0996    -0.995
          1       159      68.8    -0.995    0.0996
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.999972, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.858488, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13481, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.998312, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       249      16.8     0.525     0.475
          1  2.67e+03        48         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      8.06      16.8    -0.118    -0.993
          1      86.5        48    -0.993     0.118
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.00067, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.723919, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.004002, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.731887, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0324287
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       181      15.6     0.565     0.435
          1  1.47e+03      28.6         1   -0.0151
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      5.87      15.6    -0.139     -0.99
          1      47.5      28.6     -0.99     0.139
         *Z       ---       ---   5.5e+14  5.94e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.732258, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 27107 1/cm
      Energy step      = 181 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 18.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.2e-05
         W1a Well: collisional kernel bandwidth = 58
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001324
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000314
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.025786
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138826
         W1a Well: minimal relaxation eigenvalue = 0.0317692
         W1a Well: maximal relaxation eigenvalue = 21.0497
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1491 1/cm
         W1b Well: average energy = 11.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002085
         W1b Well: collisional kernel bandwidth = 58
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.146425
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038783
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058584
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.155636
         W1b Well: minimal relaxation eigenvalue = 0.032023
         W1b Well: maximal relaxation eigenvalue = 11.8545
         W1b Well:       grid size = 169
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3481 1/cm
         B8 Barrier:        grid size = 157
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1310 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -43 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3481 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.579921, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1491  -1310 5.64e+04 8.17e+17
        W1b  -3481  -3481      455 1.29e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1310 1.62e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -43 1.64e+19
         B2  -3481 3.16e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       107  6.43e-20  3.82e-25
        W1b   0.00937         1  6.03e-22  3.58e-27
         P1  1.55e+19  1.66e+21         1  5.94e-06
         P2  2.62e+24  2.79e+26  1.68e+05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       108  5.36e-23  3.19e-28
        W1b   0.00926         1  4.96e-25  2.95e-30
         P1  1.87e+22  2.01e+24         1  5.94e-06
         P2  3.14e+27  3.39e+29  1.68e+05         1
   MasterEquation::set:  done, cpu time[sec] = 0.583299, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.821612, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143963, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.988307, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.11e+03      54.6     0.365     0.635
          1  5.63e+04       110         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      98.7      54.6   -0.0555    -0.998
          1  1.79e+03       110    -0.998    0.0555
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 0.00307661
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000602, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9923, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.838619, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133863, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.977492, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       938      35.5     0.444     0.556
          1  1.19e+04      71.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      29.8      35.5    -0.077    -0.997
          1       377      71.3    -0.997     0.077
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.994 0.006
         well projection threshold  = 0.2
         partition projection error = 0.00593226
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000567, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.981111, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.832015, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.133511, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970509, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       603      30.9     0.483     0.517
          1  6.19e+03        53         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      19.2      30.9   -0.0899    -0.996
          1       197        53    -0.996    0.0899
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.972827, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.833623, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135728, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.974282, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       412      27.7     0.522     0.478
          1  3.26e+03      34.6         1   -0.0102
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      13.1      27.7    -0.105    -0.994
          1       104      34.6    -0.994     0.105
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.976673, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810725, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.012176, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.826864, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0317692
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       300        25     0.561     0.439
          1  1.73e+03      19.3         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      9.52        25    -0.123    -0.992
          1      54.9      19.3    -0.992     0.123
         *Z       ---       ---     7e+14  6.78e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.827312, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 29192 1/cm
      Energy step      = 195 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 20.8 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000112
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.00255
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000313
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026351
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.138043
         W1a Well: minimal relaxation eigenvalue = 0.0185831
         W1a Well: maximal relaxation eigenvalue = 36.1758
         W1a Well:       grid size = 158
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1617 1/cm
         W1b Well: average energy = 14.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002208
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.146306
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038541
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059789
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150726
         W1b Well: minimal relaxation eigenvalue = 0.0312083
         W1b Well: maximal relaxation eigenvalue = 9.58395
         W1b Well:       grid size = 167
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3372 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1228 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3568 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.577442, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 167
      MasterEquation::Barrier::truncate: real weight = 8.48817e+23
      MasterEquation::Barrier::truncate: effective weight = 7.55945e+20
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1617  -1228 1.57e+05  1.7e+18
        W1b  -3372  -3372 1.34e+03 2.56e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1228 3.41e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 3.07e+19
         B2  -3372 6.83e+18
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       129  6.34e-20  1.06e-24
        W1b   0.00777         1  4.93e-22  8.23e-27
         P1  1.58e+19  2.03e+21         1  1.67e-05
         P2  9.45e+23  1.22e+26  5.99e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       130  5.69e-23   9.5e-28
        W1b   0.00768         1  4.37e-25   7.3e-30
         P1  1.76e+22  2.29e+24         1  1.67e-05
         P2  1.05e+27  1.37e+29  5.99e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.581357, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.82621, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145642, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.982831, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.58e+03      74.5     0.421     0.579
          1  1.12e+05      77.3         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       178      74.5   -0.0639    -0.998
          1  2.09e+03      77.3    -0.998    0.0639
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 0.00408675
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000613, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9866, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.827911, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.130476, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.963551, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   2.8e+03      49.5     0.518     0.482
          1  2.32e+04      51.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        52      49.5   -0.0944    -0.996
          1       431      51.1    -0.996    0.0944
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.991 0.009
         well projection threshold  = 0.2
         partition projection error = 0.00891113
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000544, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.967261, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.828548, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131108, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.964422, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.74e+03      44.3     0.569     0.431
          1  1.19e+04      39.6         1   -0.0103
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      32.4      44.3    -0.116    -0.993
          1       221      39.6    -0.993     0.116
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.987 0.013
         well projection threshold  = 0.2
         partition projection error = 0.0133921
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000539, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.967937, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.829522, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.131609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.965898, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.13e+03      41.4     0.623     0.377
          1  6.12e+03      27.7         1   -0.0129
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      21.1      41.4    -0.144     -0.99
          1       114      27.7     -0.99     0.144
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.96846, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.828712, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.029303, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.862858, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0185831
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       778      40.1      0.68      0.32
          1  3.18e+03      16.9         1   -0.0165
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      14.5      40.1    -0.184    -0.983
          1      59.1      16.9    -0.983     0.184
         *Z       ---       ---  8.85e+14   7.8e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.863367, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 31278 1/cm
      Energy step      = 209 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 23.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000156
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.004189
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000305
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027758
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.136737
         W1a Well: minimal relaxation eigenvalue = 0.0294345
         W1a Well: maximal relaxation eigenvalue = 27.1693
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1535 1/cm
         W1b Well: average energy = 16.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002212
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.134634
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.040248
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060456
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.150574
         W1b Well: minimal relaxation eigenvalue = 0.0304236
         W1b Well: maximal relaxation eigenvalue = 11.3739
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3416 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1326 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3625 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.569889, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 166
      MasterEquation::Barrier::truncate: real weight = 1.49772e+24
      MasterEquation::Barrier::truncate: effective weight = 1.42965e+21
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1535  -1326 4.34e+04 3.39e+18
        W1b  -3416  -3416 1.14e+03  4.9e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1326 6.86e+19
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 5.53e+19
         B2  -3416 1.41e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       151  6.31e-20  2.58e-24
        W1b   0.00661         1  4.17e-22   1.7e-26
         P1  1.58e+19   2.4e+21         1  4.08e-05
         P2  3.88e+23  5.87e+25  2.45e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       153  6.07e-23  2.48e-27
        W1b   0.00653         1  3.97e-25  1.62e-29
         P1  1.65e+22  2.52e+24         1  4.08e-05
         P2  4.03e+26  6.17e+28  2.45e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.573871, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.818483, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.142891, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.979872, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.02e+04       117     0.459     0.541
          1  7.75e+04      50.7         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       299       117   -0.0689    -0.998
          1  2.28e+03      50.7    -0.998    0.0689
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.982173, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.817459, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129174, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.951532, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0     3e+03      78.4     0.553     0.447
          1  1.58e+04      31.4         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      88.2      78.4      -0.1    -0.995
          1       466      31.4    -0.995       0.1
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.990 0.010
         well projection threshold  = 0.2
         partition projection error = 0.0100441
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.955352, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.816293, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129897, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.951102, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.9e+03      69.2     0.604     0.396
          1  8.06e+03      23.2         1   -0.0101
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.9      69.2    -0.123    -0.992
          1       237      23.2    -0.992     0.123
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.953466, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.810828, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129885, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.945437, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.27e+03      62.4     0.662     0.338
          1  4.12e+03      15.7         1    -0.013
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      37.4      62.4    -0.158    -0.988
          1       121      15.7    -0.988     0.158
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.947777, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.813363, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.088514, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.906214, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0294345
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0       900        56     0.734     0.266
          1  2.12e+03      10.6         1   -0.0182
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      26.5        56    -0.219    -0.976
          1      62.4      10.6    -0.976     0.219
         *Z       ---       ---  1.11e+15  9.03e+13
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.906786, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 33362 1/cm
      Energy step      = 222 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 25.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000234
         W1a Well: collisional kernel bandwidth = 57
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.008901
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000973
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026169
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132434
         W1a Well: minimal relaxation eigenvalue = 0.0292226
         W1a Well: maximal relaxation eigenvalue = 25.0455
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1492 1/cm
         W1b Well: average energy = 18.7 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002197
         W1b Well: collisional kernel bandwidth = 57
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.141215
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037816
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04933
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.155273
         W1b Well: minimal relaxation eigenvalue = 0.0296619
         W1b Well: maximal relaxation eigenvalue = 16.1067
         W1b Well:       grid size = 166
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3489 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1269 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -160 1/cm
         B2 Barrier:        grid size = 166
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3489 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.566771, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1492  -1269 9.41e+04 6.52e+18
        W1b  -3489  -3489      580 9.09e+15
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1269 1.33e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -160 9.62e+19
         B2  -3489 2.79e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       174  6.37e-20  5.68e-24
        W1b   0.00574         1  3.65e-22  3.26e-26
         P1  1.57e+19  2.74e+21         1  8.91e-05
         P2  1.76e+23  3.07e+25  1.12e+04         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       176  6.51e-23   5.8e-27
        W1b   0.00567         1  3.69e-25  3.29e-29
         P1  1.54e+22  2.71e+24         1  8.91e-05
         P2  1.72e+26  3.04e+28  1.12e+04         1
   MasterEquation::set:  done, cpu time[sec] = 0.570312, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.812436, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145133, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.970074, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.61e+04       193     0.514     0.486
          1  8.04e+04        41         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       470       193     -0.08    -0.997
          1  2.35e+03        41    -0.997      0.08
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.972359, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.806027, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129855, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940516, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.64e+03       128     0.607     0.393
          1  1.64e+04      26.1         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       136       128    -0.116    -0.993
          1       478      26.1    -0.993     0.116
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.986 0.014
         well projection threshold  = 0.2
         partition projection error = 0.0135095
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000604, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.944142, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807419, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127926, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942283, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.91e+03       111     0.661     0.339
          1  8.29e+03      20.5         1   -0.0112
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        85       111    -0.146    -0.989
          1       242      20.5    -0.989     0.146
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.944653, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.808553, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129335, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942726, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.93e+03      97.1     0.728     0.272
          1  4.22e+03      16.6         1   -0.0153
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      56.3      97.1    -0.198     -0.98
          1       123      16.6     -0.98     0.198
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.945055, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.80605, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120165, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.93052, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0292226
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.34e+03      80.5     0.819     0.181
          1  2.18e+03      18.2         1   -0.0259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      39.1      80.5    -0.323    -0.946
          1      63.8      18.2    -0.946     0.323
         *Z       ---       ---  1.39e+15  1.05e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931098, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 35447 1/cm
      Energy step      = 236 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 27.9 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000206
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011067
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001821
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.026556
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135577
         W1a Well: minimal relaxation eigenvalue = 0.019451
         W1a Well: maximal relaxation eigenvalue = 35.6595
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1605 1/cm
         W1b Well: average energy = 21.1 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00222
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133287
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038159
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.042434
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.152095
         W1b Well: minimal relaxation eigenvalue = 0.029023
         W1b Well: maximal relaxation eigenvalue = 17.8576
         W1b Well:       grid size = 165
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3493 1/cm
         B8 Barrier:        grid size = 156
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1369 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -189 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3493 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.555113, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1605  -1369 2.06e+04 1.21e+19
        W1b  -3493  -3493      616 1.64e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1369 2.49e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -189 1.62e+20
         B2  -3493  5.3e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       198  6.44e-20  1.14e-23
        W1b   0.00506         1  3.26e-22  5.78e-26
         P1  1.55e+19  3.07e+21         1  0.000177
         P2  8.76e+22  1.73e+25  5.65e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       200     7e-23  1.24e-26
        W1b     0.005         1   3.5e-25   6.2e-29
         P1  1.43e+22  2.86e+24         1  0.000177
         P2  8.07e+25  1.61e+28  5.65e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.558636, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.812875, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.136197, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.968258, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.87e+04       282     0.599     0.401
          1  1.23e+05      35.9         1         0
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       753       282    -0.106    -0.994
          1  2.39e+03      35.9    -0.994     0.106
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.970513, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.807996, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127205, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9398, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.06e+04       182     0.703     0.297
          1  2.49e+04      26.6         1    -0.012
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       206       182    -0.166    -0.986
          1       485      26.6    -0.986     0.166
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94201, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.806678, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127716, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938986, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.38e+03       155     0.763     0.237
          1  1.26e+04      25.3         1   -0.0163
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       124       155    -0.224    -0.975
          1       246      25.3    -0.975     0.224
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1b   W1a
         projection:  0.950 0.050
         well projection threshold  = 0.2
         partition projection error = 0.0499648
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000608, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1b     W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.942653, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.80926, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127966, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.942098, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.98e+03       130     0.836     0.164
          1   6.5e+03      30.4         1   -0.0257
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      77.3       130     -0.34     -0.94
          1       126      30.4     -0.94      0.34
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.944447, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.806255, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127609, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.938448, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.019451
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.51e+03      85.6     0.916    0.0842
          1   3.5e+03      61.2         1    -0.055
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.7      85.6    -0.612    -0.791
          1      68.1      61.2    -0.791     0.612
         *Z       ---       ---  1.73e+15  1.23e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.940805, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 37532 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 30.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.000551
         W1a Well: collisional kernel bandwidth = 56
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.011779
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.001756
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.025935
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132715
         W1a Well: minimal relaxation eigenvalue = 0.00167849
         W1a Well: maximal relaxation eigenvalue = 49.8239
         W1a Well:       grid size = 157
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1718 1/cm
         W1b Well: average energy = 23.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002094
         W1b Well: collisional kernel bandwidth = 56
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.136293
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.038043
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.054329
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.149041
         W1b Well: minimal relaxation eigenvalue = 0.028501
         W1b Well: maximal relaxation eigenvalue = 16.2377
         W1b Well:       grid size = 164
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3467 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1218 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -218 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3467 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.564543, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1718  -1218 1.74e+05 2.19e+19
        W1b  -3467  -3467 1.05e+03 2.87e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1218 4.53e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -218 2.67e+20
         B2  -3467 9.72e+19
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       221  6.55e-20  2.13e-23
        W1b   0.00453         1  2.97e-22  9.66e-26
         P1  1.53e+19  3.37e+21         1  0.000326
         P2  4.69e+22  1.04e+25  3.07e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       223  7.54e-23  2.45e-26
        W1b   0.00448         1  3.37e-25   1.1e-28
         P1  1.33e+22  2.96e+24         1  0.000326
         P2  4.07e+25   9.1e+27  3.07e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.568637, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.802915, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.145503, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.956892, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.29e+05       374     0.723     0.277
          1  1.43e+06      47.3         1   -0.0118
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.22e+03       374    -0.173    -0.985
          1  2.41e+03      47.3    -0.985     0.173
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.959183, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.7991, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127349, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.931047, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.91e+05       228     0.837     0.163
          1  2.95e+05        51         1   -0.0233
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       321       228    -0.328    -0.945
          1       495        51    -0.945     0.328
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.933271, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.798666, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127104, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.930561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+05       172     0.894     0.106
          1  1.53e+05      76.6         1    -0.038
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       183       172    -0.492    -0.871
          1       257      76.6    -0.871     0.492
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.9328, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.798922, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127749, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.931455, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.12e+04      99.1     0.941    0.0588
          1  8.36e+04       135         1   -0.0725
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       103      99.1    -0.733     -0.68
          1       140       135     -0.68     0.733
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.93371, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.797677, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.126796, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929041, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00167849
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.27e+04      41.9     0.968    0.0317
          1  4.98e+04       189         1    -0.138
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      54.9      41.9    -0.899    -0.438
          1      83.6       189    -0.438     0.899
         *Z       ---       ---  2.13e+15  1.43e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.931214, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 39617 1/cm
      Energy step      = 264 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 32.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002357
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.057687
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.002411
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.029142
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133985
         W1a Well: minimal relaxation eigenvalue = 0.0233994
         W1a Well: maximal relaxation eigenvalue = 33.2244
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1566 1/cm
         W1b Well: average energy = 25.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002079
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132397
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036496
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057808
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.147688
         W1b Well: minimal relaxation eigenvalue = 0.0280021
         W1b Well: maximal relaxation eigenvalue = 16.6846
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3415 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1302 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -247 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3679 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.614821, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 163
      MasterEquation::Barrier::truncate: real weight = 1.17001e+25
      MasterEquation::Barrier::truncate: effective weight = 1.41087e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1566  -1302 6.22e+04 3.85e+19
        W1b  -3415  -3415  1.5e+03 4.91e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1302    8e+20
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -247 4.28e+20
         B2  -3415 1.73e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       244  6.69e-20  3.75e-23
        W1b    0.0041         1  2.74e-22  1.54e-25
         P1   1.5e+19  3.65e+21         1  0.000561
         P2  2.67e+22   6.5e+24  1.78e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       247  8.13e-23  4.56e-26
        W1b   0.00405         1  3.29e-25  1.85e-28
         P1  1.23e+22  3.04e+24         1  0.000561
         P2  2.19e+25  5.41e+27  1.78e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.618924, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784836, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143463, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933249, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.19e+04       403     0.895     0.105
          1  1.06e+05       184         1    -0.035
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.92e+03       403     -0.48    -0.877
          1  2.48e+03       184    -0.877      0.48
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.935581, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.782864, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124829, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.912221, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.89e+04        56     0.971    0.0292
          1   2.6e+04       347         1    -0.136
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       443        56    -0.905    -0.425
          1       608       347    -0.425     0.905
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.914447, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783959, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124667, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.91338, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.67e+03      19.9     0.982    0.0179
          1  1.57e+04       338         1    -0.225
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       226      19.9    -0.962    -0.274
          1       368       338    -0.274     0.962
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.925 0.075
         well projection threshold  = 0.2
         partition projection error = 0.044811
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000649, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.917317, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.783086, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125536, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913413, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   4.9e+03      8.37     0.988     0.012
          1  1.01e+04       317         1    -0.338
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       115      8.37    -0.983    -0.186
          1       237       317    -0.186     0.983
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.965 0.035
         well projection threshold  = 0.2
         partition projection error = 0.0151374
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000579, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.917015, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 1900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784981, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124677, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914242, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0233994
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.48e+03      3.72     0.991         0
          1  6.91e+03       292         1    -0.477
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      57.9      3.72    -0.991    -0.133
          1       162       292    -0.133     0.991
         *Z       ---       ---  2.61e+15  1.67e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916523, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 41702 1/cm
      Energy step      = 278 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 35.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00205
         W1a Well: collisional kernel bandwidth = 55
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.126175
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.014071
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027575
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134521
         W1a Well: minimal relaxation eigenvalue = 0.00775347
         W1a Well: maximal relaxation eigenvalue = 42.2807
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1665 1/cm
         W1b Well: average energy = 28.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002007
         W1b Well: collisional kernel bandwidth = 55
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132422
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037281
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056104
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.145924
         W1b Well: minimal relaxation eigenvalue = 0.0269571
         W1b Well: maximal relaxation eigenvalue = 27.2476
         W1b Well:       grid size = 163
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3612 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1387 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -276 1/cm
         B2 Barrier:        grid size = 163
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3612 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.690415, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1665  -1387 1.48e+04 6.61e+19
        W1b  -3612  -3612      281 8.21e+16
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1387 1.38e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -276 6.71e+20
         B2  -3612 2.98e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       267  6.85e-20  6.26e-23
        W1b   0.00375         1  2.57e-22  2.35e-25
         P1  1.46e+19  3.89e+21         1  0.000914
         P2   1.6e+22  4.26e+24  1.09e+03         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       270  8.76e-23  8.01e-26
        W1b   0.00371         1  3.25e-25  2.97e-28
         P1  1.14e+22  3.08e+24         1  0.000914
         P2  1.25e+25  3.37e+27  1.09e+03         1
   MasterEquation::set:  done, cpu time[sec] = 0.694285, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785624, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.143127, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.933625, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.84e+05       114     0.975    0.0254
          1  3.74e+05       985         1    -0.144
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.21e+03       114     -0.92    -0.392
          1   2.9e+03       985    -0.392      0.92
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.935905, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.786123, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12515, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.915819, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.79e+04      21.8     0.986    0.0143
          1  9.42e+04       688         1    -0.259
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       449      21.8    -0.973     -0.23
          1       730       688     -0.23     0.973
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918033, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787516, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125965, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.918228, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.91e+04        12     0.989    0.0115
          1  5.44e+04       596         1    -0.323
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       225        12    -0.982    -0.186
          1       422       596    -0.186     0.982
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.92043, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787212, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124519, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.916257, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.46e+04      7.18     0.991         0
          1  3.26e+04       528         1    -0.399
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       113      7.18    -0.988    -0.152
          1       253       528    -0.152     0.988
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.918626, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.787805, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.125361, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.9179, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00775347
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.33e+03      4.38     0.992         0
          1  2.05e+04       481         1    -0.491
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      56.8      4.38    -0.992    -0.124
          1       159       481    -0.124     0.992
         *Z       ---       ---  3.18e+15  1.95e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.985 0.015
         well projection threshold  = 0.2
         partition projection error = 0.00394375
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000635, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.921517, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 43787 1/cm
      Energy step      = 292 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 37.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002083
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128629
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.00333
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.028361
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135825
         W1a Well: minimal relaxation eigenvalue = 0.000545536
         W1a Well: maximal relaxation eigenvalue = 51.7734
         W1a Well:       grid size = 156
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1764 1/cm
         W1b Well: average energy = 30.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002246
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.128463
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.037731
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.056924
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.144749
         W1b Well: minimal relaxation eigenvalue = 0.0269641
         W1b Well: maximal relaxation eigenvalue = 21.2902
         W1b Well:       grid size = 162
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3516 1/cm
         B8 Barrier:        grid size = 155
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1472 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -12 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3516 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.681369, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1764  -1472      696 1.11e+20
        W1b  -3516  -3516      990 1.34e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1472 2.32e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -12 1.03e+21
         B2  -3516    5e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       289  7.03e-20  9.98e-23
        W1b   0.00346         1  2.43e-22  3.45e-25
         P1  1.42e+19  4.11e+21         1   0.00142
         P2     1e+22   2.9e+24       704         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       293  9.45e-23  1.34e-25
        W1b   0.00342         1  3.23e-25  4.59e-28
         P1  1.06e+22   3.1e+24         1   0.00142
         P2  7.45e+24  2.18e+27       704         1
   MasterEquation::set:  done, cpu time[sec] = 0.685274, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.784859, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135453, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.940908, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.08e+06      9.17     0.992         0
          1  8.58e+06  1.27e+03         1    -0.423
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.23e+03      9.17     -0.99    -0.138
          1  4.68e+03  1.27e+03    -0.138      0.99
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.94317, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78489, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123727, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913785, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.17e+05      4.73     0.993         0
          1  2.21e+06       853         1    -0.512
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       446      4.73    -0.993    -0.114
          1  1.21e+03       853    -0.114     0.993
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.91629, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.78511, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.124312, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.914192, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.09e+05      3.85     0.994         0
          1  1.27e+06       760         1    -0.556
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       223      3.85    -0.994    -0.105
          1       695       760    -0.105     0.994
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.916377, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.785605, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123243, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913382, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.05e+05       3.2     0.994         0
          1  7.52e+05       711         1    -0.604
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       112       3.2    -0.995    -0.097
          1       410       711    -0.097     0.995
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915492, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2100 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772993, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.127694, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.905739, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000545536
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.02e+05      2.63     0.995         0
          1  4.58e+05       701         1    -0.658
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      55.9      2.63    -0.996    -0.089
          1       250       701    -0.089     0.996
         *Z       ---       ---  3.86e+15  2.27e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.907943, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 45873 1/cm
      Energy step      = 306 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 40.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002235
         W1a Well: collisional kernel bandwidth = 54
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.12425
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.007277
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027759
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.133387
         W1a Well: minimal relaxation eigenvalue = 0.0200784
         W1a Well: maximal relaxation eigenvalue = 34.677
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1557 1/cm
         W1b Well: average energy = 33.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002225
         W1b Well: collisional kernel bandwidth = 54
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133756
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035826
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055769
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.138238
         W1b Well: minimal relaxation eigenvalue = 0.0266909
         W1b Well: maximal relaxation eigenvalue = 17.849
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3393 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1251 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -26 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3698 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.673302, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 161
      MasterEquation::Barrier::truncate: real weight = 4.51358e+25
      MasterEquation::Barrier::truncate: effective weight = 6.30883e+22
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1557  -1251  1.2e+05 1.82e+20
        W1b  -3393  -3393 2.67e+03 2.16e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1251 3.83e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -26 1.55e+21
         B2  -3393 8.21e+20
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       311  7.23e-20  1.53e-22
        W1b   0.00321         1  2.32e-22  4.92e-25
         P1  1.38e+19   4.3e+21         1   0.00212
         P2  6.53e+21  2.03e+24       472         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       315  1.02e-22  2.16e-25
        W1b   0.00318         1  3.23e-25  6.85e-28
         P1  9.82e+21  3.09e+24         1   0.00212
         P2  4.64e+24  1.46e+27       472         1
   MasterEquation::set:  done, cpu time[sec] = 0.677361, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769157, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129169, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913503, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+05      2.54     0.995         0
          1  3.82e+05  1.61e+03         1    -0.673
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.19e+03      2.54    -0.996   -0.0839
          1  7.67e+03  1.61e+03   -0.0839     0.996
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915766, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767746, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123096, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895553, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.18e+04      1.51     0.996         0
          1  1.07e+05  1.14e+03         1    -0.776
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       438      1.51    -0.997   -0.0729
          1  2.15e+03  1.14e+03   -0.0729     0.997
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897724, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767771, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122166, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894448, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.09e+04      1.13     0.996         0
          1  6.63e+04  1.02e+03         1    -0.839
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       219      1.13    -0.998   -0.0674
          1  1.33e+03  1.02e+03   -0.0674     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.8966, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766986, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123943, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.895656, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.47e+03     0.766     0.996         0
          1   4.3e+04       905         1    -0.914
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       110     0.766    -0.998   -0.0619
          1       864       905   -0.0619     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.996 0.004
         well projection threshold  = 0.2
         partition projection error = 2.81926e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000626, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899294, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2200 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.766849, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122722, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894118, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0200784
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.74e+03     0.467     0.997         0
          1  2.92e+04       781         1    -0.998
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0        55     0.467    -0.998   -0.0567
          1       586       781   -0.0567     0.998
         *Z       ---       ---  4.66e+15  2.64e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 1.78801e-08
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000565, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.897841, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 47958 1/cm
      Energy step      = 320 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 42.5 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002176
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121128
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034508
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037642
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132149
         W1a Well: minimal relaxation eigenvalue = 0.00908652
         W1a Well: maximal relaxation eigenvalue = 40.8989
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1641 1/cm
         W1b Well: average energy = 35.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002001
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.129539
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035776
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.790596
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.143966
         W1b Well: minimal relaxation eigenvalue = 0.0259393
         W1b Well: maximal relaxation eigenvalue = 26.0899
         W1b Well:       grid size = 161
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3561 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1321 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -41 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3561 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.44192, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1641  -1321 4.66e+04 2.93e+20
        W1b  -3561  -3561      773 3.42e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1321  6.2e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -41  2.3e+21
         B2  -3561 1.32e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       333  7.45e-20  2.27e-22
        W1b   0.00301         1  2.24e-22  6.82e-25
         P1  1.34e+19  4.47e+21         1   0.00305
         P2   4.4e+21  1.47e+24       328         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       337   1.1e-22  3.34e-25
        W1b   0.00297         1  3.26e-25  9.93e-28
         P1  9.12e+21  3.07e+24         1   0.00305
         P2  2.99e+24  1.01e+27       328         1
   MasterEquation::set:  done, cpu time[sec] = 1.44585, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.772699, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139828, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.929811, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+05      1.47     0.996         0
          1  1.14e+06  2.72e+03         1    -0.823
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.14e+03      1.47    -0.998   -0.0665
          1  1.04e+04  2.72e+03   -0.0665     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.932083, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.768788, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.1228, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.896071, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.72e+04      1.02     0.997         0
          1  2.98e+05  1.83e+03         1    -0.885
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       429      1.02    -0.998   -0.0619
          1   2.7e+03  1.83e+03   -0.0619     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.898269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770566, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122412, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.897674, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.36e+04     0.854     0.997         0
          1  1.75e+05  1.59e+03         1    -0.922
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       214     0.854    -0.998   -0.0593
          1  1.59e+03  1.59e+03   -0.0593     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.899861, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770774, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123412, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.89868, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.18e+04     0.676     0.997         0
          1  1.07e+05   1.4e+03         1    -0.969
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       107     0.676    -0.998   -0.0565
          1       975   1.4e+03   -0.0565     0.998
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90088, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2300 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.770462, elapsed time[sec] = 1
         inverting kinetic matrices ... done, cpu time[sec] = 0.123118, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.898309, elapsed time[sec] = 1
      minimal relaxation eigenvalue / collisional frequency = 0.00908652
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.91e+03     0.491     0.997         0
          1  6.87e+04  1.24e+03    -0.976         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      53.7     0.491    -0.999   -0.0535
          1       624  1.24e+03   -0.0535     0.999
         *Z       ---       ---   5.6e+15  3.07e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.997 0.003
         well projection threshold  = 0.2
         partition projection error = 1.66179e-06
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000647, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.901998, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 50043 1/cm
      Energy step      = 334 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 45.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.0023
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.11959
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033903
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.043505
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134331
         W1a Well: minimal relaxation eigenvalue = 0.00289402
         W1a Well: maximal relaxation eigenvalue = 46.8593
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1726 1/cm
         W1b Well: average energy = 38.3 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002275
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.133006
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036838
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.051726
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.142747
         W1b Well: minimal relaxation eigenvalue = 0.0259401
         W1b Well: maximal relaxation eigenvalue = 19.5131
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3396 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1392 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -56 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3730 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.713133, elapsed time[sec] = 0
      B2 barrier top is lower than the bottom of the well it connects => truncating
      MasterEquation::Barrier::truncate: grid size = 160
      MasterEquation::Barrier::truncate: real weight = 1.02931e+26
      MasterEquation::Barrier::truncate: effective weight = 1.57031e+23
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1726  -1392 1.35e+04 4.64e+20
        W1b  -3396  -3396 3.25e+03 5.31e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1392 9.84e+21
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -56 3.36e+21
         B2  -3396 2.08e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       354  7.68e-20  3.27e-22
        W1b   0.00283         1  2.17e-22  9.23e-25
         P1   1.3e+19  4.61e+21         1   0.00425
         P2  3.06e+21  1.08e+24       235         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       358  1.18e-22  5.02e-25
        W1b   0.00279         1   3.3e-25   1.4e-27
         P1  8.47e+21  3.03e+24         1   0.00425
         P2  1.99e+24  7.13e+26       235         1
   MasterEquation::set:  done, cpu time[sec] = 0.71751, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.769641, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.132345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.919793, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.24e+05      0.74     0.997         0
          1  5.75e+06  3.01e+03         1    -0.972
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.09e+03      0.74    -0.999   -0.0546
          1  1.67e+04  3.01e+03   -0.0546     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.922061, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767018, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122421, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.894172, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.45e+05     0.615     0.997         0
          1  1.51e+06  2.12e+03    -0.989         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       419     0.615    -0.999   -0.0525
          1  4.36e+03  2.12e+03   -0.0525     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.896343, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767544, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.620345, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.39296, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.24e+04     0.561     0.997         0
          1  8.82e+05  1.92e+03    -0.968         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       209     0.561    -0.999   -0.0514
          1  2.55e+03  1.92e+03   -0.0514     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 1.39515, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.765209, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122379, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892333, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.62e+04     0.494     0.997         0
          1  5.31e+05  1.79e+03    -0.943         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       105     0.494    -0.999   -0.0501
          1  1.54e+03  1.79e+03   -0.0501     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894491, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2400 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.64148, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.003503, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.648657, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00289402
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.81e+04      0.41     0.997         0
          1  3.31e+05   1.7e+03    -0.915         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      52.4      0.41    -0.999   -0.0486
          1       958   1.7e+03   -0.0486     0.999
         *Z       ---       ---  6.69e+15  3.56e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.649006, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2500 K
      Energy reference = 52128 1/cm
      Energy step      = 348 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 47.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 2.3e-05
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.001106
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.000302
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.027814
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.134513
         W1a Well: minimal relaxation eigenvalue = 0.000466789
         W1a Well: maximal relaxation eigenvalue = 51.268
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1812 1/cm
         W1b Well: average energy = 40.8 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002289
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.132879
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035603
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.053191
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.139159
         W1b Well: minimal relaxation eigenvalue = 0.0252439
         W1b Well: maximal relaxation eigenvalue = 26.5435
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3551 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1463 1/cm
         B1 Barrier:        grid size = 150
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -72 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3551 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.537752, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1812  -1463 1.39e+03 7.22e+20
        W1b  -3551  -3551 1.17e+03 8.13e+17
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1463 1.54e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -72 4.83e+21
         B2  -3551 3.21e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       374  7.92e-20  4.58e-22
        W1b   0.00267         1  2.12e-22  1.22e-24
         P1  1.26e+19  4.72e+21         1   0.00577
         P2  2.19e+21  8.18e+23       173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       379  1.27e-22  7.33e-25
        W1b   0.00264         1  3.35e-25  1.94e-27
         P1  7.88e+21  2.98e+24         1   0.00577
         P2  1.36e+24  5.17e+26       173         1
   MasterEquation::set:  done, cpu time[sec] = 0.541467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.747518, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.140316, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899452, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.38e+06     0.502     0.997         0
          1   4.8e+07  4.79e+03    -0.941         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  2.04e+03     0.502    -0.999   -0.0486
          1  2.24e+04  4.79e+03   -0.0486     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.90194, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759672, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122322, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.886505, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  8.76e+05     0.439     0.998         0
          1  1.19e+07  3.22e+03    -0.922         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       409     0.439    -0.999   -0.0476
          1  5.55e+03  3.22e+03   -0.0476     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.888685, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.759393, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121739, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.885808, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.38e+05     0.418     0.998         0
          1   6.7e+06  2.83e+03    -0.912         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       204     0.418    -0.999   -0.0471
          1  3.13e+03  2.83e+03   -0.0471     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.887958, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75759, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121508, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.883556, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.19e+05     0.395     0.998         0
          1  3.85e+06  2.58e+03    -0.901         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       102     0.395    -0.999   -0.0465
          1   1.8e+03  2.58e+03   -0.0465     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.885683, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2500 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.758492, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121461, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.884623, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000466789
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.1e+05     0.365     0.998         0
          1  2.27e+06  2.45e+03    -0.889         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      51.1     0.365    -0.999   -0.0459
          1  1.06e+03  2.45e+03   -0.0459     0.999
         *Z       ---       ---  7.96e+15  4.12e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.886775, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2600 K
      Energy reference = 54213 1/cm
      Energy step      = 361 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 50.1 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002175
         W1a Well: collisional kernel bandwidth = 53
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.118544
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034666
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.050116
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135276
         W1a Well: minimal relaxation eigenvalue = 0.00217979
         W1a Well: maximal relaxation eigenvalue = 47.9358
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1742 1/cm
         W1b Well: average energy = 43.4 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00217
         W1b Well: collisional kernel bandwidth = 53
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.131956
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035835
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.047352
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.141911
         W1b Well: minimal relaxation eigenvalue = 0.0248593
         W1b Well: maximal relaxation eigenvalue = 27.5056
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3547 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1380 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -298 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3547 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.712397, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1742  -1380 1.62e+04 1.11e+21
        W1b  -3547  -3547 1.29e+03 1.23e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1380 2.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -298 6.85e+21
         B2  -3547 4.88e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       394  8.21e-20  6.28e-22
        W1b   0.00254         1  2.08e-22  1.59e-24
         P1  1.22e+19   4.8e+21         1   0.00765
         P2  1.59e+21  6.28e+23       131         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       399  1.36e-22  1.04e-24
        W1b   0.00251         1  3.42e-25  2.62e-27
         P1  7.33e+21  2.93e+24         1   0.00765
         P2  9.58e+23  3.82e+26       131         1
   MasterEquation::set:  done, cpu time[sec] = 0.716282, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.767994, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.13692, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.925568, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.15e+05      0.34     0.998         0
          1  1.47e+07  6.28e+03    -0.885         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0     2e+03      0.34    -0.999   -0.0445
          1  3.21e+04  6.28e+03   -0.0445     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.928145, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763601, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122376, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890663, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.83e+05     0.303     0.998         0
          1  3.67e+06  4.15e+03    -0.871         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       399     0.303    -0.999   -0.0438
          1     8e+03  4.15e+03   -0.0438     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892838, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764771, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122571, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891822, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.15e+04     0.288     0.998         0
          1  2.09e+06  3.57e+03    -0.864         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       200     0.288    -0.999   -0.0435
          1  4.55e+03  3.57e+03   -0.0435     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893984, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763527, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.123153, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891634, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.58e+04     0.269     0.998         0
          1  1.22e+06  3.12e+03    -0.854         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      99.8     0.269    -0.999    -0.043
          1  2.66e+03  3.12e+03    -0.043     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893968, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2600 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76512, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122851, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.892456, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00217979
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.29e+04     0.246     0.998         0
          1  7.34e+05  2.75e+03    -0.843         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      49.9     0.246    -0.999   -0.0424
          1   1.6e+03  2.75e+03   -0.0424     0.999
         *Z       ---       ---  9.44e+15  4.76e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.894612, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2700 K
      Energy reference = 56298 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 52.6 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002387
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.113326
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033909
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.037833
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.135432
         W1a Well: minimal relaxation eigenvalue = 0.000509723
         W1a Well: maximal relaxation eigenvalue = 50.4489
         W1a Well:       grid size = 155
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1827 1/cm
         W1b Well: average energy = 45.9 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002094
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.130945
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.03672
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.052243
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.13721
         W1b Well: minimal relaxation eigenvalue = 0.017229
         W1b Well: maximal relaxation eigenvalue = 36.7106
         W1b Well:       grid size = 160
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3701 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1451 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -326 1/cm
         B2 Barrier:        grid size = 160
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3701 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.694678, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1827  -1451 1.97e+03 1.67e+21
        W1b  -3701  -3701      326 1.83e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1451 3.59e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -326 9.59e+21
         B2  -3701  7.3e+21
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       414  8.48e-20  8.41e-22
        W1b   0.00242         1  2.05e-22  2.03e-24
         P1  1.18e+19  4.88e+21         1   0.00992
         P2  1.19e+21  4.92e+23       101         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       419  1.46e-22  1.45e-24
        W1b   0.00239         1   3.5e-25  3.47e-27
         P1  6.83e+21  2.86e+24         1   0.00992
         P2  6.89e+23  2.88e+26       101         1
   MasterEquation::set:  done, cpu time[sec] = 0.698819, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.762504, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.139419, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.913008, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.82e+06     0.297     0.998         0
          1  8.01e+07  1.08e+04    -0.853         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.95e+03     0.297    -0.999   -0.0419
          1  4.08e+04  1.08e+04   -0.0419     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.915269, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.76321, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121559, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.889431, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.64e+05     0.272     0.998         0
          1  1.87e+07  6.79e+03    -0.847         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       390     0.272    -0.999   -0.0416
          1  9.56e+03  6.79e+03   -0.0416     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.891597, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764101, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.122011, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890586, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.82e+05     0.264     0.998         0
          1  1.02e+07  5.69e+03    -0.843         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       195     0.264    -0.999   -0.0414
          1  5.22e+03  5.69e+03   -0.0414     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892763, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.764989, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.121736, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.891433, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.91e+05     0.257     0.998         0
          1  5.69e+06  4.87e+03    -0.839         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      97.4     0.257    -0.999   -0.0412
          1   2.9e+03  4.87e+03   -0.0412     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.893606, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2700 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.763984, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12211, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.890561, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.000509723
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.55e+04     0.248     0.998         0
          1  3.23e+06  4.26e+03    -0.834         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      48.7     0.248    -0.999    -0.041
          1  1.64e+03  4.26e+03    -0.041     0.999
         *Z       ---       ---  1.11e+16  5.48e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.892719, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2800 K
      Energy reference = 58383 1/cm
      Energy step      = 389 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 55.2 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.00223
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121159
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033104
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.04011
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.1321
         W1a Well: minimal relaxation eigenvalue = 0.0151463
         W1a Well: maximal relaxation eigenvalue = 36.5563
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1523 1/cm
         W1b Well: average energy = 48.5 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002144
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.12153
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035308
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.059574
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.138705
         W1b Well: minimal relaxation eigenvalue = 0.0245059
         W1b Well: maximal relaxation eigenvalue = 25.6357
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3468 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1523 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -355 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3468 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.698555, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1523  -1523 4.13e+05  2.5e+21
        W1b  -3468  -3468 2.91e+03 2.69e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1523 5.37e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -355 1.33e+22
         B2  -3468 1.08e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       433  8.76e-20  1.11e-21
        W1b   0.00231         1  2.03e-22  2.56e-24
         P1  1.14e+19  4.94e+21         1    0.0126
         P2  9.04e+20  3.91e+23      79.2         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       438  1.57e-22  1.98e-24
        W1b   0.00228         1  3.58e-25  4.52e-27
         P1  6.37e+21  2.79e+24         1    0.0126
         P2  5.05e+23  2.21e+26      79.2         1
   MasterEquation::set:  done, cpu time[sec] = 0.702429, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.750405, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.128554, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.899538, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+05     0.226     0.998         0
          1  4.38e+06  9.22e+03     -0.82         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0   1.9e+03     0.226    -0.999   -0.0394
          1  6.63e+04  9.22e+03   -0.0394     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.901883, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.747151, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120794, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.872394, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.51e+04     0.198     0.998         0
          1  1.15e+06  6.03e+03    -0.809         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       380     0.198    -0.999   -0.0389
          1  1.75e+04  6.03e+03   -0.0389     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.874589, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.748122, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120666, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.873228, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.26e+04     0.182     0.998         0
          1  6.83e+05  4.97e+03    -0.802         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       190     0.182    -0.999   -0.0385
          1  1.04e+04  4.97e+03   -0.0385     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.87542, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.747608, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120309, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.872894, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  6.28e+03     0.166     0.998         0
          1  4.16e+05  3.92e+03    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      95.1     0.166    -0.999   -0.0382
          1   6.3e+03  3.92e+03   -0.0382     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 9.76815e-05
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000818, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876801, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2800 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.748431, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120051, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.872979, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.0151463
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.14e+03     0.153     0.998         0
          1  2.57e+05  2.81e+03    -0.787         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      47.5     0.153    -0.999   -0.0378
          1   3.9e+03  2.81e+03   -0.0378     0.999
         *Z       ---       ---  1.31e+16  6.29e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000104855
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000572, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876506, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2900 K
      Energy reference = 60469 1/cm
      Energy step      = 403 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 57.7 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002324
         W1a Well: collisional kernel bandwidth = 52
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.117055
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.034256
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.038563
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.132791
         W1a Well: minimal relaxation eigenvalue = 0.00887509
         W1a Well: maximal relaxation eigenvalue = 40.4422
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1593 1/cm
         W1b Well: average energy = 51 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.002147
         W1b Well: collisional kernel bandwidth = 52
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.130739
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.035429
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.046059
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.14002
         W1b Well: minimal relaxation eigenvalue = 0.0228402
         W1b Well: maximal relaxation eigenvalue = 32.0706
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3608 1/cm
         B8 Barrier:        grid size = 154
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1593 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -384 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3608 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.692281, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1593  -1593 2.36e+05 3.68e+21
        W1b  -3608  -3608 1.15e+03 3.91e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1593 7.92e+22
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -384 1.82e+22
         B2  -3608 1.57e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       451  9.06e-20  1.43e-21
        W1b   0.00222         1  2.01e-22  3.17e-24
         P1   1.1e+19  4.98e+21         1    0.0158
         P2  6.99e+20  3.15e+23      63.3         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       456  1.68e-22  2.65e-24
        W1b   0.00219         1  3.68e-25  5.81e-27
         P1  5.95e+21  2.72e+24         1    0.0158
         P2  3.77e+23  1.72e+26      63.3         1
   MasterEquation::set:  done, cpu time[sec] = 0.696166, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.757092, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.135269, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.90351, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.09e+05     0.203     0.998         0
          1  9.41e+06  1.36e+04    -0.805         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.86e+03     0.203    -0.999   -0.0379
          1  8.35e+04  1.36e+04   -0.0379     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905783, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753529, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119336, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.877296, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  4.18e+04     0.187     0.998         0
          1  2.34e+06  8.74e+03    -0.798         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       371     0.187    -0.999   -0.0376
          1  2.08e+04  8.74e+03   -0.0376     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.879467, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.754582, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.11963, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878623, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  2.09e+04     0.177     0.998         0
          1  1.34e+06  7.24e+03    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       186     0.177    -0.999   -0.0374
          1  1.19e+04  7.24e+03   -0.0374     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.880788, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753604, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.12037, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.878991, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  1.05e+04     0.166     0.998         0
          1  7.93e+05  5.82e+03    -0.789         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      92.8     0.166    -0.999   -0.0371
          1  7.03e+03  5.82e+03   -0.0371     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88113, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 2900 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753125, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119944, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.877501, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00887509
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  5.23e+03     0.156     0.998         0
          1  4.78e+05  4.36e+03    -0.784         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      46.4     0.156    -0.999   -0.0369
          1  4.24e+03  4.36e+03   -0.0369     0.999
         *Z       ---       ---  1.53e+16  7.21e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000103446
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000627, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.88108, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 3000 K
      Energy reference = 62555 1/cm
      Energy step      = 417 1/cm
      setting wells, barriers, and bimolecular starts
         W1a Well: average energy = 60.3 kcal/mol
         W1a Well: density of states done, elapsed time[sec] = 0.002142
         W1a Well: collisional kernel bandwidth = 51
         W1a Well: collisional energy transfer kernel done, elapsed time[sec] = 0.121562
         W1a Well: relaxation modes basis done, elapsed time[sec] = 0.033571
         W1a Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.044508
         W1a Well: relaxation eigenvalues done, elapsed time[sec] = 0.128953
         W1a Well: minimal relaxation eigenvalue = 0.00478203
         W1a Well: maximal relaxation eigenvalue = 43.6492
         W1a Well:       grid size = 154
         W1a Well:      real depth = -1475 1/cm
         W1a Well: effective depth = -1663 1/cm
         W1b Well: average energy = 53.6 kcal/mol
         W1b Well: density of states done, elapsed time[sec] = 0.00229
         W1b Well: collisional kernel bandwidth = 51
         W1b Well: collisional energy transfer kernel done, elapsed time[sec] = 0.11942
         W1b Well: relaxation modes basis done, elapsed time[sec] = 0.036817
         W1b Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.057812
         W1b Well: relaxation eigenvalues done, elapsed time[sec] = 0.140389
         W1b Well: minimal relaxation eigenvalue = 0.00992181
         W1b Well: maximal relaxation eigenvalue = 40.42
         W1b Well:       grid size = 159
         W1b Well:      real depth = -3354 1/cm
         W1b Well: effective depth = -3748 1/cm
         B8 Barrier:        grid size = 153
         B8 Barrier:      real height = -1210 1/cm
         B8 Barrier: effective height = -1246 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -412 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = -3424 1/cm
         B2 Barrier: effective height = -3748 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.69996, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
        W1a  -1663  -1246 1.26e+05 5.35e+21
        W1b  -3748  -3748      294 5.63e+18
      Well-to-Well Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B8  -1246 1.16e+23
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -412 2.46e+22
         B2  -3748 2.25e+22
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       469  9.36e-20  1.82e-21
        W1b   0.00213         1     2e-22  3.88e-24
         P1  1.07e+19  5.01e+21         1    0.0194
         P2   5.5e+20  2.58e+23      51.4         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q       W1a       W1b        P1        P2
        W1a         1       474   1.8e-22  3.49e-24
        W1b   0.00211         1  3.79e-25  7.37e-27
         P1  5.57e+21  2.64e+24         1    0.0194
         P2  2.86e+23  1.36e+26      51.4         1
   MasterEquation::set:  done, cpu time[sec] = 0.703809, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.753376, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.129733, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.903302, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+05     0.188     0.998         0
          1  2.15e+07  2.27e+04    -0.794         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0  1.81e+03     0.188    -0.999   -0.0367
          1  1.03e+05  2.27e+04   -0.0367     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.905547, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 0.5 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.75031, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120647, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875377, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  7.58e+04     0.178     0.998         0
          1  5.05e+06  1.43e+04    -0.791         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       363     0.178    -0.999   -0.0365
          1  2.41e+04  1.43e+04   -0.0365     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877558, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 1 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.749863, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120018, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.874535, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  3.79e+04     0.173     0.998         0
          1  2.79e+06  1.17e+04    -0.788         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0       181     0.173    -0.999   -0.0364
          1  1.34e+04  1.17e+04   -0.0364     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.876701, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 2 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.750672, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.119846, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.875152, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0   1.9e+04     0.166     0.998         0
          1  1.58e+06  9.58e+03    -0.785         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      90.6     0.166    -0.999   -0.0362
          1  7.58e+03  9.58e+03   -0.0362     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 0
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.877315, elapsed time[sec] = 0
   MasterEquation::low_eigenvalue_method:  starts
      Pressure = 4 atm	 Temperature = 3000 K
      MasterEquation::low_eigenvalue_matrix:  starts
         setting up kinetic matrices ... done, cpu time[sec] = 0.751193, elapsed time[sec] = 0
         inverting kinetic matrices ... done, cpu time[sec] = 0.120544, elapsed time[sec] = 0
      MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.876168, elapsed time[sec] = 0
      minimal relaxation eigenvalue / collisional frequency = 0.00478203
      eigenvector populations normalized:
          L        *R        *P       W1a       W1b
          0  9.48e+03     0.158     0.998         0
          1   9.2e+05  7.56e+03    -0.781         1
         *R - eigenvalue over the relaxation limit
         *P - eigenvector projection squared on the relaxation subspace
      eigenvector projections:
          L        *Q        *P       W1a       W1b
          0      45.3     0.158    -0.999   -0.0361
          1   4.4e+03  7.56e+03   -0.0361     0.999
         *Z       ---       ---  1.79e+16  8.25e+14
         *Q - eigenvalue over the collision frequency
         *P - eigenvector projection squared on the relaxation subspace
         *Z - well partition function square root
      dimension of the chemical subspace = 1
      MasterEquation::threshold_well_partition: starts
         single well projections onto chemical subspace:
         well:          W1a   W1b
         projection:  0.999 0.001
         well projection threshold  = 0.2
         partition projection error = 0.000101609
      MasterEquation::threshold_well_partition: done, cpu time[sec] = 0.000618, elapsed time[sec] = 0
      species:
       #  assigned name     group
       0            W1a     W1a+W1b
   MasterEquation::low_eigenvalue_method:  done, cpu time[sec] = 0.879972, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 405.854, elapsed time[sec] = 8
