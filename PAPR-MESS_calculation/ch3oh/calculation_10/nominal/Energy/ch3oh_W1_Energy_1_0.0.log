Model::init:  starts
   Model::ExponentialKernel::ExponentialKernel:  ... done
   Model::LennardJonesCollision::LennardJonesCollision:  ... done
   WELL: W1
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000477, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 0.001116, elapsed time[sec] = 0
      1-th ROTOR:
      Model::HinderedRotor::HinderedRotor:  starts
         Model::HinderedRotor::_read:  starts
         Model::HinderedRotor::_read:  done, cpu time[sec] = 0.00049, elapsed time[sec] = 0
         Model::HinderedRotor::_init: WARNING: potential second derivative at the minimum is negative, assuming zero
         effective rotational constant[1/cm]  = 27.3382
         analytic  frequency at minimum[1/cm] = 0
         numerical frequency at minimum[1/cm] = 0
         minimum energy[kcal/mol]             = 0
         maximum energy[kcal/mol]             = 0
         maximum frequency[1/cm]              = 0
         ground energy [kcal/mol]             = 0
         highest energy level [kcal/mol]      = 19462.6
         number of levels                     = 999
         10 lowest excited states [kcal/mol] relative to the ground: 0.0782 0.0782 0.313 0.313 0.703 0.703 1.25 1.25 1.95
         Statistical Weight (*** - deep tunneling regime):
          T, K        Quantum             PG             PI  ***
           100        2.82615        2.82615        2.82615
           200        3.99678        3.99678        3.99678
           300        4.89503        4.89503        4.89503
           400         5.6523         5.6523         5.6523
           500        6.31946        6.31946        6.31946
           600        6.92262        6.92262        6.92262
           700        7.47729        7.47729        7.47729
           800        7.99355        7.99355        7.99355
           900        8.47844        8.47844        8.47844
          1000        8.93707        8.93707        8.93707
      Model::HinderedRotor::HinderedRotor:  done, cpu time[sec] = 1.40179, elapsed time[sec] = 0
      ground state energy, kcal/mol:   -90.2506
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.140313, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.043406, elapsed time[sec] = 0
         hindered rotors contribution starts
            Model::HinderedRotor::set:  starts
            Model::HinderedRotor::set:  done, cpu time[sec] = 0.000205, elapsed time[sec] = 0
         hindered rotors contribution done, cpu time[sec] = 0.369162, elapsed time[sec] = 0
         effective power exponent at 590.248 kcal/mol = 11.3721
      interpolating states number/density done, cpu time[sec] = 1.87285, elapsed time[sec] = 0
   Model::RRHO::RRHO:  done, cpu time[sec] = 3.28247, elapsed time[sec] = 0
   BIMOLECULAR: R
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         18.6633
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001207, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001777, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003545, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.55015        9.55009        4.77506
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000776, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001313, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003394, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.010944, elapsed time[sec] = 0
   BIMOLECULAR: P1
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         19.7111        11.2504        7.16236
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000798, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001316, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002746, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         27.4886        14.3446        9.42584
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000747, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001279, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002705, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.008574, elapsed time[sec] = 0
   BIMOLECULAR: P2
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000695, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001211, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002575, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:          9.3775        1.21307        1.07412
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.001054, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001576, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003126, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.008796, elapsed time[sec] = 0
   BIMOLECULAR: P3
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000666, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001186, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002515, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.70353        1.21666        1.08111
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000766, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001486, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00301, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.00857, elapsed time[sec] = 0
   BIMOLECULAR: P4
   Model::Bimolecular::Bimolecular:  starts
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: linear
               rotational constant[1/cm]:         60.4042
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000672, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001175, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.00251, elapsed time[sec] = 0
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         9.46633        1.30142        1.14413
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000743, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001261, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002749, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.008281, elapsed time[sec] = 0
   BIMOLECULAR: P5
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         6.45642       0.996004        0.86988
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00117, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001699, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.003278, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.006355, elapsed time[sec] = 0
   BIMOLECULAR: P6
   Model::Bimolecular::Bimolecular:  starts
      Model::AtomicFragment::AtomicFragment:  ... done
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
               molecular geometry will be used to estimate rotational constants
               rotational configuration: nonlinear
               rotational constants[1/cm]:         5.24335        0.93381       0.927142
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00077, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001293, elapsed time[sec] = 0
         ground state energy, kcal/mol:   0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.002867, elapsed time[sec] = 0
   Model::Bimolecular::Bimolecular:  done, cpu time[sec] = 0.005807, elapsed time[sec] = 0
   BARRIER: B1
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.079498, elapsed time[sec] = 0
   BARRIER: B2
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.079681, elapsed time[sec] = 0
   BARRIER: B3
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.00072, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.001287, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -22.6613
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.118685, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.039605, elapsed time[sec] = 0
            effective power exponent at 522.659 kcal/mol = 11.8743
         interpolating states number/density done, cpu time[sec] = 1.06349, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 1.06722, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 0.000122, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 0.000176, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -19.4076
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.009045, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.001624, elapsed time[sec] = 0
            effective power exponent at 519.405 kcal/mol = 11.8747
         interpolating states number/density done, cpu time[sec] = 0.031996, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.032378, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.4142
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001187, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000403, elapsed time[sec] = 0
            effective power exponent at 516.412 kcal/mol = 11.8755
         interpolating states number/density done, cpu time[sec] = 0.013864, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013909, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.678
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00119, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000391, elapsed time[sec] = 0
            effective power exponent at 513.676 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.013796, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013843, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.2049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000407, elapsed time[sec] = 0
            effective power exponent at 511.203 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.013712, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013757, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.00049
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001167, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000394, elapsed time[sec] = 0
            effective power exponent at 508.998 kcal/mol = 11.8771
         interpolating states number/density done, cpu time[sec] = 0.013663, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013716, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.06773
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001159, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 507.065 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.01358, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013624, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.40945
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001157, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000367, elapsed time[sec] = 0
            effective power exponent at 505.407 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013539, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013585, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.05137
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001151, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000381, elapsed time[sec] = 0
            effective power exponent at 504.049 kcal/mol = 11.8772
         interpolating states number/density done, cpu time[sec] = 0.013503, elapsed time[sec] = 1
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01355, elapsed time[sec] = 1
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.98779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001151, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000381, elapsed time[sec] = 0
            effective power exponent at 502.986 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013481, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013528, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.23584
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001149, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000385, elapsed time[sec] = 0
            effective power exponent at 502.234 kcal/mol = 11.8766
         interpolating states number/density done, cpu time[sec] = 0.013446, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01349, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.76409
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000374, elapsed time[sec] = 0
            effective power exponent at 501.762 kcal/mol = 11.8765
         interpolating states number/density done, cpu time[sec] = 0.013418, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013465, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.54966
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001147, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000389, elapsed time[sec] = 0
            effective power exponent at 501.547 kcal/mol = 11.8767
         interpolating states number/density done, cpu time[sec] = 0.013425, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01347, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.6097
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000407, elapsed time[sec] = 0
            effective power exponent at 501.607 kcal/mol = 11.8774
         interpolating states number/density done, cpu time[sec] = 0.013443, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013487, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -1.85844
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001146, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000396, elapsed time[sec] = 0
            effective power exponent at 501.856 kcal/mol = 11.8784
         interpolating states number/density done, cpu time[sec] = 0.013404, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013456, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.25586
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001144, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000384, elapsed time[sec] = 0
            effective power exponent at 502.254 kcal/mol = 11.8799
         interpolating states number/density done, cpu time[sec] = 0.013522, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013566, elapsed time[sec] = 0
      17-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -2.76478
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001148, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000383, elapsed time[sec] = 0
            effective power exponent at 502.763 kcal/mol = 11.8817
         interpolating states number/density done, cpu time[sec] = 0.013464, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013508, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.12356, elapsed time[sec] = 1
      effective power exponent at 501.547 kcal/mol = 12.1215
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16           17          Min
        100  3.90851e+23  3.05117e+16  8.82979e+09      9323.49    0.0370366  5.69093e-07   3.4347e-11  8.25406e-15  8.99826e-18  4.31673e-20  9.95766e-22  9.42125e-23  3.25854e-23  4.49365e-23  1.59917e-22  1.20344e-21  1.58791e-20  3.25853e-23
        200  4.74443e+13  1.32405e+10  7.11895e+06      7303.75      14.5603    0.0571085  0.000444429  6.90781e-06   2.2911e-07  1.59579e-08   2.4425e-09  7.58546e-10  4.51416e-10  5.37634e-10  1.02897e-09  2.86948e-09  1.06195e-08  4.51416e-10
        300  3.42099e+10  1.45681e+08       960377      9718.32      153.373      3.80009     0.148805   0.00925157  0.000956035  0.000162449  4.68096e-05  2.16894e-05   1.5566e-05  1.78004e-05  2.79599e-05  5.66189e-05  0.000138903   1.5566e-05
        400  1.19567e+09  1.99087e+07       459672      14594.6      647.271      40.2374      3.52783     0.437917    0.0798183     0.021197   0.00839753   0.00476942   0.00377863   0.00426111   0.00610409     0.010613    0.0213749   0.00377863
        500  1.97909e+08  7.47751e+06       366526      23109.1      1904.36      205.421      29.1834         5.48      1.40343     0.487441     0.234093     0.150591     0.127051     0.142683     0.194232     0.309627     0.556692      0.12705
        600  7.12397e+07  4.65261e+06       376964      37555.9      4677.31      728.298      142.671      35.2855      11.3336      4.70886      2.57331      1.80142      1.58842      1.78363      2.35302      3.54995       5.9344      1.58826
        700  3.98103e+07  3.84656e+06       446495      61693.5      10320.9      2088.69      514.634      154.919      58.4907       27.623       16.563      12.3266      11.2316      12.6303      16.3181      23.7079      37.6861      11.2266
        800  2.91324e+07   3.7782e+06       574567       101491      21189.1      5220.36       1527.7      532.884      227.126      118.089      75.9278      59.1877      55.3113      62.3214      79.3361      112.156      171.842       55.239
        900  2.53862e+07  4.14125e+06       777326       166256      41247.9      11844.4       3962.9      1550.26      726.116      406.859      276.234      223.279      212.875      240.329      302.589      418.986       624.19      212.262
       1000  2.48831e+07  4.87863e+06  1.08405e+06       270280      77001.1      24998.7      9311.41      3992.88      2016.92      1199.89      850.963      708.129      686.138      776.027      968.725      1319.68      1922.94      682.556
       1100  2.64619e+07  6.03232e+06  1.53927e+06       435181       138864      49855.4      20277.3       9374.7      5037.66      3147.57      2313.41      1971.51      1935.84      2192.89      2718.59      3654.94      5230.94      1919.88
       1200  2.98122e+07   7.7076e+06   2.2076e+06       693199       243163      94955.1      41563.7      20461.6        11578      7535.95      5706.13      4960.29       4924.8      5586.19      6885.95      9156.96      12911.8      4866.74
       1300  3.50062e+07  1.00695e+07  3.18087e+06  1.09177e+06       414995       174026      81070.3      42093.4      24883.1      16766.7      13019.4      11509.1      11534.2      13097.8      16067.6      21170.3      29478.5      11353.6
       1400  4.23545e+07  1.33522e+07  4.58797e+06  1.69982e+06       692254       308624       151675        82438      50597.4      35121.3      27867.1      24990.6      25245.9      28695.1      35055.3      45823.5      63123.6      24749.4
       1500  5.23704e+07  1.78764e+07  6.60797e+06  2.61623e+06  1.13123e+06       531879       273831       154861      98197.4      69940.8      56542.8      51340.1        52223      59403.9      72307.7      93870.2       128107      50986.5
       1600  6.57789e+07  2.40742e+07  9.48734e+06  3.98125e+06  1.81429e+06       893760       479280       280652       183119       133402       109627       100625       102971       117205       142208       183501       248385       100130
       1700  8.35518e+07  3.25215e+07  1.35624e+07  5.99168e+06  2.86022e+06  1.46833e+06       816282       492930       329848       245128       204372       189391       194829       221878       268440       344531       462986       188722
       1800  1.06962e+08  4.39799e+07  1.92885e+07  8.92067e+06  4.43819e+06  2.36363e+06  1.35686e+06       842134       576329       435957       368170       344086       355613       405162       488927       624511       833818       343202
       1900  1.37654e+08  5.94494e+07   2.7277e+07  1.31437e+07  6.78613e+06  3.73501e+06   2.2067e+06  1.40364e+06       980144       753276       643497       605970       628863       716746       862915  1.09746e+06  1.45678e+06       604809
       2000   1.7774e+08  8.02353e+07  3.83428e+07  1.91721e+07  1.02349e+07  5.80288e+06  3.51851e+06  2.28817e+06  1.62706e+06  1.26845e+06  1.09485e+06  1.03803e+06  1.08124e+06  1.23271e+06  1.48096e+06  1.87612e+06  2.47736e+06  1.03647e+06

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 2.45093, elapsed time[sec] = 2
   BARRIER: B4
   Model::VarBarrier::VarBarrier:  starts
      1-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.2e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.9e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -21.8779
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001171, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000384, elapsed time[sec] = 0
            effective power exponent at 521.876 kcal/mol = 11.8794
         interpolating states number/density done, cpu time[sec] = 0.014544, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.014609, elapsed time[sec] = 0
      2-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -18.8158
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001163, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 518.814 kcal/mol = 11.8788
         interpolating states number/density done, cpu time[sec] = 0.013733, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013785, elapsed time[sec] = 0
      3-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -16.0339
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001151, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.00037, elapsed time[sec] = 0
            effective power exponent at 516.032 kcal/mol = 11.8783
         interpolating states number/density done, cpu time[sec] = 0.013616, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013665, elapsed time[sec] = 0
      4-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -13.5322
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.00115, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000388, elapsed time[sec] = 0
            effective power exponent at 513.53 kcal/mol = 11.8777
         interpolating states number/density done, cpu time[sec] = 0.01354, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013589, elapsed time[sec] = 0
      5-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.6e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -11.3135
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001135, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000368, elapsed time[sec] = 0
            effective power exponent at 511.311 kcal/mol = 11.8768
         interpolating states number/density done, cpu time[sec] = 0.013478, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013532, elapsed time[sec] = 0
      6-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1e-05, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -9.39794
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001132, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000386, elapsed time[sec] = 0
            effective power exponent at 509.396 kcal/mol = 11.8759
         interpolating states number/density done, cpu time[sec] = 0.013427, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013474, elapsed time[sec] = 0
      7-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -7.79112
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001139, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000378, elapsed time[sec] = 0
            effective power exponent at 507.789 kcal/mol = 11.8748
         interpolating states number/density done, cpu time[sec] = 0.01338, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013426, elapsed time[sec] = 0
      8-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.49595
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001124, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000386, elapsed time[sec] = 0
            effective power exponent at 506.494 kcal/mol = 11.8737
         interpolating states number/density done, cpu time[sec] = 0.013495, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013543, elapsed time[sec] = 0
      9-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.53243
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001127, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000379, elapsed time[sec] = 0
            effective power exponent at 505.53 kcal/mol = 11.8725
         interpolating states number/density done, cpu time[sec] = 0.013338, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013383, elapsed time[sec] = 0
      10-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 8e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.86054
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001121, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000364, elapsed time[sec] = 0
            effective power exponent at 504.858 kcal/mol = 11.8715
         interpolating states number/density done, cpu time[sec] = 0.013278, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013323, elapsed time[sec] = 0
      11-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.47456
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001126, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000374, elapsed time[sec] = 0
            effective power exponent at 504.472 kcal/mol = 11.8707
         interpolating states number/density done, cpu time[sec] = 0.013296, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.01334, elapsed time[sec] = 0
      12-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.40594
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001119, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000377, elapsed time[sec] = 0
            effective power exponent at 504.404 kcal/mol = 11.8706
         interpolating states number/density done, cpu time[sec] = 0.013286, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013332, elapsed time[sec] = 0
      13-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.57463
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001125, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000358, elapsed time[sec] = 0
            effective power exponent at 504.572 kcal/mol = 11.8709
         interpolating states number/density done, cpu time[sec] = 0.013292, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013336, elapsed time[sec] = 0
      14-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -4.93202
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001128, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000376, elapsed time[sec] = 0
            effective power exponent at 504.93 kcal/mol = 11.8718
         interpolating states number/density done, cpu time[sec] = 0.013322, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013367, elapsed time[sec] = 0
      15-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 1.4e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -5.43522
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001127, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000362, elapsed time[sec] = 0
            effective power exponent at 505.433 kcal/mol = 11.8731
         interpolating states number/density done, cpu time[sec] = 0.013328, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013374, elapsed time[sec] = 0
      16-th RRHO:
      Model::RRHO::RRHO:  starts
         Model::new_core:  starts
            Model::RigidRotor::RigidRotor:  starts
            Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 9e-06, elapsed time[sec] = 0
         Model::new_core:  done, cpu time[sec] = 2.5e-05, elapsed time[sec] = 0
         ground state energy, kcal/mol:   -6.04421
         interpolating states number/density starts
            core state contribution ... done, cpu time[sec] = 0.001123, elapsed time[sec] = 0
            vibrational modes contribution ... done, cpu time[sec] = 0.000383, elapsed time[sec] = 0
            effective power exponent at 506.042 kcal/mol = 11.8749
         interpolating states number/density done, cpu time[sec] = 0.013352, elapsed time[sec] = 0
      Model::RRHO::RRHO:  done, cpu time[sec] = 0.013409, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      interpolating states number/density ... done, cpu time[sec] = 1.24877, elapsed time[sec] = 1
      effective power exponent at 504.404 kcal/mol = 12.1643
      Constituent transition states partition functions
       T, K            1            2            3            4            5            6            7            8            9           10           11           12           13           14           15           16          Min
        100  1.11763e+12       223936     0.185945  6.36018e-07  9.07387e-12  5.96093e-16  1.85463e-19  2.77448e-22  2.20277e-24  7.60156e-26  1.10796e-26  7.98346e-27   1.8962e-26  1.16602e-25  1.49342e-24  3.26249e-23  7.98345e-27
        200  9.38289e+07      39693.5      34.8125    0.0627104  0.000232989  1.87016e-06  3.28565e-08  1.27135e-09  1.13643e-10  2.12422e-11  8.18303e-12   7.0253e-12  1.09568e-11  2.75644e-11  1.00242e-10  4.77296e-10  7.02523e-12
        300  6.32003e+06      33876.1      298.673      4.28808     0.100497   0.00396007  0.000264757  3.01283e-05  6.01963e-06  1.97624e-06  1.05568e-06  9.66276e-07  1.31928e-06  2.48671e-06  6.00912e-06  1.74325e-05  9.65923e-07
        400  2.16563e+06      41250.6      1150.14      46.4593      2.72399     0.236928    0.0308063    0.0060002   0.00179162  0.000780535   0.00049258  0.000467839  0.000601019  0.000987244    0.0019595   0.00447307  0.000466779
        500   1.4162e+06      57738.1      3210.72      241.013      24.4602      3.41597     0.661137     0.177638    0.0675118    0.0348961    0.0243981    0.0237742     0.029557    0.0448976    0.0795572     0.158033    0.0236197
        600  1.27589e+06      86435.1      7616.29      863.909      126.318      24.1718      6.09496      2.02863     0.905643     0.525046     0.393651     0.391048      0.47677     0.689237      1.13548      2.06149     0.386115
        700  1.37387e+06       133833      16387.5      2496.35      473.671      113.476      34.5536      13.3988      6.71107      4.22492      3.33259       3.3607      4.04622      5.65489      8.85794      15.1051      3.29464
        800   1.6448e+06       210487      32996.7      6271.64      1446.87      410.222      143.881      62.5602      34.1598      22.8806      18.7569      19.1427      22.8487      31.1607      47.0425      76.6085      18.6302
        900  2.10236e+06       332770      63236.1      14279.8      3835.57      1239.79      485.378      230.694      134.715      94.6987      80.0083      82.4454      97.7846      130.906      192.133      302.035       79.687
       1000  2.80018e+06       525557       116524      30209.5      9165.51      3290.47      1406.72      717.952      442.392      323.236      279.779      290.578      342.963      452.477      649.485      992.852      279.107
       1100  3.82756e+06       826062       207829      60337.4      20227.9      7914.04      3636.15       1967.2      1266.62      955.178      843.287      881.527      1036.38      1351.23       1904.8      2846.42      842.065
       1200  5.31607e+06  1.28922e+06       360457       115019      41910.5      17617.3      8595.88      4882.09      3260.68      2524.49      2265.75      2381.29      2790.51      3602.71      5002.98      7336.45      2263.75
       1300  7.45235e+06  1.99508e+06       610021       210889      82466.4      36839.3      18913.9      11193.7      7711.33      6104.52      5555.43      5865.21      6854.11      8775.81        12033      17366.4       5552.4
       1400  1.04964e+07  3.05894e+06  1.01001e+06       374033       155407      73145.9      39232.3        24053        17016      13729.2      12643.2      13399.5        15621      19858.2      26933.7      38344.1      12638.8
       1500  1.48064e+07  4.64495e+06  1.63947e+06       644514       282268       139018      77446.4      48958.3      35441.2      29070.2      27045.8      28757.7      33454.1      42264.5      56783.4      79886.7      27039.5
       1600  2.08709e+07  6.98426e+06  2.61358e+06  1.08269e+06       496566       254476       146559      95166.5      70292.7      58492.2      54905.7        58546      67977.4      85409.9       113800       158446      54895.8
       1700  2.93513e+07   1.0399e+07  4.09779e+06  1.77794e+06       849385       450846       267391       177789       133674       112652       106575       113919       132044       165098       218363       301245       106556
       1800  4.11358e+07  1.53337e+07   6.3268e+06  2.86053e+06  1.41712e+06       776084       472475       320840       245068       208865       198969       213137       246660       307062       403463       552054       198924
       1900  5.74084e+07   2.2396e+07  9.62961e+06   4.5176e+06  2.31206e+06  1.30218e+06       811539       561582       435059       374536       358996       385281       445242       552092       721140       979485       358875
       2000  7.97366e+07  3.24089e+07  1.44623e+07  7.01437e+06  3.69673e+06  2.13529e+06  1.35912e+06       956627       750585       652033       628440       675575       779687       963344   1.2516e+06   1.6887e+06       628120

   Model::VarBarrier::VarBarrier:  done, cpu time[sec] = 1.48885, elapsed time[sec] = 1
   BARRIER: B5
   Model::RRHO::RRHO:  starts
      Model::new_core:  starts
         Model::RigidRotor::RigidRotor:  starts
         Model::RigidRotor::RigidRotor:  done, cpu time[sec] = 1.3e-05, elapsed time[sec] = 0
      Model::new_core:  done, cpu time[sec] = 1.8e-05, elapsed time[sec] = 0
      Model::EckartTunnel::EckartTunnel:  ... done
      ground state energy, kcal/mol:   -0.195851
      interpolating states number/density starts
         core state contribution ... done, cpu time[sec] = 0.001272, elapsed time[sec] = 0
         vibrational modes contribution ... done, cpu time[sec] = 0.000437, elapsed time[sec] = 0
         tunneling contribution ... done, cpu time[sec] = 6.01659, elapsed time[sec] = 6
         effective power exponent at 569.903 kcal/mol = 13.605
      interpolating states number/density done, cpu time[sec] = 6.03259, elapsed time[sec] = 6
   Model::RRHO::RRHO:  done, cpu time[sec] = 6.03266, elapsed time[sec] = 6
   BARRIER: B6
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000957, elapsed time[sec] = 0
   BARRIER: B7
   Model::ReadSpecies::ReadSpecies: ... done, cpu time[sec] = 0.000905, elapsed time[sec] = 0
   checking input ... done
   setting connectivity ... done
   checking connectivity ... done
   setting dissociation limit ... done
   setting maximum barrier height ... done
   partition functions (relative to the ground level, units - 1/cm3):
     T\Q           W1           OH          CH3          CH2          H2O           H2     cis-HCOH           H2   trans-HCOH           H2         H2CO            H        CH2OH            H         CH3O           B1           B2           B3           B4           B5           B6           B7
     100  1.97336e+28  1.11806e+26  1.79604e+26   1.2706e+26  1.20995e+26  3.09408e+23  9.07788e+27  3.09408e+23  8.88203e+27  3.09408e+23    4.226e+27  3.80284e+23  1.41451e+28  3.80284e+23  1.04337e+28  1.02816e+30  3.90845e+30  1.47525e+35  6.97811e+37 5.12326e+128  6.66948e+29  2.86822e+29
     200  2.23564e+29  7.62333e+26  1.46726e+27  1.01653e+27  9.67966e+26  1.75028e+24  7.26953e+28  1.75028e+24  7.11008e+28  1.75028e+24  3.38185e+28  1.07561e+24  1.21889e+29  1.07561e+24  8.41759e+28  2.65947e+31  6.23677e+31  1.08314e+30  2.15615e+30  1.52798e+59  8.88053e+30  3.66779e+30
     300  9.41744e+29   2.3228e+27   5.2604e+27  3.43512e+27  3.26835e+27   4.8232e+24  2.48522e+29   4.8232e+24  2.42385e+29   4.8232e+24  1.14827e+29  1.97601e+24  4.86817e+29  1.97601e+24  2.97918e+29  1.82852e+32  2.59538e+32  1.44208e+30  1.73256e+30  1.89702e+39  4.41749e+31  1.66476e+31
     400  2.74251e+30  5.05886e+27  1.36172e+28  8.18855e+27  7.76803e+27  9.90107e+24  6.13453e+29  9.90107e+24  5.94872e+29  9.90107e+24   2.7863e+29  3.04227e+24   1.4458e+30  3.04227e+24  7.82149e+29  7.43446e+32  6.76087e+32   3.1193e+30  3.38436e+30  5.81364e+32  1.53178e+32  5.25536e+31
     500   6.7088e+30   9.1848e+27   2.9582e+28  1.61907e+28  1.52765e+28  1.72965e+25  1.28796e+30  1.72965e+25  1.23988e+30  1.72965e+25    5.706e+29   4.2517e+24  3.66252e+30   4.2517e+24  1.77798e+30  2.27531e+33  1.40935e+33  6.99392e+30  7.25794e+30    2.174e+31  4.38422e+32  1.38727e+32
     600  1.48929e+31  1.48864e+28  5.75744e+28  2.85247e+28  2.67121e+28  2.72848e+25  2.45857e+30  2.72848e+25  2.34862e+30  2.72848e+25  1.05862e+30  5.58901e+24  8.37682e+30  5.58901e+24  3.71377e+30  5.83137e+33  2.59752e+33  1.53859e+31   1.5531e+31  1.56572e+31  1.10962e+33  3.28769e+32
     700  3.10526e+31  2.23336e+28  1.03869e+29  4.64933e+28  4.31306e+28  4.01168e+25  4.40321e+30  4.01168e+25   4.1744e+30  4.01168e+25  1.84194e+30  7.04296e+24  1.77967e+31  7.04296e+24  7.32198e+30  1.32406e+34  4.44573e+33  3.28489e+31  3.24865e+31  2.00151e+31  2.57036e+33  7.23031e+32
     800  6.18672e+31  3.16898e+28  1.77211e+29  7.16682e+28  6.57497e+28  5.60287e+25  7.52441e+30  5.60287e+25  7.08144e+30  5.60287e+25  3.06214e+30  8.60484e+24  3.57037e+31  8.60484e+24  1.38193e+31  2.75326e+34  7.26034e+33  6.79296e+31  6.61031e+31  3.04639e+31  5.55986e+33  1.50225e+33
     900  1.18917e+32  4.31186e+28  2.89608e+29  1.05938e+29  9.59741e+28  7.52507e+25  1.23926e+31  7.52507e+25  1.15823e+31  7.52507e+25  4.91733e+30  1.02677e+25  6.83675e+31  1.02677e+25  2.51777e+31  5.35429e+34  1.14977e+34  1.36146e+32  1.30791e+32  4.96309e+31  1.13781e+34  2.98133e+33
    1000  2.21835e+32  5.67887e+28  4.57314e+29  1.51557e+29  1.35425e+29  9.80136e+25  1.98016e+31  9.80136e+25  1.83853e+31  9.80136e+25  7.67995e+30  1.20256e+25  1.25901e+32  1.20256e+25  4.45239e+31  9.87598e+34  1.78334e+34  2.64867e+32  2.51886e+32  8.31132e+31  2.22341e+34  5.69316e+33
    1100  4.03237e+32  7.28764e+28   7.0205e+29  2.11192e+29  1.85967e+29  1.24554e+26  3.08377e+31  1.24554e+26  2.84544e+31  1.24554e+26  1.17192e+31  1.38738e+25  2.24222e+32  1.38738e+25  7.67157e+31  1.74488e+35  2.72616e+34  5.01139e+32  4.72857e+32  1.40422e+32  4.17722e+34  1.05163e+34
    1200  7.16278e+32  9.15662e+28  1.05248e+30  2.87967e+29  2.49743e+29  1.55119e+26  4.69659e+31  1.55119e+26  4.30822e+31  1.55119e+26  1.75283e+31  1.58081e+25  3.87856e+32  1.58081e+25  1.29162e+32   2.9743e+35  4.12339e+34  9.23956e+32  8.66602e+32  2.37075e+32  7.58498e+34  1.88656e+34
    1300  1.24607e+33  1.13052e+29    1.546e+30  3.85517e+29  3.29195e+29  1.89964e+26  7.01353e+31  1.89964e+26  6.39799e+31  1.89964e+26  2.57585e+31  1.78247e+25  6.53851e+32  1.78247e+25  2.12965e+32  4.91797e+35  6.18545e+34  1.66316e+33  1.55283e+33  3.97869e+32  1.33665e+35   3.2971e+34
    1400  2.12665e+33  1.37535e+29  2.23088e+30  5.08038e+29  4.27102e+29  2.29356e+26  1.02907e+32  2.29356e+26  9.33855e+31  2.29356e+26  3.72593e+31  1.99205e+25   1.0772e+33  1.99205e+25  3.44505e+32  7.92117e+35  9.21487e+34  2.92799e+33  2.72427e+33  6.61788e+32  2.29366e+35  5.62797e+34
    1500  3.56581e+33  1.65225e+29  3.16878e+30  6.60342e+29  5.46603e+29  2.73576e+26  1.48608e+32  2.73576e+26  1.34194e+32  2.73576e+26   5.3127e+31  2.20925e+25  1.73819e+33  2.20925e+25  5.47579e+32  1.24691e+36  1.36433e+35  5.04957e+33  4.68567e+33   1.0892e+33  3.84301e+35  9.40249e+34
    1600  5.88104e+33  1.96339e+29  4.43778e+30  8.47909e+29  6.91231e+29  3.22912e+26  2.11513e+32  3.22912e+26  1.90113e+32  3.22912e+26  7.47631e+31  2.43382e+25  2.75236e+33  2.43382e+25  8.56291e+32  1.92344e+36  2.00816e+35  8.54299e+33  7.91062e+33  1.77228e+33   6.3014e+35  1.54022e+35
    1700  9.55077e+33  2.31102e+29  6.13586e+30  1.07695e+30  8.64943e+29  3.77663e+26  2.97068e+32  3.77663e+26  2.65843e+32  3.77663e+26  1.03942e+32  2.66552e+25  4.28362e+33  2.66552e+25  1.31889e+33  2.91389e+36  2.93879e+35  1.41969e+34  1.31235e+34  2.84985e+33  1.01312e+36  2.47765e+35
    1800  1.52866e+34  2.69743e+29  8.38503e+30  1.35448e+30  1.07215e+30   4.3814e+26  4.12136e+32   4.3814e+26  3.67296e+32   4.3814e+26  1.42893e+32  2.90413e+25  6.56161e+33  2.90413e+25  2.00279e+33  4.34318e+36  4.27578e+35  2.32007e+34  2.14159e+34  4.52832e+33  1.59976e+36  3.91921e+35
    1900  2.41341e+34    3.125e+29   1.1336e+31  1.68836e+30  1.31777e+30  5.04659e+26  5.65308e+32  5.04659e+26  5.01844e+32  5.04659e+26  1.94391e+32  3.14948e+25  9.90424e+33  3.14948e+25  3.00115e+33   6.3789e+36  6.18455e+35  3.73235e+34  3.44092e+34  7.11085e+33   2.4845e+36  6.10341e+35
    2000  3.76117e+34  3.59614e+29  1.51739e+31  2.08737e+30  1.60722e+30  5.77547e+26  7.67243e+32  5.77547e+26  6.78607e+32  5.77547e+26  2.61867e+32  3.40136e+25  1.47468e+34  3.40136e+25  4.44133e+33  9.24376e+36  8.89218e+35   5.9162e+34  5.44811e+34  1.10376e+34  3.79973e+36  9.36743e+35
   partition functions (relative to 0 kcal/mol, units - 1/cm3):
     T\Q           W1           B1           B2           B3           B4           B5           B6           B7
     100 3.42725e+225  1.02816e+30  1.82422e+29  3.59409e+38  2.97017e+47 1.37269e+129  2.66912e+20     0.948966
     200 9.31689e+127  2.65947e+31   1.3474e+31   5.3462e+31   1.4067e+35   2.5011e+59  1.77655e+26  6.67151e+15
     300  5.25428e+95  1.82852e+32  9.34454e+31  1.94043e+31  2.80781e+33  2.63481e+39  3.25537e+28  2.48065e+21
     400  5.59864e+79  7.43446e+32  3.14247e+32  2.19148e+31  8.64445e+32  7.43797e+32  6.85118e+29  2.24136e+24
     500  1.88188e+70  2.27531e+33   7.6354e+32   3.3271e+31  6.11818e+32  2.64767e+31  5.78559e+30  1.76233e+26
     600  1.11242e+64  5.83137e+33  1.55861e+33  5.64385e+31  6.25229e+32  1.84524e+31  3.01222e+31  4.01325e+27
     700  4.66878e+59  1.32406e+34  2.86953e+33  1.00078e+32  7.71401e+32  2.30412e+31  1.16805e+32    4.443e+28
     800   2.7953e+56  2.75326e+34  4.94984e+33  1.80053e+32  1.05646e+33  3.44579e+31  3.71834e+32   3.1024e+29
     900  9.78971e+53  5.35429e+34  8.17953e+33  3.23822e+32  1.53628e+33  5.53746e+31  1.02773e+33  1.58057e+30
    1000  1.17491e+52  9.87598e+34  1.31263e+34  5.77697e+32  2.31264e+33  9.17219e+31  2.55416e+33  6.41678e+30
    1100  3.43911e+50  1.74488e+35  2.06328e+34  1.01822e+33  3.54893e+33  1.53585e+32  5.84183e+33    2.197e+31
    1200  1.95761e+49   2.9743e+35  3.19407e+34  1.76961e+33  5.49845e+33  2.57368e+32  1.24971e+34  6.59133e+31
    1300  1.85281e+48  4.91797e+35  4.88644e+34  3.03006e+33  8.54709e+33  4.29205e+32  2.52998e+34  1.77997e+32
    1400  2.60764e+47  7.92117e+35  7.40326e+34  5.11068e+33  1.32752e+34  7.10056e+32  4.88948e+34  4.41176e+32
    1500  5.02891e+46  1.24691e+36  1.11222e+35  8.49252e+33  2.05451e+34  1.16317e+33  9.08149e+34  1.01832e+33
    1600  1.25008e+46  1.92344e+36  1.65812e+35  1.39085e+34  3.16247e+34  1.88489e+33  1.62959e+35   2.2134e+33
    1700  3.82275e+45  2.91389e+36  2.45402e+35  2.24601e+34  4.83576e+34  3.01995e+33  2.83696e+35  4.56984e+33
    1800  1.38699e+45  4.34318e+36  3.60641e+35  3.57809e+34  7.33977e+34  4.78317e+33  4.80794e+35  9.02403e+33
    1900  5.80323e+44   6.3789e+36  5.26331e+35  5.62641e+34  1.10527e+35  7.48943e+33  7.95467e+35  1.71386e+34
    2000  2.73722e+44  9.24376e+36   7.6289e+35  8.73733e+34  1.65081e+35  1.15951e+34  1.28785e+36  3.14487e+34
   tunneling partition function correction factors & high pressure effective energy shifts (D), kcal/mol:
     T\B           B1            D           B2            D           B3            D           B4            D           B5            D           B6            D           B7            D
     100            1           -0            1           -0  5.85098e+06     -3.09647  2.80256e+09      -4.3229 4.82099e+100     -46.0694            1           -0            1           -0
     200            1           -0            1           -0      5.22548    -0.657183      10.5281    -0.935588  1.78989e+30     -27.6854            1           -0            1           -0
     300            1           -0            1           -0      1.84823    -0.366176      2.24851    -0.483048  6.34587e+09     -13.4559            1           -0            1           -0
     400            1           -0            1           -0      1.38767    -0.260424      1.52963    -0.337842      744.397     -5.25618            1           -0            1           -0
     500            1           -0            1           -0      1.22677    -0.203078      1.30161    -0.261913      12.1512     -2.48144            1           -0            1           -0
     600            1           -0            1           -0      1.14989     -0.16653      1.19686    -0.214262       4.1017     -1.68284            1           -0            1           -0
     700            1           -0            1           -0      1.10671    -0.141037       1.1392    -0.181292      2.57296      -1.3146            1           -0            1           -0
     800            1           -0            1           -0      1.07989    -0.122182      1.10381    -0.157022      1.98861     -1.09286            1           -0            1           -0
     900            1           -0            1           -0      1.06204    -0.107644      1.08044    -0.138367      1.69225    -0.940844            1           -0            1           -0
    1000            1           -0            1           -0      1.04954   -0.0960815      1.06415     -0.12356      1.51736    -0.828601            1           -0            1           -0
    1100            1           -0            1           -0      1.04044   -0.0866584      1.05234     -0.11151      1.40393     -0.74163            1           -0            1           -0
    1200            1           -0            1           -0      1.03361   -0.0788278      1.04349    -0.101508      1.32547    -0.671912            1           -0            1           -0
    1300            1           -0            1           -0      1.02835   -0.0722153      1.03668   -0.0930686      1.26859    -0.614589            1           -0            1           -0
    1400            1           -0            1           -0      1.02421    -0.066556      1.03134   -0.0858502      1.22585    -0.566517            1           -0            1           -0
    1500            1           -0            1           -0       1.0209   -0.0616567      1.02707   -0.0796042      1.19281    -0.525558            1           -0            1           -0
    1600            1           -0            1           -0      1.01821   -0.0573734      1.02359   -0.0741457      1.16669      -0.4902            1           -0            1           -0
    1700            1           -0            1           -0      1.01599   -0.0535964      1.02074    -0.069334      1.14565    -0.459342            1           -0            1           -0
    1800            1           -0            1           -0      1.01414   -0.0502407      1.01836   -0.0650602      1.12842    -0.432157            1           -0            1           -0
    1900            1           -0            1           -0      1.01259   -0.0472394      1.01635   -0.0612384      1.11412    -0.408014            1           -0            1           -0
    2000            1           -0            1           -0      1.01127    -0.044539      1.01465   -0.0578005      1.10211     -0.38642            1           -0            1           -0
Model::init:  done, cpu time[sec] = 13.5982, elapsed time[sec] = 9
rate calculation starts
   MasterEquation::set:  starts
      Temperature      = 200 K
      Energy reference = 10278 1/cm
      Energy step      = 50 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.000142
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.008956
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.008301
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.41378
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 7.23116
         W1 Well: minimal relaxation eigenvalue = 0.134687
         W1 Well: maximal relaxation eigenvalue = 1.20205
         W1 Well:       grid size = 837
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31571 1/cm
         B1 Barrier:        grid size = 206
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -22 1/cm
         B2 Barrier:        grid size = 202
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 177 1/cm
         B3 Barrier:        grid size = 298
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 330
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6222 1/cm
         B5 Barrier: nonpositive number of states at -23572 1/cm => truncating
         B5 Barrier:        grid size = 677
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23571 1/cm
         B6 Barrier:        grid size = 176
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1478 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4678 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 11.8181, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31571 -23571 3.47e+05 1.68e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -22 5.81e+11
         B2    178 4.39e+10
         B3  -4622 5.53e+09
         B4  -6222    1e+10
         B5 -23571 7.25e+08
         B6   1478 8.76e+10
         B7   4678 1.27e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.63e+77  1.91e+78  1.67e+64  1.45e+59       339  1.55e+83  2.47e+93
          R  2.75e-78         1      5.26   4.6e-14     4e-19  9.33e-76  4.26e+05  6.79e+15
         P1  5.23e-79      0.19         1  8.75e-15   7.6e-20  1.77e-76  8.11e+04  1.29e+15
         P2  5.98e-65  2.17e+13  1.14e+14         1  8.69e-06  2.03e-62  9.26e+18  1.48e+29
         P3  6.88e-60   2.5e+18  1.32e+19  1.15e+05         1  2.33e-57  1.07e+24   1.7e+34
         P4   0.00295  1.07e+75  5.64e+75  4.93e+61  4.29e+56         1  4.57e+80  7.28e+90
         P5  6.45e-84  2.34e-06  1.23e-05  1.08e-19  9.38e-25  2.19e-81         1  1.59e+10
         P6  4.05e-94  1.47e-16  7.75e-16  6.78e-30  5.89e-35  1.37e-91  6.28e-11         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.33e+73  4.38e+74  3.83e+60  3.33e+55    0.0777  3.55e+79  5.66e+89
          R   1.2e-74         1      5.26   4.6e-14     4e-19  9.33e-76  4.26e+05  6.79e+15
         P1  2.28e-75      0.19         1  8.75e-15   7.6e-20  1.77e-76  8.11e+04  1.29e+15
         P2  2.61e-61  2.17e+13  1.14e+14         1  8.69e-06  2.03e-62  9.26e+18  1.48e+29
         P3     3e-56   2.5e+18  1.32e+19  1.15e+05         1  2.33e-57  1.07e+24   1.7e+34
         P4      12.9  1.07e+75  5.64e+75  4.93e+61  4.29e+56         1  4.57e+80  7.28e+90
         P5  2.82e-80  2.34e-06  1.23e-05  1.08e-19  9.38e-25  2.19e-81         1  1.59e+10
         P6  1.77e-90  1.47e-16  7.75e-16  6.78e-30  5.89e-35  1.37e-91  6.28e-11         1
   MasterEquation::set:  done, cpu time[sec] = 11.8224, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         3.45078e+07
      global relaxation matrix dimension = 837
      setting global matrices ... done, cpu time[sec] = 0.450695, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.4671, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2996.2      226.723      28.5276      51.7086      3.74158      452.083      6.55525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.195853, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.212027, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.5076e-14  2.42148e-63   3.9489e-90
      low eigenvalue method done, cpu time[sec] = 0.212661, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-63 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-64 -4.44e-16         1
         *Z       ---       ---  7.38e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.40239e-62 -6.71119e-63 -3.40069e-63 -5.26727e-62  -1.9867e-61 -3.22326e-68 -1.71582e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.246, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         3.45078e+08
      global relaxation matrix dimension = 837
      setting global matrices ... done, cpu time[sec] = 1.28887, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.711, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             299.62      22.6723      2.85276      5.17086     0.374158      45.2083     0.655525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.195277, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.015962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.211475, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21403e-14  2.42148e-64   4.3733e-92
      low eigenvalue method done, cpu time[sec] = 0.212421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-64 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-65 -4.44e-16         1
         *Z       ---       ---  7.38e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.26062e-63  1.98536e-63 -1.55341e-64 -5.62357e-62 -4.30587e-62  5.01612e-67  3.31254e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.2911, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         3.45078e+09
      global relaxation matrix dimension = 837
      setting global matrices ... done, cpu time[sec] = 1.42137, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7177, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             29.962      2.26723     0.285276     0.517086    0.0374158      4.52083    0.0655525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.195279, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.211431, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.98554e-14  2.42148e-65  4.92663e-94
      low eigenvalue method done, cpu time[sec] = 0.212063, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-65 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-66 -4.44e-16         1
         *Z       ---       ---  7.38e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  -3.3016e-63 -1.65974e-63 -1.97301e-64 -4.65031e-63   -9.177e-63  -4.5453e-67  1.32156e-75

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.4247, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         3.45078e+10
      global relaxation matrix dimension = 837
      setting global matrices ... done, cpu time[sec] = 1.42086, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7602, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             2.9962     0.226723    0.0285276    0.0517086   0.00374158     0.452083   0.00655525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.195309, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.016013, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.211537, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.6344e-14  2.42148e-66  5.12018e-96
      low eigenvalue method done, cpu time[sec] = 0.212184, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-66 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-67 -4.44e-16         1
         *Z       ---       ---  7.38e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -1.49812e-65  1.01824e-65 -1.07404e-66 -1.36695e-64  1.33998e-64 -4.76069e-68  3.89128e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.5222, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 200 K
            Well    Collision, 1/sec
              W1         3.45078e+11
      global relaxation matrix dimension = 837
      setting global matrices ... done, cpu time[sec] = 1.29314, elapsed time[sec] = 1
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 12.0057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            0.29962    0.0226723   0.00285276   0.00517086  0.000374158    0.0452083  0.000655525
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.195233, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01604, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.211489, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.04512e-14  2.42148e-67  5.14769e-98
      low eigenvalue method done, cpu time[sec] = 0.21242, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.42e-67 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-68 -4.44e-16         1
         *Z       ---       ---  7.38e+68
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.34221e-66  1.43013e-66 -4.74949e-67 -3.37085e-65  1.54546e-64  2.29234e-69 -1.97226e-74

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.6069, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 210 K
      Energy reference = 10556 1/cm
      Energy step      = 52 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.01102
         W1 Well: collisional kernel bandwidth = 60
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.951297
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.90143
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 4.13219
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.72349
         W1 Well: minimal relaxation eigenvalue = 0.130914
         W1 Well: maximal relaxation eigenvalue = 3.45351
         W1 Well:       grid size = 811
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31616 1/cm
         B1 Barrier:        grid size = 203
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 199
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 292
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 322
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6188 1/cm
         B5 Barrier: nonpositive number of states at -23608 1/cm => truncating
         B5 Barrier:        grid size = 657
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23608 1/cm
         B6 Barrier:        grid size = 175
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1456 1/cm
         B7 Barrier:        grid size = 113
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4680 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 12.8722, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31616 -23608 3.38e+05  1.8e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0 6.83e+11
         B2    208 5.21e+10
         B3  -4627  6.7e+09
         B4  -6188  1.2e+10
         B5 -23608 8.79e+08
         B6   1457 1.08e+11
         B7   4681 1.68e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.27e+72  3.05e+73  1.41e+60  2.13e+55      25.6  1.68e+78  9.02e+87
          R  1.59e-73         1      4.86  2.24e-13   3.4e-18  4.08e-72  2.69e+05  1.44e+15
         P1  3.28e-74     0.206         1  4.61e-14  6.99e-19  8.41e-73  5.53e+04  2.96e+14
         P2  7.11e-61  4.46e+12  2.17e+13         1  1.52e-05  1.82e-59   1.2e+18  6.42e+27
         P3  4.69e-56  2.94e+17  1.43e+18   6.6e+04         1   1.2e-54  7.91e+22  4.23e+32
         P4     0.039  2.45e+71  1.19e+72  5.49e+58  8.32e+53         1  6.58e+76  3.52e+86
         P5  5.94e-79  3.72e-06  1.81e-05  8.34e-19  1.26e-23  1.52e-77         1  5.35e+09
         P6  1.11e-88  6.95e-16  3.38e-15  1.56e-28  2.36e-33  2.84e-87  1.87e-10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.5e+69  7.26e+69  3.35e+56  5.08e+51   0.00611  4.02e+74  2.15e+84
          R  6.69e-70         1      4.86  2.24e-13   3.4e-18  4.08e-72  2.69e+05  1.44e+15
         P1  1.38e-70     0.206         1  4.61e-14  6.99e-19  8.41e-73  5.53e+04  2.96e+14
         P2  2.98e-57  4.46e+12  2.17e+13         1  1.52e-05  1.82e-59   1.2e+18  6.42e+27
         P3  1.97e-52  2.94e+17  1.43e+18   6.6e+04         1   1.2e-54  7.91e+22  4.23e+32
         P4       164  2.45e+71  1.19e+72  5.49e+58  8.32e+53         1  6.58e+76  3.52e+86
         P5  2.49e-75  3.72e-06  1.81e-05  8.34e-19  1.26e-23  1.52e-77         1  5.35e+09
         P6  4.65e-85  6.95e-16  3.38e-15  1.56e-28  2.36e-33  2.84e-87  1.87e-10         1
   MasterEquation::set:  done, cpu time[sec] = 12.8772, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 210 K
            Well    Collision, 1/sec
              W1         3.28488e+07
      global relaxation matrix dimension = 811
      setting global matrices ... done, cpu time[sec] = 0.439687, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8351, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3474.63       265.13      34.0826      61.0807      4.46871      547.884      8.53798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.187688, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.203399, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.28391e-11   8.7315e-62   4.7037e-86
      low eigenvalue method done, cpu time[sec] = 0.204167, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-62 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-62 -4.44e-16         1
         *Z       ---       ---  1.52e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.15334e-60  1.44058e-60  2.21508e-61 -6.53984e-61  1.91531e-59 -1.98997e-64  2.82329e-71

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.2729, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 210 K
            Well    Collision, 1/sec
              W1         3.28488e+08
      global relaxation matrix dimension = 811
      setting global matrices ... done, cpu time[sec] = 1.34772, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.7679, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            347.463       26.513      3.40826      6.10807     0.446871      54.7884     0.853798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.186814, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014638, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.201711, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20754e-12   8.7315e-63  7.34671e-88
      low eigenvalue method done, cpu time[sec] = 0.202312, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-63 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-63 -4.44e-16         1
         *Z       ---       ---  1.52e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.89484e-60  1.52712e-60  1.63064e-62  1.57684e-60  1.07752e-62 -9.47297e-68 -3.58467e-71

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 16.1753, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 210 K
            Well    Collision, 1/sec
              W1         3.28488e+09
      global relaxation matrix dimension = 811
      setting global matrices ... done, cpu time[sec] = 1.35157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.9203, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.7463       2.6513     0.340826     0.610807    0.0446871      5.47884    0.0853798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.186018, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014593, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.200855, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.23358e-13   8.7315e-64  1.13581e-89
      low eigenvalue method done, cpu time[sec] = 0.201456, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-64 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-64 -4.44e-16         1
         *Z       ---       ---  1.52e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.25773e-62  1.08994e-62 -4.06182e-63 -1.95191e-61  1.22775e-61  1.54424e-64  4.45666e-71

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.4789, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 210 K
            Well    Collision, 1/sec
              W1         3.28488e+10
      global relaxation matrix dimension = 811
      setting global matrices ... done, cpu time[sec] = 0.834186, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.8228, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3.47463      0.26513    0.0340826    0.0610807   0.00446871     0.547884   0.00853798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.185674, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.014634, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.200557, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.34811e-14   8.7315e-65  1.29448e-91
      low eigenvalue method done, cpu time[sec] = 0.20115, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-65 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-65 -4.44e-16         1
         *Z       ---       ---  1.52e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.50539e-62  1.33526e-62  1.20168e-63  3.59372e-62  7.82995e-63 -2.64459e-65 -4.16546e-71

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.7043, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 210 K
            Well    Collision, 1/sec
              W1         3.28488e+11
      global relaxation matrix dimension = 811
      setting global matrices ... done, cpu time[sec] = 1.34975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 11.5057, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.347463     0.026513   0.00340826   0.00610807  0.000446871    0.0547884  0.000853798
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.186437, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.014607, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.201293, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.39144e-15   8.7315e-66  1.31849e-93
      low eigenvalue method done, cpu time[sec] = 0.202116, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.73e-66 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-66 -4.44e-16         1
         *Z       ---       ---  1.52e+66
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.34741e-63  8.41561e-64  2.77106e-65 -7.81766e-64  5.25023e-64  2.50079e-66  2.91944e-72

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 15.861, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 220 K
      Energy reference = 10834 1/cm
      Energy step      = 55 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010628
         W1 Well: collisional kernel bandwidth = 58
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.824766
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.818548
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.26563
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.58557
         W1 Well: minimal relaxation eigenvalue = 0.127228
         W1 Well: maximal relaxation eigenvalue = 1.19375
         W1 Well:       grid size = 771
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31571 1/cm
         B1 Barrier:        grid size = 197
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -1 1/cm
         B2 Barrier:        grid size = 194
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 281
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4621 1/cm
         B4 Barrier:        grid size = 310
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6216 1/cm
         B5 Barrier: nonpositive number of states at -23101 1/cm => truncating
         B5 Barrier:        grid size = 617
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23101 1/cm
         B6 Barrier:        grid size = 170
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1483 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4673 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 9.65303, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31571 -23101 4.88e+05 1.91e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -1 8.02e+11
         B2    164 6.17e+10
         B3  -4621  8.1e+09
         B4  -6216 1.44e+10
         B5 -23101 1.06e+09
         B6   1484 1.32e+11
         B7   4674  2.2e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.85e+68  1.29e+69  2.69e+56  6.76e+51      2.38  5.03e+73     1e+83
          R  3.51e-69         1      4.52  9.46e-13  2.38e-17  8.35e-69  1.77e+05  3.52e+14
         P1  7.78e-70     0.221         1  2.09e-13  5.26e-18  1.85e-69  3.91e+04  7.78e+13
         P2  3.71e-57  1.06e+12  4.77e+12         1  2.51e-05  8.82e-57  1.87e+17  3.72e+26
         P3  1.48e-52  4.21e+16   1.9e+17  3.98e+04         1  3.51e-52  7.43e+21  1.48e+31
         P4     0.421   1.2e+68  5.41e+68  1.13e+56  2.85e+51         1  2.12e+73  4.21e+82
         P5  1.99e-74  5.66e-06  2.56e-05  5.36e-18  1.35e-22  4.73e-74         1  1.99e+09
         P6     1e-83  2.84e-15  1.29e-14  2.69e-27  6.76e-32  2.37e-83  5.03e-10         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.21e+64  3.26e+65  6.82e+52  1.71e+48  0.000602  1.27e+70  2.54e+79
          R  1.39e-65         1      4.52  9.46e-13  2.38e-17  8.35e-69  1.77e+05  3.52e+14
         P1  3.07e-66     0.221         1  2.09e-13  5.26e-18  1.85e-69  3.91e+04  7.78e+13
         P2  1.47e-53  1.06e+12  4.77e+12         1  2.51e-05  8.82e-57  1.87e+17  3.72e+26
         P3  5.83e-49  4.21e+16   1.9e+17  3.98e+04         1  3.51e-52  7.43e+21  1.48e+31
         P4  1.66e+03   1.2e+68  5.41e+68  1.13e+56  2.85e+51         1  2.12e+73  4.21e+82
         P5  7.85e-71  5.66e-06  2.56e-05  5.36e-18  1.35e-22  4.73e-74         1  1.99e+09
         P6  3.94e-80  2.84e-15  1.29e-14  2.69e-27  6.76e-32  2.37e-83  5.03e-10         1
   MasterEquation::set:  done, cpu time[sec] = 9.65776, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 220 K
            Well    Collision, 1/sec
              W1         3.13323e+07
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 0.36461, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.4366, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4011.49      308.741      40.5207      71.8276      5.31145      659.975      11.0125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.155424, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.013099, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.168706, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.53864e-14  2.56498e-60  6.22264e-82
      low eigenvalue method done, cpu time[sec] = 0.169244, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-60 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-61 -4.44e-16         1
         *Z       ---       ---  5.44e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.45721e-59  9.41884e-59  1.50007e-59  5.25855e-57  8.42826e-58 -1.48637e-63 -8.17433e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.5582, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 220 K
            Well    Collision, 1/sec
              W1         3.13323e+08
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20177, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8722, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            401.149      30.8741      4.05207      7.18276     0.531145      65.9975      1.10125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.155073, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.01292, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.16817, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.50099e-14  2.56498e-61  1.23323e-83
      low eigenvalue method done, cpu time[sec] = 0.1687, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-61 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-62 -4.44e-16         1
         *Z       ---       ---  5.44e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.88649e-59 -1.16539e-59 -1.35973e-59 -5.04532e-58 -2.41246e-58  3.66738e-62 -8.63105e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.8007, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 220 K
            Well    Collision, 1/sec
              W1         3.13323e+09
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.8396, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            40.1149      3.08741     0.405207     0.718276    0.0531145      6.59975     0.110125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.155049, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.012891, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.168117, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.40544e-14  2.56498e-62  2.29972e-85
      low eigenvalue method done, cpu time[sec] = 0.168644, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-62 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-63 -4.44e-16         1
         *Z       ---       ---  5.44e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -4.18671e-59  -9.7068e-60  3.34989e-60  2.14072e-58 -3.82102e-60 -4.80932e-62   3.3269e-70

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.77, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 220 K
            Well    Collision, 1/sec
              W1         3.13323e+10
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20112, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.7024, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4.01149     0.308741    0.0405207    0.0718276   0.00531145     0.659975    0.0110125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.154956, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.168012, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.308e-14  2.56498e-63  2.77617e-87
      low eigenvalue method done, cpu time[sec] = 0.168548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-63 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-64 -4.44e-16         1
         *Z       ---       ---  5.44e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16 -2.46968e-59 -1.00227e-59 -1.92548e-61  4.44762e-60 -2.94245e-61 -1.23301e-62 -1.27101e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6202, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 220 K
            Well    Collision, 1/sec
              W1         3.13323e+11
      global relaxation matrix dimension = 771
      setting global matrices ... done, cpu time[sec] = 1.20133, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.6826, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.401149    0.0308741   0.00405207   0.00718276  0.000531145    0.0659975   0.00110125
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.154112, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012864, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.167173, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.18451e-14  2.56498e-64  2.85335e-89
      low eigenvalue method done, cpu time[sec] = 0.16771, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.56e-64 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.26e-65 -4.44e-16         1
         *Z       ---       ---  5.44e+63
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  4.26118e-61  7.74133e-62 -8.28622e-63  1.29022e-61 -7.63789e-62  7.27494e-64 -4.49028e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 14.6081, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 230 K
      Energy reference = 11112 1/cm
      Energy step      = 58 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011147
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.773418
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.747808
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.11136
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 6.07629
         W1 Well: minimal relaxation eigenvalue = 0.123833
         W1 Well: maximal relaxation eigenvalue = 1.20525
         W1 Well:       grid size = 736
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31576 1/cm
         B1 Barrier:        grid size = 192
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -24 1/cm
         B2 Barrier:        grid size = 188
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 207 1/cm
         B3 Barrier:        grid size = 271
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4606 1/cm
         B4 Barrier:        grid size = 299
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6230 1/cm
         B5 Barrier: nonpositive number of states at -23572 1/cm => truncating
         B5 Barrier:        grid size = 598
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23572 1/cm
         B6 Barrier:        grid size = 166
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1484 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4673 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.89096, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31576 -23572 3.47e+05 2.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -24 9.39e+11
         B2    208 7.29e+10
         B3  -4606 9.76e+09
         B4  -6230 1.71e+10
         B5 -23572 1.28e+09
         B6   1484 1.61e+11
         B7   4674 2.87e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.09e+64   1.3e+65  1.09e+53  4.34e+48     0.272  3.72e+69     3e+78
          R  3.24e-65         1      4.23  3.53e-12  1.41e-16  8.81e-66  1.21e+05  9.74e+13
         P1  7.67e-66     0.237         1  8.34e-13  3.32e-17  2.08e-66  2.85e+04   2.3e+13
         P2  9.19e-54  2.84e+11   1.2e+12         1  3.99e-05   2.5e-54  3.42e+16  2.76e+25
         P3  2.31e-49  7.11e+15  3.01e+16  2.51e+04         1  6.26e-50  8.58e+20  6.93e+29
         P4      3.68  1.14e+65   4.8e+65     4e+53   1.6e+49         1  1.37e+70  1.11e+79
         P5  2.69e-70  8.29e-06  3.51e-05  2.92e-17  1.17e-21   7.3e-71         1  8.07e+08
         P6  3.33e-79  1.03e-14  4.34e-14  3.62e-26  1.44e-30  9.04e-80  1.24e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.22e+60  3.47e+61   2.9e+49  1.15e+45  7.24e-05  9.91e+65     8e+74
          R  1.22e-61         1      4.23  3.53e-12  1.41e-16  8.81e-66  1.21e+05  9.74e+13
         P1  2.88e-62     0.237         1  8.34e-13  3.32e-17  2.08e-66  2.85e+04   2.3e+13
         P2  3.45e-50  2.84e+11   1.2e+12         1  3.99e-05   2.5e-54  3.42e+16  2.76e+25
         P3  8.66e-46  7.11e+15  3.01e+16  2.51e+04         1  6.26e-50  8.58e+20  6.93e+29
         P4  1.38e+04  1.14e+65   4.8e+65     4e+53   1.6e+49         1  1.37e+70  1.11e+79
         P5  1.01e-66  8.29e-06  3.51e-05  2.92e-17  1.17e-21   7.3e-71         1  8.07e+08
         P6  1.25e-75  1.03e-14  4.34e-14  3.62e-26  1.44e-30  9.04e-80  1.24e-09         1
   MasterEquation::set:  done, cpu time[sec] = 8.89524, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 230 K
            Well    Collision, 1/sec
              W1         2.99418e+07
      global relaxation matrix dimension = 736
      setting global matrices ... done, cpu time[sec] = 0.336456, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.53778, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4611.12      358.095      47.9517      84.1045       6.2842      790.443      14.0744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.138227, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011622, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.150013, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.01857e-14  6.25969e-59  4.05707e-78
      low eigenvalue method done, cpu time[sec] = 0.15051, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.26e-59  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-60  4.44e-16         1
         *Z       ---       ---  3.19e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.15186e-56  2.19002e-56  6.74012e-57   5.5886e-55  4.44833e-56 -1.26052e-61 -9.65354e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3569, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 230 K
            Well    Collision, 1/sec
              W1         2.99418e+08
      global relaxation matrix dimension = 736
      setting global matrices ... done, cpu time[sec] = 1.10146, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0464, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            461.112      35.8095      4.79517      8.41045      0.62842      79.0443      1.40744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.138014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011554, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.149734, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.03027e-16  6.25969e-60  9.93131e-80
      low eigenvalue method done, cpu time[sec] = 0.150226, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.26e-60  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-61  4.44e-16         1
         *Z       ---       ---  3.19e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -4.16053e-56 -2.37636e-56 -3.13394e-57 -8.36673e-56 -6.99674e-57 -6.68435e-61 -1.54238e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6313, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 230 K
            Well    Collision, 1/sec
              W1         2.99418e+09
      global relaxation matrix dimension = 736
      setting global matrices ... done, cpu time[sec] = 1.10319, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0363, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            46.1112      3.58095     0.479517     0.841045     0.062842      7.90443     0.140744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.137827, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011555, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.149545, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.16252e-14  6.25969e-61  2.16128e-81
      low eigenvalue method done, cpu time[sec] = 0.150049, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.26e-61  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-62  4.44e-16         1
         *Z       ---       ---  3.19e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -6.18878e-57 -3.53363e-57  -8.5813e-59 -5.89679e-57 -5.71329e-58  2.91648e-60 -2.20395e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6238, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 230 K
            Well    Collision, 1/sec
              W1         2.99418e+10
      global relaxation matrix dimension = 736
      setting global matrices ... done, cpu time[sec] = 1.10081, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0546, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4.61112     0.358095    0.0479517    0.0841045    0.0062842     0.790443    0.0140744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.137813, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011557, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.149533, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.10197e-15  6.25969e-62  2.74958e-83
      low eigenvalue method done, cpu time[sec] = 0.150023, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.26e-62  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-63  4.44e-16         1
         *Z       ---       ---  3.19e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.43843e-57 -7.28042e-58 -3.39593e-59  1.03266e-58  1.16543e-58 -2.20433e-61 -3.15695e-69

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6463, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 230 K
            Well    Collision, 1/sec
              W1         2.99418e+11
      global relaxation matrix dimension = 736
      setting global matrices ... done, cpu time[sec] = 1.10029, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.461112    0.0358095   0.00479517   0.00841045   0.00062842    0.0790443   0.00140744
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.137873, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.011594, elapsed time[sec] = 1
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.149629, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.08676e-14  6.25969e-63  2.85202e-85
      low eigenvalue method done, cpu time[sec] = 0.150118, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.26e-63  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.75e-64  4.44e-16         1
         *Z       ---       ---  3.19e+61
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.61575e-59   2.6881e-59  3.63365e-60   8.3141e-59  4.68153e-60  3.70381e-62   4.5805e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.7852, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 240 K
      Energy reference = 11390 1/cm
      Energy step      = 60 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010477
         W1 Well: collisional kernel bandwidth = 57
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.898119
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.708576
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 3.45256
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.53936
         W1 Well: minimal relaxation eigenvalue = 0.120634
         W1 Well: maximal relaxation eigenvalue = 1.17173
         W1 Well:       grid size = 716
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 190
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -10 1/cm
         B2 Barrier:        grid size = 187
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 170 1/cm
         B3 Barrier:        grid size = 267
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4629 1/cm
         B4 Barrier:        grid size = 293
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6190 1/cm
         B5 Barrier: nonpositive number of states at -23590 1/cm => truncating
         B5 Barrier:        grid size = 583
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23590 1/cm
         B6 Barrier:        grid size = 165
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1490 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4670 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 10.8324, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23590 3.42e+05 2.17e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -10  1.1e+12
         B2    171 8.59e+10
         B3  -4629 1.17e+10
         B4  -6190 2.04e+10
         B5 -23590 1.54e+09
         B6   1490 1.95e+11
         B7   4670  3.7e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.23e+60  2.87e+61  8.52e+49  5.18e+45    0.0376  6.15e+65  2.17e+74
          R  1.38e-61         1      3.98  1.18e-11  7.17e-16   5.2e-63  8.51e+04  3.01e+13
         P1  3.48e-62     0.251         1  2.96e-12   1.8e-16  1.31e-63  2.14e+04  7.56e+12
         P2  1.17e-50  8.48e+10  3.38e+11         1  6.09e-05  4.42e-52  7.22e+15  2.55e+24
         P3  1.93e-46  1.39e+15  5.55e+15  1.64e+04         1  7.25e-48  1.19e+20  4.19e+28
         P4      26.6  1.92e+62  7.64e+62  2.26e+51  1.38e+47         1  1.63e+67  5.78e+75
         P5  1.63e-66  1.18e-05  4.68e-05  1.39e-16  8.43e-21  6.12e-68         1  3.53e+08
         P6   4.6e-75  3.33e-14  1.32e-13  3.92e-25  2.39e-29  1.73e-76  2.83e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.99e+57   7.9e+57  2.34e+46  1.42e+42  1.03e-05  1.69e+62  5.97e+70
          R  5.03e-58         1      3.98  1.18e-11  7.17e-16   5.2e-63  8.51e+04  3.01e+13
         P1  1.27e-58     0.251         1  2.96e-12   1.8e-16  1.31e-63  2.14e+04  7.56e+12
         P2  4.27e-47  8.48e+10  3.38e+11         1  6.09e-05  4.42e-52  7.22e+15  2.55e+24
         P3  7.02e-43  1.39e+15  5.55e+15  1.64e+04         1  7.25e-48  1.19e+20  4.19e+28
         P4  9.67e+04  1.92e+62  7.64e+62  2.26e+51  1.38e+47         1  1.63e+67  5.78e+75
         P5  5.92e-63  1.18e-05  4.68e-05  1.39e-16  8.43e-21  6.12e-68         1  3.53e+08
         P6  1.67e-71  3.33e-14  1.32e-13  3.92e-25  2.39e-29  1.73e-76  2.83e-09         1
   MasterEquation::set:  done, cpu time[sec] = 10.8384, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 240 K
            Well    Collision, 1/sec
              W1         2.86633e+07
      global relaxation matrix dimension = 716
      setting global matrices ... done, cpu time[sec] = 0.520623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.48532, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5278.55      413.752      56.4946      98.0789      7.40264      941.578      17.8294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.127915, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010755, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139556, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.56191e-15   1.3173e-57  1.31922e-74
      low eigenvalue method done, cpu time[sec] = 0.140026, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-57         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-58         0         1
         *Z       ---       ---   2.9e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.34442e-54  -1.7577e-54 -2.42811e-55 -2.64577e-53 -1.57853e-54  2.71344e-59  5.70307e-67

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3024, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 240 K
            Well    Collision, 1/sec
              W1         2.86633e+08
      global relaxation matrix dimension = 716
      setting global matrices ... done, cpu time[sec] = 1.04432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2364, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            527.855      41.3752      5.64946      9.80789     0.740264      94.1578      1.78294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12766, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010795, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139352, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.96271e-15   1.3173e-58  3.95713e-76
      low eigenvalue method done, cpu time[sec] = 0.139821, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-58         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-59         0         1
         *Z       ---       ---   2.9e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.21266e-55  5.56873e-55  1.17818e-55  3.90783e-54  2.35363e-55 -2.32974e-58  2.42855e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.6343, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 240 K
            Well    Collision, 1/sec
              W1         2.86633e+09
      global relaxation matrix dimension = 716
      setting global matrices ... done, cpu time[sec] = 1.04495, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0284, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.7855      4.13752     0.564946     0.980789    0.0740264      9.41578     0.178294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.127885, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010785, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139539, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.48491e-14   1.3173e-59  9.88552e-78
      low eigenvalue method done, cpu time[sec] = 0.140008, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-59         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-60         0         1
         *Z       ---       ---   2.9e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.71295e-55  8.21623e-56 -2.03562e-57  1.67303e-55  1.16262e-56 -1.13718e-58   7.9607e-68

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4071, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 240 K
            Well    Collision, 1/sec
              W1         2.86633e+10
      global relaxation matrix dimension = 716
      setting global matrices ... done, cpu time[sec] = 1.04545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.5712, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5.27855     0.413752    0.0564946    0.0980789   0.00740264     0.941578    0.0178294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.127763, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010782, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139457, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.79672e-14   1.3173e-60  1.32432e-79
      low eigenvalue method done, cpu time[sec] = 0.139925, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-60         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-61         0         1
         *Z       ---       ---   2.9e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.23612e-56  -4.2399e-56 -2.13515e-57  2.67366e-57  4.83969e-58 -3.13435e-59 -2.56289e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.9465, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 240 K
            Well    Collision, 1/sec
              W1         2.86633e+11
      global relaxation matrix dimension = 716
      setting global matrices ... done, cpu time[sec] = 1.04593, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0397, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.527855    0.0413752   0.00564946   0.00980789  0.000740264    0.0941578   0.00178294
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.127536, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.139147, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.81567e-14   1.3173e-61   1.3874e-81
      low eigenvalue method done, cpu time[sec] = 0.139614, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.32e-61         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-62         0         1
         *Z       ---       ---   2.9e+59
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.58549e-57 -8.09306e-58  5.89203e-59 -9.40324e-58 -2.61209e-58 -1.00971e-59  2.15501e-65

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4156, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 250 K
      Energy reference = 11668 1/cm
      Energy step      = 62 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010047
         W1 Well: collisional kernel bandwidth = 56
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.688403
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.674919
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.19288
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.37796
         W1 Well: minimal relaxation eigenvalue = 0.117718
         W1 Well: maximal relaxation eigenvalue = 2.17367
         W1 Well:       grid size = 698
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31608 1/cm
         B1 Barrier:        grid size = 189
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 185
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 198 1/cm
         B3 Barrier:        grid size = 263
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4637 1/cm
         B4 Barrier:        grid size = 288
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6187 1/cm
         B5 Barrier: nonpositive number of states at -23610 1/cm => truncating
         B5 Barrier:        grid size = 569
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23610 1/cm
         B6 Barrier:        grid size = 164
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 113
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4662 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.16152, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31608 -23610 3.37e+05 2.31e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 1.28e+12
         B2    199 1.01e+11
         B3  -4637  1.4e+10
         B4  -6187 2.41e+10
         B5 -23610 1.84e+09
         B6   1501 2.36e+11
         B7   4663 4.75e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.28e+57  1.24e+58  1.18e+47  1.06e+43   0.00607  2.03e+62  3.36e+70
          R  3.05e-58         1      3.76  3.58e-11  3.22e-15  1.85e-60  6.18e+04  1.02e+13
         P1  8.09e-59     0.266         1  9.51e-12  8.55e-16  4.91e-61  1.64e+04  2.72e+12
         P2  8.51e-48  2.79e+10  1.05e+11         1  8.99e-05  5.16e-50  1.72e+15  2.86e+23
         P3  9.47e-44  3.11e+14  1.17e+15  1.11e+04         1  5.74e-46  1.92e+19  3.18e+27
         P4       165  5.41e+59  2.04e+60  1.94e+49  1.74e+45         1  3.34e+64  5.53e+72
         P5  4.93e-63  1.62e-05   6.1e-05   5.8e-16  5.21e-20  2.99e-65         1  1.66e+08
         P6  2.98e-71  9.78e-14  3.68e-13   3.5e-24  3.15e-28  1.81e-73  6.04e-09         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.31e+53   3.5e+54  3.33e+43     3e+39  1.72e-06  5.75e+58  9.52e+66
          R  1.07e-54         1      3.76  3.58e-11  3.22e-15  1.85e-60  6.18e+04  1.02e+13
         P1  2.85e-55     0.266         1  9.51e-12  8.55e-16  4.91e-61  1.64e+04  2.72e+12
         P2     3e-44  2.79e+10  1.05e+11         1  8.99e-05  5.16e-50  1.72e+15  2.86e+23
         P3  3.34e-40  3.11e+14  1.17e+15  1.11e+04         1  5.74e-46  1.92e+19  3.18e+27
         P4  5.81e+05  5.41e+59  2.04e+60  1.94e+49  1.74e+45         1  3.34e+64  5.53e+72
         P5  1.74e-59  1.62e-05   6.1e-05   5.8e-16  5.21e-20  2.99e-65         1  1.66e+08
         P6  1.05e-67  9.78e-14  3.68e-13   3.5e-24  3.15e-28  1.81e-73  6.04e-09         1
   MasterEquation::set:  done, cpu time[sec] = 8.16732, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 250 K
            Well    Collision, 1/sec
              W1         2.74849e+07
      global relaxation matrix dimension = 698
      setting global matrices ... done, cpu time[sec] = 0.489026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.09655, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6018.89      476.329      66.2789      113.931      8.68377      1115.83      22.4032
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123753, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010123, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.134023, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.63359e-11  2.43756e-56  2.30037e-71
      low eigenvalue method done, cpu time[sec] = 0.134471, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-56         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-57         0         1
         *Z       ---       ---  3.84e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.86197e-52 -1.57172e-52 -2.10654e-53 -4.51771e-52 -1.98118e-53  5.96108e-57  9.87657e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.8016, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 250 K
            Well    Collision, 1/sec
              W1         2.74849e+08
      global relaxation matrix dimension = 698
      setting global matrices ... done, cpu time[sec] = 0.992702, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.81565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            601.889      47.6329      6.62789      11.3931     0.868377      111.583      2.24032
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12327, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010116, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133534, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.21622e-11  2.43756e-57  8.35635e-73
      low eigenvalue method done, cpu time[sec] = 0.133978, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-57         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-58         0         1
         *Z       ---       ---  3.84e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.35263e-53  2.74423e-53 -1.71804e-55   1.5048e-53  7.93739e-55 -1.23463e-56 -1.59839e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.0119, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 250 K
            Well    Collision, 1/sec
              W1         2.74849e+09
      global relaxation matrix dimension = 698
      setting global matrices ... done, cpu time[sec] = 0.993109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.91877, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            60.1889      4.76329     0.662789      1.13931    0.0868377      11.1583     0.224032
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123219, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.010129, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133493, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.12505e-13  2.43756e-58  2.36315e-74
      low eigenvalue method done, cpu time[sec] = 0.133938, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-58         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-59         0         1
         *Z       ---       ---  3.84e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.87762e-54 -3.72987e-55 -1.33484e-55  1.50869e-54  8.75276e-56 -4.80131e-57 -4.82886e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.1274, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 250 K
            Well    Collision, 1/sec
              W1         2.74849e+10
      global relaxation matrix dimension = 698
      setting global matrices ... done, cpu time[sec] = 0.992883, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.0016, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.01889     0.476329    0.0662789     0.113931   0.00868377      1.11583    0.0224032
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.123165, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.010132, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133444, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.73548e-15  2.43756e-59  3.33373e-76
      low eigenvalue method done, cpu time[sec] = 0.133896, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-59         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-60         0         1
         *Z       ---       ---  3.84e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.25182e-54 -9.22259e-55 -6.87425e-57  1.86428e-55  3.88469e-57 -1.63714e-57  4.83183e-63

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.2051, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 250 K
            Well    Collision, 1/sec
              W1         2.74849e+11
      global relaxation matrix dimension = 698
      setting global matrices ... done, cpu time[sec] = 0.989829, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 10.2182, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.601889    0.0476329   0.00662789    0.0113931  0.000868377     0.111583   0.00224032
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.12317, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.01011, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.133426, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.10715e-15  2.43756e-60  3.53107e-78
      low eigenvalue method done, cpu time[sec] = 0.13389, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-60         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.87e-61         0         1
         *Z       ---       ---  3.84e+57
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.29734e-56  3.70364e-57  -1.2244e-57 -1.50418e-56 -2.05856e-57  8.59586e-59 -1.30913e-64

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 13.4191, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 260 K
      Energy reference = 11946 1/cm
      Energy step      = 65 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.011998
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.800934
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.6243
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.931912
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 5.22381
         W1 Well: minimal relaxation eigenvalue = 0.114831
         W1 Well: maximal relaxation eigenvalue = 2.05195
         W1 Well:       grid size = 670
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 184
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 181
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 255
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4629 1/cm
         B4 Barrier:        grid size = 279
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23219 1/cm => truncating
         B5 Barrier:        grid size = 541
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23218 1/cm
         B6 Barrier:        grid size = 161
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4666 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 7.837, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23218 4.48e+05 2.46e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 1.48e+12
         B2    181 1.18e+11
         B3  -4629 1.68e+10
         B4  -6189 2.86e+10
         B5 -23218  2.2e+09
         B6   1481 2.85e+11
         B7   4666 6.05e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.6e+54  9.29e+54   2.6e+44  3.34e+40   0.00109  1.19e+59  9.83e+66
          R  3.85e-55         1      3.58  9.99e-11  1.29e-14  4.18e-58   4.6e+04  3.78e+12
         P1  1.08e-55      0.28         1  2.79e-11   3.6e-15  1.17e-58  1.29e+04  1.06e+12
         P2  3.85e-45     1e+10  3.58e+10         1  0.000129  4.18e-48   4.6e+14  3.79e+22
         P3  2.99e-41  7.77e+13  2.78e+14  7.77e+03         1  3.25e-44  3.57e+18  2.94e+26
         P4       921  2.39e+57  8.56e+57  2.39e+47  3.08e+43         1   1.1e+62  9.05e+69
         P5  8.37e-60  2.18e-05  7.78e-05  2.17e-15   2.8e-19  9.09e-63         1  8.23e+07
         P6  1.02e-67  2.64e-13  9.45e-13  2.64e-23   3.4e-27  1.11e-70  1.22e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.84e+50   2.8e+51  7.83e+40  1.01e+37  3.28e-07   3.6e+55  2.97e+63
          R  1.28e-51         1      3.58  9.99e-11  1.29e-14  4.18e-58   4.6e+04  3.78e+12
         P1  3.57e-52      0.28         1  2.79e-11   3.6e-15  1.17e-58  1.29e+04  1.06e+12
         P2  1.28e-41     1e+10  3.58e+10         1  0.000129  4.18e-48   4.6e+14  3.79e+22
         P3  9.92e-38  7.77e+13  2.78e+14  7.77e+03         1  3.25e-44  3.57e+18  2.94e+26
         P4  3.05e+06  2.39e+57  8.56e+57  2.39e+47  3.08e+43         1   1.1e+62  9.05e+69
         P5  2.77e-56  2.18e-05  7.78e-05  2.17e-15   2.8e-19  9.09e-63         1  8.23e+07
         P6  3.37e-64  2.64e-13  9.45e-13  2.64e-23   3.4e-27  1.11e-70  1.22e-08         1
   MasterEquation::set:  done, cpu time[sec] = 7.84307, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 260 K
            Well    Collision, 1/sec
              W1         2.63962e+07
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.439104, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72685, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6837.02      546.462      77.4444      131.852       10.146      1315.86      27.9353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009096, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115815, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.54214e-12  4.11368e-55  2.34226e-68
      low eigenvalue method done, cpu time[sec] = 0.116244, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-55  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-56  4.44e-16         1
         *Z       ---       ---  6.98e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.70717e-51 -4.28663e-52  2.33149e-52   6.8375e-51  2.43457e-52  3.47389e-56 -7.57238e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.1284, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 260 K
            Well    Collision, 1/sec
              W1         2.63962e+08
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.921372, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.81005, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            683.702      54.6462      7.74444      13.1852       1.0146      131.586      2.79353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105332, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009129, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115253, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.56843e-12  4.11368e-56  1.01501e-69
      low eigenvalue method done, cpu time[sec] = 0.115671, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-56  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-57  4.44e-16         1
         *Z       ---       ---  6.98e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  -5.1972e-51 -2.53736e-51 -4.82043e-53  1.83451e-54 -1.44145e-53 -8.51188e-55 -1.12209e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.6895, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 260 K
            Well    Collision, 1/sec
              W1         2.63962e+09
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.920591, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.43553, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            68.3702      5.46462     0.774444      1.31852      0.10146      13.1586     0.279353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105404, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009082, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115253, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.42496e-13  4.11368e-57  3.21295e-71
      low eigenvalue method done, cpu time[sec] = 0.11567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-57  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-58  4.44e-16         1
         *Z       ---       ---  6.98e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.58062e-52 -5.75093e-53 -1.96672e-54 -8.63885e-54 -1.17264e-54 -2.22985e-55  8.02369e-62

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.3184, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 260 K
            Well    Collision, 1/sec
              W1         2.63962e+10
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.922594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.54325, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.83702     0.546462    0.0774444     0.131852     0.010146      1.31586    0.0279353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105296, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115151, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.00138e-15  4.11368e-58  4.77608e-73
      low eigenvalue method done, cpu time[sec] = 0.115567, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-58  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-59  4.44e-16         1
         *Z       ---       ---  6.98e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.70514e-53  1.29688e-53  6.32849e-55  8.92747e-54  7.76288e-56  2.31844e-56 -1.56494e-60

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.4304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 260 K
            Well    Collision, 1/sec
              W1         2.63962e+11
      global relaxation matrix dimension = 670
      setting global matrices ... done, cpu time[sec] = 0.918998, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.57702, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.683702    0.0546462   0.00774444    0.0131852    0.0010146     0.131586   0.00279353
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.105264, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.009087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.115131, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.19959e-15  4.11368e-59  5.12096e-75
      low eigenvalue method done, cpu time[sec] = 0.115548, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.11e-59  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.72e-60  4.44e-16         1
         *Z       ---       ---  6.98e+55
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.87462e-54  2.55576e-54  8.91674e-56  1.20587e-55  7.47686e-57  1.08238e-56   2.2734e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.456, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 270 K
      Energy reference = 12224 1/cm
      Energy step      = 67 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010231
         W1 Well: collisional kernel bandwidth = 55
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.62609
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.592299
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.68846
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.66712
         W1 Well: minimal relaxation eigenvalue = 0.112094
         W1 Well: maximal relaxation eigenvalue = 1.32404
         W1 Well:       grid size = 654
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31593 1/cm
         B1 Barrier:        grid size = 183
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 180
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 164 1/cm
         B3 Barrier:        grid size = 252
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4660 1/cm
         B4 Barrier:        grid size = 275
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6200 1/cm
         B5 Barrier: nonpositive number of states at -23219 1/cm => truncating
         B5 Barrier:        grid size = 529
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23219 1/cm
         B6 Barrier:        grid size = 160
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1504 1/cm
         B7 Barrier:        grid size = 113
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4653 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 8.87986, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31593 -23219 4.48e+05 2.62e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 1.72e+12
         B2    165 1.39e+11
         B3  -4660    2e+10
         B4  -6200 3.37e+10
         B5 -23219 2.62e+09
         B6   1505 3.42e+11
         B7   4654 7.67e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.61e+51  1.23e+52  9.35e+41  1.68e+38  0.000229  1.26e+56  5.45e+63
          R  2.77e-52         1      3.41  2.59e-10  4.64e-14  6.33e-56   3.5e+04  1.51e+12
         P1  8.11e-53     0.293         1  7.58e-11  1.36e-14  1.86e-56  1.03e+04  4.42e+11
         P2  1.07e-42  3.87e+09  1.32e+10         1   0.00018  2.45e-46  1.35e+14  5.84e+21
         P3  5.96e-39  2.15e+13  7.35e+13  5.57e+03         1  1.36e-42  7.53e+17  3.25e+25
         P4  4.37e+03  1.58e+55  5.39e+55  4.08e+45  7.33e+41         1  5.52e+59  2.38e+67
         P5  7.91e-57  2.86e-05  9.75e-05  7.39e-15  1.33e-18  1.81e-60         1  4.31e+07
         P6  1.83e-64  6.63e-13  2.26e-12  1.71e-22  3.08e-26   4.2e-68  2.32e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.11e+48  3.79e+48  2.88e+38  5.16e+34  7.04e-08  3.89e+52  1.68e+60
          R  8.99e-49         1      3.41  2.59e-10  4.64e-14  6.33e-56   3.5e+04  1.51e+12
         P1  2.64e-49     0.293         1  7.58e-11  1.36e-14  1.86e-56  1.03e+04  4.42e+11
         P2  3.48e-39  3.87e+09  1.32e+10         1   0.00018  2.45e-46  1.35e+14  5.84e+21
         P3  1.94e-35  2.15e+13  7.35e+13  5.57e+03         1  1.36e-42  7.53e+17  3.25e+25
         P4  1.42e+07  1.58e+55  5.39e+55  4.08e+45  7.33e+41         1  5.52e+59  2.38e+67
         P5  2.57e-53  2.86e-05  9.75e-05  7.39e-15  1.33e-18  1.81e-60         1  4.31e+07
         P6  5.96e-61  6.63e-13  2.26e-12  1.71e-22  3.08e-26   4.2e-68  2.32e-08         1
   MasterEquation::set:  done, cpu time[sec] = 8.88556, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 270 K
            Well    Collision, 1/sec
              W1          2.5388e+07
      global relaxation matrix dimension = 654
      setting global matrices ... done, cpu time[sec] = 0.430206, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.24388, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
               7739      624.847      90.1421       152.05      11.8093      1544.49      34.5885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.099334, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008551, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10802, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.64837e-11  6.14365e-54  1.41218e-65
      low eigenvalue method done, cpu time[sec] = 0.108421, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-54         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-55         0         1
         *Z       ---       ---  1.75e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.65779e-49  8.77893e-50  2.07187e-50  4.72302e-49  9.63135e-51 -1.50464e-53 -1.36848e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.5302, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 270 K
            Well    Collision, 1/sec
              W1          2.5388e+08
      global relaxation matrix dimension = 654
      setting global matrices ... done, cpu time[sec] = 0.866918, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.30752, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              773.9      62.4847      9.01421       15.205      1.18093      154.449      3.45885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098451, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.008537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107122, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.98421e-12  6.14365e-55    7.187e-67
      low eigenvalue method done, cpu time[sec] = 0.107522, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-55         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-56         0         1
         *Z       ---       ---  1.75e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.12999e-50  3.64931e-50  2.45827e-51  3.94542e-50  1.42649e-51 -1.20692e-53 -6.63667e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0215, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 270 K
            Well    Collision, 1/sec
              W1          2.5388e+09
      global relaxation matrix dimension = 654
      setting global matrices ... done, cpu time[sec] = 0.871732, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.4487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              77.39      6.24847     0.901421       1.5205     0.118093      15.4449     0.345885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.09843, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008556, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107121, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.41591e-13  6.14365e-56  2.52276e-68
      low eigenvalue method done, cpu time[sec] = 0.107516, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-56         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-57         0         1
         *Z       ---       ---  1.75e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.37793e-51 -2.05455e-52  2.88622e-53  2.86491e-51  5.82716e-54  6.77482e-54 -2.68824e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.164, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 270 K
            Well    Collision, 1/sec
              W1          2.5388e+10
      global relaxation matrix dimension = 654
      setting global matrices ... done, cpu time[sec] = 0.868797, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.37122, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              7.739     0.624847    0.0901421      0.15205    0.0118093      1.54449    0.0345885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098339, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008539, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.10701, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.54043e-14  6.14365e-57   3.9545e-70
      low eigenvalue method done, cpu time[sec] = 0.10741, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-57         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-58         0         1
         *Z       ---       ---  1.75e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.03224e-51  1.54128e-52  1.53291e-54  2.53623e-52  6.87345e-54  2.36594e-54  3.53365e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.0829, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 270 K
            Well    Collision, 1/sec
              W1          2.5388e+11
      global relaxation matrix dimension = 654
      setting global matrices ... done, cpu time[sec] = 0.866109, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.40529, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             0.7739    0.0624847   0.00901421     0.015205   0.00118093     0.154449   0.00345885
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.098342, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.008553, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.107029, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.56567e-15  6.14365e-58  4.29791e-72
      low eigenvalue method done, cpu time[sec] = 0.107428, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.14e-58         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.89e-59         0         1
         *Z       ---       ---  1.75e+54
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.25413e-53  9.08473e-54 -7.02007e-55 -1.16678e-53  6.71254e-56  1.06299e-55  9.81604e-61

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 12.117, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 280 K
      Energy reference = 12502 1/cm
      Energy step      = 70 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010041
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.732741
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.549828
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.829399
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.33248
         W1 Well: minimal relaxation eigenvalue = 0.1095
         W1 Well: maximal relaxation eigenvalue = 1.34708
         W1 Well:       grid size = 630
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31598 1/cm
         B1 Barrier:        grid size = 179
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -27 1/cm
         B2 Barrier:        grid size = 176
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 245
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4647 1/cm
         B4 Barrier:        grid size = 267
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6187 1/cm
         B5 Barrier: nonpositive number of states at -23618 1/cm => truncating
         B5 Barrier:        grid size = 516
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23618 1/cm
         B6 Barrier:        grid size = 158
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1442 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4662 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.71219, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31598 -23618 3.35e+05 2.78e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -27 1.98e+12
         B2    183 1.62e+11
         B3  -4647 2.37e+10
         B4  -6187 3.97e+10
         B5 -23618 3.11e+09
         B6   1443  4.1e+11
         B7   4663 9.66e+09
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.82e+48  2.56e+49  4.89e+39   1.2e+36  5.25e-05  2.12e+53  5.03e+60
          R  1.28e-49         1      3.27  6.26e-10  1.53e-13  6.71e-54  2.72e+04  6.44e+11
         P1  3.91e-50     0.306         1  1.92e-10  4.69e-14  2.05e-54  8.32e+03  1.97e+11
         P2  2.04e-40   1.6e+09  5.22e+09         1  0.000245  1.07e-44  4.34e+13  1.03e+21
         P3  8.35e-37  6.53e+12  2.13e+13  4.09e+03         1  4.38e-41  1.77e+17   4.2e+24
         P4  1.91e+04  1.49e+53  4.87e+53  9.32e+43  2.28e+40         1  4.05e+57  9.59e+64
         P5  4.71e-54  3.68e-05   0.00012   2.3e-14  5.64e-18  2.47e-58         1  2.37e+07
         P6  1.99e-61  1.55e-12  5.08e-12  9.72e-22  2.38e-25  1.04e-65  4.22e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.51e+45  8.21e+45  1.57e+36  3.85e+32  1.69e-08  6.82e+49  1.62e+57
          R  3.98e-46         1      3.27  6.26e-10  1.53e-13  6.71e-54  2.72e+04  6.44e+11
         P1  1.22e-46     0.306         1  1.92e-10  4.69e-14  2.05e-54  8.32e+03  1.97e+11
         P2  6.36e-37   1.6e+09  5.22e+09         1  0.000245  1.07e-44  4.34e+13  1.03e+21
         P3   2.6e-33  6.53e+12  2.13e+13  4.09e+03         1  4.38e-41  1.77e+17   4.2e+24
         P4  5.93e+07  1.49e+53  4.87e+53  9.32e+43  2.28e+40         1  4.05e+57  9.59e+64
         P5  1.47e-50  3.68e-05   0.00012   2.3e-14  5.64e-18  2.47e-58         1  2.37e+07
         P6  6.19e-58  1.55e-12  5.08e-12  9.72e-22  2.38e-25  1.04e-65  4.22e-08         1
   MasterEquation::set:  done, cpu time[sec] = 6.72009, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 280 K
            Well    Collision, 1/sec
              W1         2.44525e+07
      global relaxation matrix dimension = 630
      setting global matrices ... done, cpu time[sec] = 0.533018, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.95501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8729.7      712.196      104.534      174.743      13.6949      1804.79      42.5367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.089269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00777, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.097167, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.87403e-11  8.51775e-53  5.50909e-63
      low eigenvalue method done, cpu time[sec] = 0.097536, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.52e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-54         0         1
         *Z       ---       ---  5.62e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.77678e-48 -5.73207e-49  4.41557e-50 -8.18283e-48 -2.21638e-49  1.99943e-52  8.81791e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 280 K
            Well    Collision, 1/sec
              W1         2.44525e+08
      global relaxation matrix dimension = 630
      setting global matrices ... done, cpu time[sec] = 0.803549, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.0849, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             872.97      71.2196      10.4534      17.4743      1.36949      180.479      4.25367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.089263, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.097125, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.16993e-12  8.51775e-54  3.24229e-64
      low eigenvalue method done, cpu time[sec] = 0.097494, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.52e-54         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-55         0         1
         *Z       ---       ---  5.62e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.83433e-48  1.06466e-48  1.13025e-50  5.21352e-50  2.41144e-51   1.1985e-52 -6.95515e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5853, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 280 K
            Well    Collision, 1/sec
              W1         2.44525e+09
      global relaxation matrix dimension = 630
      setting global matrices ... done, cpu time[sec] = 0.806192, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.11248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             87.297      7.12196      1.04534      1.74743     0.136949      18.0479     0.425367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.089016, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007767, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.096911, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.31941e-12  8.51775e-55  1.25261e-65
      low eigenvalue method done, cpu time[sec] = 0.097292, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.52e-55         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-56         0         1
         *Z       ---       ---  5.62e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.87564e-49 -1.62282e-50  2.15305e-51  5.22203e-50  1.28717e-51 -1.07025e-52  4.00809e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.6081, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 280 K
            Well    Collision, 1/sec
              W1         2.44525e+10
      global relaxation matrix dimension = 630
      setting global matrices ... done, cpu time[sec] = 0.803536, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.1043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             8.7297     0.712196     0.104534     0.174743    0.0136949      1.80479    0.0425367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.089129, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007781, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.097034, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.24781e-14  8.51775e-56  2.07261e-67
      low eigenvalue method done, cpu time[sec] = 0.097409, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.52e-56         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-57         0         1
         *Z       ---       ---  5.62e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.64196e-50 -9.06237e-51 -5.73628e-52 -1.38629e-50 -4.11884e-52 -1.30386e-52 -1.62712e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5972, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 280 K
            Well    Collision, 1/sec
              W1         2.44525e+11
      global relaxation matrix dimension = 630
      setting global matrices ... done, cpu time[sec] = 0.807893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05081, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            0.87297    0.0712196    0.0104534    0.0174743   0.00136949     0.180479   0.00425367
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.089033, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.007757, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.096914, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.44158e-15  8.51775e-57  2.28678e-69
      low eigenvalue method done, cpu time[sec] = 0.097287, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.52e-57         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.33e-58         0         1
         *Z       ---       ---  5.62e+52
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.39094e-51   4.3605e-52  3.58133e-53  1.18155e-51  2.50844e-53  4.11779e-54  2.74632e-59

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.5486, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 290 K
      Energy reference = 12780 1/cm
      Energy step      = 72 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -89 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009398
         W1 Well: collisional kernel bandwidth = 54
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.631533
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.522085
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.864106
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 4.13926
         W1 Well: minimal relaxation eigenvalue = 0.106934
         W1 Well: maximal relaxation eigenvalue = 1.18305
         W1 Well:       grid size = 616
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31571 1/cm
         B1 Barrier:        grid size = 178
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -36 1/cm
         B2 Barrier:        grid size = 175
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 180 1/cm
         B3 Barrier:        grid size = 242
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4643 1/cm
         B4 Barrier:        grid size = 264
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6227 1/cm
         B5 Barrier: nonpositive number of states at -23580 1/cm => truncating
         B5 Barrier:        grid size = 505
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23579 1/cm
         B6 Barrier:        grid size = 157
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1476 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4715 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.55136, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31571 -23579 3.45e+05 2.96e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -36 2.29e+12
         B2    181 1.88e+11
         B3  -4643 2.81e+10
         B4  -6227 4.66e+10
         B5 -23579 3.69e+09
         B6   1477 4.89e+11
         B7   4716 1.21e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.62e+46  8.23e+46  3.74e+37  1.22e+34  1.35e-05  5.63e+50  7.65e+57
          R  3.81e-47         1      3.14  1.43e-09  4.65e-13  5.16e-52  2.15e+04  2.91e+11
         P1  1.21e-47     0.319         1  4.54e-10  1.48e-13  1.64e-52  6.84e+03  9.29e+10
         P2  2.67e-38  7.02e+08   2.2e+09         1  0.000326  3.62e-43  1.51e+13  2.05e+20
         P3  8.19e-35  2.15e+12  6.75e+12  3.06e+03         1  1.11e-39  4.62e+16  6.27e+23
         P4  7.39e+04  1.94e+51  6.08e+51  2.76e+42  9.02e+38         1  4.16e+55  5.65e+62
         P5  1.78e-51  4.66e-05  0.000146  6.64e-14  2.17e-17   2.4e-56         1  1.36e+07
         P6  1.31e-58  3.43e-12  1.08e-11  4.89e-21   1.6e-24  1.77e-63  7.37e-08         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.61e+42   2.7e+43  1.23e+34  4.01e+30  4.44e-09  1.85e+47  2.51e+54
          R  1.16e-43         1      3.14  1.43e-09  4.65e-13  5.16e-52  2.15e+04  2.91e+11
         P1   3.7e-44     0.319         1  4.54e-10  1.48e-13  1.64e-52  6.84e+03  9.29e+10
         P2  8.15e-35  7.02e+08   2.2e+09         1  0.000326  3.62e-43  1.51e+13  2.05e+20
         P3   2.5e-31  2.15e+12  6.75e+12  3.06e+03         1  1.11e-39  4.62e+16  6.27e+23
         P4  2.25e+08  1.94e+51  6.08e+51  2.76e+42  9.02e+38         1  4.16e+55  5.65e+62
         P5  5.41e-48  4.66e-05  0.000146  6.64e-14  2.17e-17   2.4e-56         1  1.36e+07
         P6  3.98e-55  3.43e-12  1.08e-11  4.89e-21   1.6e-24  1.77e-63  7.37e-08         1
   MasterEquation::set:  done, cpu time[sec] = 6.56215, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.35828e+07
      global relaxation matrix dimension = 616
      setting global matrices ... done, cpu time[sec] = 0.505166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.85486, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9815.32      809.277      120.795      200.167      15.8259      2100.01      51.9742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.085035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007361, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.092519, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.25107e-14  1.09147e-51   1.4281e-60
      low eigenvalue method done, cpu time[sec] = 0.092876, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-52         0         1
         *Z       ---       ---  2.31e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.13119e-48  3.89404e-48 -1.97584e-48 -2.26465e-46 -6.93027e-48  3.89918e-53  2.14818e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0402, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.35828e+08
      global relaxation matrix dimension = 616
      setting global matrices ... done, cpu time[sec] = 0.772367, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.98902, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            981.532      80.9277      12.0795      20.0167      1.58259      210.001      5.19742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.083854, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007385, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.091368, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.09423e-14  1.09147e-52  9.58573e-62
      low eigenvalue method done, cpu time[sec] = 0.091727, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-53         0         1
         *Z       ---       ---  2.31e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.94202e-48  6.62884e-48 -2.22559e-49 -1.44252e-47 -6.52842e-49   -1.987e-51 -3.13658e-58

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.386, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.35828e+09
      global relaxation matrix dimension = 616
      setting global matrices ... done, cpu time[sec] = 0.77361, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.07325, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.1532      8.09277      1.20795      2.00167     0.158259      21.0001     0.519742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.084, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007359, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.091477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.64435e-15  1.09147e-53  4.05105e-63
      low eigenvalue method done, cpu time[sec] = 0.091839, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-54         0         1
         *Z       ---       ---  2.31e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.46517e-48  2.86584e-48   8.4551e-50  5.20916e-49  1.65074e-50  8.93591e-51 -3.63941e-57

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4743, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.35828e+10
      global relaxation matrix dimension = 616
      setting global matrices ... done, cpu time[sec] = 0.773534, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.05269, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.81532     0.809277     0.120795     0.200167    0.0158259      2.10001    0.0519742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.083894, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.091388, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.03769e-15  1.09147e-54  7.08165e-65
      low eigenvalue method done, cpu time[sec] = 0.091757, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-54         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-55         0         1
         *Z       ---       ---  2.31e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.64902e-48  2.35734e-49 -6.35741e-51 -2.78408e-49 -6.57926e-51  5.81865e-51  1.95448e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4476, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 290 K
            Well    Collision, 1/sec
              W1         2.35828e+11
      global relaxation matrix dimension = 616
      setting global matrices ... done, cpu time[sec] = 0.773432, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 9.0426, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
           0.981532    0.0809277    0.0120795    0.0200167   0.00158259     0.210001   0.00519742
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.08395, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.007384, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.091451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.39069e-15  1.09147e-55  7.94422e-67
      low eigenvalue method done, cpu time[sec] = 0.091809, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-55         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.17e-56         0         1
         *Z       ---       ---  2.31e+51
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.12876e-49 -8.43041e-50 -2.22137e-51 -1.35117e-50 -8.52352e-52 -9.24026e-52 -6.31165e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.4363, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 300 K
      Energy reference = 13058 1/cm
      Energy step      = 75 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00958
         W1 Well: collisional kernel bandwidth = 53
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.671865
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.489933
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.662578
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.76556
         W1 Well: minimal relaxation eigenvalue = 0.104563
         W1 Well: maximal relaxation eigenvalue = 1.16261
         W1 Well:       grid size = 595
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 175
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -67 1/cm
         B2 Barrier:        grid size = 172
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 157 1/cm
         B3 Barrier:        grid size = 236
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4642 1/cm
         B4 Barrier:        grid size = 257
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6217 1/cm
         B5 Barrier: nonpositive number of states at -23167 1/cm => truncating
         B5 Barrier:        grid size = 483
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23167 1/cm
         B6 Barrier:        grid size = 155
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1432 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4657 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.05751, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23167 4.66e+05 3.15e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -67 2.63e+12
         B2    158 2.19e+11
         B3  -4642 3.33e+10
         B4  -6217 5.46e+10
         B5 -23167 4.36e+09
         B6   1433 5.82e+11
         B7   4658 1.51e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.25e+44  3.77e+44  3.83e+35  1.64e+32   3.7e-06  2.15e+48  1.74e+55
          R  8.02e-45         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  2.65e-45     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  2.61e-36  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  6.11e-33  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4   2.7e+05  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  4.65e-49   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  5.76e-56  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.3e+40   1.3e+41  1.32e+32  5.64e+28  1.28e-09  7.41e+44  5.99e+51
          R  2.33e-41         1      3.02  3.07e-09  1.31e-12  2.97e-50  1.72e+04  1.39e+11
         P1  7.69e-42     0.331         1  1.02e-09  4.34e-13  9.82e-51   5.7e+03  4.61e+10
         P2  7.56e-33  3.25e+08  9.83e+08         1  0.000427  9.66e-42  5.61e+12  4.53e+19
         P3  1.77e-29  7.62e+11   2.3e+12  2.34e+03         1  2.26e-38  1.31e+16  1.06e+23
         P4  7.83e+08  3.37e+49  1.02e+50  1.04e+41  4.42e+37         1  5.81e+53  4.69e+60
         P5  1.35e-45   5.8e-05  0.000175  1.78e-13  7.62e-17  1.72e-54         1  8.08e+06
         P6  1.67e-52  7.18e-12  2.17e-11  2.21e-20  9.42e-24  2.13e-61  1.24e-07         1
   MasterEquation::set:  done, cpu time[sec] = 6.06884, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.27726e+07
      global relaxation matrix dimension = 595
      setting global matrices ... done, cpu time[sec] = 0.659317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46075, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11001.4      916.897      139.111      228.569      18.2269      2433.61      63.1212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075615, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006726, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082816, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55013e-14  1.32797e-50  2.61073e-58
      low eigenvalue method done, cpu time[sec] = 0.08316, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-51         0         1
         *Z       ---       ---  1.17e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.14396e-47  8.89712e-47 -6.85394e-47 -3.05046e-45  -6.2985e-47 -7.69493e-51  1.76972e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.66125, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.27726e+08
      global relaxation matrix dimension = 595
      setting global matrices ... done, cpu time[sec] = 0.718823, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.85319, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1100.14      91.6897      13.9111      22.8569      1.82269      243.361      6.31212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006704, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082306, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.30487e-14  1.32797e-51  1.97405e-59
      low eigenvalue method done, cpu time[sec] = 0.082643, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-52         0         1
         *Z       ---       ---  1.17e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.13573e-46 -1.04059e-46 -8.70443e-48 -1.39635e-46 -3.04876e-48 -5.47526e-50  7.92717e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0434, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.27726e+09
      global relaxation matrix dimension = 595
      setting global matrices ... done, cpu time[sec] = 0.719758, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87078, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            110.014      9.16897      1.39111      2.28569     0.182269      24.3361     0.631212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006699, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082271, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.81943e-15  1.32797e-52  9.08271e-61
      low eigenvalue method done, cpu time[sec] = 0.082608, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-53         0         1
         *Z       ---       ---  1.17e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.95256e-46 -8.34232e-47 -4.93152e-48  -7.6267e-47 -1.48976e-48 -2.17673e-50  1.22598e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.27726e+10
      global relaxation matrix dimension = 595
      setting global matrices ... done, cpu time[sec] = 0.72026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.83707, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.0014     0.916897     0.139111     0.228569    0.0182269      2.43361    0.0631212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075435, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006703, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082257, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.39141e-14  1.32797e-53  1.67917e-62
      low eigenvalue method done, cpu time[sec] = 0.082594, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-54         0         1
         *Z       ---       ---  1.17e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.84678e-47  5.36838e-48  2.51301e-49  3.09192e-48   1.0581e-49   7.0949e-50  5.96462e-56

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0323, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 300 K
            Well    Collision, 1/sec
              W1         2.27726e+11
      global relaxation matrix dimension = 595
      setting global matrices ... done, cpu time[sec] = 0.720879, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.87515, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.10014    0.0916897    0.0139111    0.0228569   0.00182269     0.243361   0.00631212
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.075408, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.082249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.81759e-15  1.32797e-54  1.91846e-64
      low eigenvalue method done, cpu time[sec] = 0.082587, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.33e-54         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.39e-55         0         1
         *Z       ---       ---  1.17e+50
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.08564e-49 -1.40121e-49 -1.47828e-50 -2.78133e-49 -3.53422e-51  4.78955e-52  3.59392e-55

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 11.0704, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 310 K
      Energy reference = 13336 1/cm
      Energy step      = 78 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008861
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.588419
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.457538
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.01621
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.33795
         W1 Well: minimal relaxation eigenvalue = 0.102289
         W1 Well: maximal relaxation eigenvalue = 1.25831
         W1 Well:       grid size = 576
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31592 1/cm
         B1 Barrier:        grid size = 171
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -2 1/cm
         B2 Barrier:        grid size = 169
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 153 1/cm
         B3 Barrier:        grid size = 230
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4604 1/cm
         B4 Barrier:        grid size = 251
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23636 1/cm => truncating
         B5 Barrier:        grid size = 474
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23636 1/cm
         B6 Barrier:        grid size = 152
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4678 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.8264, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31592 -23636 3.31e+05 3.34e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -2 3.02e+12
         B2    154 2.54e+11
         B3  -4604 3.92e+10
         B4  -6241 6.39e+10
         B5 -23636 5.14e+09
         B6   1480  6.9e+11
         B7   4678 1.87e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.58e+41   2.5e+42  5.42e+33  2.97e+30  1.13e-06   1.2e+46     6e+52
          R  1.17e-42         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  3.99e-43     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  1.85e-34  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  3.36e-31  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  8.85e+05  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5   8.3e-47  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  1.67e-53  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.02e+38   8.8e+38   1.9e+30  1.05e+27  3.97e-10  4.23e+42  2.11e+49
          R  3.32e-39         1      2.92  6.31e-09  3.47e-12  1.32e-48   1.4e+04  6.99e+10
         P1  1.14e-39     0.343         1  2.16e-09  1.19e-12  4.51e-49  4.81e+03  2.39e+10
         P2  5.25e-31  1.58e+08  4.62e+08         1  0.000549  2.09e-40  2.22e+12  1.11e+19
         P3  9.57e-28  2.88e+11  8.42e+11  1.82e+03         1   3.8e-37  4.05e+15  2.02e+22
         P4  2.52e+09  7.59e+47  2.22e+48  4.79e+39  2.63e+36         1  1.07e+52  5.31e+58
         P5  2.36e-43  7.12e-05  0.000208   4.5e-13  2.47e-16  9.38e-53         1  4.98e+06
         P6  4.75e-50  1.43e-11  4.18e-11  9.03e-20  4.96e-23  1.88e-59  2.01e-07         1
   MasterEquation::set:  done, cpu time[sec] = 6.83702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.20166e+07
      global relaxation matrix dimension = 576
      setting global matrices ... done, cpu time[sec] = 0.52062, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32972, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12293.5      1035.89       159.68      260.212      20.9241      2809.24      76.2191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072918, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006227, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.079249, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.34614e-11  1.48158e-49  3.33647e-56
      low eigenvalue method done, cpu time[sec] = 0.079651, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-50         0         1
         *Z       ---       ---  7.22e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.93691e-45 -9.28061e-46  6.06983e-47 -1.74778e-49 -8.60243e-47 -1.10439e-48 -1.49753e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.32263, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.20166e+08
      global relaxation matrix dimension = 576
      setting global matrices ... done, cpu time[sec] = 0.678458, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.64458, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1229.35      103.589       15.968      26.0212      2.09241      280.924      7.62191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072721, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07903, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.80055e-12  1.48158e-50  2.81061e-57
      low eigenvalue method done, cpu time[sec] = 0.079426, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-51         0         1
         *Z       ---       ---  7.22e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.54996e-45  2.49838e-46 -2.40941e-47 -9.93245e-46 -2.97768e-47  2.30974e-48 -1.19847e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7295, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.20166e+09
      global relaxation matrix dimension = 576
      setting global matrices ... done, cpu time[sec] = 0.679896, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.65759, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            122.935      10.3589       1.5968      2.60212     0.209241      28.0924     0.762191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072693, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006185, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078982, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.02574e-14  1.48158e-51  1.40153e-58
      low eigenvalue method done, cpu time[sec] = 0.079375, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-52         0         1
         *Z       ---       ---  7.22e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.30505e-46 -1.83815e-46  3.14624e-48  6.37474e-47  1.94118e-48 -5.89241e-49 -2.87386e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.7445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.20166e+10
      global relaxation matrix dimension = 576
      setting global matrices ... done, cpu time[sec] = 0.678056, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.72345, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.2935      1.03589      0.15968     0.260212    0.0209241      2.80924    0.0762191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.07255, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.006205, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078859, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.269e-13  1.48158e-52  2.74217e-60
      low eigenvalue method done, cpu time[sec] = 0.079255, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-52         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-53         0         1
         *Z       ---       ---  7.22e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.97841e-48 -4.48719e-48 -5.27572e-49  -7.3958e-48 -1.02708e-49 -2.95057e-50  8.89182e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.8123, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 310 K
            Well    Collision, 1/sec
              W1         2.20166e+11
      global relaxation matrix dimension = 576
      setting global matrices ... done, cpu time[sec] = 0.678427, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68043, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.22935     0.103589     0.015968    0.0260212   0.00209241     0.280924   0.00762191
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.072484, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.006195, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.078785, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.61547e-15  1.48158e-53  3.19606e-62
      low eigenvalue method done, cpu time[sec] = 0.079185, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-53         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-54         0         1
         *Z       ---       ---  7.22e+48
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.83901e-47 -5.88111e-48 -2.83129e-49 -3.25838e-48 -6.67895e-50 -6.86069e-50 -4.54032e-54

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.766, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 320 K
      Energy reference = 13615 1/cm
      Energy step      = 80 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007922
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.623806
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.443069
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 2.22649
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 3.09987
         W1 Well: minimal relaxation eigenvalue = 0.100181
         W1 Well: maximal relaxation eigenvalue = 1.22208
         W1 Well:       grid size = 565
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31585 1/cm
         B1 Barrier:        grid size = 171
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -65 1/cm
         B2 Barrier:        grid size = 168
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 174 1/cm
         B3 Barrier:        grid size = 228
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4625 1/cm
         B4 Barrier:        grid size = 248
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6225 1/cm
         B5 Barrier: nonpositive number of states at -23105 1/cm => truncating
         B5 Barrier:        grid size = 459
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23105 1/cm
         B6 Barrier:        grid size = 152
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1454 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4654 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 6.76671, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31585 -23105 4.87e+05 3.55e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -65 3.46e+12
         B2    175 2.95e+11
         B3  -4625 4.62e+10
         B4  -6225 7.46e+10
         B5 -23105 6.05e+09
         B6   1455 8.16e+11
         B7   4655 2.31e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.95e+39  2.25e+40  9.85e+31  6.85e+28  3.67e-07   9.2e+43  2.91e+50
          R  1.26e-40         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  4.45e-41     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2  1.01e-32  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  1.46e-29  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  2.73e+06  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5  1.09e-44  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  3.43e-51  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.88e+36  8.13e+36  3.57e+28  2.48e+25  1.33e-10  3.33e+40  1.05e+47
          R  3.48e-37         1      2.83  1.24e-08  8.62e-12  4.61e-47  1.16e+04  3.66e+10
         P1  1.23e-37     0.354         1  4.39e-09  3.05e-12  1.63e-47   4.1e+03   1.3e+10
         P2   2.8e-29  8.07e+07  2.28e+08         1  0.000695  3.72e-39  9.34e+11  2.95e+18
         P3  4.03e-26  1.16e+11  3.28e+11  1.44e+03         1  5.35e-36  1.34e+15  4.25e+21
         P4  7.54e+09  2.17e+46  6.13e+46  2.69e+38  1.87e+35         1  2.51e+50  7.94e+56
         P5     3e-41  8.64e-05  0.000244  1.07e-12  7.44e-16  3.98e-51         1  3.16e+06
         P6  9.49e-48  2.73e-11  7.72e-11  3.38e-19  2.35e-22  1.26e-57  3.16e-07         1
   MasterEquation::set:  done, cpu time[sec] = 6.77718, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1           2.131e+07
      global relaxation matrix dimension = 565
      setting global matrices ... done, cpu time[sec] = 0.656407, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.33932, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13702.7      1167.52      182.783      295.474      23.9545      3232.04      91.5852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065632, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005953, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07215, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7698e-10   1.6057e-48  3.23396e-54
      low eigenvalue method done, cpu time[sec] = 0.072466, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-49  2.22e-16         1
         *Z       ---       ---  5.31e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.29684e-43 -5.42238e-44 -1.37015e-44 -1.30165e-43 -3.48062e-45 -1.89012e-47  1.26137e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.34184, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1           2.131e+08
      global relaxation matrix dimension = 565
      setting global matrices ... done, cpu time[sec] = 0.656985, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63013, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1370.27      116.752      18.2783      29.5474      2.39545      323.204      9.15852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065767, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005926, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072245, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57729e-11  1.60571e-49  3.00574e-55
      low eigenvalue method done, cpu time[sec] = 0.072557, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-49  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-50  2.22e-16         1
         *Z       ---       ---  5.31e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.03635e-44  2.11579e-44  1.25903e-45  1.69466e-44  4.11258e-46 -6.95611e-48 -2.26392e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6295, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1           2.131e+09
      global relaxation matrix dimension = 565
      setting global matrices ... done, cpu time[sec] = 0.655915, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.63237, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            137.027      11.6752      1.82783      2.95474     0.239545      32.3204     0.915852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065848, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00591, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.07231, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.48366e-13  1.60572e-50  1.61764e-56
      low eigenvalue method done, cpu time[sec] = 0.072628, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-50  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-51  2.22e-16         1
         *Z       ---       ---  5.31e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.53316e-46  1.72704e-45   1.5278e-47  5.68232e-46   4.2711e-48 -4.87505e-48 -3.44386e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6325, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1           2.131e+10
      global relaxation matrix dimension = 565
      setting global matrices ... done, cpu time[sec] = 0.654894, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.68856, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.7027      1.16752     0.182783     0.295474    0.0239545      3.23204    0.0915852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.066013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005904, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.072477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.23736e-14  1.60573e-51  3.35084e-58
      low eigenvalue method done, cpu time[sec] = 0.072785, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-51  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-52  2.22e-16         1
         *Z       ---       ---  5.31e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -6.70491e-46 -3.04539e-46 -1.10726e-47 -3.17395e-47 -1.81724e-48  1.32942e-48 -1.34081e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.687, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 320 K
            Well    Collision, 1/sec
              W1           2.131e+11
      global relaxation matrix dimension = 565
      setting global matrices ... done, cpu time[sec] = 0.657229, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67633, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.37027     0.116752    0.0182783    0.0295474   0.00239545     0.323204   0.00915852
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.065258, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.071747, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56603e-14  1.60573e-52  3.99063e-60
      low eigenvalue method done, cpu time[sec] = 0.072084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.61e-52  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-53  2.22e-16         1
         *Z       ---       ---  5.31e+47
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.36614e-46 -3.06563e-47 -5.58544e-49  5.29102e-48  6.47273e-50 -1.23529e-48 -1.52119e-53

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6756, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 330 K
      Energy reference = 13893 1/cm
      Energy step      = 82 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009292
         W1 Well: collisional kernel bandwidth = 52
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.602276
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.427339
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.649687
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.92518
         W1 Well: minimal relaxation eigenvalue = 0.098224
         W1 Well: maximal relaxation eigenvalue = 1.6761
         W1 Well:       grid size = 555
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 170
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -46 1/cm
         B2 Barrier:        grid size = 167
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 198 1/cm
         B3 Barrier:        grid size = 226
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4639 1/cm
         B4 Barrier:        grid size = 245
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6196 1/cm
         B5 Barrier: nonpositive number of states at -23171 1/cm => truncating
         B5 Barrier:        grid size = 452
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23171 1/cm
         B6 Barrier:        grid size = 152
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1428 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4709 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.975, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23171 4.64e+05 3.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -46 3.96e+12
         B2    199 3.41e+11
         B3  -4639 5.42e+10
         B4  -6196 8.69e+10
         B5 -23171  7.1e+09
         B6   1429 9.63e+11
         B7   4709 2.84e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.71e+37  2.66e+38  2.27e+30  1.97e+27  1.26e-07  9.38e+41  1.94e+48
          R  1.03e-38         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1  3.76e-39     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2   4.4e-31  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  5.08e-28  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  7.91e+06  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  1.07e-42  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  5.15e-49     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.63e+34  9.96e+34  8.49e+26  7.37e+23  4.73e-11  3.51e+38  7.26e+44
          R  2.75e-35         1      2.74  2.34e-08  2.03e-11   1.3e-45  9.67e+03     2e+10
         P1     1e-35     0.365         1  8.53e-09   7.4e-12  4.75e-46  3.52e+03  7.29e+09
         P2  1.18e-27  4.28e+07  1.17e+08         1  0.000868  5.57e-38  4.13e+11  8.55e+17
         P3  1.36e-24  4.93e+10  1.35e+11  1.15e+03         1  6.42e-35  4.76e+14  9.85e+20
         P4  2.11e+10  7.68e+44  2.11e+45   1.8e+37  1.56e+34         1  7.42e+48  1.53e+55
         P5  2.85e-39  0.000103  0.000284  2.42e-12   2.1e-15  1.35e-49         1  2.07e+06
         P6  1.38e-45     5e-11  1.37e-10  1.17e-18  1.02e-21  6.52e-56  4.84e-07         1
   MasterEquation::set:  done, cpu time[sec] = 4.98539, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.06485e+07
      global relaxation matrix dimension = 555
      setting global matrices ... done, cpu time[sec] = 0.633025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.40328, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15227.1      1312.02      208.519      334.462      27.3314      3703.77      109.416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.063172, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005708, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.068975, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.07424e-10  1.66656e-47  2.39039e-52
      low eigenvalue method done, cpu time[sec] = 0.069276, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-48         0         1
         *Z       ---       ---  4.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.32042e-42  7.45349e-43  3.26417e-44  1.77185e-43  1.87986e-45 -2.50364e-46 -1.16781e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.33364, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.06485e+08
      global relaxation matrix dimension = 555
      setting global matrices ... done, cpu time[sec] = 0.634203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.47808, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1522.71      131.202      20.8519      33.4462      2.73314      370.377      10.9416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062383, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.005688, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.06817, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.64914e-12  1.66664e-48  2.43171e-53
      low eigenvalue method done, cpu time[sec] = 0.068479, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-49         0         1
         *Z       ---       ---  4.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.19023e-43 -2.83183e-45 -4.54866e-46  2.00614e-44  1.05769e-45  1.59644e-46 -1.23649e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4073, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.06485e+09
      global relaxation matrix dimension = 555
      setting global matrices ... done, cpu time[sec] = 0.63199, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.52608, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            152.271      13.1202      2.08519      3.34462     0.273314      37.0377      1.09416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062374, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00567, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.068143, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7804e-12  1.66672e-49  1.40816e-54
      low eigenvalue method done, cpu time[sec] = 0.068443, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-50         0         1
         *Z       ---       ---  4.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.45989e-43 -5.75348e-44  -1.3747e-45 -1.38334e-44 -3.82488e-46 -1.86781e-46  5.10885e-52

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.4525, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.06485e+10
      global relaxation matrix dimension = 555
      setting global matrices ... done, cpu time[sec] = 0.632028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.58003, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.2271      1.31202     0.208519     0.334462    0.0273314      3.70377     0.109416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062357, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005682, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.068141, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.47114e-13  1.66674e-50   3.0897e-56
      low eigenvalue method done, cpu time[sec] = 0.068445, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-51         0         1
         *Z       ---       ---  4.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.05994e-45 -4.55039e-45 -1.81043e-46 -1.97113e-45 -4.32314e-47  1.72377e-47  1.75156e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.508, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 330 K
            Well    Collision, 1/sec
              W1         2.06485e+11
      global relaxation matrix dimension = 555
      setting global matrices ... done, cpu time[sec] = 0.632975, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.67386, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.52271     0.131202    0.0208519    0.0334462   0.00273314     0.370377    0.0109416
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.062519, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005678, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.068295, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.14924e-15  1.66675e-51  3.76622e-58
      low eigenvalue method done, cpu time[sec] = 0.068596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-51         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-52         0         1
         *Z       ---       ---  4.56e+46
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -2.07201e-45 -4.45617e-46  -1.4916e-47 -5.71303e-47  -1.5294e-48 -9.28091e-48 -1.00488e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.6017, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 340 K
      Energy reference = 14171 1/cm
      Energy step      = 85 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008499
         W1 Well: collisional kernel bandwidth = 51
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.541374
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.403813
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.611035
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.93594
         W1 Well: minimal relaxation eigenvalue = 0.0962566
         W1 Well: maximal relaxation eigenvalue = 3.02702
         W1 Well:       grid size = 539
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 167
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -24 1/cm
         B2 Barrier:        grid size = 165
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 145 1/cm
         B3 Barrier:        grid size = 221
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4614 1/cm
         B4 Barrier:        grid size = 240
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23229 1/cm => truncating
         B5 Barrier:        grid size = 440
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23229 1/cm
         B6 Barrier:        grid size = 150
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4651 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.84773, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23229 4.45e+05 4.01e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -24 4.52e+12
         B2    146 3.94e+11
         B3  -4614 6.35e+10
         B4  -6229 1.01e+11
         B5 -23229 8.32e+09
         B6   1421 1.13e+12
         B7   4651 3.48e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.51e+36  4.04e+36  6.43e+28  6.88e+25  4.58e-08  1.23e+40  1.71e+46
          R  6.61e-37         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  2.48e-37     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  1.55e-29  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  1.45e-26   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  2.19e+07  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5   8.1e-41  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6  5.85e-47  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.92e+32  1.58e+33  2.51e+25  2.69e+22  1.79e-11  4.82e+36  6.69e+42
          R  1.69e-33         1      2.67  4.25e-08  4.54e-11  3.02e-44  8.15e+03  1.13e+10
         P1  6.34e-34     0.375         1  1.59e-08   1.7e-11  1.13e-44  3.06e+03  4.24e+09
         P2  3.98e-26  2.35e+07  6.28e+07         1   0.00107  7.11e-37  1.92e+11  2.66e+17
         P3  3.72e-23   2.2e+10  5.87e+10       935         1  6.65e-34  1.79e+14  2.49e+20
         P4  5.59e+10  3.31e+43  8.82e+43  1.41e+36   1.5e+33         1   2.7e+47  3.74e+53
         P5  2.07e-37  0.000123  0.000327  5.21e-12  5.57e-15  3.71e-48         1  1.39e+06
         P6   1.5e-43  8.85e-11  2.36e-10  3.76e-18  4.02e-21  2.67e-54  7.21e-07         1
   MasterEquation::set:  done, cpu time[sec] = 4.85873, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.00281e+07
      global relaxation matrix dimension = 539
      setting global matrices ... done, cpu time[sec] = 0.596334, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.32329, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16877.6      1470.69      237.187      377.576      31.0944      4229.87      130.075
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057637, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005273, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063009, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.17975e-11  1.66261e-46  1.37748e-50
      low eigenvalue method done, cpu time[sec] = 0.063297, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-47         0         1
         *Z       ---       ---   4.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.90658e-42 -3.65418e-42 -9.98387e-44 -3.18837e-42 -8.31139e-44  5.55589e-46   9.6227e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.13178, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.00281e+08
      global relaxation matrix dimension = 539
      setting global matrices ... done, cpu time[sec] = 0.597509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.25307, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1687.76      147.069      23.7187      37.7576      3.10944      422.987      13.0075
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057486, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005286, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.062864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.49804e-11  1.66313e-47   1.5221e-51
      low eigenvalue method done, cpu time[sec] = 0.063149, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-48         0         1
         *Z       ---       ---   4.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.11991e-43   4.1084e-43  2.12849e-45 -2.84705e-43 -3.32829e-45  2.22118e-45 -1.42397e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.00281e+09
      global relaxation matrix dimension = 539
      setting global matrices ... done, cpu time[sec] = 0.602321, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.26367, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            168.776      14.7069      2.37187      3.77576     0.310944      42.2987      1.30075
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057788, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005261, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063141, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.55043e-12  1.66362e-48  9.45257e-53
      low eigenvalue method done, cpu time[sec] = 0.063426, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-49         0         1
         *Z       ---       ---   4.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.20121e-42 -2.81842e-43 -1.39195e-45  8.33573e-44  1.33628e-45 -8.46204e-46  3.30627e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.00281e+10
      global relaxation matrix dimension = 539
      setting global matrices ... done, cpu time[sec] = 0.596935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.27677, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            16.8776      1.47069     0.237187     0.377576    0.0310944      4.22987     0.130075
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057777, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005281, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063149, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.02501e-13   1.6638e-49  2.19747e-54
      low eigenvalue method done, cpu time[sec] = 0.063435, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-50         0         1
         *Z       ---       ---   4.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.41912e-43 -3.52645e-44 -6.47667e-46  1.01879e-45 -6.34929e-47 -2.25267e-46  6.77057e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.0919, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 340 K
            Well    Collision, 1/sec
              W1         2.00281e+11
      global relaxation matrix dimension = 539
      setting global matrices ... done, cpu time[sec] = 0.601737, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.36192, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.68776     0.147069    0.0237187    0.0377576   0.00310944     0.422987    0.0130075
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.057746, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00525, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.063093, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.42058e-15  1.66383e-50  2.74626e-56
      low eigenvalue method done, cpu time[sec] = 0.06338, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.66e-50         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.6e-51         0         1
         *Z       ---       ---   4.5e+45
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   4.9269e-45   6.5886e-46  6.15833e-47  4.74288e-46  1.32259e-47  9.89439e-47  1.49858e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 10.1733, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 350 K
      Energy reference = 14450 1/cm
      Energy step      = 87 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010241
         W1 Well: collisional kernel bandwidth = 51
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.559826
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.387847
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.512981
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.70015
         W1 Well: minimal relaxation eigenvalue = 0.0943449
         W1 Well: maximal relaxation eigenvalue = 1.19012
         W1 Well:       grid size = 529
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31574 1/cm
         B1 Barrier:        grid size = 167
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 164
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 219
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4603 1/cm
         B4 Barrier:        grid size = 238
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6256 1/cm
         B5 Barrier: nonpositive number of states at -23135 1/cm => truncating
         B5 Barrier:        grid size = 432
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23135 1/cm
         B6 Barrier:        grid size = 149
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1486 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4705 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.51931, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31574 -23135 4.77e+05 4.25e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 5.15e+12
         B2    182 4.54e+11
         B3  -4603 7.42e+10
         B4  -6256 1.17e+11
         B5 -23135 9.73e+09
         B6   1487 1.33e+12
         B7   4706 4.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.05e+34  7.92e+34  2.27e+27  2.96e+24  1.79e-08  2.12e+38  2.01e+44
          R  3.28e-35         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  1.26e-35     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2   4.4e-28  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  3.38e-25  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4  5.59e+07   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  4.73e-39  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  4.97e-45  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e+31  3.16e+31  9.09e+23  1.18e+21  7.14e-12  8.46e+34  8.05e+40
          R  8.21e-32         1       2.6  7.47e-08  9.72e-11  5.87e-43  6.94e+03  6.61e+09
         P1  3.16e-32     0.385         1  2.87e-08  3.74e-11  2.26e-43  2.67e+03  2.54e+09
         P2   1.1e-24  1.34e+07  3.48e+07         1    0.0013  7.86e-36   9.3e+10  8.85e+16
         P3  8.45e-22  1.03e+10  2.67e+10       768         1  6.04e-33  7.15e+13   6.8e+19
         P4   1.4e+11   1.7e+42  4.43e+42  1.27e+35  1.66e+32         1  1.18e+46  1.13e+52
         P5  1.18e-35  0.000144  0.000374  1.08e-11   1.4e-14  8.45e-47         1  9.52e+05
         P6  1.24e-41  1.51e-10  3.93e-10  1.13e-17  1.47e-20  8.88e-53  1.05e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.53075, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.94456e+07
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.574862, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34248, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18660.1      1644.57      269.042      425.141      35.2771      4814.87      153.906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054837, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005033, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.059958, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.03334e-10  1.58971e-45  6.24227e-49
      low eigenvalue method done, cpu time[sec] = 0.060233, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-46         0         1
         *Z       ---       ---  5.12e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.33097e-41 -4.66356e-42  1.32051e-44  1.78357e-42 -3.74314e-44 -1.79227e-44 -2.36446e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08607, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.94456e+08
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.575512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.17662, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1866.01      164.457      26.9042      42.5141      3.52771      481.487      15.3906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054668, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005029, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.059788, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.05786e-12  1.59223e-46   7.4469e-50
      low eigenvalue method done, cpu time[sec] = 0.060063, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-47         0         1
         *Z       ---       ---  5.12e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.46238e-42 -1.70931e-42 -2.34879e-43 -1.58072e-42 -2.21605e-44 -3.85479e-45  6.11903e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.91803, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.94456e+09
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.573875, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.18719, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.601      16.4457      2.69042      4.25141     0.352771      48.1487      1.53906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054667, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005048, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.059807, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.83878e-12  1.59469e-47  4.94542e-51
      low eigenvalue method done, cpu time[sec] = 0.060084, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-47         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-48         0         1
         *Z       ---       ---  5.12e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.90467e-42  3.50622e-43  1.72032e-44  2.20034e-43  3.35496e-45 -1.86459e-44  1.55034e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.92773, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.94456e+10
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.574242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.06751, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.6601      1.64457     0.269042     0.425141    0.0352771      4.81487     0.153906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054564, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004995, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05965, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.38325e-14   1.5957e-48  1.21804e-52
      low eigenvalue method done, cpu time[sec] = 0.059932, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-48         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-49         0         1
         *Z       ---       ---  5.12e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.20257e-42 -2.33074e-43 -7.13848e-45 -2.17366e-44 -1.09325e-45 -5.70183e-45  4.51378e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.63283, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 350 K
            Well    Collision, 1/sec
              W1         1.94456e+11
      global relaxation matrix dimension = 529
      setting global matrices ... done, cpu time[sec] = 0.574607, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 8.10485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1.86601     0.164457    0.0269042    0.0425141   0.00352771     0.481487    0.0153906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.054573, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.005059, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.059723, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.57275e-15  1.59588e-49  1.56308e-54
      low eigenvalue method done, cpu time[sec] = 0.060001, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-49         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.51e-50         0         1
         *Z       ---       ---  5.12e+44
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.76125e-44  -1.2122e-44 -2.56115e-46 -5.00088e-45 -1.23423e-46  5.87219e-46 -1.44464e-50

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.8447, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 360 K
      Energy reference = 14727 1/cm
      Energy step      = 90 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008242
         W1 Well: collisional kernel bandwidth = 50
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.536061
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.369858
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.56554
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.60961
         W1 Well: minimal relaxation eigenvalue = 0.0925653
         W1 Well: maximal relaxation eigenvalue = 1.63301
         W1 Well:       grid size = 515
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31622 1/cm
         B1 Barrier:        grid size = 164
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 162
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 146 1/cm
         B3 Barrier:        grid size = 215
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4622 1/cm
         B4 Barrier:        grid size = 233
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6242 1/cm
         B5 Barrier: nonpositive number of states at -23163 1/cm => truncating
         B5 Barrier:        grid size = 421
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23163 1/cm
         B6 Barrier:        grid size = 147
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1497 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4647 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.42665, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31622 -23163 4.67e+05 4.51e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 5.85e+12
         B2    147 5.22e+11
         B3  -4622 8.65e+10
         B4  -6242 1.36e+11
         B5 -23163 1.14e+10
         B6   1498 1.55e+12
         B7   4648 5.16e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.62e+32  1.93e+33  9.69e+25  1.52e+23  7.36e-09  4.55e+36  3.04e+42
          R  1.31e-33         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  5.18e-34     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  1.03e-26  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  6.58e-24  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  1.36e+08  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5   2.2e-37  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  3.29e-43  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.11e+29  7.87e+29  3.95e+22  6.19e+19     3e-12  1.85e+33  1.24e+39
          R  3.22e-30         1      2.53  1.27e-07  1.99e-10  9.66e-42  5.97e+03  3.98e+09
         P1  1.27e-30     0.395         1  5.02e-08  7.86e-11  3.81e-42  2.35e+03  1.57e+09
         P2  2.53e-23  7.87e+06  1.99e+07         1   0.00157   7.6e-35  4.69e+10  3.13e+16
         P3  1.62e-20  5.02e+09  1.27e+10       638         1  4.85e-32  2.99e+13     2e+19
         P4  3.33e+11  1.04e+41  2.62e+41  1.32e+34  2.06e+31         1  6.18e+44  4.12e+50
         P5   5.4e-34  0.000168  0.000425  2.13e-11  3.34e-14  1.62e-45         1  6.68e+05
         P6  8.08e-40  2.51e-10  6.36e-10  3.19e-17     5e-20  2.42e-51   1.5e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.43702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.88977e+07
      global relaxation matrix dimension = 515
      setting global matrices ... done, cpu time[sec] = 0.545468, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.34821, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20580.6      1834.69      304.353      477.501      39.9153      5463.52      181.283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051238, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004733, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.05606, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.99814e-10  1.47034e-44  2.26259e-47
      low eigenvalue method done, cpu time[sec] = 0.056322, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-44  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-45  2.22e-16         1
         *Z       ---       ---  6.59e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.79032e-41  2.33371e-41  1.07081e-43 -6.64492e-44  6.29769e-43  8.84049e-44 -2.93446e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99598, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.88977e+08
      global relaxation matrix dimension = 515
      setting global matrices ... done, cpu time[sec] = 0.546906, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.89089, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2058.06      183.469      30.4353      47.7501      3.99153      546.352      18.1283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.051044, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004728, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055865, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.06094e-11  1.47999e-45  2.89671e-48
      low eigenvalue method done, cpu time[sec] = 0.056148, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-45  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-46  2.22e-16         1
         *Z       ---       ---  6.59e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.70802e-40 -1.47754e-40 -3.93229e-42 -2.57767e-41 -3.97197e-43  4.54391e-44 -1.22664e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.37844, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.88977e+09
      global relaxation matrix dimension = 515
      setting global matrices ... done, cpu time[sec] = 0.544666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.87034, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            205.806      18.3469      3.04353      4.77501     0.399153      54.6352      1.81283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.05309, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004747, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.057934, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.25023e-13  1.48995e-46  2.05145e-49
      low eigenvalue method done, cpu time[sec] = 0.058201, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-46  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-47  2.22e-16         1
         *Z       ---       ---  6.59e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -8.37803e-42  1.36157e-42 -8.18987e-44 -1.00918e-42  -2.9028e-44  2.39584e-44  8.77183e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.51842, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.88977e+10
      global relaxation matrix dimension = 515
      setting global matrices ... done, cpu time[sec] = 0.545786, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.88576, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.5806      1.83469     0.304353     0.477501    0.0399153      5.46352     0.181283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050937, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004714, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055738, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.25153e-13  1.49426e-47  5.35297e-51
      low eigenvalue method done, cpu time[sec] = 0.056002, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-47  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-48  2.22e-16         1
         *Z       ---       ---  6.59e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -7.71737e-42 -1.02073e-42 -3.95553e-44 -3.17004e-43 -9.23659e-45 -7.79755e-44   3.3904e-49

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36338, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 360 K
            Well    Collision, 1/sec
              W1         1.88977e+11
      global relaxation matrix dimension = 515
      setting global matrices ... done, cpu time[sec] = 0.548586, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.90491, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.05806     0.183469    0.0304353    0.0477501   0.00399153     0.546352    0.0181283
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.050921, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004719, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.055735, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.64565e-14  1.49507e-48  7.06489e-53
      low eigenvalue method done, cpu time[sec] = 0.056057, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-48  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.38e-49  2.22e-16         1
         *Z       ---       ---  6.59e+43
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.6721e-43  1.52602e-43  4.51259e-45  4.41482e-44  1.04444e-45 -1.53442e-45   1.8668e-51

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.56196, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 370 K
      Energy reference = 15005 1/cm
      Energy step      = 92 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008939
         W1 Well: collisional kernel bandwidth = 50
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.52573
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.357205
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.528318
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.5979
         W1 Well: minimal relaxation eigenvalue = 0.0909031
         W1 Well: maximal relaxation eigenvalue = 2.49891
         W1 Well:       grid size = 507
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 164
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -82 1/cm
         B2 Barrier:        grid size = 161
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 192 1/cm
         B3 Barrier:        grid size = 214
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4682 1/cm
         B4 Barrier:        grid size = 231
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6247 1/cm
         B5 Barrier: nonpositive number of states at -23175 1/cm => truncating
         B5 Barrier:        grid size = 415
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23175 1/cm
         B6 Barrier:        grid size = 147
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1481 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4700 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 4.35076, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23175 4.63e+05 4.79e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -82 6.64e+12
         B2    193 5.99e+11
         B3  -4682 1.01e+11
         B4  -6247 1.57e+11
         B5 -23175 1.32e+10
         B6   1481 1.81e+12
         B7   4701 6.24e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.27e+31  5.63e+31  4.78e+24  8.94e+21  3.11e-09  1.17e+35  5.61e+40
          R   4.4e-32         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  1.78e-32     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  2.09e-25  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  1.12e-22  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  3.22e+08  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  8.51e-36  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6  1.78e-41  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.64e+27  2.39e+28  2.03e+21  3.79e+18  1.32e-12  4.98e+31  2.38e+37
          R  1.04e-28         1      2.48   2.1e-07  3.93e-10  1.37e-40  5.17e+03  2.47e+09
         P1  4.19e-29     0.404         1   8.5e-08  1.59e-10  5.52e-41  2.09e+03  9.96e+08
         P2  4.93e-22  4.75e+06  1.18e+07         1   0.00187   6.5e-34  2.46e+10  1.17e+16
         P3  2.64e-19  2.54e+09   6.3e+09       535         1  3.48e-31  1.31e+13  6.27e+18
         P4  7.58e+11  7.31e+39  1.81e+40  1.54e+33  2.88e+30         1  3.78e+43  1.81e+49
         P5  2.01e-32  0.000194  0.000479  4.07e-11  7.61e-14  2.65e-44         1  4.78e+05
         P6   4.2e-38  4.05e-10     1e-09  8.53e-17  1.59e-19  5.54e-50  2.09e-06         1
   MasterEquation::set:  done, cpu time[sec] = 4.36108, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.83818e+07
      global relaxation matrix dimension = 507
      setting global matrices ... done, cpu time[sec] = 0.528669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.10448, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22647.1       2042.2      343.402      535.014      45.0465       6180.8       212.62
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.353251, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004535, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.367667, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.74933e-11  1.41303e-43  6.96462e-46
      low eigenvalue method done, cpu time[sec] = 0.368153, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-43 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-44 -8.88e-16         1
         *Z       ---       ---  9.39e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16  8.50548e-40  4.31462e-40 -7.93879e-41 -1.61564e-39 -2.10796e-41  5.88734e-43 -7.89705e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.99175, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.83818e+08
      global relaxation matrix dimension = 507
      setting global matrices ... done, cpu time[sec] = 0.532972, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.94949, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2264.71       204.22      34.3402      53.5014      4.50465       618.08       21.262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048856, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004537, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053477, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.84027e-11  1.44421e-44  9.52786e-47
      low eigenvalue method done, cpu time[sec] = 0.053732, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-44 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.31e-45 -8.88e-16         1
         *Z       ---       ---  9.39e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16   6.5535e-40  4.82339e-40  1.04674e-41  6.49431e-41  2.13406e-42 -1.94126e-42  3.75813e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.52302, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.83818e+09
      global relaxation matrix dimension = 507
      setting global matrices ... done, cpu time[sec] = 0.529907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.82374, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            226.471       20.422      3.43402      5.35014     0.450465       61.808       2.1262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048825, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00453, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053437, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.24184e-12  1.47826e-45  7.18017e-48
      low eigenvalue method done, cpu time[sec] = 0.053699, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-45 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-46 -8.88e-16         1
         *Z       ---       ---  9.39e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -9.72747e-41 -9.76182e-41 -3.28973e-42 -4.17954e-41 -9.20184e-43  2.14996e-44 -5.03079e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.39046, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.83818e+10
      global relaxation matrix dimension = 507
      setting global matrices ... done, cpu time[sec] = 0.529225, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.80214, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            22.6471       2.0422     0.343402     0.535014    0.0450465       6.1808      0.21262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048774, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00455, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053409, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.0292e-13  1.49384e-46   1.9844e-49
      low eigenvalue method done, cpu time[sec] = 0.053667, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.49e-46 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-47 -8.88e-16         1
         *Z       ---       ---  9.39e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -1.99647e-41 -7.78571e-42 -1.25604e-43  7.86359e-43  9.94838e-45  1.05273e-43  -7.8794e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.36765, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 370 K
            Well    Collision, 1/sec
              W1         1.83818e+11
      global relaxation matrix dimension = 507
      setting global matrices ... done, cpu time[sec] = 0.533989, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.75354, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.26471      0.20422    0.0343402    0.0535014   0.00450465      0.61808     0.021262
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.048816, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004551, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.053453, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.28724e-15  1.49691e-47  2.69744e-51
      low eigenvalue method done, cpu time[sec] = 0.053707, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-47 -8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-48 -8.88e-16         1
         *Z       ---       ---  9.39e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -8.88178e-16 -1.00027e-41  -1.4816e-42 -5.30984e-44 -1.79966e-43 -7.74994e-45 -8.15736e-44 -2.31568e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.31093, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 380 K
      Energy reference = 15283 1/cm
      Energy step      = 95 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009234
         W1 Well: collisional kernel bandwidth = 49
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.498812
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.339746
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.494922
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.23152
         W1 Well: minimal relaxation eigenvalue = 0.0892153
         W1 Well: maximal relaxation eigenvalue = 2.6662
         W1 Well:       grid size = 494
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31646 1/cm
         B1 Barrier:        grid size = 161
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -11 1/cm
         B2 Barrier:        grid size = 159
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 178 1/cm
         B3 Barrier:        grid size = 210
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4666 1/cm
         B4 Barrier:        grid size = 226
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6186 1/cm
         B5 Barrier: nonpositive number of states at -23287 1/cm => truncating
         B5 Barrier:        grid size = 406
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23286 1/cm
         B6 Barrier:        grid size = 146
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1413 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4643 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.90368, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31646 -23286 4.27e+05 5.07e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -11 7.53e+12
         B2    179 6.87e+11
         B3  -4666 1.17e+11
         B4  -6186 1.81e+11
         B5 -23286 1.54e+10
         B6   1414 2.11e+12
         B7   4644 7.52e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.15e+29  1.98e+30  2.76e+23   6.1e+20  1.37e-09  3.68e+33  1.28e+39
          R  1.23e-30         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  5.06e-31     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  3.62e-24  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  1.64e-21  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  7.29e+08  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  2.72e-34  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  7.82e-40  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.59e+26   8.7e+26  1.22e+20  2.69e+17  6.05e-13  1.62e+30  5.63e+35
          R  2.78e-27         1      2.42  3.39e-07  7.49e-10  1.68e-39  4.51e+03  1.57e+09
         P1  1.15e-27     0.413         1   1.4e-07  3.09e-10  6.95e-40  1.86e+03  6.47e+08
         P2  8.21e-21  2.95e+06  7.15e+06         1   0.00221  4.96e-33  1.33e+10  4.62e+15
         P3  3.72e-18  1.34e+09  3.24e+09       453         1  2.25e-30  6.02e+12  2.09e+18
         P4  1.65e+12  5.94e+38  1.44e+39  2.01e+32  4.45e+29         1  2.68e+42  9.31e+47
         P5  6.18e-31  0.000222  0.000538  7.52e-11  1.66e-13  3.73e-43         1  3.48e+05
         P6  1.78e-36  6.38e-10  1.55e-09  2.16e-16  4.77e-19  1.07e-48  2.87e-06         1
   MasterEquation::set:  done, cpu time[sec] = 3.91442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.78952e+07
      global relaxation matrix dimension = 494
      setting global matrices ... done, cpu time[sec] = 0.502326, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.72042, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24864.4      2268.19      386.489      598.059      50.7106      6971.93      248.349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.72343, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00422, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.736684, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.96073e-11  1.40022e-42  1.77119e-44
      low eigenvalue method done, cpu time[sec] = 0.737164, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.4e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.25e-43         0         1
         *Z       ---       ---  1.48e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.53206e-39 -1.54547e-39  2.53794e-40  5.11713e-39  1.08229e-40 -2.69865e-42 -1.09019e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.88019, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.78952e+08
      global relaxation matrix dimension = 494
      setting global matrices ... done, cpu time[sec] = 0.503697, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.44805, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2486.44      226.819      38.6489      59.8059      5.07106      697.193      24.8349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.183376, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.004242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.196774, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.9374e-12   1.4833e-43  2.57715e-45
      low eigenvalue method done, cpu time[sec] = 0.197248, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.48e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-44         0         1
         *Z       ---       ---  1.48e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.91757e-39  1.62697e-39  9.31199e-41  1.98618e-39  4.65846e-41 -1.89125e-42  3.52211e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07371, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.78952e+09
      global relaxation matrix dimension = 494
      setting global matrices ... done, cpu time[sec] = 0.505359, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.58634, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            248.644      22.6819      3.86489      5.98059     0.507106      69.7193      2.48349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045691, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.050004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.17993e-12  1.57897e-44  2.06135e-46
      low eigenvalue method done, cpu time[sec] = 0.05025, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.58e-44         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-45         0         1
         *Z       ---       ---  1.48e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.34791e-39 -6.61992e-40 -1.77338e-41 -1.96821e-40 -4.89676e-42 -3.51275e-43   2.4507e-47

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.0642, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.78952e+10
      global relaxation matrix dimension = 494
      setting global matrices ... done, cpu time[sec] = 0.507653, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.59779, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            24.8644      2.26819     0.386489     0.598059    0.0507106      6.97193     0.248349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045628, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004216, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049925, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.80289e-13  1.62519e-45    6.032e-48
      low eigenvalue method done, cpu time[sec] = 0.050168, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-45         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-46         0         1
         *Z       ---       ---  1.48e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.29259e-41   2.8333e-41  1.74953e-43 -1.15222e-42 -2.06969e-44  -7.0368e-43  7.85054e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.07817, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 380 K
            Well    Collision, 1/sec
              W1         1.78952e+11
      global relaxation matrix dimension = 494
      setting global matrices ... done, cpu time[sec] = 0.507125, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.60356, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.48644     0.226819    0.0386489    0.0598059   0.00507106     0.697193    0.0248349
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.045565, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.004231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.049878, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.51328e-15  1.63469e-46  8.45697e-50
      low eigenvalue method done, cpu time[sec] = 0.050125, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-46         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-47         0         1
         *Z       ---       ---  1.48e+42
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.09155e-41 -5.97819e-42 -1.52169e-43 -4.45051e-43 -1.92999e-44 -1.91779e-43 -8.33632e-48

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 9.08571, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 390 K
      Energy reference = 15561 1/cm
      Energy step      = 98 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.010314
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.473077
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.321366
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.450673
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 2.18237
         W1 Well: minimal relaxation eigenvalue = 0.0874881
         W1 Well: maximal relaxation eigenvalue = 1.19769
         W1 Well:       grid size = 481
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31577 1/cm
         B1 Barrier:        grid size = 159
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -21 1/cm
         B2 Barrier:        grid size = 157
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 174 1/cm
         B3 Barrier:        grid size = 206
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 222
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6195 1/cm
         B5 Barrier: nonpositive number of states at -23149 1/cm => truncating
         B5 Barrier:        grid size = 395
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23149 1/cm
         B6 Barrier:        grid size = 144
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4682 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.76743, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31577 -23149 4.72e+05 5.38e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -21 8.52e+12
         B2    175 7.86e+11
         B3  -4627 1.36e+11
         B4  -6195 2.09e+11
         B5 -23149 1.78e+10
         B6   1450 2.45e+12
         B7   4683 9.04e+10
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.51e+28  8.35e+28  1.88e+22  4.85e+19  6.41e-10  1.39e+32  3.59e+37
          R  2.85e-29         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1   1.2e-29     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  5.33e-23  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  2.06e-20  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  1.56e+09  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5  7.18e-33  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6  2.79e-38   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.58e+25  3.75e+25  8.44e+18  2.18e+16  2.88e-13  6.26e+28  1.61e+34
          R  6.33e-26         1      2.37  5.34e-07  1.38e-09  1.82e-38  3.96e+03  1.02e+09
         P1  2.66e-26     0.421         1  2.25e-07  5.81e-10  7.68e-39  1.67e+03   4.3e+08
         P2  1.19e-19  1.87e+06  4.45e+06         1   0.00259  3.42e-32  7.42e+09  1.91e+15
         P3  4.58e-17  7.25e+08  1.72e+09       387         1  1.32e-29  2.87e+12   7.4e+17
         P4  3.47e+12  5.48e+37   1.3e+38  2.93e+31  7.57e+28         1  2.17e+41   5.6e+46
         P5   1.6e-29  0.000252    0.0006  1.35e-10  3.48e-13  4.61e-42         1  2.58e+05
         P6   6.2e-35   9.8e-10  2.33e-09  5.23e-16  1.35e-18  1.79e-47  3.88e-06         1
   MasterEquation::set:  done, cpu time[sec] = 3.77827, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.74358e+07
      global relaxation matrix dimension = 481
      setting global matrices ... done, cpu time[sec] = 0.476436, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.42383, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27240.9      2513.94      433.929       667.03      56.9494      7842.31      288.945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.990893, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003987, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.02078, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.28101e-10  1.46788e-41  3.75597e-43
      low eigenvalue method done, cpu time[sec] = 1.02161, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-41  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-42  4.44e-16         1
         *Z       ---       ---   2.6e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.30662e-38   1.4321e-38 -5.49319e-40 -2.94593e-38 -7.34717e-40 -1.29632e-41 -4.51621e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.79345, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.74358e+08
      global relaxation matrix dimension = 481
      setting global matrices ... done, cpu time[sec] = 0.476718, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08324, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2724.09      251.394      43.3929       66.703      5.69494      784.231      28.8945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.408111, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003979, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.420675, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.30702e-11   1.6522e-42  5.78947e-44
      low eigenvalue method done, cpu time[sec] = 0.421139, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.45e-43  4.44e-16         1
         *Z       ---       ---   2.6e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.08768e-38  6.95849e-39   1.2708e-40  3.00437e-40  1.58903e-41  3.21707e-41 -3.02333e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85214, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.74358e+09
      global relaxation matrix dimension = 481
      setting global matrices ... done, cpu time[sec] = 0.476262, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45277, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            272.409      25.1394      4.33929       6.6703     0.569494      78.4231      2.88945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.04214, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00396, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046176, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.71691e-13  1.87547e-43  4.90406e-45
      low eigenvalue method done, cpu time[sec] = 0.046411, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.88e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.64e-44  4.44e-16         1
         *Z       ---       ---   2.6e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -3.48868e-39 -1.81263e-39 -5.28539e-41  -4.9721e-40 -1.23823e-41  -4.3255e-42  3.27134e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.68022, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.74358e+10
      global relaxation matrix dimension = 481
      setting global matrices ... done, cpu time[sec] = 0.476979, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.46288, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            27.2409      2.51394     0.433929      0.66703    0.0569494      7.84231     0.288945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003969, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046383, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.56439e-15  1.98913e-44   1.5187e-46
      low eigenvalue method done, cpu time[sec] = 0.046621, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.99e-44  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-45  4.44e-16         1
         *Z       ---       ---   2.6e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.46855e-40  1.13714e-40  1.51751e-42   -1.923e-41 -2.77262e-43 -1.51938e-42 -5.47627e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.86291, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 390 K
            Well    Collision, 1/sec
              W1         1.74358e+11
      global relaxation matrix dimension = 481
      setting global matrices ... done, cpu time[sec] = 0.479666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.45329, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.72409     0.251394    0.0433929     0.066703   0.00569494     0.784231    0.0288945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.042387, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003963, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.046434, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.7561e-14  2.01358e-45    2.199e-48
      low eigenvalue method done, cpu time[sec] = 0.046669, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-45  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-46  4.44e-16         1
         *Z       ---       ---   2.6e+41
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -2.23434e-41 -9.05098e-42  -5.9385e-44  2.26724e-42  4.60275e-44 -3.57373e-44 -5.06343e-46

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.85425, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 400 K
      Energy reference = 15839 1/cm
      Energy step      = 100 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008491
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.470022
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.313714
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.453108
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.92498
         W1 Well: minimal relaxation eigenvalue = 0.0860192
         W1 Well: maximal relaxation eigenvalue = 3.42739
         W1 Well:       grid size = 475
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31661 1/cm
         B1 Barrier:        grid size = 159
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -61 1/cm
         B2 Barrier:        grid size = 157
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 138 1/cm
         B3 Barrier:        grid size = 205
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4661 1/cm
         B4 Barrier:        grid size = 221
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6261 1/cm
         B5 Barrier: nonpositive number of states at -23161 1/cm => truncating
         B5 Barrier:        grid size = 390
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23161 1/cm
         B6 Barrier:        grid size = 144
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1438 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4638 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.46644, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31661 -23161 4.68e+05  5.7e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -61 9.63e+12
         B2    139 8.99e+11
         B3  -4661 1.57e+11
         B4  -6261  2.4e+11
         B5 -23161 2.06e+10
         B6   1439 2.84e+12
         B7   4639 1.08e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.76e+27   4.1e+27  1.44e+21  4.34e+18  3.08e-10  6.16e+30  1.19e+36
          R  5.69e-28         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  2.44e-28     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2  6.93e-22  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  2.31e-19  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  3.24e+09   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  1.62e-31  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  8.38e-37  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.13e+23  1.89e+24  6.67e+17  2.01e+15  1.43e-13  2.85e+27  5.52e+32
          R  1.23e-24         1      2.33  8.21e-07  2.47e-09  1.75e-37   3.5e+03  6.79e+08
         P1  5.28e-25     0.429         1  3.52e-07  1.06e-09  7.53e-38   1.5e+03  2.91e+08
         P2   1.5e-18  1.22e+06  2.84e+06         1   0.00301  2.14e-31  4.27e+09  8.27e+14
         P3  4.99e-16  4.05e+08  9.44e+08       333         1  7.11e-29  1.42e+12  2.75e+17
         P4  7.01e+12   5.7e+36  1.33e+37  4.68e+30  1.41e+28         1     2e+40  3.87e+45
         P5  3.51e-28  0.000286  0.000665  2.34e-10  7.05e-13  5.01e-41         1  1.94e+05
         P6  1.81e-33  1.47e-09  3.43e-09  1.21e-15  3.64e-18  2.58e-46  5.16e-06         1
   MasterEquation::set:  done, cpu time[sec] = 3.47445, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.70015e+07
      global relaxation matrix dimension = 475
      setting global matrices ... done, cpu time[sec] = 0.349103, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.17454, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29782.4      2780.62      486.054       742.34       63.807       8797.6      334.914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.19638, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003878, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.25123, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.85381e-11  1.66571e-40  6.95999e-42
      low eigenvalue method done, cpu time[sec] = 1.2517, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.67e-40  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.43e-41  4.44e-16         1
         *Z       ---       ---  4.96e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.63361e-38  4.79715e-39  9.19173e-39  8.81146e-38  1.59718e-39  1.28533e-40  7.06199e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.62056, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.70015e+08
      global relaxation matrix dimension = 475
      setting global matrices ... done, cpu time[sec] = 0.464091, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.59028, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2978.24      278.062      48.6054       74.234       6.3807       879.76      33.4914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.73371, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.003865, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.786327, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.41299e-12  2.02141e-41  1.13163e-42
      low eigenvalue method done, cpu time[sec] = 0.786784, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-41  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.74e-42  4.44e-16         1
         *Z       ---       ---  4.96e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -7.11979e-38 -2.48949e-38  1.28921e-40  6.56227e-39  1.55025e-40 -1.99197e-40  1.69536e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.68564, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.70015e+09
      global relaxation matrix dimension = 475
      setting global matrices ... done, cpu time[sec] = 0.465207, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.31247, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            297.824      27.8062      4.86054       7.4234      0.63807       87.976      3.34914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.040678, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003879, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.044967, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.44161e-13  2.47316e-42  1.01239e-43
      low eigenvalue method done, cpu time[sec] = 0.045196, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-42  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.13e-43  4.44e-16         1
         *Z       ---       ---  4.96e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.06376e-38  1.41946e-38  3.68031e-40  2.30775e-39  6.35291e-41 -1.57428e-41 -4.62933e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.676, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.70015e+10
      global relaxation matrix dimension = 475
      setting global matrices ... done, cpu time[sec] = 0.468471, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28478, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            29.7824      2.78062     0.486054      0.74234     0.063807       8.7976     0.334914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041022, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00387, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.045302, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.4842e-13  2.71515e-43  3.31506e-45
      low eigenvalue method done, cpu time[sec] = 0.045536, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-43  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.34e-44  4.44e-16         1
         *Z       ---       ---  4.96e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16 -1.88886e-39 -9.23479e-40 -2.45381e-41 -1.42844e-40 -4.38926e-42 -5.30311e-42 -1.72478e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.64977, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 400 K
            Well    Collision, 1/sec
              W1         1.70015e+11
      global relaxation matrix dimension = 475
      setting global matrices ... done, cpu time[sec] = 0.468589, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.28855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2.97824     0.278062    0.0486054     0.074234    0.0063807      0.87976    0.0334914
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.041, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003857, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.04526, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.92759e-14  2.76957e-44  4.96265e-47
      low eigenvalue method done, cpu time[sec] = 0.04549, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.77e-44  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-45  4.44e-16         1
         *Z       ---       ---  4.96e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.62941e-41  8.19203e-41  1.59883e-42  1.50572e-41  3.22502e-43 -1.20011e-42  2.55652e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.65541, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 410 K
      Energy reference = 16117 1/cm
      Energy step      = 102 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009091
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.459358
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.3038
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.443179
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.84934
         W1 Well: minimal relaxation eigenvalue = 0.0844639
         W1 Well: maximal relaxation eigenvalue = 1.3941
         W1 Well:       grid size = 468
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31619 1/cm
         B1 Barrier:        grid size = 159
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -100 1/cm
         B2 Barrier:        grid size = 156
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 205 1/cm
         B3 Barrier:        grid size = 204
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4691 1/cm
         B4 Barrier:        grid size = 219
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6220 1/cm
         B5 Barrier: nonpositive number of states at -23153 1/cm => truncating
         B5 Barrier:        grid size = 385
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23153 1/cm
         B6 Barrier:        grid size = 144
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1428 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.38774, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31619 -23153  4.7e+05 6.04e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -100 1.09e+13
         B2    206 1.03e+12
         B3  -4691 1.82e+11
         B4  -6220 2.76e+11
         B5 -23153 2.38e+10
         B6   1429 3.29e+12
         B7   4693 1.29e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.05e+26   2.4e+26   1.3e+20   4.5e+17  1.59e-10  3.27e+29  4.83e+34
          R  9.53e-27         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  4.17e-27     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  7.71e-21  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  2.22e-18  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  6.31e+09  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  3.06e-30  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6  2.07e-35  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.82e+22   1.1e+23  5.96e+16  2.07e+14  7.29e-14   1.5e+26  2.22e+31
          R  2.07e-23         1      2.29  1.24e-06  4.29e-09  1.51e-36  3.11e+03  4.61e+08
         P1  9.06e-24     0.437         1   5.4e-07  1.87e-09  6.61e-37  1.36e+03  2.01e+08
         P2  1.68e-17  8.09e+05  1.85e+06         1   0.00347  1.22e-30  2.52e+09  3.73e+14
         P3  4.83e-15  2.33e+08  5.34e+08       288         1  3.52e-28  7.26e+11  1.07e+17
         P4  1.37e+13  6.62e+35  1.51e+36  8.18e+29  2.84e+27         1  2.06e+39  3.05e+44
         P5  6.66e-27  0.000321  0.000735  3.97e-10  1.38e-12  4.86e-40         1  1.48e+05
         P6   4.5e-32  2.17e-09  4.97e-09  2.68e-15  9.31e-18  3.28e-45  6.76e-06         1
   MasterEquation::set:  done, cpu time[sec] = 3.39794, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.65904e+07
      global relaxation matrix dimension = 468
      setting global matrices ... done, cpu time[sec] = 0.451815, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.95575, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32495.4      3069.56       543.21      824.417      71.3296      9843.65      386.795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.31387, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.32665, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.54661e-10  1.87259e-39  1.08072e-40
      low eigenvalue method done, cpu time[sec] = 1.32711, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-40         0         1
         *Z       ---       ---  1.04e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.15693e-37 -1.39813e-38  1.20197e-38 -1.24431e-37 -4.61709e-39 -9.96099e-41 -6.56942e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.59733, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.65904e+08
      global relaxation matrix dimension = 468
      setting global matrices ... done, cpu time[sec] = 0.451322, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.41751, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3249.54      306.956       54.321      82.4417      7.13296      984.365      38.6795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.819757, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003723, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.831837, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.82127e-11   2.4479e-40  1.84929e-41
      low eigenvalue method done, cpu time[sec] = 0.832301, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-41         0         1
         *Z       ---       ---  1.04e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.25768e-37 -1.54577e-38  2.91745e-39  1.02892e-37  2.01833e-39  -5.5378e-40  4.82712e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.52887, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.65904e+09
      global relaxation matrix dimension = 468
      setting global matrices ... done, cpu time[sec] = 0.455749, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.06721, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            324.954      30.6956       5.4321      8.24417     0.713296      98.4365      3.86795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.176649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003716, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.188601, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.37728e-12  3.21295e-41  1.74498e-42
      low eigenvalue method done, cpu time[sec] = 0.189404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.71e-42         0         1
         *Z       ---       ---  1.04e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.18403e-38  1.18749e-38  1.39813e-40  1.71762e-39  4.20104e-41  1.66012e-40  3.73995e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.3699, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.65904e+10
      global relaxation matrix dimension = 468
      setting global matrices ... done, cpu time[sec] = 0.452026, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.22653, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            32.4954      3.06956      0.54321     0.824417    0.0713296      9.84365     0.386795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.039384, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.043163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.83255e-14  3.64374e-42  6.03882e-44
      low eigenvalue method done, cpu time[sec] = 0.043393, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.64e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.08e-43         0         1
         *Z       ---       ---  1.04e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.64729e-39 -1.35313e-39 -5.03992e-41 -6.47098e-40 -1.71099e-41 -1.34126e-40 -4.87992e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.54978, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 410 K
            Well    Collision, 1/sec
              W1         1.65904e+11
      global relaxation matrix dimension = 468
      setting global matrices ... done, cpu time[sec] = 0.456255, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.20664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3.24954     0.306956     0.054321    0.0824417   0.00713296     0.984365    0.0386795
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.039347, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00371, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.043139, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   -2.657e-14  3.74503e-43  9.35706e-46
      low eigenvalue method done, cpu time[sec] = 0.043391, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.75e-43         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.16e-44         0         1
         *Z       ---       ---  1.04e+40
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.06215e-39 -1.81041e-40 -9.87197e-42 -1.66529e-42  -8.1475e-43 -4.24336e-41  2.05663e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.52986, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 420 K
      Energy reference = 16395 1/cm
      Energy step      = 105 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008671
         W1 Well: collisional kernel bandwidth = 48
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.44785
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.290543
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.424885
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.73035
         W1 Well: minimal relaxation eigenvalue = 0.0831159
         W1 Well: maximal relaxation eigenvalue = 1.23459
         W1 Well:       grid size = 457
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31590 1/cm
         B1 Barrier:        grid size = 157
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 155
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 120 1/cm
         B3 Barrier:        grid size = 200
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4605 1/cm
         B4 Barrier:        grid size = 215
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6180 1/cm
         B5 Barrier: nonpositive number of states at -23295 1/cm => truncating
         B5 Barrier:        grid size = 378
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23295 1/cm
         B6 Barrier:        grid size = 142
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1485 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4634 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.22385, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31590 -23295 4.24e+05  6.4e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.22e+13
         B2    121 1.17e+12
         B3  -4605 2.09e+11
         B4  -6180 3.16e+11
         B5 -23295 2.75e+10
         B6   1486  3.8e+12
         B7   4635 1.54e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.85e+24  1.54e+25  1.25e+19  4.97e+16  8.05e-11  1.91e+28  2.18e+33
          R  1.46e-25         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  6.49e-26     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  7.99e-20  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  2.01e-17  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4  1.24e+10   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5  5.24e-29  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6  4.58e-34  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.27e+21  7.37e+21  5.98e+15  2.38e+13  3.85e-14  9.11e+24  1.04e+30
          R  3.06e-22         1      2.25  1.83e-06  7.26e-09  1.18e-35  2.78e+03  3.18e+08
         P1  1.36e-22     0.444         1  8.12e-07  3.23e-09  5.22e-36  1.24e+03  1.41e+08
         P2  1.67e-16  5.47e+05  1.23e+06         1   0.00398  6.44e-30  1.52e+09  1.74e+14
         P3  4.21e-14  1.38e+08   3.1e+08       252         1  1.62e-27  3.83e+11  4.38e+16
         P4   2.6e+13   8.5e+34  1.91e+35  1.55e+29  6.18e+26         1  2.37e+38  2.71e+43
         P5   1.1e-25  0.000359  0.000809  6.56e-10  2.61e-12  4.22e-39         1  1.14e+05
         P6   9.6e-31  3.14e-09  7.07e-09  5.74e-15  2.28e-17  3.69e-44  8.74e-06         1
   MasterEquation::set:  done, cpu time[sec] = 3.23409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.62008e+07
      global relaxation matrix dimension = 457
      setting global matrices ... done, cpu time[sec] = 0.430289, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.56554, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35388.2      3382.13      605.762      913.711       79.566      10986.6      445.177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.587, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.63659, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68058e-10  2.11765e-38  1.52375e-39
      low eigenvalue method done, cpu time[sec] = 1.63703, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.12e-38         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.76e-39         0         1
         *Z       ---       ---  2.31e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.9434e-36  1.30985e-36 -8.63313e-40  3.68402e-37  9.45344e-39  2.53037e-39  2.20456e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.41048, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.62008e+08
      global relaxation matrix dimension = 457
      setting global matrices ... done, cpu time[sec] = 0.432392, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.04565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3538.82      338.213      60.5762      91.3711       7.9566      1098.66      44.5177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.01856, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003501, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06764, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.61708e-11  2.95886e-39  2.73464e-40
      low eigenvalue method done, cpu time[sec] = 1.06868, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.96e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-40         0         1
         *Z       ---       ---  2.31e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.06649e-36 -2.68165e-37 -8.10768e-39 -3.33047e-39 -6.40146e-40 -2.38107e-39  -6.3572e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.32498, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.62008e+09
      global relaxation matrix dimension = 457
      setting global matrices ... done, cpu time[sec] = 0.434881, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.66445, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            353.882      33.8213      6.05762      9.13711      0.79566      109.866      4.45177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.364163, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003509, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.41393, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.52412e-12  4.12714e-40  2.71535e-41
      low eigenvalue method done, cpu time[sec] = 0.414368, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.13e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.43e-41         0         1
         *Z       ---       ---  2.31e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.89453e-38 -1.86819e-38  1.04685e-39  1.54987e-39  6.71453e-41  1.07498e-39  8.45572e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.29625, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.62008e+10
      global relaxation matrix dimension = 457
      setting global matrices ... done, cpu time[sec] = 0.432782, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08652, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            35.3882      3.38213     0.605762     0.913711     0.079566      10.9866     0.445177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.037025, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00354, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.040942, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.95366e-13  4.81766e-41  9.92352e-43
      low eigenvalue method done, cpu time[sec] = 0.041157, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.82e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0     4e-42         0         1
         *Z       ---       ---  2.31e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -4.10363e-38 -1.22726e-38 -2.83313e-40 -1.01661e-39 -4.49169e-41 -4.87813e-40 -1.08311e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.34013, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 420 K
            Well    Collision, 1/sec
              W1         1.62008e+11
      global relaxation matrix dimension = 457
      setting global matrices ... done, cpu time[sec] = 0.434151, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 7.08613, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3.53882     0.338213    0.0605762    0.0913711    0.0079566      1.09866    0.0445177
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.037057, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003524, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.040958, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30142e-14  4.98745e-42  1.59319e-44
      low eigenvalue method done, cpu time[sec] = 0.041174, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.99e-42         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-43         0         1
         *Z       ---       ---  2.31e+39
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.98694e-39  1.09812e-39  2.78439e-41 -4.97731e-41  1.51684e-42  1.12465e-40  1.75914e-45

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.34298, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 430 K
      Energy reference = 16673 1/cm
      Energy step      = 108 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008745
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.428345
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.278568
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.403126
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.71918
         W1 Well: minimal relaxation eigenvalue = 0.0816367
         W1 Well: maximal relaxation eigenvalue = 1.27224
         W1 Well:       grid size = 447
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 155
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -67 1/cm
         B2 Barrier:        grid size = 153
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 149 1/cm
         B3 Barrier:        grid size = 197
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4603 1/cm
         B4 Barrier:        grid size = 212
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 369
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23179 1/cm
         B6 Barrier:        grid size = 141
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1445 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4685 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.15588, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23179 4.62e+05 6.77e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -67 1.38e+13
         B2    149 1.33e+12
         B3  -4603 2.41e+11
         B4  -6223 3.62e+11
         B5 -23179 3.17e+10
         B6   1446 4.38e+12
         B7   4685 1.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.14e+23  1.14e+24  1.36e+18  6.17e+15  4.28e-11  1.29e+27  1.15e+32
          R  1.94e-24         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1  8.78e-25     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2  7.34e-19  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  1.62e-16  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  2.34e+10   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  7.78e-28    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  8.68e-33  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.51e+20  5.57e+20  6.66e+14  3.02e+12  2.09e-14  6.29e+23  5.63e+28
          R  3.98e-21         1      2.21  2.65e-06   1.2e-08  8.32e-35   2.5e+03  2.24e+08
         P1   1.8e-21     0.451         1   1.2e-06  5.42e-09  3.75e-35  1.13e+03  1.01e+08
         P2   1.5e-15  3.77e+05  8.36e+05         1   0.00453  3.14e-29  9.44e+08  8.45e+13
         P3  3.31e-13  8.34e+07  1.85e+08       221         1  6.93e-27  2.08e+11  1.87e+16
         P4  4.78e+13   1.2e+34  2.66e+34  3.19e+28  1.44e+26         1  3.01e+37  2.69e+42
         P5  1.59e-24    0.0004  0.000886  1.06e-09   4.8e-12  3.33e-38         1  8.96e+04
         P6  1.78e-29  4.47e-09  9.89e-09  1.18e-14  5.36e-17  3.71e-43  1.12e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.1665, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.58311e+07
      global relaxation matrix dimension = 447
      setting global matrices ... done, cpu time[sec] = 0.411294, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.42318, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38465.8      3719.64      674.093      1010.69      88.5669      12232.6      510.665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.70931, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003342, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72047, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.22664e-10  2.22702e-37   1.8685e-38
      low eigenvalue method done, cpu time[sec] = 1.72091, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.23e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.82e-38         0         1
         *Z       ---       ---  5.54e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.48997e-36  4.22417e-37   5.3162e-38 -1.05483e-37 -3.21188e-38 -1.32342e-41  -6.7828e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.33555, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.58311e+08
      global relaxation matrix dimension = 447
      setting global matrices ... done, cpu time[sec] = 0.41395, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.82174, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3846.58      371.964      67.4093      101.069      8.85669      1223.26      51.0665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.24689, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003329, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.2579, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.263e-11  3.29802e-38  3.51141e-39
      low eigenvalue method done, cpu time[sec] = 1.25833, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   3.3e-38         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.69e-39         0         1
         *Z       ---       ---  5.54e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.73816e-36 -6.61764e-37  5.48577e-39  6.90666e-37  1.40364e-38 -2.75319e-39 -2.16702e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.23323, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.58311e+09
      global relaxation matrix dimension = 447
      setting global matrices ... done, cpu time[sec] = 0.412345, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.40401, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            384.658      37.1964      6.74093      10.1069     0.885669      122.326      5.10665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.63573, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00331, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.646864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.04391e-12  4.84981e-39  3.66451e-40
      low eigenvalue method done, cpu time[sec] = 0.647308, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.85e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.96e-40         0         1
         *Z       ---       ---  5.54e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.98853e-37  3.04579e-38   2.4447e-39  3.29701e-39  1.54552e-40  4.45327e-40  2.36415e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.06271, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.58311e+10
      global relaxation matrix dimension = 447
      setting global matrices ... done, cpu time[sec] = 0.413856, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.97852, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            38.4658      3.71964     0.674093      1.01069    0.0885669      12.2326     0.510665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.074197, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003323, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.085018, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.00132e-13  5.81164e-40  1.41338e-41
      low eigenvalue method done, cpu time[sec] = 0.085457, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.81e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.74e-41         0         1
         *Z       ---       ---  5.54e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.43656e-37  7.55333e-38  1.87225e-39  1.60862e-38  4.26837e-40 -8.68361e-40  5.15802e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.22478, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 430 K
            Well    Collision, 1/sec
              W1         1.58311e+11
      global relaxation matrix dimension = 447
      setting global matrices ... done, cpu time[sec] = 0.415312, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.83954, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3.84658     0.371964    0.0674093     0.101069   0.00885669      1.22326    0.0510665
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.197686, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003318, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.208552, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.68497e-14  6.05892e-41  2.35336e-43
      low eigenvalue method done, cpu time[sec] = 0.209285, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.06e-41         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.95e-42         0         1
         *Z       ---       ---  5.54e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.92337e-39   -3.195e-39 -2.70824e-41  1.44468e-41   7.6181e-43  2.80098e-40  1.00738e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.21114, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 440 K
      Energy reference = 16951 1/cm
      Energy step      = 110 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008668
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.427748
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.273227
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.345201
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.59421
         W1 Well: minimal relaxation eigenvalue = 0.0804096
         W1 Well: maximal relaxation eigenvalue = 3.316
         W1 Well:       grid size = 442
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31669 1/cm
         B1 Barrier:        grid size = 155
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -99 1/cm
         B2 Barrier:        grid size = 153
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 120 1/cm
         B3 Barrier:        grid size = 196
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4609 1/cm
         B4 Barrier:        grid size = 211
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6259 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 365
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23199 1/cm
         B6 Barrier:        grid size = 141
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1440 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4631 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.03288, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31669 -23199 4.55e+05 7.17e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -99 1.55e+13
         B2    121 1.51e+12
         B3  -4609 2.77e+11
         B4  -6259 4.13e+11
         B5 -23199 3.64e+10
         B6   1441 5.03e+12
         B7   4631 2.16e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.29e+22  9.36e+22  1.62e+17  8.31e+14  2.31e-11  9.68e+25  6.87e+30
          R  2.33e-23         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  1.07e-23     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  6.17e-18  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3   1.2e-15  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  4.33e+10  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  1.03e-26  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  1.46e-31  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.17e+19  4.73e+19   8.2e+13   4.2e+11  1.17e-14   4.9e+22  3.47e+27
          R  4.61e-20         1      2.18  3.78e-06  1.94e-08  5.38e-34  2.26e+03   1.6e+08
         P1  2.11e-20     0.458         1  1.73e-06  8.88e-09  2.47e-34  1.03e+03  7.33e+07
         P2  1.22e-14  2.65e+05  5.77e+05         1   0.00513  1.42e-28  5.97e+08  4.23e+13
         P3  2.38e-12  5.16e+07  1.13e+08       195         1  2.78e-26  1.16e+11  8.26e+15
         P4  8.57e+13  1.86e+33  4.06e+33  7.03e+27   3.6e+25         1  4.19e+36  2.97e+41
         P5  2.04e-23  0.000443  0.000967  1.68e-09  8.59e-12  2.38e-37         1  7.09e+04
         P6  2.88e-28  6.25e-09  1.36e-08  2.36e-14  1.21e-16  3.36e-42  1.41e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.04346, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           1.548e+07
      global relaxation matrix dimension = 442
      setting global matrices ... done, cpu time[sec] = 0.404909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.0166, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41737.7      4083.61        748.6      1115.84      98.3856      13588.3      583.921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.91809, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003285, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92868, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.59397e-10   2.2067e-36   2.0876e-37
      low eigenvalue method done, cpu time[sec] = 1.92912, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.21e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.77e-37         0         1
         *Z       ---       ---  1.41e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.52551e-35 -1.56513e-35 -3.37064e-38  1.21445e-35  1.68938e-37  3.73304e-38  1.25278e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.07239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           1.548e+08
      global relaxation matrix dimension = 442
      setting global matrices ... done, cpu time[sec] = 0.405601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.5227, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4173.77      408.361        74.86      111.584      9.83856      1358.83      58.3921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.44673, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.00325, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4577, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.39697e-11  3.44333e-37  4.09336e-38
      low eigenvalue method done, cpu time[sec] = 1.45812, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.77e-38         0         1
         *Z       ---       ---  1.41e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.28115e-36  2.32031e-36  8.91974e-38  1.44584e-36  3.44555e-38  5.74759e-39  1.05233e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.96591, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           1.548e+09
      global relaxation matrix dimension = 442
      setting global matrices ... done, cpu time[sec] = 0.402805, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.11656, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            417.377      40.8361        7.486      11.1584     0.983856      135.883      5.83921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.85642, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003231, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.8671, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.83581e-12  5.30762e-38  4.47853e-39
      low eigenvalue method done, cpu time[sec] = 0.867539, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.31e-38         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.27e-39         0         1
         *Z       ---       ---  1.41e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.47101e-36  1.98687e-36  4.15081e-38  3.61042e-37  9.45957e-39 -1.70355e-38  -2.5099e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.11097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           1.548e+10
      global relaxation matrix dimension = 442
      setting global matrices ... done, cpu time[sec] = 0.40753, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.62299, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41.7377      4.08361       0.7486      1.11584    0.0983856      13.5883     0.583921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.332271, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003242, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.342794, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.33414e-13  6.51746e-39  1.82085e-40
      low eigenvalue method done, cpu time[sec] = 0.343555, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.52e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.24e-40         0         1
         *Z       ---       ---  1.41e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.24213e-37 -1.43768e-37 -5.46096e-39  -5.2645e-38 -1.29744e-39  6.37079e-39 -1.08375e-44

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.09734, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 440 K
            Well    Collision, 1/sec
              W1           1.548e+11
      global relaxation matrix dimension = 442
      setting global matrices ... done, cpu time[sec] = 0.40768, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.62885, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4.17377     0.408361      0.07486     0.111584   0.00983856      1.35883    0.0583921
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.287019, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003222, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.297559, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.66168e-14  6.84255e-40  3.14642e-42
      low eigenvalue method done, cpu time[sec] = 0.297985, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.84e-40         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.5e-41         0         1
         *Z       ---       ---  1.41e+38
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -2.1629e-37 -5.60195e-38 -1.45397e-39 -9.86397e-39 -2.84517e-40  9.21649e-40  7.28872e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.05771, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 450 K
      Energy reference = 17229 1/cm
      Energy step      = 112 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -88 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008288
         W1 Well: collisional kernel bandwidth = 47
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.416994
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.265236
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 1.44088
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.54346
         W1 Well: minimal relaxation eigenvalue = 0.0791059
         W1 Well: maximal relaxation eigenvalue = 1.27525
         W1 Well:       grid size = 436
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 154
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -19 1/cm
         B2 Barrier:        grid size = 152
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 204 1/cm
         B3 Barrier:        grid size = 195
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4611 1/cm
         B4 Barrier:        grid size = 209
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6179 1/cm
         B5 Barrier: nonpositive number of states at -23203 1/cm => truncating
         B5 Barrier:        grid size = 361
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23203 1/cm
         B6 Barrier:        grid size = 141
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1436 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4684 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 3.98755, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23203 4.54e+05 7.59e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -19 1.73e+13
         B2    205 1.72e+12
         B3  -4611 3.18e+11
         B4  -6179 4.71e+11
         B5 -23203 4.18e+10
         B6   1437 5.77e+12
         B7   4685 2.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.1e+21  8.82e+21  2.18e+16  1.26e+14  1.31e-11  8.38e+24  4.76e+29
          R  2.44e-22         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  1.13e-22     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2   4.6e-17  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  7.96e-15  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4  7.61e+10  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  1.19e-25  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6   2.1e-30  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.09e+18  4.49e+18  1.11e+13  6.39e+10  6.69e-15  4.27e+21  2.42e+26
          R  4.79e-19         1      2.15  5.31e-06  3.06e-08  3.21e-33  2.05e+03  1.16e+08
         P1  2.23e-19     0.465         1  2.47e-06  1.42e-08  1.49e-33       951   5.4e+07
         P2  9.03e-14  1.88e+05  4.05e+05         1   0.00577  6.04e-28  3.85e+08  2.19e+13
         P3  1.56e-11  3.26e+07  7.02e+07       173         1  1.05e-25  6.68e+10  3.79e+15
         P4   1.5e+14  3.12e+32  6.71e+32  1.66e+27  9.56e+24         1  6.38e+35  3.62e+40
         P5  2.34e-22  0.000489   0.00105   2.6e-09   1.5e-11  1.57e-36         1  5.68e+04
         P6  4.13e-27  8.61e-09  1.85e-08  4.57e-14  2.64e-16  2.76e-41  1.76e-05         1
   MasterEquation::set:  done, cpu time[sec] = 3.99767, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.51462e+07
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.391983, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.89268, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45209.3      4475.42      829.701      1229.64      109.078      15060.4      665.648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.99579, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003175, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.00605, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.11529e-10  1.95859e-35  2.03605e-36
      low eigenvalue method done, cpu time[sec] = 2.00648, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.55e-36         0         1
         *Z       ---       ---  3.87e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.60976e-35  6.67083e-36 -8.01975e-37  2.20902e-35  5.22337e-37 -5.90189e-38 -1.71204e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.9954, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.51462e+08
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.380831, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.31435, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4520.93      447.542      82.9701      122.964      10.9078      1506.04      66.5648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52127, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5317, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.2175e-12  3.20587e-36  4.16007e-37
      low eigenvalue method done, cpu time[sec] = 1.53214, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.21e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.54e-37         0         1
         *Z       ---       ---  3.87e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.59578e-35  3.40927e-35  1.35474e-36  1.50052e-35   3.7501e-37 -9.84459e-38  2.17094e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.9232, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.51462e+09
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.394416, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.83734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            452.093      44.7542      8.29701      12.2964      1.09078      150.604      6.65648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.00782, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.01828, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.13848e-15  5.16038e-37  4.76602e-38
      low eigenvalue method done, cpu time[sec] = 1.01872, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.16e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.08e-38         0         1
         *Z       ---       ---  3.87e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52697e-35  6.12191e-36  2.10238e-37  1.51819e-36  4.31439e-38  4.43916e-38  4.17504e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.95389, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.51462e+10
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.397235, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.42205, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            45.2093      4.47542     0.829701      1.22964     0.109078      15.0604     0.665648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.447754, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003138, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.457979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.10688e-13  6.48708e-38  2.04108e-39
      low eigenvalue method done, cpu time[sec] = 0.458392, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.49e-38         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.13e-39         0         1
         *Z       ---       ---  3.87e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.33195e-36 -1.16708e-36 -3.55647e-38 -2.41297e-37 -7.23942e-39 -2.66978e-38   6.3632e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.9825, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 450 K
            Well    Collision, 1/sec
              W1         1.51462e+11
      global relaxation matrix dimension = 436
      setting global matrices ... done, cpu time[sec] = 0.397049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.64438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4.52093     0.447542    0.0829701     0.122964    0.0109078      1.50604    0.0665648
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.272704, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.003153, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.283079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.79673e-15  6.85958e-39  3.66292e-41
      low eigenvalue method done, cpu time[sec] = 0.283503, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.86e-39         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-40         0         1
         *Z       ---       ---  3.87e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -9.07009e-37  -1.0884e-37 -5.04645e-39 -2.12245e-38  -8.3253e-40 -1.57021e-38 -4.98491e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 8.02701, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 460 K
      Energy reference = 17507 1/cm
      Energy step      = 115 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008239
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.398303
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.25398
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.383156
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.50567
         W1 Well: minimal relaxation eigenvalue = 0.0778889
         W1 Well: maximal relaxation eigenvalue = 1.25096
         W1 Well:       grid size = 427
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31598 1/cm
         B1 Barrier:        grid size = 153
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -87 1/cm
         B2 Barrier:        grid size = 151
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 142 1/cm
         B3 Barrier:        grid size = 193
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4687 1/cm
         B4 Barrier:        grid size = 206
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6182 1/cm
         B5 Barrier: nonpositive number of states at -23203 1/cm => truncating
         B5 Barrier:        grid size = 354
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23202 1/cm
         B6 Barrier:        grid size = 140
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1407 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4627 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.86392, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31598 -23202 4.54e+05 8.03e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -87 1.94e+13
         B2    143 1.94e+12
         B3  -4687 3.65e+11
         B4  -6182 5.37e+11
         B5 -23202 4.79e+10
         B6   1408 6.62e+12
         B7   4628    3e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.22e+20  8.95e+20   3.1e+15     2e+13  7.45e-12  7.85e+23   3.6e+28
          R  2.37e-21         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  1.12e-21     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  3.23e-16  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  4.99e-14  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  1.34e+11  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  1.27e-24  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  2.78e-29  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.22e+17  4.71e+17  1.63e+12  1.05e+10  3.92e-15  4.13e+20   1.9e+25
          R  4.51e-18         1      2.12  7.35e-06  4.75e-08  1.77e-32  1.86e+03  8.54e+07
         P1  2.12e-18     0.471         1  3.46e-06  2.24e-08  8.32e-33       877  4.02e+07
         P2  6.14e-13  1.36e+05  2.89e+05         1   0.00647  2.41e-27  2.53e+08  1.16e+13
         P3  9.49e-11  2.11e+07  4.47e+07       155         1  3.72e-25  3.92e+10   1.8e+15
         P4  2.55e+14  5.66e+31   1.2e+32  4.16e+26  2.69e+24         1  1.05e+35  4.83e+39
         P5  2.42e-21  0.000537   0.00114  3.95e-09  2.55e-11   9.5e-36         1  4.59e+04
         P6  5.28e-26  1.17e-08  2.49e-08   8.6e-14  5.56e-16  2.07e-40  2.18e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.87409, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.48285e+07
      global relaxation matrix dimension = 427
      setting global matrices ... done, cpu time[sec] = 0.379988, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.65588, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48888.1      4896.75      917.831      1352.54      120.702      16655.9      756.571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.1147, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.002987, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12477, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20094e-09  1.62502e-34  1.82985e-35
      low eigenvalue method done, cpu time[sec] = 2.12522, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.63e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.27e-35  2.22e-16         1
         *Z       ---       ---  1.11e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.73736e-34  7.41541e-35  5.54723e-36  1.68927e-34  3.86344e-36  9.76815e-37  4.90132e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.8311, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.48285e+08
      global relaxation matrix dimension = 427
      setting global matrices ... done, cpu time[sec] = 0.365569, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.97969, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4888.81      489.675      91.7831      135.254      12.0702      1665.59      75.6571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.7782, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002978, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.78827, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.04452e-11  2.78158e-35  3.88802e-36
      low eigenvalue method done, cpu time[sec] = 1.78869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-36  2.22e-16         1
         *Z       ---       ---  1.11e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -2.85803e-36  1.10183e-35  -1.7097e-37 -1.67215e-35 -3.42119e-37 -2.62434e-37 -8.24568e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.80119, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.48285e+09
      global relaxation matrix dimension = 427
      setting global matrices ... done, cpu time[sec] = 0.364478, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.59425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            488.881      48.9675      9.17831      13.5254      1.20702      166.559      7.56571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.17932, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002977, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18939, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.31141e-13   4.6629e-36  4.65781e-37
      low eigenvalue method done, cpu time[sec] = 1.18982, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.66e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.63e-37  2.22e-16         1
         *Z       ---       ---  1.11e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  4.88035e-35   1.1964e-35  4.60316e-37  3.53466e-36  9.67329e-38  7.39979e-39 -3.94433e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.82191, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.48285e+10
      global relaxation matrix dimension = 427
      setting global matrices ... done, cpu time[sec] = 0.38203, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.12002, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            48.8881      4.89675     0.917831      1.35254     0.120702      16.6559     0.756571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.667842, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002963, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.677751, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.25367e-13  5.99734e-37  2.09949e-38
      low eigenvalue method done, cpu time[sec] = 0.678181, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-37  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-38  2.22e-16         1
         *Z       ---       ---  1.11e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -1.07313e-35 -2.10732e-36 -6.77105e-38 -4.54109e-37 -1.41318e-38 -6.62784e-38 -1.76935e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.85225, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 460 K
            Well    Collision, 1/sec
              W1         1.48285e+11
      global relaxation matrix dimension = 427
      setting global matrices ... done, cpu time[sec] = 0.380847, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 6.31342, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4.88881     0.489675    0.0917831     0.135254    0.0120702      1.66559    0.0756571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.455062, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002972, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.465163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.75406e-14  6.38874e-38  3.91564e-40
      low eigenvalue method done, cpu time[sec] = 0.46558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.39e-38  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.98e-39  2.22e-16         1
         *Z       ---       ---  1.11e+37
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16 -3.55423e-36 -7.51983e-37 -2.28275e-38 -1.21411e-37 -3.95993e-39 -1.85026e-38 -9.70737e-43

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.83245, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 470 K
      Energy reference = 17785 1/cm
      Energy step      = 117 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008371
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.393379
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.249395
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.374645
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.4691
         W1 Well: minimal relaxation eigenvalue = 0.0766921
         W1 Well: maximal relaxation eigenvalue = 1.23262
         W1 Well:       grid size = 422
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31588 1/cm
         B1 Barrier:        grid size = 153
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -115 1/cm
         B2 Barrier:        grid size = 151
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 118 1/cm
         B3 Barrier:        grid size = 192
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4678 1/cm
         B4 Barrier:        grid size = 205
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 350
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23164 1/cm
         B6 Barrier:        grid size = 140
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1405 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4681 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.80089, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31588 -23164 4.66e+05 8.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -115 2.17e+13
         B2    119  2.2e+12
         B3  -4678 4.17e+11
         B4  -6199 6.11e+11
         B5 -23164 5.49e+10
         B6   1406 7.56e+12
         B7   4682 3.53e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.81e+19  1.01e+20  4.82e+14  3.48e+12  4.36e-12  8.18e+22  3.06e+27
          R  2.08e-20         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  9.91e-21     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  2.07e-15  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  2.88e-13  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  2.29e+11   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  1.22e-23  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  3.26e-28  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.59e+16  5.44e+16   2.6e+11  1.87e+09  2.35e-15  4.41e+19  1.65e+24
          R  3.85e-17         1       2.1     1e-05  7.23e-08  9.06e-32   1.7e+03  6.37e+07
         P1  1.84e-17     0.477         1  4.78e-06  3.45e-08  4.32e-32       811  3.04e+07
         P2  3.84e-12  9.97e+04  2.09e+05         1   0.00721  9.04e-27   1.7e+08  6.35e+12
         P3  5.33e-10  1.38e+07   2.9e+07       139         1  1.25e-24  2.35e+10  8.81e+14
         P4  4.25e+14   1.1e+31  2.31e+31  1.11e+26  7.97e+23         1  1.88e+34  7.02e+38
         P5  2.27e-20  0.000588   0.00123   5.9e-09  4.25e-11  5.33e-35         1  3.74e+04
         P6  6.05e-25  1.57e-08  3.29e-08  1.57e-13  1.13e-15  1.42e-39  2.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.81169, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.45257e+07
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.368218, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.49651, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52782.8      5349.04      1013.44      1484.78      133.318      18381.9      857.483
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.26199, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002928, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.27184, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.38062e-11  1.24175e-33  1.49929e-34
      low eigenvalue method done, cpu time[sec] = 2.27225, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.52e-35         0         1
         *Z       ---       ---  3.36e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.35011e-35 -1.57211e-34 -2.63858e-35 -5.93283e-34 -1.27838e-35   1.0454e-36  2.11811e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.79097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.45257e+08
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.358601, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.98422, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5278.28      534.904      101.344      148.478      13.3318      1838.19      85.7483
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.86356, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002907, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.87342, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.36614e-11  2.21831e-34   3.3044e-35
      low eigenvalue method done, cpu time[sec] = 1.87384, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.22e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-35         0         1
         *Z       ---       ---  3.36e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.05077e-34  7.81677e-35 -4.07331e-36 -1.03859e-34 -2.18118e-36 -1.29769e-37  1.36437e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.86898, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.45257e+09
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.358122, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.3913, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            527.828      53.4904      10.1344      14.8478      1.33318      183.819      8.57483
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35978, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002908, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.36963, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -3.0599e-12   3.8639e-35  4.13092e-36
      low eigenvalue method done, cpu time[sec] = 1.37003, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.86e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.96e-36         0         1
         *Z       ---       ---  3.36e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.44332e-35  -2.4785e-35 -7.37083e-37 -2.94938e-36 -1.15279e-37 -3.06413e-38 -2.16637e-41

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.61355, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.45257e+10
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.366533, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.92243, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.7828      5.34904      1.01344      1.48478     0.133318      18.3819     0.857483
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.830386, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002901, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.840454, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.56417e-13  5.08187e-36   1.9574e-37
      low eigenvalue method done, cpu time[sec] = 0.840875, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.08e-36         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.9e-37         0         1
         *Z       ---       ---  3.36e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.37879e-36  1.44753e-36  3.99688e-38  7.59816e-39  3.62777e-39  2.98261e-37  8.55455e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.78453, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 470 K
            Well    Collision, 1/sec
              W1         1.45257e+11
      global relaxation matrix dimension = 422
      setting global matrices ... done, cpu time[sec] = 0.371889, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.85745, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5.27828     0.534904     0.101344     0.148478    0.0133318      1.83819    0.0857483
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.858824, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002901, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.868734, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.45505e-15  5.45485e-37  3.79539e-39
      low eigenvalue method done, cpu time[sec] = 0.869142, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.45e-37         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.18e-38         0         1
         *Z       ---       ---  3.36e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.13353e-36  1.35082e-36  4.58007e-38  3.14718e-37  9.33157e-39  5.13084e-38  6.18497e-42

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.75332, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 480 K
      Energy reference = 18063 1/cm
      Energy step      = 120 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007597
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.324061
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.239792
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.387566
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.34248
         W1 Well: minimal relaxation eigenvalue = 0.075491
         W1 Well: maximal relaxation eigenvalue = 1.31617
         W1 Well:       grid size = 414
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31617 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -57 1/cm
         B2 Barrier:        grid size = 149
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 182 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4617 1/cm
         B4 Barrier:        grid size = 202
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6177 1/cm
         B5 Barrier: nonpositive number of states at -23217 1/cm => truncating
         B5 Barrier:        grid size = 344
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23217 1/cm
         B6 Barrier:        grid size = 138
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1502 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4622 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.61399, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31617 -23217 4.49e+05 8.98e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -57 2.43e+13
         B2    183 2.49e+12
         B3  -4617 4.76e+11
         B4  -6177 6.94e+11
         B5 -23217 6.27e+10
         B6   1503 8.64e+12
         B7   4623 4.13e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.07e+18  1.26e+19   8.2e+13  6.56e+11  2.64e-12  9.47e+21  2.92e+26
          R  1.65e-19         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  7.95e-20     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  1.22e-14   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  1.52e-12  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  3.79e+11   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  1.06e-22  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  3.43e-27  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.32e+15  6.87e+15  4.48e+10  3.58e+08  1.44e-15  5.17e+18  1.59e+23
          R  3.02e-16         1      2.07  1.35e-05  1.08e-07  4.34e-31  1.56e+03   4.8e+07
         P1  1.46e-16     0.483         1  6.52e-06  5.21e-08   2.1e-31       752  2.32e+07
         P2  2.23e-11   7.4e+04  1.53e+05         1     0.008  3.22e-26  1.15e+08  3.56e+12
         P3  2.79e-09  9.25e+06  1.92e+07       125         1  4.02e-24  1.44e+10  4.45e+14
         P4  6.94e+14   2.3e+30  4.77e+30  3.11e+25  2.49e+23         1  3.59e+33  1.11e+38
         P5  1.93e-19  0.000642   0.00133  8.67e-09  6.93e-11  2.79e-34         1  3.08e+04
         P6  6.28e-24  2.08e-08  4.31e-08  2.81e-13  2.25e-15  9.04e-39  3.24e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.62457, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.42369e+07
      global relaxation matrix dimension = 414
      setting global matrices ... done, cpu time[sec] = 0.35522, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.32883, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56897.8      5833.98      1117.01      1626.82       146.99      20245.7      969.201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.33867, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002804, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.34835, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.20516e-10  8.57789e-33  1.10001e-33
      low eigenvalue method done, cpu time[sec] = 2.34877, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.58e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.48e-34  2.22e-16         1
         *Z       ---       ---  1.08e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -2.0999e-33 -1.10714e-33 -7.46214e-35  4.26005e-35   -5.881e-36  4.92433e-36  3.99965e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.66574, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.42369e+08
      global relaxation matrix dimension = 414
      setting global matrices ... done, cpu time[sec] = 0.345509, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.62427, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5689.78      583.398      111.701      162.682       14.699      2024.57      96.9201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.02933, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.03885, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.87678e-11  1.59614e-33  2.51354e-34
      low eigenvalue method done, cpu time[sec] = 2.03925, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.6e-33  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-34  2.22e-16         1
         *Z       ---       ---  1.08e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.18182e-34  -3.6914e-35 -6.03553e-36 -1.33154e-34 -3.21556e-36  3.27092e-37 -7.21697e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.64684, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.42369e+09
      global relaxation matrix dimension = 414
      setting global matrices ... done, cpu time[sec] = 0.348641, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.1621, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            568.978      58.3398      11.1701      16.2682       1.4699      202.457      9.69201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4903, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -7.8307e-12  2.88441e-34  3.27641e-35
      low eigenvalue method done, cpu time[sec] = 1.5002, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.88e-34  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.18e-35  2.22e-16         1
         *Z       ---       ---  1.08e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  -5.1647e-34 -1.22884e-34 -3.88614e-36 -3.04657e-35 -8.86797e-37 -1.08109e-36 -1.03975e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.64251, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.42369e+10
      global relaxation matrix dimension = 414
      setting global matrices ... done, cpu time[sec] = 0.343901, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.57046, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            56.8978      5.83398      1.11701      1.62682      0.14699      20.2457     0.969201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05566, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002766, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.06496, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.71966e-13  3.87859e-35  1.63092e-36
      low eigenvalue method done, cpu time[sec] = 1.06537, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.88e-35  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-36  2.22e-16         1
         *Z       ---       ---  1.08e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.77914e-34  3.81109e-35  1.18048e-36  5.18993e-36  1.86394e-37  1.05636e-36  1.72773e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.61121, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 480 K
            Well    Collision, 1/sec
              W1         1.42369e+11
      global relaxation matrix dimension = 414
      setting global matrices ... done, cpu time[sec] = 0.356747, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.75418, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5.68978     0.583398     0.111701     0.162682     0.014699      2.02457    0.0969201
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.861617, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002769, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.871213, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.80762e-14  4.19638e-36  3.28952e-38
      low eigenvalue method done, cpu time[sec] = 0.871618, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.2e-36  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.17e-37  2.22e-16         1
         *Z       ---       ---  1.08e+36
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.6976e-35   2.1222e-36  8.00021e-38  1.63221e-37  1.03507e-38  2.61947e-37  1.13852e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.46044, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 490 K
      Energy reference = 18341 1/cm
      Energy step      = 122 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.008008
         W1 Well: collisional kernel bandwidth = 46
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.377134
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.234937
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.315939
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.3156
         W1 Well: minimal relaxation eigenvalue = 0.0743245
         W1 Well: maximal relaxation eigenvalue = 3.28937
         W1 Well:       grid size = 410
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31679 1/cm
         B1 Barrier:        grid size = 151
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -80 1/cm
         B2 Barrier:        grid size = 149
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 163 1/cm
         B3 Barrier:        grid size = 189
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4716 1/cm
         B4 Barrier:        grid size = 201
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6181 1/cm
         B5 Barrier: nonpositive number of states at -23139 1/cm => truncating
         B5 Barrier:        grid size = 340
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23138 1/cm
         B6 Barrier:        grid size = 139
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1383 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4677 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.5555, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31679 -23138 4.75e+05 9.49e+11
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -80 2.71e+13
         B2    164 2.81e+12
         B3  -4716 5.43e+11
         B4  -6181 7.87e+11
         B5 -23138 7.15e+10
         B6   1384 9.84e+12
         B7   4678 4.83e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  8.27e+17  1.69e+18  1.49e+13  1.31e+11  1.61e-12  1.18e+21  3.03e+25
          R  1.21e-18         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1   5.9e-19     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  6.73e-14  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  7.61e-12  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4   6.2e+11  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  8.44e-22  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6   3.3e-26  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.61e+14  9.44e+14  8.28e+09  7.32e+07     9e-16   6.6e+17  1.69e+22
          R  2.17e-15         1      2.05   1.8e-05  1.59e-07  1.95e-30  1.43e+03  3.67e+07
         P1  1.06e-15     0.488         1  8.77e-06  7.76e-08  9.53e-31       699  1.79e+07
         P2  1.21e-10  5.56e+04  1.14e+05         1   0.00884  1.09e-25  7.97e+07  2.04e+12
         P3  1.37e-08  6.29e+06  1.29e+07       113         1  1.23e-23  9.02e+09  2.31e+14
         P4  1.11e+15  5.12e+29  1.05e+30  9.21e+24  8.14e+22         1  7.34e+32  1.88e+37
         P5  1.51e-18  0.000698   0.00143  1.25e-08  1.11e-10  1.36e-33         1  2.56e+04
         P6  5.92e-23  2.73e-08  5.59e-08   4.9e-13  4.33e-15  5.32e-38  3.91e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.56542, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.39613e+07
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.349587, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.09974, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61243.1       6353.3      1229.02      1779.46      161.783      22254.9      1092.59
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.44213, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002746, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.48292, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.49526e-10  5.58437e-32  7.56089e-33
      low eigenvalue method done, cpu time[sec] = 2.48332, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.58e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-33         0         1
         *Z       ---       ---  3.62e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.37841e-33 -2.93263e-33 -2.34366e-34 -2.35981e-33 -5.54251e-35   2.9314e-36 -1.95869e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.57012, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.39613e+08
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.34431, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.51703, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6124.31       635.33      122.902      177.946      16.1783      2225.49      109.259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05173, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002736, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.0912, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41312e-11  1.08076e-32  1.78725e-33
      low eigenvalue method done, cpu time[sec] = 2.09162, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.08e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.03e-34         0         1
         *Z       ---       ---  3.62e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.57921e-33  1.48325e-33  7.60846e-35  1.23017e-33  2.88539e-35  2.19618e-36  -4.1057e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.56877, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.39613e+09
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.337352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.03916, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            612.431       63.533      12.2902      17.7946      1.61783      222.549      10.9259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53213, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002722, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57159, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.89141e-13  2.02287e-33  2.42505e-34
      low eigenvalue method done, cpu time[sec] = 1.57199, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.02e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-34         0         1
         *Z       ---       ---  3.62e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -1.58957e-34  2.21193e-34  9.60108e-36  1.18774e-34   2.6936e-36 -7.49282e-36  2.23461e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.56153, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.39613e+10
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.336997, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.38334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            61.2431       6.3533      1.22902      1.77946     0.161783      22.2549      1.09259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.13764, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002719, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.17792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -6.0399e-13  2.78001e-34  1.26666e-35
      low eigenvalue method done, cpu time[sec] = 1.17831, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-35         0         1
         *Z       ---       ---  3.62e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -5.56942e-34 -1.22833e-34 -3.77297e-36 -1.83162e-35 -6.40113e-37 -5.16666e-36 -4.53052e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.51304, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 490 K
            Well    Collision, 1/sec
              W1         1.39613e+11
      global relaxation matrix dimension = 410
      setting global matrices ... done, cpu time[sec] = 0.349942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.57629, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.12431      0.63533     0.122902     0.177946    0.0161783      2.22549     0.109259
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.945272, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002729, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.43712e-14  3.03248e-35  2.65815e-37
      low eigenvalue method done, cpu time[sec] = 0.985409, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.03e-35         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.25e-36         0         1
         *Z       ---       ---  3.62e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.79657e-35  1.05072e-36  5.25087e-38 -4.68764e-38  4.20819e-39 -1.70837e-37 -4.60595e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.53003, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 500 K
      Energy reference = 18619 1/cm
      Energy step      = 125 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007929
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.307627
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.226691
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.373793
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.28415
         W1 Well: minimal relaxation eigenvalue = 0.0732896
         W1 Well: maximal relaxation eigenvalue = 1.38211
         W1 Well:       grid size = 402
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -5 1/cm
         B2 Barrier:        grid size = 148
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 119 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4630 1/cm
         B4 Barrier:        grid size = 199
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6255 1/cm
         B5 Barrier: nonpositive number of states at -23131 1/cm => truncating
         B5 Barrier:        grid size = 334
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23130 1/cm
         B6 Barrier:        grid size = 137
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1494 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4619 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.50349, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23130 4.78e+05    1e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -5 3.02e+13
         B2    120 3.17e+12
         B3  -4630 6.19e+11
         B4  -6255 8.91e+11
         B5 -23130 8.15e+10
         B6   1495 1.12e+13
         B7   4619 5.63e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e+17  2.47e+17  2.89e+12  2.81e+10  1.01e-12  1.61e+20  3.45e+24
          R  8.19e-18         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  4.04e-18     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2  3.46e-13  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  3.56e-11  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  9.91e+11  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5   6.2e-21  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6   2.9e-25  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.93e+13   1.4e+14  1.64e+09  1.59e+07  5.72e-16  9.16e+16  1.96e+21
          R  1.44e-14         1      2.03  2.37e-05   2.3e-07  8.26e-30  1.32e+03  2.83e+07
         P1  7.12e-15     0.493         1  1.17e-05  1.14e-07  4.08e-30       652   1.4e+07
         P2   6.1e-10  4.23e+04  8.57e+04         1   0.00973  3.49e-25  5.59e+07   1.2e+12
         P3  6.27e-08  4.34e+06  8.81e+06       103         1  3.59e-23  5.74e+09  1.23e+14
         P4  1.75e+15  1.21e+29  2.45e+29  2.86e+24  2.79e+22         1   1.6e+32  3.42e+36
         P5  1.09e-17  0.000756   0.00153  1.79e-08  1.74e-10  6.25e-33         1  2.14e+04
         P6   5.1e-22  3.53e-08  7.17e-08  8.36e-13  8.14e-15  2.92e-37  4.67e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.51343, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.36978e+07
      global relaxation matrix dimension = 402
      setting global matrices ... done, cpu time[sec] = 0.335611, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.92485, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65823.6      6908.59      1349.98      1943.37      177.766      24417.4      1228.57
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.40794, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.223301, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.63782, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.49203e-09  3.34066e-31  4.76288e-32
      low eigenvalue method done, cpu time[sec] = 2.63822, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.34e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.45e-32         0         1
         *Z       ---       ---  1.27e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -6.90469e-33 -2.93437e-33  4.89874e-35  4.50624e-33  7.85542e-35 -7.77772e-35  -6.2712e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.51838, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.36978e+08
      global relaxation matrix dimension = 402
      setting global matrices ... done, cpu time[sec] = 0.33674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27768, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6582.36      690.859      134.998      194.337      17.7766      2441.74      122.857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.21659, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002574, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.22588, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34794e-10  6.71579e-32  1.16201e-32
      low eigenvalue method done, cpu time[sec] = 2.22634, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.72e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.92e-33         0         1
         *Z       ---       ---  1.27e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -7.2633e-34  -3.8008e-34  5.22921e-35  1.43581e-33  3.01093e-35 -1.67549e-36  1.20261e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.45352, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.36978e+09
      global relaxation matrix dimension = 402
      setting global matrices ... done, cpu time[sec] = 0.328479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.70193, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            658.236      69.0859      13.4998      19.4337      1.77766      244.174      12.2857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.79549, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002594, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80464, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.19731e-12  1.29991e-32  1.63866e-33
      low eigenvalue method done, cpu time[sec] = 1.80504, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.3e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.53e-34         0         1
         *Z       ---       ---  1.27e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  -1.3249e-33 -4.16435e-34 -1.49063e-36  8.51563e-35  1.21647e-36  -5.4278e-36 -4.87135e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.4437, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.36978e+10
      global relaxation matrix dimension = 402
      setting global matrices ... done, cpu time[sec] = 0.325514, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.16023, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            65.8236      6.90859      1.34998      1.94337     0.177766      24.4174      1.22857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.34621, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002596, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.35507, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.70516e-13  1.82524e-33  8.97274e-35
      low eigenvalue method done, cpu time[sec] = 1.35547, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.83e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.34e-34         0         1
         *Z       ---       ---  1.27e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -8.89016e-34 -6.88554e-35 -4.14235e-36 -9.87075e-36 -5.44372e-37  -1.6479e-35  1.19281e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.45137, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 500 K
            Well    Collision, 1/sec
              W1         1.36978e+11
      global relaxation matrix dimension = 402
      setting global matrices ... done, cpu time[sec] = 0.326085, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.37684, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6.58236     0.690859     0.134998     0.194337    0.0177766      2.44174     0.122857
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.185, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002584, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19392, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.1285e-14   2.0079e-34  1.95978e-36
      low eigenvalue method done, cpu time[sec] = 1.19432, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-34         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.47e-35         0         1
         *Z       ---       ---  1.27e+35
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.78926e-34  3.05502e-35   9.8929e-37  3.70172e-36  1.50697e-37  2.05488e-36  6.82674e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.50443, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 510 K
      Energy reference = 18897 1/cm
      Energy step      = 127 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007544
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.369249
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.222198
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.366525
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.26831
         W1 Well: minimal relaxation eigenvalue = 0.0722355
         W1 Well: maximal relaxation eigenvalue = 1.56234
         W1 Well:       grid size = 398
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31648 1/cm
         B1 Barrier:        grid size = 149
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 148
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 186
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4724 1/cm
         B4 Barrier:        grid size = 198
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6248 1/cm
         B5 Barrier: nonpositive number of states at -23267 1/cm => truncating
         B5 Barrier:        grid size = 332
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23266 1/cm
         B6 Barrier:        grid size = 137
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1498 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4673 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.53816, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31648 -23266 4.33e+05 1.06e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 3.36e+13
         B2    101 3.57e+12
         B3  -4724 7.04e+11
         B4  -6248 1.01e+12
         B5 -23266 9.27e+10
         B6   1499 1.27e+13
         B7   4673 6.55e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.95e+16  3.91e+16     6e+11   6.4e+09  6.44e-13  2.38e+19  4.29e+23
          R  5.14e-17         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  2.56e-17     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2  1.67e-12  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  1.56e-10  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4  1.55e+12  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5   4.2e-20  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  2.33e-24  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.12e+13  2.25e+13  3.45e+08  3.68e+06  3.71e-16  1.37e+16  2.47e+20
          R  8.92e-14         1      2.01  3.08e-05  3.29e-07  3.31e-29  1.22e+03   2.2e+07
         P1  4.44e-14     0.498         1  1.53e-05  1.64e-07  1.65e-29       609   1.1e+07
         P2   2.9e-09  3.25e+04  6.52e+04         1    0.0107  1.07e-24  3.97e+07  7.16e+11
         P3  2.71e-07  3.04e+06  6.11e+06      93.7         1  1.01e-22  3.72e+09  6.71e+13
         P4   2.7e+15  3.02e+28  6.07e+28  9.31e+23  9.94e+21         1   3.7e+31  6.67e+35
         P5  7.29e-17  0.000818   0.00164  2.52e-08  2.69e-10   2.7e-32         1   1.8e+04
         P6  4.05e-21  4.54e-08   9.1e-08   1.4e-12  1.49e-14   1.5e-36  5.55e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.54817, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.34459e+07
      global relaxation matrix dimension = 398
      setting global matrices ... done, cpu time[sec] = 0.328955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.90636, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              70647      7501.78      1480.43      2119.17      195.009        26741      1378.09
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.35015, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.256245, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.63251, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.14029e-10  1.87456e-30  2.79827e-31
      low eigenvalue method done, cpu time[sec] = 2.64867, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.87e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-31         0         1
         *Z       ---       ---  4.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.1369e-31   7.0253e-32  6.56396e-33  9.40701e-32  2.12495e-33   9.0292e-36 -1.00444e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.53681, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.34459e+08
      global relaxation matrix dimension = 398
      setting global matrices ... done, cpu time[sec] = 0.328953, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.24012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7064.7      750.178      148.043      211.917      19.5009       2674.1      137.809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.34757, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.012219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.36661, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.54261e-10  3.90971e-31  7.04077e-32
      low eigenvalue method done, cpu time[sec] = 2.36736, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.91e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.82e-32         0         1
         *Z       ---       ---  4.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.68134e-32  2.84639e-32   9.6864e-34  1.01011e-32  2.55977e-34  3.02301e-35 -5.91877e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.51944, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.34459e+09
      global relaxation matrix dimension = 398
      setting global matrices ... done, cpu time[sec] = 0.330968, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.59736, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             706.47      75.0178      14.8043      21.1917      1.95009       267.41      13.7809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.89136, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002536, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9003, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.76976e-12  7.81657e-32  1.03069e-32
      low eigenvalue method done, cpu time[sec] = 1.9007, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.82e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.65e-33         0         1
         *Z       ---       ---  4.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.78071e-32  5.70613e-33  1.51062e-34  8.59828e-34  2.70109e-35  4.09409e-35 -2.10656e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.42162, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.34459e+10
      global relaxation matrix dimension = 398
      setting global matrices ... done, cpu time[sec] = 0.322174, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.05841, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             70.647      7.50178      1.48043      2.11917     0.195009       26.741      1.37809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45003, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002525, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4589, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.25639e-12  1.12111e-32  5.91008e-34
      low eigenvalue method done, cpu time[sec] = 1.45931, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.1e-34         0         1
         *Z       ---       ---  4.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -3.05057e-33 -5.06977e-34 -1.61272e-35  -4.3769e-35 -2.07357e-36 -1.88395e-35  5.51579e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.42172, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 510 K
            Well    Collision, 1/sec
              W1         1.34459e+11
      global relaxation matrix dimension = 398
      setting global matrices ... done, cpu time[sec] = 0.319945, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 5.19138, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             7.0647     0.750178     0.148043     0.211917    0.0195009       2.6741     0.137809
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.28105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002496, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.28984, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.43362e-14  1.24411e-33   1.3436e-35
      low eigenvalue method done, cpu time[sec] = 1.29024, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.24e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.99e-35         0         1
         *Z       ---       ---  4.66e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.08207e-36  9.82641e-36  3.56454e-37  3.36521e-36  8.63511e-38  2.25538e-36 -1.30389e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.38284, elapsed time[sec] = 1
   MasterEquation::set:  starts
      Temperature      = 520 K
      Energy reference = 19175 1/cm
      Energy step      = 130 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007702
         W1 Well: collisional kernel bandwidth = 45
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.343406
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.210718
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.275054
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.1496
         W1 Well: minimal relaxation eigenvalue = 0.0711963
         W1 Well: maximal relaxation eigenvalue = 1.62472
         W1 Well:       grid size = 391
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31655 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -64 1/cm
         B2 Barrier:        grid size = 146
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 195 1/cm
         B3 Barrier:        grid size = 183
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4614 1/cm
         B4 Barrier:        grid size = 196
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6305 1/cm
         B5 Barrier: nonpositive number of states at -23205 1/cm => truncating
         B5 Barrier:        grid size = 326
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23205 1/cm
         B6 Barrier:        grid size = 136
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1494 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4615 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.28587, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31655 -23205 4.53e+05 1.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -64 3.74e+13
         B2    196 4.01e+12
         B3  -4614    8e+11
         B4  -6305 1.14e+12
         B5 -23205 1.05e+11
         B6   1495 1.44e+13
         B7   4616 7.61e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.3e+15  6.57e+15  1.31e+11  1.53e+09  4.14e-13  3.75e+18  5.73e+22
          R  3.03e-16         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  1.52e-16     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2  7.64e-12  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  6.55e-10  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4  2.42e+12  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  2.67e-19  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  1.75e-23  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.95e+12  3.87e+12  7.72e+07     9e+05  2.44e-16  2.21e+15  3.37e+19
          R  5.14e-13         1      1.99  3.97e-05  4.63e-07  1.25e-28  1.13e+03  1.73e+07
         P1  2.59e-13     0.503         1  1.99e-05  2.33e-07  6.31e-29       571  8.72e+06
         P2   1.3e-08  2.52e+04  5.01e+04         1    0.0117  3.16e-24  2.86e+07  4.37e+11
         P3  1.11e-06  2.16e+06   4.3e+06      85.7         1  2.71e-22  2.45e+09  3.75e+13
         P4   4.1e+15  7.97e+27  1.59e+28  3.16e+23  3.69e+21         1  9.05e+30  1.38e+35
         P5  4.53e-16  0.000881   0.00175   3.5e-08  4.08e-10  1.11e-31         1  1.53e+04
         P6  2.96e-20  5.76e-08  1.15e-07  2.29e-12  2.67e-14  7.23e-36  6.54e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.29645, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.32047e+07
      global relaxation matrix dimension = 391
      setting global matrices ... done, cpu time[sec] = 0.317285, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.58834, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75721.9      8134.61      1620.92      2307.49      213.587      29233.9      1542.17
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.23497, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.220716, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.4628, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.24505e-10  9.86688e-30  1.53621e-30
      low eigenvalue method done, cpu time[sec] = 2.47869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.87e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.02e-31         0         1
         *Z       ---       ---  1.77e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.94067e-31   3.2083e-31  2.48854e-32   3.6845e-31  8.20942e-33  4.75644e-34 -2.66207e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.99322, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.32047e+08
      global relaxation matrix dimension = 391
      setting global matrices ... done, cpu time[sec] = 0.316433, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.94069, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7572.19      813.461      162.092      230.749      21.3587      2923.39      154.217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.23839, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.219851, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.46548, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.08644e-11  2.13244e-30  3.98223e-31
      low eigenvalue method done, cpu time[sec] = 2.48284, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.13e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.52e-31         0         1
         *Z       ---       ---  1.77e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.66944e-31    1.095e-31  3.31218e-33  2.97576e-32  7.75766e-34  1.03967e-34 -1.97653e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.31546, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.32047e+09
      global relaxation matrix dimension = 391
      setting global matrices ... done, cpu time[sec] = 0.317893, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.3663, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            757.219      81.3461      16.2092      23.0749      2.13587      292.339      15.4217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.05959, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002408, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.06808, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.52338e-12  4.39867e-31  6.04544e-32
      low eigenvalue method done, cpu time[sec] = 2.06847, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   4.4e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.13e-32         0         1
         *Z       ---       ---  1.77e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.73279e-32  1.16038e-32  3.20986e-34  2.24197e-33  6.67192e-35  4.18911e-35  1.11991e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.31255, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.32047e+10
      global relaxation matrix dimension = 391
      setting global matrices ... done, cpu time[sec] = 0.311166, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.82616, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            75.7219      8.13461      1.62092      2.30749     0.213587      29.2339      1.54217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56788, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002433, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.57633, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.40436e-12  6.44331e-32  3.62715e-33
      low eigenvalue method done, cpu time[sec] = 1.57672, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.44e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.59e-33         0         1
         *Z       ---       ---  1.77e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0 -7.06341e-34 -6.01092e-34  -1.1712e-35 -9.44487e-35 -2.61044e-36  1.41772e-35  5.17724e-39

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.27188, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 520 K
            Well    Collision, 1/sec
              W1         1.32047e+11
      global relaxation matrix dimension = 391
      setting global matrices ... done, cpu time[sec] = 0.308053, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.99232, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7.57219     0.813461     0.162092     0.230749    0.0213587      2.92339     0.154217
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.39277, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002418, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.40152, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.70145e-14  7.21501e-33  8.58481e-35
      low eigenvalue method done, cpu time[sec] = 1.40191, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.22e-33         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.14e-34         0         1
         *Z       ---       ---  1.77e+34
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.63285e-33  2.85278e-34  8.98429e-36  3.70111e-35  1.41397e-36  1.22582e-35 -5.17777e-40

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.25976, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 530 K
      Energy reference = 19453 1/cm
      Energy step      = 132 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007576
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.334787
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.204233
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.321551
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.154
         W1 Well: minimal relaxation eigenvalue = 0.0702205
         W1 Well: maximal relaxation eigenvalue = 1.37101
         W1 Well:       grid size = 387
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31630 1/cm
         B1 Barrier:        grid size = 148
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -82 1/cm
         B2 Barrier:        grid size = 146
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 181 1/cm
         B3 Barrier:        grid size = 183
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4703 1/cm
         B4 Barrier:        grid size = 195
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6287 1/cm
         B5 Barrier: nonpositive number of states at -23183 1/cm => truncating
         B5 Barrier:        grid size = 323
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23183 1/cm
         B6 Barrier:        grid size = 136
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1500 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4669 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.32319, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31630 -23183  4.6e+05 1.18e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -82 4.15e+13
         B2    182 4.51e+12
         B3  -4703 9.07e+11
         B4  -6287 1.28e+12
         B5 -23183  1.2e+11
         B6   1501 1.63e+13
         B7   4670 8.81e+11
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.04e+14  1.19e+15  3.06e+10  3.88e+08  2.73e-13  6.37e+17  8.32e+21
          R  1.66e-15         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1   8.4e-16     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  3.27e-11  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  2.57e-09  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  3.66e+12  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  1.57e-18  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6   1.2e-22  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   3.6e+11  7.11e+11  1.82e+07  2.32e+05  1.63e-16   3.8e+14  4.96e+18
          R  2.77e-12         1      1.97  5.06e-05  6.43e-07  4.52e-28  1.06e+03  1.38e+07
         P1  1.41e-12     0.507         1  2.57e-05  3.26e-07   2.3e-28       535  6.99e+06
         P2  5.48e-08  1.98e+04  3.89e+04         1    0.0127  8.94e-24  2.08e+07  2.72e+11
         P3  4.31e-06  1.55e+06  3.06e+06      78.7         1  7.03e-22  1.64e+09  2.14e+13
         P4  6.13e+15  2.21e+27  4.36e+27  1.12e+23  1.42e+21         1  2.33e+30  3.04e+34
         P5  2.63e-15  0.000948   0.00187   4.8e-08   6.1e-10  4.29e-31         1  1.31e+04
         P6  2.01e-19  7.26e-08  1.43e-07  3.68e-12  4.67e-14  3.29e-35  7.66e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.33344, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.29735e+07
      global relaxation matrix dimension = 387
      setting global matrices ... done, cpu time[sec] = 0.312665, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.56569, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81052.5      8809.03         1772      2508.98      233.575      31904.5      1721.84
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.17548, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.215348, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.39783, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.11372e-09  4.86758e-29  7.87919e-30
      low eigenvalue method done, cpu time[sec] = 2.41321, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.87e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.42e-30         0         1
         *Z       ---       ---  6.99e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.58672e-30  1.87052e-30  1.43724e-31  2.08484e-30   4.7823e-32  8.24596e-34 -4.69651e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.87854, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.29735e+08
      global relaxation matrix dimension = 387
      setting global matrices ... done, cpu time[sec] = 0.311392, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.85802, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8105.25      880.903        177.2      250.898      23.3575      3190.45      172.184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.1705, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.215444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.39285, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.22688e-10  1.08876e-29  2.10182e-30
      low eigenvalue method done, cpu time[sec] = 2.40835, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.09e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.65e-31         0         1
         *Z       ---       ---  6.99e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.46309e-30  6.36298e-31   1.9922e-32  1.79932e-31  4.74143e-33  7.23176e-34  1.82153e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.16013, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.29735e+09
      global relaxation matrix dimension = 387
      setting global matrices ... done, cpu time[sec] = 0.31037, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27345, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            810.525      88.0903        17.72      25.0898      2.33575      319.045      17.2184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08649, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002349, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09468, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15905e-13  2.31446e-30  3.30514e-31
      low eigenvalue method done, cpu time[sec] = 2.09505, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.63e-31         0         1
         *Z       ---       ---  6.99e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.36563e-31  9.62671e-32  2.66257e-33  1.80549e-32  5.32893e-34  7.71681e-34 -9.42425e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22968, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.29735e+10
      global relaxation matrix dimension = 387
      setting global matrices ... done, cpu time[sec] = 0.304623, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.69921, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            81.0525      8.80903        1.772      2.50898     0.233575      31.9045      1.72184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.6601, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002384, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66846, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    1.566e-12   3.4616e-31  2.07272e-32
      low eigenvalue method done, cpu time[sec] = 1.66919, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.46e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.43e-32         0         1
         *Z       ---       ---  6.99e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.14024e-33  2.18612e-33  4.36069e-35  3.84259e-34  9.96308e-36 -6.66494e-35  2.05947e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22228, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 530 K
            Well    Collision, 1/sec
              W1         1.29735e+11
      global relaxation matrix dimension = 387
      setting global matrices ... done, cpu time[sec] = 0.302725, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.87498, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.10525     0.880903       0.1772     0.250898    0.0233575      3.19045     0.172184
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.49105, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.49962, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.59156e-14  3.91231e-32  5.10708e-34
      low eigenvalue method done, cpu time[sec] = 1.50001, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.91e-32         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.75e-33         0         1
         *Z       ---       ---  6.99e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.28442e-33  1.33403e-34  1.01794e-35 -1.65798e-36  9.09284e-37  8.63838e-35  6.73452e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.22998, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 540 K
      Energy reference = 19731 1/cm
      Energy step      = 135 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007589
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.333806
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.19712
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.308552
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.07149
         W1 Well: minimal relaxation eigenvalue = 0.0692709
         W1 Well: maximal relaxation eigenvalue = 1.09838
         W1 Well:       grid size = 380
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 147
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -114 1/cm
         B2 Barrier:        grid size = 145
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 155 1/cm
         B3 Barrier:        grid size = 181
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4704 1/cm
         B4 Barrier:        grid size = 192
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6189 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 318
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23199 1/cm
         B6 Barrier:        grid size = 136
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1370 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4610 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.21903, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23199 4.55e+05 1.25e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -114  4.6e+13
         B2    156 5.06e+12
         B3  -4704 1.03e+12
         B4  -6189 1.45e+12
         B5 -23199 1.36e+11
         B6   1371 1.85e+13
         B7   4611 1.02e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.15e+14  2.24e+14  7.35e+09  1.01e+08  1.79e-13  1.13e+17  1.27e+21
          R  8.71e-15         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1  4.46e-15     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2  1.36e-10  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  9.87e-09  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4   5.6e+12  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  8.86e-18   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6   7.9e-22  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.11e+10  1.39e+11  4.55e+06  6.28e+04  1.11e-16  6.99e+13  7.84e+17
          R  1.41e-11         1      1.95   6.4e-05  8.83e-07  1.56e-27       984   1.1e+07
         P1   7.2e-12     0.512         1  3.27e-05  4.52e-07  7.96e-28       503  5.64e+06
         P2   2.2e-07  1.56e+04  3.05e+04         1    0.0138  2.43e-23  1.54e+07  1.72e+11
         P3  1.59e-05  1.13e+06  2.21e+06      72.5         1  1.76e-21  1.11e+09  1.25e+13
         P4  9.04e+15  6.42e+26  1.26e+27  4.11e+22  5.67e+20         1  6.32e+29  7.08e+33
         P5  1.43e-14   0.00102   0.00199  6.51e-08  8.98e-10  1.58e-30         1  1.12e+04
         P6  1.28e-18  9.07e-08  1.77e-07  5.81e-12  8.01e-14  1.41e-34  8.92e-05         1
   MasterEquation::set:  done, cpu time[sec] = 2.22895, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27519e+07
      global relaxation matrix dimension = 380
      setting global matrices ... done, cpu time[sec] = 0.300092, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.18969, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86649.3      9526.89      1934.28       2724.3      255.054      34761.2      1918.21
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 2.08595, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002299, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09381, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.37202e-14  2.30216e-28  3.86358e-29
      low eigenvalue method done, cpu time[sec] = 2.0942, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.3e-28  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.59e-29  2.22e-16         1
         *Z       ---       ---  2.83e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.75068e-29   9.1562e-30  7.41355e-31  1.11173e-29  2.52691e-31  4.03445e-33  3.41673e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.13222, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27519e+08
      global relaxation matrix dimension = 380
      setting global matrices ... done, cpu time[sec] = 0.300158, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.34468, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8664.93      952.689      193.428       272.43      25.5054      3476.12      191.821
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.95602, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002244, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.96396, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.30225e-15  5.32329e-29  1.05958e-29
      low eigenvalue method done, cpu time[sec] = 1.96434, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.32e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.69e-30  2.22e-16         1
         *Z       ---       ---  2.83e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.17455e-30  2.63134e-30  8.26718e-32  7.67175e-31  2.00771e-32  4.26753e-33  2.73277e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.13335, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27519e+09
      global relaxation matrix dimension = 380
      setting global matrices ... done, cpu time[sec] = 0.299942, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.60896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            866.493      95.2689      19.3428       27.243      2.55054      347.612      19.1821
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72211, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002265, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73004, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.30853e-14  1.16503e-29  1.72434e-30
      low eigenvalue method done, cpu time[sec] = 1.73074, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-29  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.07e-31  2.22e-16         1
         *Z       ---       ---  2.83e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.26165e-30  3.58514e-31  9.85759e-33  6.32104e-32   1.9172e-33  2.66942e-33  2.23422e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.16936, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27519e+10
      global relaxation matrix dimension = 380
      setting global matrices ... done, cpu time[sec] = 0.294935, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.77784, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            86.6493      9.52689      1.93428       2.7243     0.255054      34.7612      1.91821
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.52448, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002271, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53279, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.92209e-15  1.77882e-30  1.12936e-31
      low eigenvalue method done, cpu time[sec] = 1.53317, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.78e-30  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.23e-31  2.22e-16         1
         *Z       ---       ---  2.83e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.22169e-31  2.39184e-32  7.96917e-34  4.35336e-33  1.43144e-34  1.13312e-33  1.65742e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.13394, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 540 K
            Well    Collision, 1/sec
              W1         1.27519e+11
      global relaxation matrix dimension = 380
      setting global matrices ... done, cpu time[sec] = 0.293843, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.87995, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            8.66493     0.952689     0.193428      0.27243    0.0255054      3.47612     0.191821
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.41967, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002257, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.42762, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.21047e-14  2.02975e-31  2.89711e-33
      low eigenvalue method done, cpu time[sec] = 1.42801, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.03e-31  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-32  2.22e-16         1
         *Z       ---       ---  2.83e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.49189e-33  3.23412e-34  2.54534e-35  2.48747e-34  6.46134e-36  5.81901e-35 -7.25169e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.13316, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 550 K
      Energy reference = 20009 1/cm
      Energy step      = 138 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007456
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.294423
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.19073
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.328864
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.03092
         W1 Well: minimal relaxation eigenvalue = 0.0684086
         W1 Well: maximal relaxation eigenvalue = 1.25556
         W1 Well:       grid size = 374
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31603 1/cm
         B1 Barrier:        grid size = 145
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = 0 1/cm
         B2 Barrier:        grid size = 144
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 136 1/cm
         B3 Barrier:        grid size = 179
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4692 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6210 1/cm
         B5 Barrier: nonpositive number of states at -23185 1/cm => truncating
         B5 Barrier:        grid size = 313
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23184 1/cm
         B6 Barrier:        grid size = 135
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1379 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4691 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.15064, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31603 -23184  4.6e+05 1.32e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1      0  5.1e+13
         B2    137 5.67e+12
         B3  -4692 1.16e+12
         B4  -6210 1.63e+12
         B5 -23184 1.53e+11
         B6   1380 2.09e+13
         B7   4691 1.18e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.33e+13  4.53e+13  1.87e+09   2.8e+07   1.2e-13  2.15e+16  2.08e+20
          R  4.28e-14         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  2.21e-14     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  5.34e-10  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  3.57e-08  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  8.36e+12  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  4.66e-17   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  4.81e-21  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.49e+10  2.88e+10  1.19e+06  1.78e+04  7.61e-17  1.37e+13  1.32e+17
          R  6.73e-11         1      1.94  8.03e-05   1.2e-06  5.12e-27       919   8.9e+06
         P1  3.47e-11     0.516         1  4.14e-05  6.18e-07  2.64e-27       474  4.59e+06
         P2  8.38e-07  1.25e+04  2.42e+04         1    0.0149  6.38e-23  1.15e+07  1.11e+11
         P3  5.61e-05  8.34e+05  1.62e+06      66.9         1  4.27e-21  7.67e+08  7.42e+12
         P4  1.31e+16  1.95e+26  3.79e+26  1.57e+22  2.34e+20         1  1.79e+29  1.74e+33
         P5  7.32e-14   0.00109   0.00211  8.73e-08   1.3e-09  5.57e-30         1  9.68e+03
         P6  7.56e-18  1.12e-07  2.18e-07  9.02e-12  1.35e-13  5.76e-34  0.000103         1
   MasterEquation::set:  done, cpu time[sec] = 2.1605, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25392e+07
      global relaxation matrix dimension = 374
      setting global matrices ... done, cpu time[sec] = 0.291641, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.20555, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92516.8      10290.2      2108.36      2954.14      278.105      37812.9      2132.43
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98204, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.199083, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.18806, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.58577e-09  1.01968e-27  1.77211e-28
      low eigenvalue method done, cpu time[sec] = 2.20254, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.02e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.98e-29         0         1
         *Z       ---       ---  1.19e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  7.90329e-29  4.12606e-29  3.32158e-30  4.93677e-29  1.11945e-30  1.99211e-32 -2.80536e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.24107, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25392e+08
      global relaxation matrix dimension = 374
      setting global matrices ... done, cpu time[sec] = 0.290987, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.46357, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9251.68      1029.02      210.836      295.414      27.8105      3781.29      213.243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98482, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.199087, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19071, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.94583e-11  2.43502e-28  4.98902e-29
      low eigenvalue method done, cpu time[sec] = 2.20588, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.44e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-29         0         1
         *Z       ---       ---  1.19e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.13202e-29  1.32923e-29  4.23808e-31  3.93385e-30   1.0248e-31  2.00764e-32 -3.87556e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.50488, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25392e+09
      global relaxation matrix dimension = 374
      setting global matrices ... done, cpu time[sec] = 0.292525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.90996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            925.168      102.902      21.0836      29.5414      2.78105      378.129      21.3243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.98585, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.197783, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.19032, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.76531e-11   5.4802e-29  8.39156e-30
      low eigenvalue method done, cpu time[sec] = 2.20537, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.48e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.75e-30         0         1
         *Z       ---       ---  1.19e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  6.03436e-30  1.64433e-30  4.57078e-32  2.93008e-31  8.91565e-33  1.52571e-32  9.13487e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.95298, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25392e+10
      global relaxation matrix dimension = 374
      setting global matrices ... done, cpu time[sec] = 0.292317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.27153, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            92.5168      10.2902      2.10836      2.95414     0.278105      37.8129      2.13243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.96763, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002172, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.97507, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.3701e-12   8.5395e-30  5.73429e-31
      low eigenvalue method done, cpu time[sec] = 1.97545, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.54e-30         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.84e-31         0         1
         *Z       ---       ---  1.19e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.30181e-31  9.86685e-32   3.1549e-33  1.54425e-32  5.38014e-34  4.00468e-33  4.70197e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.05126, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 550 K
            Well    Collision, 1/sec
              W1         1.25392e+11
      global relaxation matrix dimension = 374
      setting global matrices ... done, cpu time[sec] = 0.293012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.45456, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.25168      1.02902     0.210836     0.295414    0.0278105      3.78129     0.213243
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.79578, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002151, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80355, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.27125e-13  9.84006e-31  1.53135e-32
      low eigenvalue method done, cpu time[sec] = 1.80395, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.84e-31         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.73e-32         0         1
         *Z       ---       ---  1.19e+33
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   1.0889e-32  1.09547e-33  4.40137e-35  8.32468e-35  5.55764e-36  8.43271e-35 -1.21114e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.26692, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 560 K
      Energy reference = 20287 1/cm
      Energy step      = 140 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -87 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.009322
         W1 Well: collisional kernel bandwidth = 44
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.316798
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.185192
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.291448
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.03615
         W1 Well: minimal relaxation eigenvalue = 0.0673871
         W1 Well: maximal relaxation eigenvalue = 1.49794
         W1 Well:       grid size = 371
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31653 1/cm
         B1 Barrier:        grid size = 145
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -13 1/cm
         B2 Barrier:        grid size = 144
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 127 1/cm
         B3 Barrier:        grid size = 178
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4632 1/cm
         B4 Barrier:        grid size = 190
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6312 1/cm
         B5 Barrier: nonpositive number of states at -23113 1/cm => truncating
         B5 Barrier:        grid size = 310
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23113 1/cm
         B6 Barrier:        grid size = 135
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1386 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4607 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.13813, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31653 -23113 4.84e+05 1.39e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -13 5.65e+13
         B2    128 6.36e+12
         B3  -4632 1.31e+12
         B4  -6312 1.83e+12
         B5 -23113 1.73e+11
         B6   1387 2.35e+13
         B7   4607 1.35e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.19e+12  9.99e+12  5.18e+08  8.35e+06  8.38e-14  4.47e+15  3.75e+19
          R  1.93e-13         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1     1e-13      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  1.93e-09     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3   1.2e-07  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  1.19e+13  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  2.24e-16   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6  2.66e-20  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.29e+09  6.33e+09  3.28e+05  5.29e+03  5.31e-17  2.83e+12  2.38e+16
          R  3.04e-10         1      1.92  9.98e-05  1.61e-06  1.61e-26       861  7.23e+06
         P1  1.58e-10      0.52         1  5.19e-05  8.36e-07  8.39e-27       447  3.76e+06
         P2  3.05e-06     1e+04  1.93e+04         1    0.0161  1.62e-22  8.62e+06  7.25e+10
         P3  0.000189  6.21e+05   1.2e+06        62         1     1e-20  5.35e+08  4.49e+12
         P4  1.88e+16  6.19e+25  1.19e+26  6.18e+21  9.97e+19         1  5.33e+28  4.48e+32
         P5  3.53e-13   0.00116   0.00224  1.16e-07  1.87e-09  1.88e-29         1  8.41e+03
         P6   4.2e-17  1.38e-07  2.66e-07  1.38e-11  2.23e-13  2.23e-33  0.000119         1
   MasterEquation::set:  done, cpu time[sec] = 2.1482, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23349e+07
      global relaxation matrix dimension = 371
      setting global matrices ... done, cpu time[sec] = 0.285749, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.17475, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98663.6      11101.1      2294.87      3199.19      302.812      41068.5      2365.71
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94366, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.195899, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14598, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.21673e-09  4.18963e-27  7.50042e-28
      low eigenvalue method done, cpu time[sec] = 2.16036, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.19e-27  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.82e-28  4.44e-16         1
         *Z       ---       ---  5.25e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   3.4487e-28  1.78305e-28  1.41543e-29  2.08618e-28  4.73855e-30  7.44586e-32 -4.26421e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.17262, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23349e+08
      global relaxation matrix dimension = 371
      setting global matrices ... done, cpu time[sec] = 0.285506, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.33855, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9866.36      1110.11      229.487      319.919      30.2812      4106.85      236.571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94066, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.194199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14163, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.0847e-12  1.03219e-27  2.16548e-28
      low eigenvalue method done, cpu time[sec] = 2.15603, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-27  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.96e-29  4.44e-16         1
         *Z       ---       ---  5.25e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.38123e-28  5.81566e-29  1.85003e-30  1.69762e-29  4.43834e-31  9.99936e-32 -2.69173e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.31512, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23349e+09
      global relaxation matrix dimension = 371
      setting global matrices ... done, cpu time[sec] = 0.286512, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77104, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            986.636      111.011      22.9487      31.9919      3.02812      410.685      23.6571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94454, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.194397, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.14571, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.72157e-12  2.38645e-28  3.76047e-29
      low eigenvalue method done, cpu time[sec] = 2.16161, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-28  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.61e-29  4.44e-16         1
         *Z       ---       ---  5.25e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.89341e-29  7.76386e-30   2.1669e-31  1.35586e-30  4.16597e-32  8.02971e-32  5.13531e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.75356, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23349e+10
      global relaxation matrix dimension = 371
      setting global matrices ... done, cpu time[sec] = 0.287036, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.16534, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            98.6636      11.1011      2.29487      3.19919     0.302812      41.0685      2.36571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.94415, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.10735, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.05743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.15897e-12  3.79407e-29  2.67826e-30
      low eigenvalue method done, cpu time[sec] = 2.05782, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.79e-29  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.56e-30  4.44e-16         1
         *Z       ---       ---  5.25e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.22751e-30  4.06747e-31  1.31754e-32  6.42119e-32  2.24777e-33  1.68194e-32 -1.32934e-38

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.01809, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 560 K
            Well    Collision, 1/sec
              W1         1.23349e+11
      global relaxation matrix dimension = 371
      setting global matrices ... done, cpu time[sec] = 0.288323, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.35228, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            9.86636      1.11011     0.229487     0.319919    0.0302812      4.10685     0.236571
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.85618, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.002109, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86378, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.27946e-13  4.41592e-30   7.4441e-32
      low eigenvalue method done, cpu time[sec] = 1.86453, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.42e-30  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.98e-31  4.44e-16         1
         *Z       ---       ---  5.25e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  7.69612e-32  1.16854e-32  4.35979e-34  1.86261e-33  7.06326e-35  1.11054e-33  4.66208e-37

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 7.00752, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 570 K
      Energy reference = 20565 1/cm
      Energy step      = 142 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007076
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.284751
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.189214
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.316974
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 1.01618
         W1 Well: minimal relaxation eigenvalue = 0.0665099
         W1 Well: maximal relaxation eigenvalue = 3.03945
         W1 Well:       grid size = 368
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31691 1/cm
         B1 Barrier:        grid size = 145
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -25 1/cm
         B2 Barrier:        grid size = 144
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 116 1/cm
         B3 Barrier:        grid size = 178
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4711 1/cm
         B4 Barrier:        grid size = 189
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23171 1/cm => truncating
         B5 Barrier:        grid size = 308
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23170 1/cm
         B6 Barrier:        grid size = 135
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1395 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4661 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.10868, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31691 -23170 4.64e+05 1.47e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -25 6.25e+13
         B2    117 7.11e+12
         B3  -4711 1.48e+12
         B4  -6272 2.06e+12
         B5 -23170 1.96e+11
         B6   1396 2.65e+13
         B7   4661 1.56e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.18e+12  2.26e+12  1.46e+08  2.53e+06  5.78e-14  9.55e+14     7e+18
          R  8.46e-13         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  4.43e-13     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  6.87e-09  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3  3.95e-07  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  1.73e+13  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.05e-15   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6  1.43e-19  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.66e+08  1.46e+09  9.44e+04  1.64e+03  3.75e-17  6.19e+11  4.54e+15
          R   1.3e-09         1      1.91  0.000123  2.14e-06  4.89e-26       807  5.92e+06
         P1  6.83e-10     0.523         1  6.45e-05  1.12e-06  2.56e-26       423   3.1e+06
         P2  1.06e-05  8.12e+03  1.55e+04         1    0.0174  3.97e-22  6.56e+06  4.81e+10
         P3   0.00061  4.68e+05  8.93e+05      57.6         1  2.29e-20  3.78e+08  2.77e+12
         P4  2.67e+16  2.05e+25  3.91e+25  2.52e+21  4.37e+19         1  1.65e+28  1.21e+32
         P5  1.62e-12   0.00124   0.00237  1.53e-07  2.65e-09  6.06e-29         1  7.34e+03
         P6   2.2e-16  1.69e-07  3.23e-07  2.08e-11  3.61e-13  8.25e-33  0.000136         1
   MasterEquation::set:  done, cpu time[sec] = 2.11882, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21385e+07
      global relaxation matrix dimension = 368
      setting global matrices ... done, cpu time[sec] = 0.279188, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.05646, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             105098      11961.3      2494.46      3460.19      329.265        44537      2619.27
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.8924, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.212215, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.12768, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.44111e-09  1.68031e-26  3.09763e-27
      low eigenvalue method done, cpu time[sec] = 2.14182, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.12e-27  4.44e-16         1
         *Z       ---       ---  2.35e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.43254e-27  7.38315e-28  5.77781e-29  8.46952e-28  1.92658e-29  4.44636e-31 -3.03238e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.00401, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21385e+08
      global relaxation matrix dimension = 368
      setting global matrices ... done, cpu time[sec] = 0.280384, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.32007, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10509.8      1196.13      249.446      346.019      32.9265       4453.7      261.927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.90806, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.191436, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.1063, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.68799e-10  4.26656e-27  9.16329e-28
      low eigenvalue method done, cpu time[sec] = 2.12012, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.27e-27  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.84e-28  4.44e-16         1
         *Z       ---       ---  2.35e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  5.87025e-28  2.45565e-28   7.7761e-30  7.10956e-29  1.86171e-30  4.50317e-31  4.04827e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.24536, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21385e+09
      global relaxation matrix dimension = 368
      setting global matrices ... done, cpu time[sec] = 0.281826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.69492, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1050.98      119.613      24.9446      34.6019      3.29265       445.37      26.1927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.89179, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.191347, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.08967, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.37694e-12  1.01245e-27  1.64129e-28
      low eigenvalue method done, cpu time[sec] = 2.10356, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.01e-27  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.73e-29  4.44e-16         1
         *Z       ---       ---  2.35e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   1.2175e-28  3.28202e-29  9.14829e-31  5.73731e-30  1.76198e-31  3.38335e-31  7.79462e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.6033, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21385e+10
      global relaxation matrix dimension = 368
      setting global matrices ... done, cpu time[sec] = 0.282489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.07169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            105.098      11.9613      2.49446      3.46019     0.329265       44.537      2.61927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.89359, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.191455, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.09176, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.65086e-13  1.64187e-28  1.21722e-29
      low eigenvalue method done, cpu time[sec] = 2.10555, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.64e-28  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-29  4.44e-16         1
         *Z       ---       ---  2.35e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.94897e-30  1.80357e-30  5.82942e-32  2.77578e-31    9.836e-33  7.68753e-32  3.41131e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.98791, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 570 K
            Well    Collision, 1/sec
              W1         1.21385e+11
      global relaxation matrix dimension = 368
      setting global matrices ... done, cpu time[sec] = 0.283016, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.2316, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10.5098      1.19613     0.249446     0.346019    0.0329265       4.4537     0.261927
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.89946, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.048779, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95437, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7892e-13  1.93066e-29  3.52064e-31
      low eigenvalue method done, cpu time[sec] = 1.95476, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.93e-29  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.28e-30  4.44e-16         1
         *Z       ---       ---  2.35e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.77648e-31  4.04986e-32  1.55154e-33  6.25419e-33  2.44126e-34  4.38879e-33  1.25977e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.96874, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 580 K
      Energy reference = 20843 1/cm
      Energy step      = 145 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.007119
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.311179
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.183701
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.245919
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.95773
         W1 Well: minimal relaxation eigenvalue = 0.065691
         W1 Well: maximal relaxation eigenvalue = 1.42257
         W1 Well:       grid size = 362
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31647 1/cm
         B1 Barrier:        grid size = 144
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -37 1/cm
         B2 Barrier:        grid size = 143
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 176
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4676 1/cm
         B4 Barrier:        grid size = 187
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6272 1/cm
         B5 Barrier: nonpositive number of states at -23237 1/cm => truncating
         B5 Barrier:        grid size = 304
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23237 1/cm
         B6 Barrier:        grid size = 134
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1413 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4603 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 2.00047, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31647 -23237 4.43e+05 1.55e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -37  6.9e+13
         B2    109 7.95e+12
         B3  -4676 1.67e+12
         B4  -6272 2.31e+12
         B5 -23237 2.21e+11
         B6   1414 2.98e+13
         B7   4604 1.79e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.86e+11  5.42e+11  4.31e+07  8.04e+05  4.07e-14  2.17e+14   1.4e+18
          R   3.5e-12         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1  1.84e-12     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  2.32e-08  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3  1.24e-06  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  2.46e+13  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  4.61e-15   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  7.17e-19  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.88e+08  3.57e+08  2.83e+04       529  2.68e-17  1.43e+11  9.17e+14
          R  5.32e-09         1       1.9  0.000151  2.81e-06  1.43e-25       759  4.88e+06
         P1   2.8e-09     0.527         1  7.95e-05  1.48e-06  7.51e-26       400  2.57e+06
         P2  3.53e-05  6.63e+03  1.26e+04         1    0.0187  9.45e-22  5.03e+06  3.24e+10
         P3   0.00189  3.55e+05  6.74e+05      53.6         1  5.06e-20   2.7e+08  1.74e+12
         P4  3.73e+16  7.02e+24  1.33e+25  1.06e+21  1.97e+19         1  5.32e+27  3.43e+31
         P5  7.01e-12   0.00132    0.0025  1.99e-07  3.71e-09  1.88e-28         1  6.43e+03
         P6  1.09e-15  2.05e-07  3.89e-07  3.09e-11  5.76e-13  2.92e-32  0.000155         1
   MasterEquation::set:  done, cpu time[sec] = 2.01026, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.19496e+07
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.273238, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.94264, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             111824      12873.4      2707.79      3737.87      357.552      48227.6      2894.43
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.80898, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.184219, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99959, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.74859e-10  6.32131e-26  1.19857e-26
      low eigenvalue method done, cpu time[sec] = 2.0131, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.32e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.15e-27         0         1
         *Z       ---       ---  1.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.61477e-27  2.88177e-27  2.23083e-28  3.24459e-27  7.38953e-29  1.78262e-30 -1.59574e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.75577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.19496e+08
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.274392, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.15979, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11182.4      1287.34      270.779      373.787      35.7552      4822.76      289.443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.80801, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.18297, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9974, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   1.7131e-10   1.6526e-26  3.62991e-27
      low eigenvalue method done, cpu time[sec] = 2.01189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.65e-26         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.09e-27         0         1
         *Z       ---       ---  1.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.35232e-27   9.7938e-28  3.09724e-29  2.82111e-28  7.39408e-30   1.8568e-30  4.63531e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.95439, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.19496e+09
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.274387, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.54382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1118.24      128.734      27.0779      37.3787      3.57552      482.276      28.9443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.81006, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.183453, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99979, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.80583e-11  4.02167e-27  6.70077e-28
      low eigenvalue method done, cpu time[sec] = 2.0144, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-27         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.64e-28         0         1
         *Z       ---       ---  1.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  5.12489e-28  1.36572e-28  3.80908e-30  2.36853e-29  7.30396e-31  1.46147e-30  1.62039e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.34289, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.19496e+10
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.272474, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.91183, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            111.824      12.8734      2.70779      3.73787     0.357552      48.2276      2.89443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.80854, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.18376, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.99867, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.63937e-13  6.65124e-28  5.17056e-29
      low eigenvalue method done, cpu time[sec] = 2.01315, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.65e-28         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.37e-29         0         1
         *Z       ---       ---  1.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  4.30468e-29  7.61864e-30   2.4897e-31  1.16127e-30   4.1629e-32  3.51734e-31  9.08261e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.70683, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 580 K
            Well    Collision, 1/sec
              W1         1.19496e+11
      global relaxation matrix dimension = 362
      setting global matrices ... done, cpu time[sec] = 0.274243, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.11053, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.1824      1.28734     0.270779     0.373787    0.0357552      4.82276     0.289443
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.81364, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.183452, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 2.00347, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.15338e-13  7.90367e-29  1.55609e-30
      low eigenvalue method done, cpu time[sec] = 2.01796, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   7.9e-29         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.19e-30         0         1
         *Z       ---       ---  1.09e+32
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.52013e-30  2.09206e-31  8.17279e-33  3.13279e-32  1.26228e-33  2.35744e-32  6.98972e-36

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.91006, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 590 K
      Energy reference = 21121 1/cm
      Energy step      = 148 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006824
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.276664
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.178223
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.294026
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.925139
         W1 Well: minimal relaxation eigenvalue = 0.0648421
         W1 Well: maximal relaxation eigenvalue = 1.08766
         W1 Well:       grid size = 356
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31567 1/cm
         B1 Barrier:        grid size = 143
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -42 1/cm
         B2 Barrier:        grid size = 142
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 105 1/cm
         B3 Barrier:        grid size = 174
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4631 1/cm
         B4 Barrier:        grid size = 185
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6258 1/cm
         B5 Barrier: nonpositive number of states at -23131 1/cm => truncating
         B5 Barrier:        grid size = 299
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23130 1/cm
         B6 Barrier:        grid size = 133
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1437 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4693 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.97331, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31567 -23130 4.78e+05 1.63e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -42 7.62e+13
         B2    106 8.87e+12
         B3  -4631 1.88e+12
         B4  -6258 2.59e+12
         B5 -23130 2.49e+11
         B6   1438 3.34e+13
         B7   4694 2.05e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.13e+10  1.34e+11  1.31e+07  2.61e+05  2.86e-14  5.09e+13  2.89e+17
          R   1.4e-11         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1  7.44e-12      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  7.64e-08  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3  3.83e-06  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4   3.5e+13   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5  1.96e-14    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  3.46e-18  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.83e+07   9.1e+07  8.86e+03       177  1.93e-17  3.45e+10  1.96e+14
          R  2.07e-08         1      1.89  0.000184  3.67e-06  4.01e-25       715  4.05e+06
         P1   1.1e-08      0.53         1  9.73e-05  1.95e-06  2.12e-25       379  2.15e+06
         P2  0.000113  5.45e+03  1.03e+04         1      0.02  2.18e-21  3.89e+06  2.21e+10
         P3   0.00565  2.73e+05  5.14e+05        50         1  1.09e-19  1.95e+08   1.1e+12
         P4  5.17e+16   2.5e+24  4.71e+24  4.58e+20  9.15e+18         1  1.78e+27  1.01e+31
         P5   2.9e-11    0.0014   0.00264  2.57e-07  5.13e-09  5.61e-28         1  5.67e+03
         P6  5.11e-15  2.47e-07  4.65e-07  4.53e-11  9.05e-13  9.89e-32  0.000176         1
   MasterEquation::set:  done, cpu time[sec] = 1.98307, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.17677e+07
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.267047, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.56231, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             118852      13839.4      2935.42      4033.01      387.768      52149.8      3192.52
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73876, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.198177, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.95936, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.00541e-14  2.31202e-25  4.49726e-26
      low eigenvalue method done, cpu time[sec] = 1.97277, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.31e-25  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.5e-26  8.88e-16         1
         *Z       ---       ---  5.12e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  2.10228e-26  1.07473e-26  8.24569e-28  1.19314e-26  2.72008e-28  7.00083e-30  5.51103e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.29485, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.17677e+08
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.265674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.67257, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11885.2      1383.94      293.542      403.301      38.7768      5214.98      319.252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.73792, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.176705, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92084, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -6.46296e-15  6.21735e-26  1.39331e-26
      low eigenvalue method done, cpu time[sec] = 1.93452, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.22e-26  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.03e-27  8.88e-16         1
         *Z       ---       ---  5.12e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  8.95523e-27  3.70013e-27  1.16566e-28  1.05429e-27  2.77004e-29  7.43223e-30  5.47791e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.36733, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.17677e+09
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.267399, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.90158, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1188.52      138.394      29.3542      40.3301      3.87768      521.498      31.9252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74499, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177034, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92778, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.82201e-15  1.55036e-26  2.64846e-27
      low eigenvalue method done, cpu time[sec] = 1.94141, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.55e-26  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.01e-27  8.88e-16         1
         *Z       ---       ---  5.12e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.98696e-27  5.23408e-28  1.46366e-29  9.03005e-29  2.79539e-30  5.89247e-30  5.62465e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.60367, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.17677e+10
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.267006, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.11022, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            118.852      13.8394      2.93542      4.03301     0.387768      52.1498      3.19252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74025, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177855, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.9246, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.75537e-14  2.61432e-27   2.1245e-28
      low eigenvalue method done, cpu time[sec] = 1.93832, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.61e-27  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.7e-28  8.88e-16         1
         *Z       ---       ---  5.12e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.76035e-28  3.05125e-29  1.00788e-30  4.61662e-30  1.67175e-31  1.49306e-30  6.01654e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.81052, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 590 K
            Well    Collision, 1/sec
              W1         1.17677e+11
      global relaxation matrix dimension = 356
      setting global matrices ... done, cpu time[sec] = 0.26647, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 4.19447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            11.8852      1.38394     0.293542     0.403301    0.0387768      5.21498     0.319252
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.74341, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.177063, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.92672, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.17147e-15  3.14005e-28  6.65117e-30
      low eigenvalue method done, cpu time[sec] = 1.9345, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.14e-28  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-29  8.88e-16         1
         *Z       ---       ---  5.12e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  6.26464e-30  9.11474e-31  3.47459e-32  1.43672e-31  5.53621e-33  9.25241e-32  2.41544e-35

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.86942, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 600 K
      Energy reference = 21399 1/cm
      Energy step      = 150 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006695
         W1 Well: collisional kernel bandwidth = 43
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.302714
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.176372
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.236449
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.903251
         W1 Well: minimal relaxation eigenvalue = 0.0640153
         W1 Well: maximal relaxation eigenvalue = 3.18177
         W1 Well:       grid size = 354
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31701 1/cm
         B1 Barrier:        grid size = 143
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -51 1/cm
         B2 Barrier:        grid size = 142
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 98 1/cm
         B3 Barrier:        grid size = 174
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4700 1/cm
         B4 Barrier:        grid size = 184
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6201 1/cm
         B5 Barrier: nonpositive number of states at -23151 1/cm => truncating
         B5 Barrier:        grid size = 297
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23151 1/cm
         B6 Barrier:        grid size = 133
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1449 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4598 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.92028, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31701 -23151 4.71e+05 1.72e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -51  8.4e+13
         B2     99 9.89e+12
         B3  -4700 2.12e+12
         B4  -6201 2.89e+12
         B5 -23151  2.8e+11
         B6   1450 3.75e+13
         B7   4599 2.34e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.9e+10  3.56e+10  4.22e+06  9.01e+04  2.07e-14  1.28e+13  6.43e+16
          R  5.26e-11         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  2.81e-11     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  2.37e-07  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3  1.11e-05  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  4.83e+13  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5   7.8e-14   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  1.56e-17  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.3e+07  2.43e+07  2.88e+03      61.5  1.41e-17  8.75e+09  4.39e+13
          R   7.7e-08         1      1.87  0.000222  4.74e-06  1.09e-24       674  3.38e+06
         P1  4.11e-08     0.533         1  0.000118  2.53e-06  5.81e-25       360   1.8e+06
         P2  0.000347  4.51e+03  8.45e+03         1    0.0214  4.91e-21  3.04e+06  1.52e+10
         P3    0.0163  2.11e+05  3.96e+05      46.8         1   2.3e-19  1.42e+08  7.14e+11
         P4  7.08e+16  9.19e+23  1.72e+24  2.04e+20  4.35e+18         1   6.2e+26  3.11e+30
         P5  1.14e-10   0.00148   0.00278  3.29e-07  7.03e-09  1.61e-27         1  5.02e+03
         P6  2.28e-14  2.96e-07  5.54e-07  6.56e-11   1.4e-12  3.22e-31  0.000199         1
   MasterEquation::set:  done, cpu time[sec] = 1.93002, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.15925e+07
      global relaxation matrix dimension = 354
      setting global matrices ... done, cpu time[sec] = 0.261588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.74094, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             126187      14861.4      3177.43      4346.38      420.008      56313.1      3514.95
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71266, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.175772, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89474, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -5.1087e-10  7.97706e-25  1.58895e-25
      low eigenvalue method done, cpu time[sec] = 1.90805, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.98e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-26 -4.44e-16         1
         *Z       ---       ---  2.51e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   7.5175e-26  3.82577e-26  2.90597e-27  4.18189e-26  9.54484e-28  2.73663e-29  6.31156e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.41066, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.15925e+08
      global relaxation matrix dimension = 354
      setting global matrices ... done, cpu time[sec] = 0.260193, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.94315, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12618.7      1486.14      317.743      434.638      42.0008      5631.31      351.495
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71057, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.173572, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89033, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.45438e-11  2.20457e-25   5.0319e-26
      low eigenvalue method done, cpu time[sec] = 1.90403, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   2.2e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.41e-26 -4.44e-16         1
         *Z       ---       ---  2.51e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.26439e-26  1.34021e-26  4.21266e-28   3.7958e-27  9.98775e-29  2.85783e-29  2.21169e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.58985, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.15925e+09
      global relaxation matrix dimension = 354
      setting global matrices ... done, cpu time[sec] = 0.26042, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.30416, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1261.87      148.614      31.7743      43.4638      4.20008      563.131      35.1495
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72096, elapsed time[sec] = 1
            inverting kinetic matrices ... done, cpu time[sec] = 0.173915, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90108, elapsed time[sec] = 1
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.82903e-12   5.6283e-26  9.83981e-27
      low eigenvalue method done, cpu time[sec] = 1.91515, elapsed time[sec] = 1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.63e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.6e-27 -4.44e-16         1
         *Z       ---       ---  2.51e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  7.47356e-27  1.95532e-27  5.47889e-29  3.36761e-28  1.04442e-29  2.28435e-29  2.41482e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.96641, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.15925e+10
      global relaxation matrix dimension = 354
      setting global matrices ... done, cpu time[sec] = 0.262592, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.67424, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            126.187      14.8614      3.17743      4.34638     0.420008      56.3131      3.51495
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.71562, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.173859, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.89554, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.52847e-13  9.67409e-27  8.19753e-28
      low eigenvalue method done, cpu time[sec] = 1.90966, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.67e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.19e-28 -4.44e-16         1
         *Z       ---       ---  2.51e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  6.76833e-28  1.16834e-28  3.87698e-30  1.77933e-29  6.43824e-31  5.86079e-30  2.39224e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.33223, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 600 K
            Well    Collision, 1/sec
              W1         1.15925e+11
      global relaxation matrix dimension = 354
      setting global matrices ... done, cpu time[sec] = 0.262386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.8365, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            12.6187      1.48614     0.317743     0.434638    0.0420008      5.63131     0.351495
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.72029, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.174358, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90074, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -8.73704e-14  1.17467e-27   2.6687e-29
      low eigenvalue method done, cpu time[sec] = 1.91484, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-27 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.52e-29 -4.44e-16         1
         *Z       ---       ---  2.51e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.25744e-29  2.99031e-30   1.2157e-31  4.61885e-31  1.87322e-32  3.84494e-31  1.31524e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.49977, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 610 K
      Energy reference = 21677 1/cm
      Energy step      = 152 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006411
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.267995
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.172477
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.289254
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.897462
         W1 Well: minimal relaxation eigenvalue = 0.0632422
         W1 Well: maximal relaxation eigenvalue = 1.68749
         W1 Well:       grid size = 351
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31675 1/cm
         B1 Barrier:        grid size = 143
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -59 1/cm
         B2 Barrier:        grid size = 142
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 92 1/cm
         B3 Barrier:        grid size = 173
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4619 1/cm
         B4 Barrier:        grid size = 184
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6291 1/cm
         B5 Barrier: nonpositive number of states at -23163 1/cm => truncating
         B5 Barrier:        grid size = 295
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23163 1/cm
         B6 Barrier:        grid size = 133
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1461 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4652 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.92475, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31675 -23163 4.67e+05 1.81e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -59 9.25e+13
         B2     93  1.1e+13
         B3  -4619 2.37e+12
         B4  -6291 3.24e+12
         B5 -23163 3.14e+11
         B6   1462  4.2e+13
         B7   4653 2.67e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.28e+09  9.84e+09  1.41e+06  3.21e+04  1.51e-14  3.37e+12   1.5e+16
          R  1.89e-10         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  1.02e-10     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2  7.11e-07  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3  3.12e-05  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  6.62e+13  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  2.97e-13   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  6.67e-17  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.64e+06  6.79e+06       971      22.1  1.04e-17  2.32e+09  1.03e+13
          R  2.75e-07         1      1.86  0.000266  6.07e-06  2.86e-24       637  2.84e+06
         P1  1.47e-07     0.536         1  0.000143  3.26e-06  1.54e-24       342  1.52e+06
         P2   0.00103  3.75e+03  6.99e+03         1    0.0228  1.07e-20  2.39e+06  1.07e+10
         P3    0.0452  1.65e+05  3.07e+05      43.9         1  4.71e-19  1.05e+08  4.68e+11
         P4  9.59e+16  3.49e+23  6.51e+23  9.31e+19  2.12e+18         1  2.23e+26  9.92e+29
         P5  4.31e-10   0.00157   0.00293  4.18e-07  9.53e-09  4.49e-27         1  4.46e+03
         P6  9.67e-14  3.52e-07  6.56e-07  9.38e-11  2.14e-12  1.01e-30  0.000224         1
   MasterEquation::set:  done, cpu time[sec] = 1.93487, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.14236e+07
      global relaxation matrix dimension = 351
      setting global matrices ... done, cpu time[sec] = 0.2575, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.7404, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             133836      15941.9      3434.14       4678.8      454.373      60727.3      3863.18
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.69329, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.189656, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.90449, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.25861e-10  2.64642e-24  5.39294e-25
      low eigenvalue method done, cpu time[sec] = 1.91898, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.65e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.67e-25  4.44e-16         1
         *Z       ---       ---  1.25e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   2.5747e-25  1.30452e-25  9.81441e-27  1.40475e-25  3.20978e-27  9.96066e-29  5.94418e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.40146, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.14236e+08
      global relaxation matrix dimension = 351
      setting global matrices ... done, cpu time[sec] = 0.258979, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.95814, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13383.6      1594.19      343.414       467.88      45.4373      6072.73      386.318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.170166, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86094, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.78696e-10  7.50964e-25  1.74442e-25
      low eigenvalue method done, cpu time[sec] = 1.87558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.51e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.75e-26  4.44e-16         1
         *Z       ---       ---  1.25e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.13815e-25  4.64213e-26   1.4561e-27  1.30648e-26  3.44302e-28  1.04348e-28  9.84032e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.57337, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.14236e+09
      global relaxation matrix dimension = 351
      setting global matrices ... done, cpu time[sec] = 0.259378, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.2991, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1338.36      159.419      34.3414       46.788      4.54373      607.273      38.6318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.67917, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.170574, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85584, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.00521e-12  1.96144e-25  3.50645e-26
      low eigenvalue method done, cpu time[sec] = 1.86989, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.96e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-26  4.44e-16         1
         *Z       ---       ---  1.25e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.67603e-26  6.94157e-27  1.94901e-28  1.19127e-27   3.7047e-29  8.40795e-29  1.12943e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.90939, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.14236e+10
      global relaxation matrix dimension = 351
      setting global matrices ... done, cpu time[sec] = 0.258157, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.60943, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            133.836      15.9419      3.43414       4.6788     0.454373      60.7273      3.86318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68507, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.170826, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.86199, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.01485e-12  3.43568e-26  3.03132e-27
      low eigenvalue method done, cpu time[sec] = 1.87602, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.44e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.17e-27  4.44e-16         1
         *Z       ---       ---  1.25e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.51111e-27  4.28505e-28  1.43245e-29   6.5283e-29  2.37183e-30  2.23104e-29  1.10592e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.22374, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 610 K
            Well    Collision, 1/sec
              W1         1.14236e+11
      global relaxation matrix dimension = 351
      setting global matrices ... done, cpu time[sec] = 0.258763, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.77334, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13.3836      1.59419     0.343414      0.46788    0.0454373      6.07273     0.386318
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.68128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.170458, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.85797, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.91932e-13  4.21823e-27  1.02586e-28
      low eigenvalue method done, cpu time[sec] = 1.87197, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.22e-27  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.67e-28  4.44e-16         1
         *Z       ---       ---  1.25e+31
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.87982e-29  1.15777e-29  4.75505e-31  1.77555e-30  7.27889e-32  1.54574e-30  5.64517e-34

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.38492, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 620 K
      Energy reference = 21955 1/cm
      Energy step      = 155 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.3 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006616
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.287872
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.168668
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.226463
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.863979
         W1 Well: minimal relaxation eigenvalue = 0.0624981
         W1 Well: maximal relaxation eigenvalue = 1.63984
         W1 Well:       grid size = 346
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31675 1/cm
         B1 Barrier:        grid size = 142
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -55 1/cm
         B2 Barrier:        grid size = 141
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 99 1/cm
         B3 Barrier:        grid size = 172
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4705 1/cm
         B4 Barrier:        grid size = 182
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6254 1/cm
         B5 Barrier: nonpositive number of states at -23305 1/cm => truncating
         B5 Barrier:        grid size = 292
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23305 1/cm
         B6 Barrier:        grid size = 132
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1494 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4595 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.84582, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31675 -23305 4.21e+05 1.91e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -55 1.02e+14
         B2    100 1.23e+13
         B3  -4705 2.66e+12
         B4  -6254 3.61e+12
         B5 -23305 3.53e+11
         B6   1495  4.7e+13
         B7   4595 3.04e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.51e+09   2.8e+09   4.8e+05  1.17e+04   1.1e-14  9.11e+11  3.62e+15
          R  6.62e-10         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  3.57e-10     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2  2.08e-06  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3  8.58e-05   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  9.08e+13  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5   1.1e-12   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  2.76e-16  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.07e+06  1.97e+06       339      8.22  7.77e-18  6.42e+08  2.55e+12
          R  9.39e-07         1      1.85  0.000318  7.72e-06  7.29e-24       603   2.4e+06
         P1  5.06e-07     0.539         1  0.000172  4.16e-06  3.93e-24       325  1.29e+06
         P2   0.00295  3.14e+03  5.83e+03         1    0.0243  2.29e-20   1.9e+06  7.54e+09
         P3     0.122   1.3e+05   2.4e+05      41.2         1  9.45e-19  7.81e+07  3.11e+11
         P4  1.29e+17  1.37e+23  2.54e+23  4.36e+19  1.06e+18         1  8.27e+25  3.29e+29
         P5  1.56e-09   0.00166   0.00307  5.28e-07  1.28e-08  1.21e-26         1  3.98e+03
         P6  3.92e-13  4.17e-07  7.73e-07  1.33e-10  3.22e-12  3.04e-30  0.000252         1
   MasterEquation::set:  done, cpu time[sec] = 1.8559, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.12606e+07
      global relaxation matrix dimension = 346
      setting global matrices ... done, cpu time[sec] = 0.250391, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.61453, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             141808      17083.1      3706.86      5031.08      490.964      65402.3      4238.69
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.63641, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.166037, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80831, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.97777e-12  8.49012e-24  1.76829e-24
      low eigenvalue method done, cpu time[sec] = 1.82186, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.49e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.31e-25  4.44e-16         1
         *Z       ---       ---  6.37e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.46989e-25  4.26862e-25  3.18548e-26  4.53747e-25  1.03781e-26   3.3994e-28 -2.47951e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1657, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.12606e+08
      global relaxation matrix dimension = 346
      setting global matrices ... done, cpu time[sec] = 0.250055, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.79017, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14180.8      1708.31      370.686      503.108      49.0964      6540.23      423.869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.63013, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165545, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80154, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.26704e-10  2.47146e-24  5.83803e-25
      low eigenvalue method done, cpu time[sec] = 1.81526, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.47e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.54e-25  4.44e-16         1
         *Z       ---       ---  6.37e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   3.8079e-25  1.54262e-25  4.82982e-27  4.31456e-26  1.13889e-27   3.6393e-28  3.63108e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.31989, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.12606e+09
      global relaxation matrix dimension = 346
      setting global matrices ... done, cpu time[sec] = 0.251056, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.12664, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1418.08      170.831      37.0686      50.3108      4.90964      654.023      42.3869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.62923, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165628, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80079, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.69833e-11  6.59953e-25  1.20547e-25
      low eigenvalue method done, cpu time[sec] = 1.81438, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   6.6e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.12e-26  4.44e-16         1
         *Z       ---       ---  6.37e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.19184e-26  2.36476e-26  6.65259e-28  4.04273e-27   1.2608e-28  2.96767e-28   4.3241e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.6572, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.12606e+10
      global relaxation matrix dimension = 346
      setting global matrices ... done, cpu time[sec] = 0.250678, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.44394, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            141.808      17.0831      3.70686      5.03108     0.490964      65.4023      4.23869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.63269, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165881, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.80451, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.3545e-12  1.17782e-25  1.08065e-26
      low eigenvalue method done, cpu time[sec] = 1.81858, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.18e-25  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.36e-27  4.44e-16         1
         *Z       ---       ---  6.37e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.93727e-27  1.51002e-27  5.07663e-29  2.29536e-28  8.37722e-30  8.12156e-29  4.37973e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.97858, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 620 K
            Well    Collision, 1/sec
              W1         1.12606e+11
      global relaxation matrix dimension = 346
      setting global matrices ... done, cpu time[sec] = 0.249415, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.61661, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            14.1808      1.70831     0.370686     0.503108    0.0490964      6.54023     0.423869
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.62589, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.165876, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.79778, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12681e-13  1.46252e-26  3.80085e-28
      low eigenvalue method done, cpu time[sec] = 1.81129, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.46e-26  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.14e-28  4.44e-16         1
         *Z       ---       ---  6.37e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.23712e-28  4.18824e-29  1.73237e-30  6.42329e-30  2.64472e-31  5.75098e-30  2.16829e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.14338, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 630 K
      Energy reference = 22233 1/cm
      Energy step      = 158 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006021
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.259565
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.163766
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.269572
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.817881
         W1 Well: minimal relaxation eigenvalue = 0.0617864
         W1 Well: maximal relaxation eigenvalue = 1.37297
         W1 Well:       grid size = 341
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31644 1/cm
         B1 Barrier:        grid size = 141
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -44 1/cm
         B2 Barrier:        grid size = 140
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 112 1/cm
         B3 Barrier:        grid size = 170
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4627 1/cm
         B4 Barrier:        grid size = 180
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6206 1/cm
         B5 Barrier: nonpositive number of states at -23113 1/cm => truncating
         B5 Barrier:        grid size = 287
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23113 1/cm
         B6 Barrier:        grid size = 132
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1377 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4694 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.80623, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31644 -23113 4.84e+05 2.01e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -44 1.12e+14
         B2    113 1.36e+13
         B3  -4627 2.98e+12
         B4  -6206 4.03e+12
         B5 -23113 3.95e+11
         B6   1378 5.25e+13
         B7   4695 3.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.48e+08  8.27e+08  1.69e+05  4.36e+03  8.09e-15  2.56e+11  9.12e+14
          R  2.23e-09         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.21e-09     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   5.9e-06  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3  0.000229  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.24e+14  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5   3.9e-12   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6   1.1e-15  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.24e+05  5.97e+05       122      3.15  5.84e-18  1.85e+08  6.59e+11
          R  3.09e-06         1      1.84  0.000378  9.73e-06   1.8e-23       572  2.03e+06
         P1  1.67e-06     0.542         1  0.000205  5.28e-06  9.78e-24       310   1.1e+06
         P2   0.00818  2.65e+03  4.88e+03         1    0.0258  4.78e-20  1.51e+06  5.39e+09
         P3     0.317  1.03e+05   1.9e+05      38.8         1  1.85e-18  5.87e+07  2.09e+11
         P4  1.71e+17  5.54e+22  1.02e+23  2.09e+19   5.4e+17         1  3.17e+25  1.13e+29
         P5   5.4e-09   0.00175   0.00323  6.61e-07   1.7e-08  3.16e-26         1  3.56e+03
         P6  1.52e-12  4.91e-07  9.07e-07  1.86e-10  4.78e-12  8.86e-30  0.000281         1
   MasterEquation::set:  done, cpu time[sec] = 1.81593, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.11033e+07
      global relaxation matrix dimension = 341
      setting global matrices ... done, cpu time[sec] = 0.241984, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.51906, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             150107      18287.4       3996.6      5404.07      529.886        70348      4643.05
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56345, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.179073, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.76265, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.00096e-09  2.62645e-23  5.58468e-24
      low eigenvalue method done, cpu time[sec] = 1.77515, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.63e-23 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.62e-24 -4.44e-16         1
         *Z       ---       ---  3.31e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.68128e-24  1.34244e-24  9.95143e-26  1.41077e-24  3.22989e-26  1.14833e-27  1.22151e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.98752, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.11033e+08
      global relaxation matrix dimension = 341
      setting global matrices ... done, cpu time[sec] = 0.245861, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.71682, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15010.7      1828.74       399.66      540.407      52.9886       7034.8      464.305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.565, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.159018, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73001, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.36666e-11   7.8365e-24  1.88082e-24
      low eigenvalue method done, cpu time[sec] = 1.74346, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.84e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.84e-25 -4.44e-16         1
         *Z       ---       ---  3.31e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.22499e-24  4.92797e-25  1.54058e-26  1.37019e-25  3.62273e-27  1.21799e-27  1.49519e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.15883, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.11033e+09
      global relaxation matrix dimension = 341
      setting global matrices ... done, cpu time[sec] = 0.244934, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.03012, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1501.07      182.874       39.966      54.0407      5.29886       703.48      46.4305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56821, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.158522, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73261, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.42188e-11  2.13796e-24  3.98659e-25
      low eigenvalue method done, cpu time[sec] = 1.74635, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.14e-24 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-25 -4.44e-16         1
         *Z       ---       ---  3.31e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16   3.0326e-25  7.74057e-26   2.1824e-27  1.31914e-26  4.12481e-28  1.00515e-27  1.59569e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.47527, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.11033e+10
      global relaxation matrix dimension = 341
      setting global matrices ... done, cpu time[sec] = 0.243826, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.33785, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            150.107      18.2874       3.9966      5.40407     0.529886       70.348      4.64305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56294, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.159941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.72899, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.27044e-12  3.88686e-25  3.70302e-26
      low eigenvalue method done, cpu time[sec] = 1.74247, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.89e-25 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.4e-26 -4.44e-16         1
         *Z       ---       ---  3.31e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  3.05331e-26  5.10603e-27  1.72816e-28  7.76018e-28  2.84347e-29  2.84328e-28  1.71941e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.7763, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 630 K
            Well    Collision, 1/sec
              W1         1.11033e+11
      global relaxation matrix dimension = 341
      setting global matrices ... done, cpu time[sec] = 0.244538, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.53127, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.0107      1.82874      0.39966     0.540407    0.0529886       7.0348     0.464305
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.56871, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.159423, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.73427, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.00007e-13  4.88206e-26  1.35315e-27
      low eigenvalue method done, cpu time[sec] = 1.7477, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.88e-26 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-27 -4.44e-16         1
         *Z       ---       ---  3.31e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.15914e-27  1.47947e-28  6.19502e-30  2.27418e-29  9.42453e-31    2.123e-29  8.73484e-33

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.9763, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 640 K
      Energy reference = 22511 1/cm
      Energy step      = 160 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005651
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.281324
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.160799
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.209382
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.821541
         W1 Well: minimal relaxation eigenvalue = 0.0610233
         W1 Well: maximal relaxation eigenvalue = 1.09546
         W1 Well:       grid size = 338
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31569 1/cm
         B1 Barrier:        grid size = 141
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -49 1/cm
         B2 Barrier:        grid size = 140
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 110 1/cm
         B3 Barrier:        grid size = 170
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4689 1/cm
         B4 Barrier:        grid size = 180
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6289 1/cm
         B5 Barrier: nonpositive number of states at -23249 1/cm => truncating
         B5 Barrier:        grid size = 286
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23249 1/cm
         B6 Barrier:        grid size = 132
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1390 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4590 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.76744, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31569 -23249 4.39e+05 2.12e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -49 1.23e+14
         B2    111 1.52e+13
         B3  -4689 3.34e+12
         B4  -6289  4.5e+12
         B5 -23249 4.43e+11
         B6   1391 5.86e+13
         B7   4591 3.94e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   1.4e+08  2.56e+08  6.23e+04   1.7e+03  6.06e-15  7.58e+10  2.42e+14
          R  7.16e-09         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1   3.9e-09     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2  1.61e-05  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3  0.000588  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  1.65e+14  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5  1.32e-11   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  4.13e-15  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.02e+05  1.88e+05      45.6      1.25  4.43e-18  5.54e+07  1.77e+11
          R  9.79e-06         1      1.84  0.000446  1.22e-05  4.34e-23       543  1.74e+06
         P1  5.33e-06     0.545         1  0.000243  6.64e-06  2.36e-23       296  9.45e+05
         P2     0.022  2.24e+03  4.12e+03         1    0.0273  9.73e-20  1.22e+06  3.89e+09
         P3     0.803  8.21e+04  1.51e+05      36.6         1  3.56e-18  4.45e+07  1.42e+11
         P4  2.26e+17  2.31e+22  4.23e+22  1.03e+19  2.81e+17         1  1.25e+25     4e+28
         P5   1.8e-08   0.00184   0.00338  8.22e-07  2.25e-08  7.99e-26         1   3.2e+03
         P6  5.64e-12  5.76e-07  1.06e-06  2.57e-10  7.02e-12   2.5e-29  0.000313         1
   MasterEquation::set:  done, cpu time[sec] = 1.77713, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.09513e+07
      global relaxation matrix dimension = 338
      setting global matrices ... done, cpu time[sec] = 0.240172, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.09546, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             158744      19557.3      4304.18      5798.64      571.248      75574.7      5077.85
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53128, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.156706, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69876, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.39467e-15  7.82154e-23  1.69386e-23
      low eigenvalue method done, cpu time[sec] = 1.71166, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.82e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.77e-24         0         1
         *Z       ---       ---  1.77e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  8.17581e-24  4.07381e-24  2.99546e-25  4.22698e-24  9.68694e-26  3.70474e-27  5.54877e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.4989, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.09513e+08
      global relaxation matrix dimension = 338
      setting global matrices ... done, cpu time[sec] = 0.240429, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.23525, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15874.4      1955.73      430.418      579.864      57.1248      7557.47      507.785
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53239, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.155633, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69361, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.28541e-14  2.39023e-23  5.81501e-24
      low eigenvalue method done, cpu time[sec] = 1.70661, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.46e-24         0         1
         *Z       ---       ---  1.77e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.79526e-24  1.51706e-24  4.73432e-26  4.19319e-25  1.11041e-26  3.92752e-27  5.54786e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.62361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.09513e+09
      global relaxation matrix dimension = 338
      setting global matrices ... done, cpu time[sec] = 0.239039, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.37349, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1587.44      195.573      43.0418      57.9864      5.71248      755.747      50.7785
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53218, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.156936, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69495, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.41624e-16  6.65767e-24  1.26411e-24
      low eigenvalue method done, cpu time[sec] = 1.70803, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.66e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.06e-25         0         1
         *Z       ---       ---  1.77e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  9.62972e-25  2.43881e-25  6.89048e-27  4.14255e-26  1.29876e-27  3.27582e-27  5.64235e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.76389, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.09513e+10
      global relaxation matrix dimension = 338
      setting global matrices ... done, cpu time[sec] = 0.239525, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.56807, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            158.744      19.5573      4.30418      5.79864     0.571248      75.5747      5.07785
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53077, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.155886, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6923, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.45764e-14  1.23259e-24  1.21552e-25
      low eigenvalue method done, cpu time[sec] = 1.70527, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.52e-26         0         1
         *Z       ---       ---  1.77e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.00418e-25  1.66349e-26   5.6636e-28  2.52563e-27  9.29142e-29  9.55585e-28  6.19775e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.95563, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 640 K
            Well    Collision, 1/sec
              W1         1.09513e+11
      global relaxation matrix dimension = 338
      setting global matrices ... done, cpu time[sec] = 0.238657, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.59837, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            15.8744      1.95573     0.430418     0.579864    0.0571248      7.55747     0.507785
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.53485, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.157264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.69781, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.23411e-15  1.56622e-25   4.6125e-27
      low eigenvalue method done, cpu time[sec] = 1.7108, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.57e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.56e-27         0         1
         *Z       ---       ---  1.77e+30
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.91837e-27  4.92515e-28  2.08956e-29  7.58578e-29  3.16619e-30  7.37544e-29  3.16369e-32

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.98808, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 650 K
      Energy reference = 22789 1/cm
      Energy step      = 162 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -86 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005872
         W1 Well: collisional kernel bandwidth = 42
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.254884
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.158412
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.245428
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.776308
         W1 Well: minimal relaxation eigenvalue = 0.0603846
         W1 Well: maximal relaxation eigenvalue = 1.36507
         W1 Well:       grid size = 336
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31643 1/cm
         B1 Barrier:        grid size = 141
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -53 1/cm
         B2 Barrier:        grid size = 140
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 108 1/cm
         B3 Barrier:        grid size = 170
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4751 1/cm
         B4 Barrier:        grid size = 179
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6208 1/cm
         B5 Barrier: nonpositive number of states at -23219 1/cm => truncating
         B5 Barrier:        grid size = 284
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23219 1/cm
         B6 Barrier:        grid size = 132
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1404 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4644 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.72863, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31643 -23219 4.48e+05 2.23e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -53 1.35e+14
         B2    109 1.68e+13
         B3  -4751 3.73e+12
         B4  -6208 5.01e+12
         B5 -23219 4.95e+11
         B6   1405 6.53e+13
         B7   4645 4.47e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   4.5e+07  8.22e+07  2.36e+04       682  4.57e-15  2.32e+10  6.69e+13
          R  2.22e-08         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  1.22e-08     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2  4.24e-05  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3   0.00147   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  2.19e+14  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  4.31e-11   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  1.49e-14  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.34e+04   6.1e+04      17.5     0.506  3.39e-18  1.72e+07  4.97e+10
          R  2.99e-05         1      1.83  0.000524  1.52e-05  1.02e-22       516  1.49e+06
         P1  1.64e-05     0.547         1  0.000287  8.29e-06  5.56e-23       282  8.14e+05
         P2    0.0572  1.91e+03  3.49e+03         1    0.0289  1.94e-19  9.85e+05  2.84e+09
         P3      1.98   6.6e+04  1.21e+05      34.6         1   6.7e-18   3.4e+07  9.81e+10
         P4  2.95e+17  9.85e+21   1.8e+22  5.16e+18  1.49e+17         1  5.08e+24  1.46e+28
         P5  5.81e-08   0.00194   0.00354  1.02e-06  2.94e-08  1.97e-25         1  2.88e+03
         P6  2.01e-11  6.73e-07  1.23e-06  3.52e-10  1.02e-11  6.83e-29  0.000347         1
   MasterEquation::set:  done, cpu time[sec] = 1.73834, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.08044e+07
      global relaxation matrix dimension = 336
      setting global matrices ... done, cpu time[sec] = 0.238459, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.39337, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             167720      20895.1      4630.39      6215.67      615.161      81092.5      5544.75
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51035, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.169877, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.70022, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  9.05478e-10  2.24975e-22  4.96568e-23
      low eigenvalue method done, cpu time[sec] = 1.71243, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.25e-22         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-23         0         1
         *Z       ---       ---  9.61e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0   2.4063e-23  1.19325e-23  8.70596e-25  1.22315e-23   2.8057e-25  1.15226e-26  2.12537e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.78428, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.08044e+08
      global relaxation matrix dimension = 336
      setting global matrices ... done, cpu time[sec] = 0.236544, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.57305, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              16772      2089.51      463.039      621.567      61.5161      8109.25      554.475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51038, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153675, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66956, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.50051e-10  7.03627e-23  1.73667e-23
      low eigenvalue method done, cpu time[sec] = 1.68205, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.04e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.25e-24         0         1
         *Z       ---       ---  9.61e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.13438e-23  4.50576e-24  1.40364e-25  1.23796e-24  3.28348e-26  1.22098e-26  2.02193e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.92906, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.08044e+09
      global relaxation matrix dimension = 336
      setting global matrices ... done, cpu time[sec] = 0.235733, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.90137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             1677.2      208.951      46.3039      62.1567      6.15161      810.925      55.4475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50884, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.154161, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66868, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.56492e-11  1.99969e-23  3.86932e-24
      low eigenvalue method done, cpu time[sec] = 1.68104, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     2e-23         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-24         0         1
         *Z       ---       ---  9.61e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  2.94706e-24  7.40688e-25  2.09705e-26  1.25405e-25  3.94201e-27  1.02821e-26   2.0103e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.25659, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.08044e+10
      global relaxation matrix dimension = 336
      setting global matrices ... done, cpu time[sec] = 0.23552, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.23449, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             167.72      20.8951      4.63039      6.21567     0.615161      81.0925      5.54475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.51048, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153474, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66976, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.37832e-12  3.76921e-24   3.8486e-25
      low eigenvalue method done, cpu time[sec] = 1.68189, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.77e-24         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.28e-25         0         1
         *Z       ---       ---  9.61e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  3.17714e-25   5.2107e-26  1.78528e-27  7.90358e-27  2.91993e-28  3.09164e-27  2.16222e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.58948, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 650 K
            Well    Collision, 1/sec
              W1         1.08044e+11
      global relaxation matrix dimension = 336
      setting global matrices ... done, cpu time[sec] = 0.238376, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.40771, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             16.772      2.08951     0.463039     0.621567    0.0615161      8.10925     0.554475
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.50726, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.153465, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.66627, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.16907e-14    4.846e-25  1.51596e-26
      low eigenvalue method done, cpu time[sec] = 1.67897, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.85e-25         0         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.93e-26         0         1
         *Z       ---       ---  9.61e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1            0  1.28735e-26  1.60251e-27  6.86068e-29  2.47053e-28  1.03659e-29  2.48023e-28  1.13953e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 6.2635, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 660 K
      Energy reference = 23067 1/cm
      Energy step      = 165 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005779
         W1 Well: collisional kernel bandwidth = 41
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.268328
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.155816
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.2102
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.760059
         W1 Well: minimal relaxation eigenvalue = 0.0595993
         W1 Well: maximal relaxation eigenvalue = 3.17285
         W1 Well:       grid size = 332
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31712 1/cm
         B1 Barrier:        grid size = 140
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -32 1/cm
         B2 Barrier:        grid size = 139
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 132 1/cm
         B3 Barrier:        grid size = 168
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4652 1/cm
         B4 Barrier:        grid size = 178
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6302 1/cm
         B5 Barrier: nonpositive number of states at -23133 1/cm => truncating
         B5 Barrier:        grid size = 280
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23132 1/cm
         B6 Barrier:        grid size = 131
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1452 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4587 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.68832, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31712 -23132 4.77e+05 2.35e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -32 1.48e+14
         B2    133 1.87e+13
         B3  -4652 4.16e+12
         B4  -6302 5.57e+12
         B5 -23132 5.54e+11
         B6   1453 7.27e+13
         B7   4588 5.06e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.49e+07  2.72e+07  9.15e+03       280  3.46e-15  7.33e+09  1.91e+13
          R  6.69e-08         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  3.68e-08      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2  0.000109  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3   0.00358  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  2.89e+14  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5  1.36e-10   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  5.23e-14  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.13e+04  2.05e+04      6.91     0.211  2.62e-18  5.54e+06  1.45e+10
          R  8.85e-05         1      1.82  0.000612  1.87e-05  2.32e-22       491  1.28e+06
         P1  4.87e-05      0.55         1  0.000336  1.03e-05  1.27e-22       270  7.03e+05
         P2     0.145  1.63e+03  2.97e+03         1    0.0306  3.78e-19  8.02e+05  2.09e+09
         P3      4.73  5.34e+04  9.72e+04      32.7         1  1.24e-17  2.62e+07  6.84e+10
         P4  3.82e+17  4.32e+21  7.86e+21  2.64e+18  8.08e+16         1  2.12e+24  5.53e+27
         P5   1.8e-07   0.00204   0.00371  1.25e-06  3.81e-08  4.72e-25         1  2.61e+03
         P6  6.92e-11  7.81e-07  1.42e-06  4.78e-10  1.46e-11  1.81e-28  0.000383         1
   MasterEquation::set:  done, cpu time[sec] = 1.69838, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.06623e+07
      global relaxation matrix dimension = 332
      setting global matrices ... done, cpu time[sec] = 0.229493, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.28938, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             177046      22303.5      4976.04      6656.07      661.739      86912.1      6045.49
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45038, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.152825, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.62284, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.52746e-09  6.26929e-22   1.4054e-22
      low eigenvalue method done, cpu time[sec] = 1.63513, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.27e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.74e-23  4.44e-16         1
         *Z       ---       ---  5.31e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.84881e-23  3.37794e-23  2.44784e-24  3.42468e-23  7.86275e-25  3.49332e-26  6.87931e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.59479, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.06623e+08
      global relaxation matrix dimension = 332
      setting global matrices ... done, cpu time[sec] = 0.230925, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.45928, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17704.6      2230.35      497.604      665.607      66.1739      8691.21      604.549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45155, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.149374, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60659, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.19689e-11  2.00517e-22  5.00451e-23
      low eigenvalue method done, cpu time[sec] = 1.61891, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.01e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.2e-23  4.44e-16         1
         *Z       ---       ---  5.31e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.27713e-23  1.29361e-23  4.02376e-25  3.53471e-24  9.38945e-26  3.70004e-26  6.49494e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.73451, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.06623e+09
      global relaxation matrix dimension = 332
      setting global matrices ... done, cpu time[sec] = 0.230476, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.75535, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1770.46      223.035      49.7604      66.5607      6.61739      869.121      60.4549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45219, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.149663, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.6074, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.31628e-11  5.81119e-23  1.14212e-23
      low eigenvalue method done, cpu time[sec] = 1.61976, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.81e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.46e-24  4.44e-16         1
         *Z       ---       ---  5.31e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  8.71342e-24  2.17378e-24   6.1675e-26  3.66953e-25  1.15639e-26  3.12545e-26  6.70384e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.03009, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.06623e+10
      global relaxation matrix dimension = 332
      setting global matrices ... done, cpu time[sec] = 0.231685, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.08973, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            177.046      22.3035      4.97604      6.65607     0.661739      86.9121      6.04549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45188, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.149334, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60668, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.05089e-12  1.11498e-23  1.17434e-24
      low eigenvalue method done, cpu time[sec] = 1.61897, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.11e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.65e-25  4.44e-16         1
         *Z       ---       ---  5.31e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  9.70424e-25  1.57713e-25  5.43541e-27  2.39036e-26  8.86527e-28  9.64771e-27  7.34865e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.36487, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 660 K
            Well    Collision, 1/sec
              W1         1.06623e+11
      global relaxation matrix dimension = 332
      setting global matrices ... done, cpu time[sec] = 0.231356, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.20734, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17.7046      2.23035     0.497604     0.665607    0.0661739      8.69121     0.604549
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.45061, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.150086, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.60643, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.39646e-13  1.45068e-24  4.80011e-26
      low eigenvalue method done, cpu time[sec] = 1.61881, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.45e-24  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.65e-26  4.44e-16         1
         *Z       ---       ---  5.31e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  4.08638e-26  5.02518e-27  2.17565e-28  7.76008e-28  3.27624e-29  8.08039e-28  3.93684e-31

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.48311, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 670 K
      Energy reference = 23345 1/cm
      Energy step      = 168 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.006021
         W1 Well: collisional kernel bandwidth = 41
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.24127
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.149978
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.22518
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.738172
         W1 Well: minimal relaxation eigenvalue = 0.0589302
         W1 Well: maximal relaxation eigenvalue = 1.12649
         W1 Well:       grid size = 327
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31591 1/cm
         B1 Barrier:        grid size = 139
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 138
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 161 1/cm
         B3 Barrier:        grid size = 167
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4710 1/cm
         B4 Barrier:        grid size = 176
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6223 1/cm
         B5 Barrier: nonpositive number of states at -23191 1/cm => truncating
         B5 Barrier:        grid size = 277
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23191 1/cm
         B6 Barrier:        grid size = 131
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1337 1/cm
         B7 Barrier:        grid size = 111
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4697 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.64548, elapsed time[sec] = 1
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31591 -23191 4.58e+05 2.48e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 1.62e+14
         B2    162 2.07e+13
         B3  -4710 4.64e+12
         B4  -6223 6.19e+12
         B5 -23191 6.18e+11
         B6   1338 8.09e+13
         B7   4697 5.72e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.15e+06  9.33e+06  3.67e+03       118  2.65e-15  2.41e+09   5.7e+12
          R  1.94e-07         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1  1.07e-07     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2  0.000273   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3   0.00845  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  3.77e+14  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  4.15e-10   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  1.75e-13  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  3.94e+03  7.15e+03      2.81    0.0906  2.03e-18  1.84e+06  4.36e+09
          R  0.000254         1      1.81  0.000712   2.3e-05  5.15e-22       468  1.11e+06
         P1   0.00014     0.552         1  0.000393  1.27e-05  2.84e-22       258  6.11e+05
         P2     0.356   1.4e+03  2.54e+03         1    0.0323  7.24e-19  6.57e+05  1.55e+09
         P3        11  4.35e+04  7.89e+04        31         1  2.24e-17  2.04e+07  4.82e+10
         P4  4.92e+17  1.94e+21  3.52e+21  1.38e+18  4.46e+16         1  9.07e+23  2.15e+27
         P5  5.42e-07   0.00214   0.00388  1.52e-06  4.91e-08   1.1e-24         1  2.37e+03
         P6  2.29e-10  9.04e-07  1.64e-06  6.44e-10  2.08e-11  4.66e-28  0.000423         1
   MasterEquation::set:  done, cpu time[sec] = 1.65546, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.05248e+07
      global relaxation matrix dimension = 327
      setting global matrices ... done, cpu time[sec] = 0.222964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.88543, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             186729      23784.9      5341.97      7120.77      711.099      93043.9       6581.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40103, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.162912, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.58293, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.77518e-14  1.68331e-21  3.83734e-22
      low eigenvalue method done, cpu time[sec] = 1.59478, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.68e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.92e-23  2.22e-16         1
         *Z       ---       ---     3e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.88652e-22  9.31302e-23  6.66333e-24  9.28696e-23  2.13397e-24  1.01448e-25  2.13839e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.05248e+08
      global relaxation matrix dimension = 327
      setting global matrices ... done, cpu time[sec] = 0.222996, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.93796, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18672.9      2378.49      534.197      712.077      71.1099      9304.39       658.18
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40098, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.145058, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55157, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.61359e-15  5.50224e-22  1.38979e-22
      low eigenvalue method done, cpu time[sec] = 1.56317, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0   5.5e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.24e-23  2.22e-16         1
         *Z       ---       ---     3e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  9.16365e-23  3.60174e-23  1.11683e-24  9.77368e-24  2.60001e-25  1.07382e-25  2.14174e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.1372, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.05248e+09
      global relaxation matrix dimension = 327
      setting global matrices ... done, cpu time[sec] = 0.221501, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.0862, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1867.29      237.849      53.4197      71.2077      7.11099      930.439       65.818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40163, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.145732, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55314, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    4.756e-15  1.62475e-22   3.2456e-23
      low eigenvalue method done, cpu time[sec] = 1.5648, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.62e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.57e-24  2.22e-16         1
         *Z       ---       ---     3e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.49244e-23  6.17786e-24  1.75531e-25  1.03925e-24  3.28303e-26  9.16165e-26  2.17888e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.28442, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.05248e+10
      global relaxation matrix dimension = 327
      setting global matrices ... done, cpu time[sec] = 0.222872, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.23137, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            186.729      23.7849      5.34197      7.12077     0.711099      93.0439       6.5818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.40535, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.144998, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55567, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.08219e-14  3.17207e-23  3.44676e-24
      low eigenvalue method done, cpu time[sec] = 1.56869, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.17e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.87e-24  2.22e-16         1
         *Z       ---       ---     3e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.86651e-24  4.61857e-25  1.60057e-26  6.99271e-26  2.60342e-27    2.909e-26  2.39063e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.43901, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 670 K
            Well    Collision, 1/sec
              W1         1.05248e+11
      global relaxation matrix dimension = 327
      setting global matrices ... done, cpu time[sec] = 0.224262, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.32218, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            18.6729      2.37849     0.534197     0.712077    0.0711099      9.30439      0.65818
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.4048, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.147686, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.55792, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.61833e-15  4.17686e-24  1.46132e-25
      low eigenvalue method done, cpu time[sec] = 1.57071, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.18e-24  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.46e-25  2.22e-16         1
         *Z       ---       ---     3e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16    1.251e-25  1.52148e-26  6.65513e-28   2.3527e-27  9.99074e-29  2.53326e-27  1.30296e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.53354, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 680 K
      Energy reference = 23623 1/cm
      Energy step      = 170 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005885
         W1 Well: collisional kernel bandwidth = 41
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.261596
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.148154
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.201814
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.697605
         W1 Well: minimal relaxation eigenvalue = 0.0583272
         W1 Well: maximal relaxation eigenvalue = 1.33975
         W1 Well:       grid size = 325
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31627 1/cm
         B1 Barrier:        grid size = 139
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 138
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 162 1/cm
         B3 Barrier:        grid size = 167
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4766 1/cm
         B4 Barrier:        grid size = 176
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6297 1/cm
         B5 Barrier: nonpositive number of states at -23127 1/cm => truncating
         B5 Barrier:        grid size = 275
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23127 1/cm
         B6 Barrier:        grid size = 131
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1353 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4583 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.6017, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31627 -23127 4.79e+05 2.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 1.78e+14
         B2    163 2.29e+13
         B3  -4766 5.18e+12
         B4  -6297 6.88e+12
         B5 -23127  6.9e+11
         B6   1353 8.99e+13
         B7   4583 6.46e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.83e+06   3.3e+06  1.51e+03      51.2  2.05e-15  8.16e+08  1.76e+12
          R  5.47e-07         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1  3.03e-07     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2  0.000663  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3    0.0195  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  4.88e+14  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  1.23e-09   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  5.69e-13  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.42e+03  2.56e+03      1.17    0.0398  1.59e-18  6.34e+05  1.36e+09
          R  0.000704         1       1.8  0.000825   2.8e-05  1.12e-21       446   9.6e+05
         P1   0.00039     0.554         1  0.000457  1.55e-05  6.21e-22       247  5.32e+05
         P2     0.853  1.21e+03  2.19e+03         1     0.034  1.36e-18  5.41e+05  1.16e+09
         P3      25.1  3.57e+04  6.44e+04      29.4         1     4e-17  1.59e+07  3.43e+10
         P4  6.28e+17  8.92e+20  1.61e+21  7.36e+17   2.5e+16         1  3.98e+23  8.57e+26
         P5  1.58e-06   0.00224   0.00405  1.85e-06  6.28e-08  2.51e-24         1  2.15e+03
         P6  7.33e-10  1.04e-06  1.88e-06  8.59e-10  2.92e-11  1.17e-27  0.000464         1
   MasterEquation::set:  done, cpu time[sec] = 1.61158, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.03917e+07
      global relaxation matrix dimension = 325
      setting global matrices ... done, cpu time[sec] = 0.221508, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.2084, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             196772      25342.1      5729.03       7610.7      763.362      99498.7       7155.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37864, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.14465, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54746, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.23448e-09  4.41544e-21   1.0229e-21
      low eigenvalue method done, cpu time[sec] = 1.56024, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.42e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.58e-22  2.22e-16         1
         *Z       ---       ---  1.72e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  5.04073e-22  2.47659e-22  1.75949e-23  2.44267e-22  5.61768e-24  2.85344e-25  6.33473e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.40155, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.03917e+08
      global relaxation matrix dimension = 325
      setting global matrices ... done, cpu time[sec] = 0.22149, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.3213, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19677.2      2534.21      572.903       761.07      76.3362      9949.87       715.55
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37791, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.145184, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54755, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -1.95589e-10  1.47396e-21  3.76794e-22
      low eigenvalue method done, cpu time[sec] = 1.56033, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.47e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.6e-23  2.22e-16         1
         *Z       ---       ---  1.72e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.48323e-22  9.70216e-23  3.00406e-24   2.6189e-23  6.97702e-25  3.02153e-25  6.76228e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.51366, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.03917e+09
      global relaxation matrix dimension = 325
      setting global matrices ... done, cpu time[sec] = 0.221564, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.61425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1967.72      253.421      57.2903       76.107      7.63362      994.987       71.555
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37593, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.143559, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54473, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.38727e-11  4.43334e-22  9.00103e-23
      low eigenvalue method done, cpu time[sec] = 1.5576, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.43e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.59e-23  2.22e-16         1
         *Z       ---       ---  1.72e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.90351e-23  1.69909e-23  4.83777e-25  2.85035e-24  9.02629e-26  2.59983e-25  6.84008e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.80337, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.03917e+10
      global relaxation matrix dimension = 325
      setting global matrices ... done, cpu time[sec] = 0.222054, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.90812, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            196.772      25.3421      5.72903       7.6107     0.763362      99.4987       7.1555
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37605, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.144336, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54467, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.07156e-12  8.80591e-23  9.86612e-24
      low eigenvalue method done, cpu time[sec] = 1.5575, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.81e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.14e-24  2.22e-16         1
         *Z       ---       ---  1.72e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  8.18962e-24  1.30817e-24  4.55964e-26  1.97954e-25  7.39722e-27  8.48086e-26  7.49157e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.09613, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 680 K
            Well    Collision, 1/sec
              W1         1.03917e+11
      global relaxation matrix dimension = 325
      setting global matrices ... done, cpu time[sec] = 0.221674, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 3.0583, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            19.6772      2.53421     0.572903      0.76107    0.0763362      9.94987      0.71555
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.37654, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.144863, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.54505, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   2.7192e-14  1.17366e-23  4.33656e-25
      low eigenvalue method done, cpu time[sec] = 1.55789, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.85e-25  2.22e-16         1
         *Z       ---       ---  1.72e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  3.70703e-25  4.45932e-26  1.97074e-27  6.90638e-27  2.94964e-28  7.68356e-27  4.17258e-30

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.24773, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 690 K
      Energy reference = 23901 1/cm
      Energy step      = 172 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.5 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005592
         W1 Well: collisional kernel bandwidth = 41
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.258741
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.147336
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.222233
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.692178
         W1 Well: minimal relaxation eigenvalue = 0.0576967
         W1 Well: maximal relaxation eigenvalue = 1.41414
         W1 Well:       grid size = 323
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31655 1/cm
         B1 Barrier:        grid size = 139
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -7 1/cm
         B2 Barrier:        grid size = 138
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 165 1/cm
         B3 Barrier:        grid size = 166
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4651 1/cm
         B4 Barrier:        grid size = 175
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6199 1/cm
         B5 Barrier: nonpositive number of states at -23227 1/cm => truncating
         B5 Barrier:        grid size = 274
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23226 1/cm
         B6 Barrier:        grid size = 131
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1369 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4637 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.6113, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31655 -23226 4.46e+05 2.74e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1     -7 1.95e+14
         B2    166 2.53e+13
         B3  -4651 5.76e+12
         B4  -6199 7.63e+12
         B5 -23226 7.69e+11
         B6   1370 9.98e+13
         B7   4637 7.29e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.71e+05  1.21e+06       638      22.8   1.6e-15  2.86e+08  5.62e+11
          R  1.49e-06         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1  8.28e-07     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2   0.00157  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3    0.0439  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  6.26e+14   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5   3.5e-09   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  1.78e-12  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       527       948     0.501    0.0179  1.26e-18  2.25e+05  4.41e+08
          R    0.0019         1       1.8  0.000951   3.4e-05  2.38e-21       426  8.37e+05
         P1   0.00105     0.556         1  0.000529  1.89e-05  1.32e-21       237  4.65e+05
         P2      1.99  1.05e+03  1.89e+03         1    0.0357  2.51e-18  4.48e+05   8.8e+08
         P3      55.8  2.94e+04  5.29e+04        28         1  7.01e-17  1.25e+07  2.46e+10
         P4  7.96e+17   4.2e+20  7.55e+20  3.99e+17  1.43e+16         1  1.79e+23  3.51e+26
         P5  4.45e-06   0.00235   0.00422  2.23e-06  7.98e-08  5.59e-24         1  1.96e+03
         P6  2.27e-09  1.19e-06  2.15e-06  1.14e-09  4.06e-11  2.85e-27  0.000509         1
   MasterEquation::set:  done, cpu time[sec] = 1.62089, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.02627e+07
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.218022, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.15902, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             207187      26977.7       6138.1      8126.85       818.65       106287      7768.45
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35335, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.156696, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.53456, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.61834e-09  1.12216e-20  2.63786e-21
      low eigenvalue method done, cpu time[sec] = 1.54596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.12e-20  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.47e-22  2.22e-16         1
         *Z       ---       ---  1.01e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.30781e-21  6.39328e-22  4.51228e-23  6.24041e-22   1.4364e-23  7.78167e-25  1.95898e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.32534, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.02627e+08
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.218053, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.27616, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20718.7      2697.77       613.81      812.685       81.865      10628.7      776.845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35783, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.142296, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5245, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -7.66388e-11  3.82308e-21   9.8778e-22
      low eigenvalue method done, cpu time[sec] = 1.53734, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.82e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.21e-22  2.22e-16         1
         *Z       ---       ---  1.01e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  6.53126e-22   2.5365e-22  7.84377e-24  6.81246e-23  1.81753e-24  8.23754e-25  2.02726e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.43478, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.02627e+09
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.218749, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.54623, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2071.87      269.777       61.381      81.2685       8.1865      1062.87      77.6845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35855, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.142199, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.52476, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.44121e-11  1.17067e-21  2.41233e-22
      low eigenvalue method done, cpu time[sec] = 1.53723, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.17e-21  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.75e-23  2.22e-16         1
         *Z       ---       ---  1.01e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  1.85481e-22  4.53341e-23   1.2936e-24  7.58563e-24  2.40787e-25  7.14929e-25  2.07385e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.70747, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.02627e+10
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.220141, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.8353, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            207.187      26.9777       6.1381      8.12685      0.81865      106.287      7.76845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35692, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.142451, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5237, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.34262e-12   2.3652e-22   2.7273e-23
      low eigenvalue method done, cpu time[sec] = 1.5362, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-22  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-23  2.22e-16         1
         *Z       ---       ---  1.01e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16  2.26837e-23  3.59305e-24  1.25948e-25  5.43439e-25  2.03812e-26  2.39523e-25  2.27359e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.99433, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 690 K
            Well    Collision, 1/sec
              W1         1.02627e+11
      global relaxation matrix dimension = 323
      setting global matrices ... done, cpu time[sec] = 0.218595, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.99874, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            20.7187      2.69777      0.61381     0.812685     0.081865      10.6287     0.776845
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.35765, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.143325, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.5253, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.35067e-14  3.19111e-23  1.24225e-24
      low eigenvalue method done, cpu time[sec] = 1.53783, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.19e-23  2.22e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.84e-24  2.22e-16         1
         *Z       ---       ---  1.01e+29
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.22045e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.22045e-16   1.0637e-24  1.26634e-25  5.65249e-27  1.96452e-26  8.43625e-28  2.25494e-26  1.28978e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.15882, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 700 K
      Energy reference = 24179 1/cm
      Energy step      = 175 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -85.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00554
         W1 Well: collisional kernel bandwidth = 41
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.255988
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.142847
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.206605
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.656039
         W1 Well: minimal relaxation eigenvalue = 0.0570551
         W1 Well: maximal relaxation eigenvalue = 1.3872
         W1 Well:       grid size = 319
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31646 1/cm
         B1 Barrier:        grid size = 139
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -146 1/cm
         B2 Barrier:        grid size = 137
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 203 1/cm
         B3 Barrier:        grid size = 165
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4696 1/cm
         B4 Barrier:        grid size = 174
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6271 1/cm
         B5 Barrier: nonpositive number of states at -23421 1/cm => truncating
         B5 Barrier:        grid size = 272
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23421 1/cm
         B6 Barrier:        grid size = 130
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1428 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4578 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.55105, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31646 -23421 3.87e+05 2.88e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -146 2.13e+14
         B2    204  2.8e+13
         B3  -4696 6.41e+12
         B4  -6271 8.46e+12
         B5 -23421 8.56e+11
         B6   1429 1.11e+14
         B7   4579 8.22e+12
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.52e+05  4.51e+05       275      10.3  1.25e-15  1.03e+08  1.84e+11
          R  3.97e-06         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1  2.22e-06     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2   0.00364       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3    0.0969  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4  8.02e+14  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  9.75e-09   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  5.42e-12  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1       201       361      0.22   0.00825  9.97e-19   8.2e+04  1.47e+08
          R   0.00497         1      1.79   0.00109   4.1e-05  4.95e-21       407  7.32e+05
         P1   0.00277     0.558         1  0.000609  2.29e-05  2.76e-21       227  4.08e+05
         P2      4.55       916  1.64e+03         1    0.0375  4.54e-18  3.73e+05  6.71e+08
         P3       121  2.44e+04  4.37e+04      26.6         1  1.21e-16  9.94e+06  1.79e+10
         P4     1e+18  2.02e+20  3.62e+20   2.2e+17  8.27e+15         1  8.22e+22  1.48e+26
         P5  1.22e-05   0.00246    0.0044  2.68e-06  1.01e-07  1.22e-23         1   1.8e+03
         P6  6.79e-09  1.37e-06  2.45e-06  1.49e-09   5.6e-11  6.77e-27  0.000556         1
   MasterEquation::set:  done, cpu time[sec] = 1.56095, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.01376e+07
      global relaxation matrix dimension = 319
      setting global matrices ... done, cpu time[sec] = 0.214964, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.10153, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             217975      28694.5      6570.07      8670.18       877.09       113420      8422.58
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.3163, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138752, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47884, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0    4.529e-09  2.77788e-20  6.61871e-21
      low eigenvalue method done, cpu time[sec] = 1.49165, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.78e-20  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.58e-21  4.44e-16         1
         *Z       ---       ---  5.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  3.30139e-21  1.59982e-21  1.12594e-22  1.55122e-21  3.57365e-23  2.07132e-24  6.03646e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.20349, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.01376e+08
      global relaxation matrix dimension = 319
      setting global matrices ... done, cpu time[sec] = 0.213119, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.22621, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21797.5      2869.45      657.007      867.018       87.709        11342      842.258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.31611, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138129, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47801, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.71623e-10   9.6509e-21   2.5184e-21
      low eigenvalue method done, cpu time[sec] = 1.49034, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.65e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.51e-22  4.44e-16         1
         *Z       ---       ---  5.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.66964e-21  6.43756e-22  1.99082e-23  1.72272e-22  4.60266e-24   2.1888e-24  6.05246e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.32342, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.01376e+09
      global relaxation matrix dimension = 319
      setting global matrices ... done, cpu time[sec] = 0.212748, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.48087, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2179.75      286.945      65.7007      86.7018       8.7709       1134.2      84.2258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.31596, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138069, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47743, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0   4.9613e-11  3.00763e-21  6.28562e-22
      low eigenvalue method done, cpu time[sec] = 1.48987, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.01e-21  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.72e-22  4.44e-16         1
         *Z       ---       ---  5.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   4.8409e-22  1.17455e-22  3.36057e-24  1.96153e-23  6.24086e-25   1.9099e-24  6.09441e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.57808, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.01376e+10
      global relaxation matrix dimension = 319
      setting global matrices ... done, cpu time[sec] = 0.212818, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.75154, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            217.975      28.6945      6.57007      8.67018      0.87709       113.42      8.42258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.31682, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138159, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.47844, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.88596e-12  6.18023e-22  7.32618e-23
      low eigenvalue method done, cpu time[sec] = 1.49082, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.18e-22  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.53e-23  4.44e-16         1
         *Z       ---       ---  5.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  6.10046e-23  9.58254e-24  3.37842e-25  1.44904e-24  5.45366e-26  6.56417e-25  6.68038e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.84892, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 700 K
            Well    Collision, 1/sec
              W1         1.01376e+11
      global relaxation matrix dimension = 319
      setting global matrices ... done, cpu time[sec] = 0.213373, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.91158, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21.7975      2.86945     0.657007     0.867018     0.087709       11.342     0.842258
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.31639, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.138209, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.4786, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.10726e-14  8.44219e-23  3.45687e-24
      low eigenvalue method done, cpu time[sec] = 1.49099, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.44e-23  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.82e-24  4.44e-16         1
         *Z       ---       ---  5.96e+28
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.96274e-24  3.49145e-25  1.57392e-26   5.4261e-26  2.34265e-27  6.41905e-26  3.86241e-29

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 5.01137, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 800 K
      Energy reference = 26959 1/cm
      Energy step      = 200 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -84.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005037
         W1 Well: collisional kernel bandwidth = 39
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.21555
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.120865
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.176687
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.545702
         W1 Well: minimal relaxation eigenvalue = 0.0515144
         W1 Well: maximal relaxation eigenvalue = 1.24973
         W1 Well:       grid size = 293
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31641 1/cm
         B1 Barrier:        grid size = 135
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -40 1/cm
         B2 Barrier:        grid size = 134
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 158 1/cm
         B3 Barrier:        grid size = 158
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4640 1/cm
         B4 Barrier:        grid size = 166
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6241 1/cm
         B5 Barrier: nonpositive number of states at -23241 1/cm => truncating
         B5 Barrier:        grid size = 251
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23241 1/cm
         B6 Barrier:        grid size = 128
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1359 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4559 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.34288, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31641 -23241 4.41e+05 4.73e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -40 4.98e+14
         B2    159 7.29e+13
         B3  -4640 1.77e+13
         B4  -6241 2.27e+13
         B5 -23241 2.38e+12
         B6   1359 2.95e+14
         B7   4559 2.53e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1      54.8      95.8     0.196    0.0113   1.5e-16   1.5e+04  1.25e+07
          R    0.0183         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1    0.0104     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2      5.09       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3      88.8  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  6.65e+15  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5  6.68e-05   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  7.98e-08  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0498     0.087  0.000178  1.02e-05  1.37e-19      13.6  1.14e+04
          R      20.1         1      1.75   0.00358  0.000206  2.74e-18       273  2.29e+05
         P1      11.5     0.572         1   0.00205  0.000118  1.57e-18       156  1.31e+05
         P2  5.61e+03       279       488         1    0.0574  7.66e-16  7.63e+04  6.38e+07
         P3  9.77e+04  4.86e+03   8.5e+03      17.4         1  1.33e-14  1.33e+06  1.11e+09
         P4  7.32e+18  3.64e+17  6.37e+17  1.31e+15  7.49e+13         1  9.96e+19  8.33e+22
         P5    0.0735   0.00366    0.0064  1.31e-05  7.52e-07     1e-20         1       837
         P6  8.79e-05  4.37e-06  7.64e-06  1.57e-08  8.99e-10   1.2e-23    0.0012         1
   MasterEquation::set:  done, cpu time[sec] = 1.35278, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.06871e+06
      global relaxation matrix dimension = 293
      setting global matrices ... done, cpu time[sec] = 0.181205, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.70654, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             347911      50955.5      12361.1      15829.9      1664.79       206163      17687.8
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.04765, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.123221, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.19085, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -1.0333e-08  6.62202e-17  1.75725e-17
      low eigenvalue method done, cpu time[sec] = 1.20158, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.62e-17  6.66e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.41e-18  6.66e-16         1
         *Z       ---       ---  6.74e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.66134e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.66134e-16  9.20824e-18  4.24567e-18  2.83812e-19   3.7894e-18  8.79478e-20  9.03549e-21  6.46173e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.42162, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.06871e+07
      global relaxation matrix dimension = 293
      setting global matrices ... done, cpu time[sec] = 0.180009, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.7645, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34791.1      5095.55      1236.11      1582.99      166.479      20616.3      1768.78
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05001, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.11389, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18408, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.55169e-10  2.72147e-17  7.67437e-18
      low eigenvalue method done, cpu time[sec] = 1.19507, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.72e-17  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.4e-18  4.44e-16         1
         *Z       ---       ---  6.74e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16   5.2214e-18  1.90457e-18  5.84794e-20  4.89701e-19  1.32536e-20  9.51804e-21  6.47075e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.47189, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.06871e+08
      global relaxation matrix dimension = 293
      setting global matrices ... done, cpu time[sec] = 0.180249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.94272, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3479.11      509.555      123.611      158.299      16.6479      2061.63      176.878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05039, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.114173, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1847, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.79291e-11  9.87134e-18  2.31275e-18
      low eigenvalue method done, cpu time[sec] = 1.19545, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.87e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.09e-19  4.44e-16         1
         *Z       ---       ---  6.74e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  1.81436e-18  4.14177e-19  1.21158e-20  6.78513e-20  2.20475e-21  8.83312e-21  6.56523e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.65192, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.06871e+09
      global relaxation matrix dimension = 293
      setting global matrices ... done, cpu time[sec] = 0.180469, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.1896, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            347.911      50.9555      12.3611      15.8299      1.66479      206.163      17.6878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.05113, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.112955, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.18452, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.06004e-12  2.37143e-18  3.53175e-19
      low eigenvalue method done, cpu time[sec] = 1.19558, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.37e-18  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.22e-19  4.44e-16         1
         *Z       ---       ---  6.74e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.98251e-19   4.3691e-20  1.62059e-21  6.60099e-21  2.56255e-22   3.7925e-21  7.14363e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.89652, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 800 K
            Well    Collision, 1/sec
              W1         9.06871e+10
      global relaxation matrix dimension = 293
      setting global matrices ... done, cpu time[sec] = 0.179934, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 2.34309, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            34.7911      5.09555      1.23611      1.58299     0.166479      20.6163      1.76878
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 1.04895, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.113352, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 1.1825, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -4.08529e-13  3.67684e-19  2.31166e-20
      low eigenvalue method done, cpu time[sec] = 1.19322, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.68e-19  4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.89e-20  4.44e-16         1
         *Z       ---       ---  6.74e+26
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.44089e-16  2.00228e-20   2.1735e-21  1.06693e-22   3.4379e-22   1.5537e-23   5.2178e-22  4.82276e-25

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 4.04885, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 900 K
      Energy reference = 29740 1/cm
      Energy step      = 225 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -82.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.005122
         W1 Well: collisional kernel bandwidth = 38
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.19826
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.104528
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.125493
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.453192
         W1 Well: minimal relaxation eigenvalue = 0.0471308
         W1 Well: maximal relaxation eigenvalue = 1.52394
         W1 Well:       grid size = 273
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31685 1/cm
         B1 Barrier:        grid size = 133
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -185 1/cm
         B2 Barrier:        grid size = 132
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 39 1/cm
         B3 Barrier:        grid size = 153
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4686 1/cm
         B4 Barrier:        grid size = 160
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6260 1/cm
         B5 Barrier: nonpositive number of states at -23361 1/cm => truncating
         B5 Barrier:        grid size = 236
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23361 1/cm
         B6 Barrier:        grid size = 126
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1389 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4539 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.16419, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31685 -23361 4.04e+05 7.61e+12
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -185 1.09e+15
         B2     40 1.77e+14
         B3  -4686 4.52e+13
         B4  -6260 5.64e+13
         B5 -23361 6.13e+12
         B6   1390 7.24e+14
         B7   4540 7.02e+13
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1    0.0765     0.132  0.000687  5.49e-05  2.85e-17      15.1  6.97e+03
          R      13.1         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1      7.57     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.46e+03       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.82e+04  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.51e+16  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5    0.0664   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6  0.000144   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.84e-05  0.000135  7.04e-07  5.62e-08  2.92e-20    0.0154      7.14
          R  1.28e+04         1      1.73   0.00898  0.000718  3.73e-16       197  9.11e+04
         P1  7.39e+03     0.579         1    0.0052  0.000416  2.16e-16       114  5.28e+04
         P2  1.42e+06       111       192         1    0.0799  4.15e-14  2.19e+04  1.01e+07
         P3  1.78e+07  1.39e+03  2.41e+03      12.5         1  5.19e-13  2.74e+05  1.27e+08
         P4  3.42e+19  2.68e+15  4.63e+15  2.41e+13  1.93e+12         1  5.29e+17  2.45e+20
         P5      64.8   0.00508   0.00877  4.56e-05  3.64e-06  1.89e-18         1       463
         P6      0.14   1.1e-05  1.89e-05  9.86e-08  7.87e-09  4.09e-21   0.00216         1
   MasterEquation::set:  done, cpu time[sec] = 1.17361, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         8.24626e+06
      global relaxation matrix dimension = 273
      setting global matrices ... done, cpu time[sec] = 0.15566, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.43386, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             521968      84653.1      21578.4        26936      2928.94       345916      33557.6
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.870012, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.103587, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.991336, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.31414e-09  2.64052e-14  7.55689e-15
      low eigenvalue method done, cpu time[sec] = 1.00073, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.64e-14  7.55e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.24e-15  7.55e-15         1
         *Z       ---       ---  2.15e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.54952e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  7.54952e-15  4.08679e-15  1.80613e-15  1.15617e-16  1.50708e-15  3.51905e-17   5.8924e-18  8.54074e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.87878, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         8.24626e+07
      global relaxation matrix dimension = 273
      setting global matrices ... done, cpu time[sec] = 0.156625, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.46449, elapsed time[sec] = 1
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52196.8      8465.31      2157.84       2693.6      292.894      34591.6      3355.76
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.872702, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.095827, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986107, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.63336e-10  1.23326e-14  3.67392e-15
      low eigenvalue method done, cpu time[sec] = 0.995764, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.23e-14  3.11e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.81e-16  3.11e-15         1
         *Z       ---       ---  2.15e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.10862e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.10862e-15  2.53507e-15  8.79861e-16  2.69812e-17  2.19715e-16   6.0142e-18  6.18399e-18  8.55242e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.90591, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         8.24626e+08
      global relaxation matrix dimension = 273
      setting global matrices ... done, cpu time[sec] = 0.156704, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.61996, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5219.68      846.531      215.784       269.36      29.2894      3459.16      335.576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.87166, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.097264, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.986381, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.02258e-10   5.0437e-15  1.28563e-15
      low eigenvalue method done, cpu time[sec] = 0.996335, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.04e-15  8.88e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.38e-16  8.88e-16         1
         *Z       ---       ---  2.15e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.88178e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.88178e-16  1.01591e-15  2.20315e-16  6.59141e-18   3.5653e-17   1.1797e-18  5.94662e-18  8.66386e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.0608, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         8.24626e+09
      global relaxation matrix dimension = 273
      setting global matrices ... done, cpu time[sec] = 0.156679, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.81343, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            521.968      84.6531      21.5784       26.936      2.92894      345.916      33.5576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.871502, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.096368, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985397, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.70224e-12  1.38848e-15  2.44702e-16
      low eigenvalue method done, cpu time[sec] = 0.995093, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.39e-15 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.54e-17 -4.44e-16         1
         *Z       ---       ---  2.15e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  2.07267e-16  2.87607e-17  1.11449e-18  4.35737e-18  1.73481e-19  3.02176e-18  9.36384e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.25374, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 900 K
            Well    Collision, 1/sec
              W1         8.24626e+10
      global relaxation matrix dimension = 273
      setting global matrices ... done, cpu time[sec] = 0.156028, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.96145, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52.1968      8.46531      2.15784       2.6936     0.292894      34.5916      3.35576
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.872098, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.095941, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.985693, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.05502e-13  2.44577e-16  2.12564e-17
      low eigenvalue method done, cpu time[sec] = 0.995327, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.45e-16 -4.44e-16         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-17 -4.44e-16         1
         *Z       ---       ---  2.15e+25
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = -4.44089e-16
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1 -4.44089e-16  1.84017e-17  1.88472e-18  9.89808e-20   3.0331e-19  1.41991e-20  5.52244e-19  7.09883e-22

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 3.40136, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1000 K
      Energy reference = 32520 1/cm
      Energy step      = 250 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -81.1 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004734
         W1 Well: collisional kernel bandwidth = 36
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.153396
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.093081
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.1402
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.386399
         W1 Well: minimal relaxation eigenvalue = 0.0435179
         W1 Well: maximal relaxation eigenvalue = 1.69347
         W1 Well:       grid size = 257
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31729 1/cm
         B1 Barrier:        grid size = 131
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -229 1/cm
         B2 Barrier:        grid size = 130
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 20 1/cm
         B3 Barrier:        grid size = 149
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4729 1/cm
         B4 Barrier:        grid size = 155
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6229 1/cm
         B5 Barrier: nonpositive number of states at -23730 1/cm => truncating
         B5 Barrier:        grid size = 225
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23730 1/cm
         B6 Barrier:        grid size = 125
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1270 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4520 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 1.04966, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31729 -23730 3.08e+05  1.2e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -229 2.27e+15
         B2     21 4.05e+14
         B3  -4729 1.08e+14
         B4  -6229 1.32e+14
         B5 -23730 1.47e+13
         B6   1271 1.66e+15
         B7   4521 1.79e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  0.000397  0.000683   7.4e-06  7.72e-07  7.51e-18    0.0593      17.1
          R  2.52e+03         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.46e+03     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  1.35e+05      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3   1.3e+06       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.33e+17  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5      16.9    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6    0.0585  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.52e-07  7.78e-07  8.43e-09  8.79e-10  8.55e-21  6.76e-05    0.0195
          R  2.21e+06         1      1.72    0.0186   0.00194  1.89e-14       149   4.3e+04
         P1  1.29e+06     0.582         1    0.0108   0.00113   1.1e-14      86.9   2.5e+04
         P2  1.19e+08      53.7      92.3         1     0.104  1.01e-12  8.01e+03  2.31e+06
         P3  1.14e+09       515       885      9.59         1  9.73e-12  7.69e+04  2.22e+07
         P4  1.17e+20  5.29e+13  9.09e+13  9.86e+11  1.03e+11         1   7.9e+15  2.28e+18
         P5  1.48e+04    0.0067    0.0115  0.000125   1.3e-05  1.27e-16         1       288
         P6      51.4  2.32e-05  3.99e-05  4.33e-07  4.51e-08  4.39e-19   0.00347         1
   MasterEquation::set:  done, cpu time[sec] = 1.05914, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.59109e+06
      global relaxation matrix dimension = 257
      setting global matrices ... done, cpu time[sec] = 0.139965, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20169, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             745166       133216      35448.3      43283.5      4845.17       544493      58758.7
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.749104, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.086525, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.851557, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  -2.1192e-09   2.9766e-12  9.01772e-13
      low eigenvalue method done, cpu time[sec] = 0.860351, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.98e-12  9.02e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.3e-13  9.02e-13         1
         *Z       ---       ---  1.41e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 9.01501e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  9.01501e-13  5.02711e-13  2.12053e-13  1.32156e-14  1.68877e-13  3.96416e-15  9.95375e-16   2.5973e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.46212, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.59109e+07
      global relaxation matrix dimension = 257
      setting global matrices ... done, cpu time[sec] = 0.139789, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.24014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74516.6      13321.6      3544.83      4328.35      484.517      54449.3      5875.87
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.746771, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084125, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.846527, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.50998e-10  1.53654e-12  4.77992e-13
      low eigenvalue method done, cpu time[sec] = 0.855335, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.54e-12  4.78e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.69e-14  4.78e-13         1
         *Z       ---       ---  1.41e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.78062e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.78062e-13  3.34607e-13  1.11094e-13  3.41216e-15  2.71109e-14  7.49719e-16  1.04172e-15   2.6006e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.49255, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.59109e+08
      global relaxation matrix dimension = 257
      setting global matrices ... done, cpu time[sec] = 0.139594, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.36214, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7451.66      1332.16      354.483      432.835      48.4517      5444.93      587.587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747014, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084648, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.847648, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.93805e-11  6.93081e-13  1.88838e-13
      low eigenvalue method done, cpu time[sec] = 0.856461, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.93e-13  1.89e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-14  1.89e-13         1
         *Z       ---       ---  1.41e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.88738e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.88738e-13  1.50444e-13  3.12355e-14  9.54868e-16  5.01141e-15  1.68507e-16  1.03208e-15  2.63102e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.61661, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.59109e+09
      global relaxation matrix dimension = 257
      setting global matrices ... done, cpu time[sec] = 0.139492, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.52962, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            745.166      133.216      35.4483      43.2835      4.84517      544.493      58.7587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.747815, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.084948, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.848234, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.49342e-11  2.14876e-13  4.31212e-14
      low eigenvalue method done, cpu time[sec] = 0.857024, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.15e-13  4.35e-14         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.35e-15  4.35e-14         1
         *Z       ---       ---  1.41e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.35207e-14
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.35207e-14  3.66811e-14  4.87384e-15  1.96197e-16  7.41528e-16  3.01606e-17  6.00293e-16   2.8253e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.78296, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1000 K
            Well    Collision, 1/sec
              W1         7.59109e+10
      global relaxation matrix dimension = 257
      setting global matrices ... done, cpu time[sec] = 0.139615, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.66438, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            74.5166      13.3216      3.54483      4.32835     0.484517      54.4493      5.87587
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.750394, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.085147, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.851088, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.06034e-12  4.28198e-14  4.77875e-15
      low eigenvalue method done, cpu time[sec] = 0.860489, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.28e-14  4.88e-15         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.86e-15  4.88e-15         1
         *Z       ---       ---  1.41e+24
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.88498e-15
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.88498e-15  4.14101e-15  4.06403e-16  2.25468e-17  6.64377e-17  3.19936e-18  1.39148e-16  2.33608e-19

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.92141, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1100 K
      Energy reference = 35300 1/cm
      Energy step      = 275 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -79.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004634
         W1 Well: collisional kernel bandwidth = 35
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.161706
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.084756
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.120431
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.344628
         W1 Well: minimal relaxation eigenvalue = 0.0405067
         W1 Well: maximal relaxation eigenvalue = 2.40319
         W1 Well:       grid size = 244
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31799 1/cm
         B1 Barrier:        grid size = 129
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -174 1/cm
         B2 Barrier:        grid size = 128
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 100 1/cm
         B3 Barrier:        grid size = 146
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4849 1/cm
         B4 Barrier:        grid size = 151
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6224 1/cm
         B5 Barrier: nonpositive number of states at -23275 1/cm => truncating
         B5 Barrier:        grid size = 213
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23274 1/cm
         B6 Barrier:        grid size = 123
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1475 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4500 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.984641, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31799 -23274 4.31e+05 1.86e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -174 4.48e+15
         B2    101 8.79e+14
         B3  -4849 2.43e+14
         B4  -6224 2.91e+14
         B5 -23274 3.34e+13
         B6   1476 3.57e+15
         B7   4501 4.23e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.36e-06  9.23e-06  1.81e-07  2.35e-08  2.51e-18   0.00063     0.123
          R  1.87e+05         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  1.08e+05     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  5.53e+06      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3  4.26e+07       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.98e+17  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.59e+03    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6      8.11  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.72e-09  1.16e-08  2.27e-10  2.94e-11  3.15e-21  7.91e-07  0.000155
          R  1.49e+08         1      1.72    0.0337   0.00438  4.69e-13       118   2.3e+04
         P1  8.64e+07     0.581         1    0.0196   0.00254  2.72e-13      68.3  1.34e+04
         P2  4.41e+09      29.6        51         1      0.13  1.39e-11  3.49e+03  6.82e+05
         P3   3.4e+10       229       393      7.71         1  1.07e-10  2.69e+04  5.26e+06
         P4  3.17e+20  2.13e+12  3.67e+12   7.2e+10  9.34e+09         1  2.51e+14  4.91e+16
         P5  1.27e+06    0.0085    0.0146  0.000287  3.72e-05  3.98e-15         1       196
         P6  6.47e+03  4.35e-05  7.48e-05  1.47e-06   1.9e-07  2.04e-17   0.00511         1
   MasterEquation::set:  done, cpu time[sec] = 0.994027, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.05512e+06
      global relaxation matrix dimension = 244
      setting global matrices ... done, cpu time[sec] = 0.126524, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.05794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.02113e+06       200363      55359.6      66307.4      7614.01       813360      96390.6
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.651369, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075604, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.740966, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -9.87013e-09  1.34041e-10  4.25803e-11
      low eigenvalue method done, cpu time[sec] = 0.748687, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.34e-10  4.26e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.43e-12  4.26e-11         1
         *Z       ---       ---  1.58e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.25804e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.25512e-11   2.4447e-11  9.69048e-12  6.03308e-13  7.56791e-12  1.78565e-13  6.37599e-14  2.70915e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.16685, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.05512e+07
      global relaxation matrix dimension = 244
      setting global matrices ... done, cpu time[sec] = 0.124888, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.08565, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             102113      20036.3      5535.96      6630.74      761.401        81336      9639.06
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.651734, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.077015, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742996, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -3.36598e-09  7.47914e-11  2.41799e-11
      low eigenvalue method done, cpu time[sec] = 0.750993, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.48e-11  2.42e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.03e-12  2.42e-11         1
         *Z       ---       ---  1.58e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.418e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.41634e-11   1.7151e-11  5.42969e-12  1.68715e-13   1.3108e-12  3.65944e-14   6.6539e-14  2.71239e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.19239, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.05512e+08
      global relaxation matrix dimension = 244
      setting global matrices ... done, cpu time[sec] = 0.126049, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.20425, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            10211.3      2003.63      553.596      663.074      76.1401       8133.6      963.906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.651541, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076497, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742696, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.08401e-10  3.66517e-11  1.05748e-11
      low eigenvalue method done, cpu time[sec] = 0.750404, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.67e-11  1.06e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.48e-12  1.06e-11         1
         *Z       ---       ---  1.58e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.05747e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.05674e-11  8.47751e-12  1.69042e-12  5.29022e-14  2.70265e-13  9.22166e-15  6.71797e-14  2.74107e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.31195, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.05512e+09
      global relaxation matrix dimension = 244
      setting global matrices ... done, cpu time[sec] = 0.12503, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.3258, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1021.13      200.363      55.3596      66.3074      7.61401       813.36      96.3906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.652833, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.076025, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.742898, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -2.03853e-11  1.26167e-11  2.81414e-12
      low eigenvalue method done, cpu time[sec] = 0.750586, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.26e-11  2.81e-12         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.11e-13  2.81e-12         1
         *Z       ---       ---  1.58e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.81419e-12
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.81231e-12  2.39955e-12  3.07377e-13  1.28116e-14  4.70385e-14  1.94929e-15  4.34609e-14  2.92591e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.43248, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1100 K
            Well    Collision, 1/sec
              W1         7.05512e+10
      global relaxation matrix dimension = 244
      setting global matrices ... done, cpu time[sec] = 0.127562, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.42393, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            102.113      20.0363      5.53596      6.63074     0.761401       81.336      9.63906
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.652009, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.075383, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.741462, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0 -5.74371e-13  2.82534e-12  3.84796e-13
      low eigenvalue method done, cpu time[sec] = 0.749668, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.83e-12  3.85e-13         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.14e-13  3.85e-13         1
         *Z       ---       ---  1.58e+23
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.84581e-13
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.84359e-13  3.33209e-13  3.16496e-14  1.83876e-15   5.2489e-15  2.58768e-16  1.23013e-14  2.58318e-17

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.53256, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1200 K
      Energy reference = 38080 1/cm
      Energy step      = 300 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -77.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004051
         W1 Well: collisional kernel bandwidth = 34
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.149501
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.076376
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.113164
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.30711
         W1 Well: minimal relaxation eigenvalue = 0.0379761
         W1 Well: maximal relaxation eigenvalue = 2.40957
         W1 Well:       grid size = 233
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31820 1/cm
         B1 Barrier:        grid size = 127
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -20 1/cm
         B2 Barrier:        grid size = 127
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -20 1/cm
         B3 Barrier:        grid size = 143
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4820 1/cm
         B4 Barrier:        grid size = 148
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6320 1/cm
         B5 Barrier: nonpositive number of states at -23720 1/cm => truncating
         B5 Barrier:        grid size = 206
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23720 1/cm
         B6 Barrier:        grid size = 122
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1479 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4479 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.917214, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31820 -23720 3.11e+05 2.85e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -20 8.49e+15
         B2    -20 1.82e+15
         B3  -4820  5.2e+14
         B4  -6320 6.13e+14
         B5 -23720  7.2e+13
         B6   1480 7.31e+15
         B7   4480 9.41e+14
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.48e-07  2.57e-07  8.18e-09  1.27e-09  1.01e-18  1.42e-05     0.002
          R  6.74e+06         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1   3.9e+06     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  1.22e+08      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  7.85e+08       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  9.93e+17  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  7.06e+04    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6       499   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.03e-10  3.51e-10  1.12e-11  1.74e-12  1.38e-21  1.94e-08  2.74e-06
          R  4.92e+09         1      1.73    0.0551   0.00858  6.79e-12      95.4  1.35e+04
         P1  2.85e+09     0.578         1    0.0319   0.00496  3.92e-12      55.1  7.81e+03
         P2  8.93e+10      18.1      31.4         1     0.156  1.23e-10  1.73e+03  2.45e+05
         P3  5.73e+11       116       202      6.42         1  7.91e-10  1.11e+04  1.57e+06
         P4  7.25e+20  1.47e+11  2.55e+11  8.12e+09  1.26e+09         1  1.41e+13  1.99e+15
         P5  5.16e+07    0.0105    0.0181  0.000578     9e-05  7.12e-14         1       142
         P6  3.64e+05   7.4e-05  0.000128  4.08e-06  6.35e-07  5.03e-16   0.00706         1
   MasterEquation::set:  done, cpu time[sec] = 0.926897, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.60744e+06
      global relaxation matrix dimension = 233
      setting global matrices ... done, cpu time[sec] = 0.115412, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.951447, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.35238e+06       290098      82862.4      97581.8      11460.8  1.16352e+06       149875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.580524, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.069194, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.662774, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  4.09048e-08  3.02182e-09  1.00337e-09
      low eigenvalue method done, cpu time[sec] = 0.670319, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.02e-09     1e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.15e-10     1e-09         1
         *Z       ---       ---  2.61e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.00337e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.00187e-09  5.87596e-10  2.24704e-10  1.37322e-11  1.69851e-10  4.02359e-12   1.9639e-12  1.26678e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.96056, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.60744e+07
      global relaxation matrix dimension = 233
      setting global matrices ... done, cpu time[sec] = 0.115304, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.993014, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             135238      29009.8      8286.24      9758.18      1146.08       116352      14987.5
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.580574, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.068421, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.661864, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.90751e-09  1.80593e-09   6.0595e-10
      low eigenvalue method done, cpu time[sec] = 0.669464, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.81e-09  6.06e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.86e-11  6.06e-10         1
         *Z       ---       ---  2.61e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 6.0595e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  6.05044e-10  4.33672e-10  1.32824e-10  4.13519e-12  3.14799e-11  8.86628e-13  2.04502e-12  1.26822e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.99265, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.60744e+08
      global relaxation matrix dimension = 233
      setting global matrices ... done, cpu time[sec] = 0.115025, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.05159, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            13523.8      2900.98      828.624      975.818      114.608      11635.2      1498.75
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.5808, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.068962, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.662482, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.12789e-09  9.47875e-10  2.88024e-10
      low eigenvalue method done, cpu time[sec] = 0.670091, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.48e-10  2.88e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.6e-11  2.88e-10         1
         *Z       ---       ---  2.61e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.88024e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.87593e-10  2.31942e-10  4.47565e-11  1.42864e-12  7.12311e-12  2.46344e-13  2.09501e-12  1.28042e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.05073, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.60744e+09
      global relaxation matrix dimension = 233
      setting global matrices ... done, cpu time[sec] = 0.115048, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.18895, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1352.38      290.098      82.8624      97.5818      11.4608      1163.52      149.875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.580599, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.06856, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.662178, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  3.57395e-10   3.5753e-10  8.72291e-11
      low eigenvalue method done, cpu time[sec] = 0.669776, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.58e-10  8.72e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.36e-11  8.72e-11         1
         *Z       ---       ---  2.61e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.72289e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.70984e-11  7.44788e-11  9.25902e-12  3.97918e-13  1.42438e-12  6.00191e-14   1.4772e-12  1.35935e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.18666, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1200 K
            Well    Collision, 1/sec
              W1         6.60744e+10
      global relaxation matrix dimension = 233
      setting global matrices ... done, cpu time[sec] = 0.115314, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.30606, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            135.238      29.0098      8.28624      9.75818      1.14608      116.352      14.9875
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.581572, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.068444, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.663091, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  8.49853e-11  8.92287e-11  1.43073e-11
      low eigenvalue method done, cpu time[sec] = 0.671058, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.92e-11  1.43e-11         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.39e-12  1.43e-11         1
         *Z       ---       ---  2.61e+22
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.43072e-11
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.42858e-11  1.23723e-11  1.14586e-12  6.92331e-14  1.92452e-13  9.67997e-15  4.95104e-13   1.2613e-15

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.30544, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1300 K
      Energy reference = 40860 1/cm
      Energy step      = 325 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -75.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004143
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.120986
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.070589
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.093241
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.289791
         W1 Well: minimal relaxation eigenvalue = 0.0358147
         W1 Well: maximal relaxation eigenvalue = 1.25429
         W1 Well:       grid size = 223
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31615 1/cm
         B1 Barrier:        grid size = 126
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -90 1/cm
         B2 Barrier:        grid size = 126
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -90 1/cm
         B3 Barrier:        grid size = 140
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4640 1/cm
         B4 Barrier:        grid size = 145
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6265 1/cm
         B5 Barrier: nonpositive number of states at -23165 1/cm => truncating
         B5 Barrier:        grid size = 197
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23165 1/cm
         B6 Barrier:        grid size = 122
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1209 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4460 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.844958, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31615 -23165 4.66e+05 4.29e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -90 1.55e+16
         B2    -90 3.62e+15
         B3  -4640 1.07e+15
         B4  -6265 1.24e+15
         B5 -23165 1.48e+14
         B6   1210 1.43e+16
         B7   4461 1.99e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.15e-09  1.25e-08  5.96e-10  1.08e-10  4.65e-19  5.66e-07   6.1e-05
          R   1.4e+08         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  8.03e+07     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.68e+09        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  9.23e+09        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  2.15e+18  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.77e+06    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.64e+04  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.06e-11  1.85e-11  8.83e-13  1.61e-13   6.9e-22   8.4e-10  9.04e-08
          R  9.43e+10         1      1.74    0.0833    0.0152  6.51e-11      79.2  8.53e+03
         P1  5.41e+10     0.574         1    0.0478   0.00869  3.73e-11      45.4  4.89e+03
         P2  1.13e+12        12      20.9         1     0.182  7.81e-10       951  1.02e+05
         P3  6.22e+12        66       115       5.5         1  4.29e-09  5.23e+03  5.63e+05
         P4  1.45e+21  1.54e+10  2.68e+10  1.28e+09  2.33e+08         1  1.22e+12  1.31e+14
         P5  1.19e+09    0.0126     0.022   0.00105  0.000191  8.21e-13         1       108
         P6  1.11e+07  0.000117  0.000204  9.77e-06  1.78e-06  7.63e-15   0.00929         1
   MasterEquation::set:  done, cpu time[sec] = 0.854329, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.22718e+06
      global relaxation matrix dimension = 223
      setting global matrices ... done, cpu time[sec] = 0.106352, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.875203, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        1.73952e+06       406470       119624       138771      16629.6  1.60498e+06       222824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.516496, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062442, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.581958, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  7.89256e-08  4.01349e-08  1.39297e-08
      low eigenvalue method done, cpu time[sec] = 0.588601, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.01e-08  1.39e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.44e-09  1.39e-08         1
         *Z       ---       ---  5.84e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.39297e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.39083e-08  8.26585e-09  3.12631e-09  1.83607e-10  2.24464e-09  5.33574e-11  3.44642e-11  3.19567e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.76634, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.22718e+07
      global relaxation matrix dimension = 223
      setting global matrices ... done, cpu time[sec] = 0.105406, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.888289, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             173952        40647      11962.4      13877.1      1662.96       160498      22282.4
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.514947, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062196, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.580473, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  2.25459e-08  2.53525e-08   8.8338e-09
      low eigenvalue method done, cpu time[sec] = 0.587557, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.54e-08  8.83e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.09e-10  8.83e-09         1
         *Z       ---       ---  5.84e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.8338e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.82022e-09  6.37528e-09  1.89504e-09  5.92079e-11  4.42273e-10   1.2561e-11  3.58242e-11  3.19914e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.77591, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.22718e+08
      global relaxation matrix dimension = 223
      setting global matrices ... done, cpu time[sec] = 0.10545, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.95107, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            17395.2       4064.7      1196.24      1387.71      166.296      16049.8      2228.24
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.516575, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062091, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.581943, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.41957e-08  1.41135e-08  4.50686e-09
      low eigenvalue method done, cpu time[sec] = 0.588596, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.41e-08  4.51e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.06e-10  4.51e-09         1
         *Z       ---       ---  5.84e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.50686e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.49993e-09  3.64523e-09  6.83108e-10  2.22331e-11  1.08398e-10  3.79646e-12  3.71294e-11   3.2273e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.83949, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.22718e+09
      global relaxation matrix dimension = 223
      setting global matrices ... done, cpu time[sec] = 0.105605, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.05794, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            1739.52       406.47      119.624      138.771      16.6296      1604.98      222.824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.514561, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062577, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.581087, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  5.75987e-09  5.77354e-09  1.52506e-09
      low eigenvalue method done, cpu time[sec] = 0.587999, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  5.77e-09  1.53e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.07e-10  1.53e-09         1
         *Z       ---       ---  5.84e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.52506e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.52271e-09  1.30409e-09  1.58023e-10  6.98516e-12  2.44435e-11  1.04573e-12   2.8095e-11  3.40943e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.94692, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1300 K
            Well    Collision, 1/sec
              W1         6.22718e+10
      global relaxation matrix dimension = 223
      setting global matrices ... done, cpu time[sec] = 0.105505, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.1733, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            173.952       40.647      11.9624      13.8771      1.66296      160.498      22.2824
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.517326, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.062562, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.583148, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.58803e-09   1.5929e-09  2.93129e-10
      low eigenvalue method done, cpu time[sec] = 0.589748, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.59e-09  2.93e-10         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.71e-11  2.93e-10         1
         *Z       ---       ---  5.84e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.93129e-10
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.92678e-10   2.5324e-10  2.29862e-11  1.43727e-12  3.90518e-12    1.999e-13  1.08766e-11  3.28574e-14

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 2.06379, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1400 K
      Energy reference = 43640 1/cm
      Energy step      = 350 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -73.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.004235
         W1 Well: collisional kernel bandwidth = 33
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.114938
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.066766
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.104126
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.266337
         W1 Well: minimal relaxation eigenvalue = 0.0339445
         W1 Well: maximal relaxation eigenvalue = 1.28929
         W1 Well:       grid size = 215
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31610 1/cm
         B1 Barrier:        grid size = 125
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -110 1/cm
         B2 Barrier:        grid size = 125
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -110 1/cm
         B3 Barrier:        grid size = 138
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4660 1/cm
         B4 Barrier:        grid size = 143
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6410 1/cm
         B5 Barrier: nonpositive number of states at -23910 1/cm => truncating
         B5 Barrier:        grid size = 193
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23910 1/cm
         B6 Barrier:        grid size = 121
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1289 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4439 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.820604, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31610 -23910 2.69e+05 6.38e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -110 2.73e+16
         B2   -110  6.9e+15
         B3  -4660  2.1e+15
         B4  -6410  2.4e+15
         B5 -23910 2.93e+14
         B6   1290 2.69e+16
         B7   4440    4e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.32e-10  9.36e-10   6.3e-11  1.31e-11   2.4e-19  3.57e-08  3.03e-06
          R  1.88e+09         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  1.07e+09     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  1.59e+10      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  7.63e+10      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  4.17e+18  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5   2.8e+07    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6   3.3e+05  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   8.5e-13   1.5e-12  1.01e-13  2.09e-14  3.83e-22   5.7e-11  4.85e-09
          R  1.18e+12         1      1.76     0.119    0.0246  4.51e-10      67.1   5.7e+03
         P1  6.69e+11     0.568         1    0.0673     0.014  2.56e-10      38.1  3.24e+03
         P2  9.93e+12      8.44      14.8         1     0.208  3.81e-09       566  4.81e+04
         P3  4.78e+13      40.6      71.4      4.81         1  1.83e-08  2.72e+03  2.31e+05
         P4  2.61e+21  2.22e+09   3.9e+09  2.63e+08  5.46e+07         1  1.49e+11  1.26e+13
         P5  1.75e+10    0.0149    0.0262   0.00177  0.000367  6.72e-12         1        85
         P6  2.06e+08  0.000175  0.000309  2.08e-05  4.32e-06  7.91e-14    0.0118         1
   MasterEquation::set:  done, cpu time[sec] = 0.829973, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.89966e+06
      global relaxation matrix dimension = 215
      setting global matrices ... done, cpu time[sec] = 0.098851, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.805151, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.17217e+06       550309       167402       191606      23379.2  2.14251e+06       318945
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.02e-07  1.27e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.37e-08  1.27e-07         1
         *Z       ---       ---  1.66e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.27261e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.26948e-07  7.68265e-08  2.78281e-08  1.63909e-09  1.97908e-08  4.72202e-10  3.90893e-10  4.96791e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.0865, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.89966e+07
      global relaxation matrix dimension = 215
      setting global matrices ... done, cpu time[sec] = 0.099012, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.820379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             217217      55030.9      16740.2      19160.6      2337.92       214251      31894.5
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.28e-07  8.43e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.77e-09  8.43e-08        -1
         *Z       ---       ---  1.66e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.43305e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  8.41233e-08  6.13015e-08  1.76591e-08  5.56456e-10  4.08328e-09  1.16901e-10   4.0552e-10  4.97311e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.10202, elapsed time[sec] = 1
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.89966e+08
      global relaxation matrix dimension = 215
      setting global matrices ... done, cpu time[sec] = 0.098907, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.875876, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            21721.7      5503.09      1674.02      1916.06      233.792      21425.1      3189.45
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.36e-07  4.58e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.62e-09  4.58e-08        -1
         *Z       ---       ---  1.66e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.57755e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  4.56631e-08  3.71297e-08  6.77358e-09  2.24795e-10   1.0734e-09  3.80461e-11  4.23072e-10  5.01346e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.15698, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.89966e+09
      global relaxation matrix dimension = 215
      setting global matrices ... done, cpu time[sec] = 0.098995, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.959603, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2172.17      550.309      167.402      191.606      23.3792      2142.51      318.945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.473097, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.058428, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.534744, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  6.00505e-08  6.00061e-08  1.70533e-08
      low eigenvalue method done, cpu time[sec] = 0.541483, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0     6e-08  1.71e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.04e-09  1.71e-08         1
         *Z       ---       ---  1.66e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.70533e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.70114e-08  1.45845e-08  1.72834e-09  7.84283e-11  2.68863e-10  1.16645e-11  3.39065e-10  5.27323e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.78293, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1400 K
            Well    Collision, 1/sec
              W1         5.89966e+10
      global relaxation matrix dimension = 215
      setting global matrices ... done, cpu time[sec] = 0.098386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 1.06487, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            217.217      55.0309      16.7402      19.1606      2.33792      214.251      31.8945
      some eigenvalues are too small: using low eigenvalue method
      low eigenvalue method starts
         MasterEquation::low_eigenvalue_matrix:  starts
            setting up kinetic matrices ... done, cpu time[sec] = 0.474394, elapsed time[sec] = 0
            inverting kinetic matrices ... done, cpu time[sec] = 0.057796, elapsed time[sec] = 0
         MasterEquation::low_eigenvalue_matrix:  done, cpu time[sec] = 0.535409, elapsed time[sec] = 0
         direct-diagonalization(DD)-versus-low-eigenvalue(LE) eigenvalues
             L      DD eval      LE eval     LE proj
             0  1.81598e-08  1.81628e-08  3.76666e-09
      low eigenvalue method done, cpu time[sec] = 0.54214, elapsed time[sec] = 0
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.82e-08  3.77e-09         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.17e-10  3.77e-09         1
         *Z       ---       ---  1.66e+21
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.76666e-09
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.75741e-09  3.24729e-09  2.89974e-10  1.86931e-11  4.97849e-11  2.58858e-12  1.48555e-10  5.23014e-13

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.88754, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1500 K
      Energy reference = 46420 1/cm
      Energy step      = 375 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -72 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003927
         W1 Well: collisional kernel bandwidth = 32
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.124025
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.061089
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.083699
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.248323
         W1 Well: minimal relaxation eigenvalue = 0.0322988
         W1 Well: maximal relaxation eigenvalue = 1.32772
         W1 Well:       grid size = 208
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31579 1/cm
         B1 Barrier:        grid size = 124
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -79 1/cm
         B2 Barrier:        grid size = 124
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -79 1/cm
         B3 Barrier:        grid size = 137
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4954 1/cm
         B4 Barrier:        grid size = 141
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6455 1/cm
         B5 Barrier: nonpositive number of states at -23705 1/cm => truncating
         B5 Barrier:        grid size = 187
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23704 1/cm
         B6 Barrier:        grid size = 120
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1420 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4420 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.785061, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31579 -23704 3.14e+05 9.35e+13
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1    -79 4.63e+16
         B2    -79 1.26e+16
         B3  -4954 3.99e+15
         B4  -6455 4.52e+15
         B5 -23704  5.6e+14
         B6   1421 4.85e+16
         B7   4421 7.73e+15
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.61e-11  9.98e-11  9.01e-12   2.1e-12  1.35e-19  3.24e-09  2.24e-07
          R  1.78e+10         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1     1e+10     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  1.11e+11      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  4.75e+11      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  7.39e+18  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5  3.09e+08    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  4.46e+06   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  9.61e-14  1.71e-13  1.54e-14   3.6e-15  2.32e-22  5.54e-12  3.84e-10
          R  1.04e+13         1      1.78     0.161    0.0375  2.41e-09      57.7     4e+03
         P1  5.85e+12     0.562         1    0.0903    0.0211  1.36e-09      32.4  2.25e+03
         P2  6.48e+13      6.23      11.1         1     0.233   1.5e-08       359  2.49e+04
         P3  2.78e+14      26.7      47.5      4.28         1  6.43e-08  1.54e+03  1.07e+05
         P4  4.32e+21  4.15e+08  7.38e+08  6.66e+07  1.55e+07         1  2.39e+10  1.66e+12
         P5   1.8e+11    0.0173    0.0308   0.00278   0.00065  4.18e-11         1      69.3
         P6  2.61e+09   0.00025  0.000445  4.02e-05  9.38e-06  6.04e-13    0.0144         1
   MasterEquation::set:  done, cpu time[sec] = 0.794651, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.61421e+06
      global relaxation matrix dimension = 208
      setting global matrices ... done, cpu time[sec] = 0.092051, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.724894, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        2.64137e+06       721777       228017       257851      31979.2  2.77038e+06       441354
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.24e-06  8.33e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.3e-08  8.33e-07         1
         *Z       ---       ---  5.68e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.33346e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  8.31739e-07  5.17311e-07   1.7059e-07  1.06749e-08  1.26992e-07  3.04373e-09  3.12264e-09  5.24672e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.992616, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.61421e+07
      global relaxation matrix dimension = 208
      setting global matrices ... done, cpu time[sec] = 0.091765, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.750708, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             264137      72177.7      22801.7      25785.1      3197.92       277038      44135.4
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-06  5.73e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.89e-08  5.73e-07        -1
         *Z       ---       ---  5.68e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.72718e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  5.71614e-07  4.20573e-07  1.16239e-07  3.74656e-09   2.7035e-08  7.79935e-10  3.23416e-09  5.25204e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.01541, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.61421e+08
      global relaxation matrix dimension = 208
      setting global matrices ... done, cpu time[sec] = 0.092197, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.802828, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            26413.7      7217.77      2280.17      2578.51      319.792      27703.8      4413.54
      eigenvector populations normalized:
          L        *R        *P        W1
          0   9.3e-07  3.29e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.02e-08  3.29e-07         1
         *Z       ---       ---  5.68e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.2874e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.28106e-07  2.67733e-07  4.75417e-08  1.61271e-09  7.55174e-09  2.70737e-10  3.39116e-09  5.29157e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.06577, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.61421e+09
      global relaxation matrix dimension = 208
      setting global matrices ... done, cpu time[sec] = 0.092001, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.886068, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            2641.37      721.777      228.017      257.851      31.9792      2770.38      441.354
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.37e-07  1.33e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.42e-08  1.33e-07        -1
         *Z       ---       ---  5.68e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.33254e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  1.32997e-07  1.14107e-07  1.32539e-08  6.16807e-10  2.07497e-09  9.12062e-11  2.84841e-09  5.54421e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.14906, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1500 K
            Well    Collision, 1/sec
              W1         5.61421e+10
      global relaxation matrix dimension = 208
      setting global matrices ... done, cpu time[sec] = 0.092851, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.973679, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            264.137      72.1777      22.8017      25.7851      3.19792      277.038      44.1354
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.44e-07  3.33e-08         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.67e-09  3.33e-08         1
         *Z       ---       ---  5.68e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.32748e-08
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  3.32106e-08  2.86631e-08  2.52517e-09  1.67353e-10  4.37834e-10  2.30896e-11  1.38847e-09  5.62004e-12

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.23757, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1600 K
      Energy reference = 49201 1/cm
      Energy step      = 400 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -70 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003566
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.107836
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.05756
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.099207
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.233245
         W1 Well: minimal relaxation eigenvalue = 0.0308467
         W1 Well: maximal relaxation eigenvalue = 1.39049
         W1 Well:       grid size = 202
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31599 1/cm
         B1 Barrier:        grid size = 124
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -398 1/cm
         B2 Barrier:        grid size = 123
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 0 1/cm
         B3 Barrier:        grid size = 135
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4799 1/cm
         B4 Barrier:        grid size = 139
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6399 1/cm
         B5 Barrier: nonpositive number of states at -23199 1/cm => truncating
         B5 Barrier:        grid size = 181
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23199 1/cm
         B6 Barrier:        grid size = 120
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1201 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4400 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.764075, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31599 -23199 4.55e+05 1.36e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -398 7.62e+16
         B2      1 2.23e+16
         B3  -4799 7.36e+15
         B4  -6399 8.23e+15
         B5 -23199 1.04e+15
         B6   1202 8.46e+16
         B7   4401 1.43e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.86e-12  1.42e-11  1.64e-12  4.25e-13  8.21e-20  3.95e-10  2.29e-08
          R  1.27e+11         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  7.07e+10     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  6.08e+11      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  2.35e+12      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  1.22e+19  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  2.53e+09    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6  4.37e+07  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.43e-14  2.58e-14     3e-15  7.76e-16   1.5e-22  7.22e-13  4.17e-11
          R  6.97e+13         1       1.8     0.209    0.0541  1.04e-08      50.3  2.91e+03
         P1  3.87e+13     0.555         1     0.116      0.03   5.8e-09      27.9  1.62e+03
         P2  3.33e+14      4.78       8.6         1     0.259  4.99e-08       240  1.39e+04
         P3  1.29e+15      18.5      33.3      3.87         1  1.93e-07       930  5.38e+04
         P4  6.67e+21  9.57e+07  1.72e+08     2e+07  5.18e+06         1  4.81e+09  2.78e+11
         P5  1.39e+12    0.0199    0.0358   0.00416   0.00108  2.08e-10         1      57.8
         P6   2.4e+10  0.000344  0.000619  7.19e-05  1.86e-05  3.59e-12    0.0173         1
   MasterEquation::set:  done, cpu time[sec] = 0.773384, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.36288e+06
      global relaxation matrix dimension = 202
      setting global matrices ... done, cpu time[sec] = 0.087393, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.689773, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        3.14014e+06       921325       303349       339311      42709.1  3.48584e+06       590463
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.05e-05  4.23e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.29e-07  4.23e-06         1
         *Z       ---       ---  2.27e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.22718e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  4.22034e-06  2.66605e-06   8.5676e-07   5.1944e-08  6.12146e-07  1.47224e-08  1.86776e-08  4.04857e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.939995, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.36288e+07
      global relaxation matrix dimension = 202
      setting global matrices ... done, cpu time[sec] = 0.086658, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.704237, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             314014      92132.5      30334.9      33931.1      4270.91       348584      59046.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  7.44e-06  2.97e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.33e-07  2.97e-06         1
         *Z       ---       ---  2.27e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.96916e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999997  2.96436e-06  2.20219e-06  5.82238e-07   1.9321e-08  1.37252e-07  3.98852e-09  1.93277e-08  4.05261e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.953205, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.36288e+08
      global relaxation matrix dimension = 202
      setting global matrices ... done, cpu time[sec] = 0.087608, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.74204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            31401.4      9213.25      3033.49      3393.11      427.091      34858.4      5904.63
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.78e-06  1.79e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.49e-07  1.79e-06         1
         *Z       ---       ---  2.27e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.78723e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999998  1.78434e-06  1.46096e-06  2.52381e-07  8.77409e-09  4.03405e-08  1.46204e-09  2.03797e-08  4.08107e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.991463, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.36288e+09
      global relaxation matrix dimension = 202
      setting global matrices ... done, cpu time[sec] = 0.087182, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.813145, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3140.14      921.325      303.349      339.311      42.7091      3485.84      590.463
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.39e-06   7.8e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.43e-08   7.8e-07        -1
         *Z       ---       ---  2.27e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.80474e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  7.79212e-07  6.68867e-07  7.62617e-08  3.63804e-09  1.20268e-08  5.35175e-10  1.78412e-08  4.26125e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.06286, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1600 K
            Well    Collision, 1/sec
              W1         5.36288e+10
      global relaxation matrix dimension = 202
      setting global matrices ... done, cpu time[sec] = 0.08656, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.891038, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            314.014      92.1325      30.3349      33.9311      4.27091      348.584      59.0463
      eigenvector populations normalized:
          L        *R        *P        W1
          0  8.54e-07  2.17e-07         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.65e-08  2.17e-07        -1
         *Z       ---       ---  2.27e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.17318e-07
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1            1  2.16966e-07  1.86982e-07  1.62858e-08  1.10719e-09  2.85044e-09   1.5228e-10  9.54435e-09  4.39177e-11

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.13988, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1700 K
      Energy reference = 51981 1/cm
      Energy step      = 425 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -67.9 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003688
         W1 Well: collisional kernel bandwidth = 31
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.113779
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.05491
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.088745
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.222535
         W1 Well: minimal relaxation eigenvalue = 0.0295617
         W1 Well: maximal relaxation eigenvalue = 1.63437
         W1 Well:       grid size = 197
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31744 1/cm
         B1 Barrier:        grid size = 123
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -293 1/cm
         B2 Barrier:        grid size = 122
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 131 1/cm
         B3 Barrier:        grid size = 134
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4969 1/cm
         B4 Barrier:        grid size = 137
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6243 1/cm
         B5 Barrier: nonpositive number of states at -23669 1/cm => truncating
         B5 Barrier:        grid size = 178
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23668 1/cm
         B6 Barrier:        grid size = 119
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1406 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4381 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.750419, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31744 -23668 3.23e+05 1.94e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -293 1.22e+17
         B2    132 3.83e+16
         B3  -4969 1.32e+16
         B4  -6243 1.46e+16
         B5 -23668 1.86e+15
         B6   1407 1.43e+17
         B7   4382 2.56e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.39e-12  2.53e-12  3.67e-13  1.04e-13  5.29e-20  6.16e-11  3.04e-09
          R   7.2e+11         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  3.95e+11     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  2.73e+12      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  9.64e+12      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  1.89e+19  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  1.62e+10    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6  3.29e+08  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.7e-15  4.91e-15  7.12e-16  2.01e-16  1.03e-22   1.2e-13   5.9e-12
          R  3.71e+14         1      1.82     0.264    0.0747  3.81e-08      44.4  2.19e+03
         P1  2.03e+14     0.549         1     0.145     0.041  2.09e-08      24.3   1.2e+03
         P2  1.41e+15      3.79      6.91         1     0.283  1.44e-07       168  8.28e+03
         P3  4.97e+15      13.4      24.4      3.53         1   5.1e-07       594  2.93e+04
         P4  9.74e+21  2.63e+07  4.79e+07  6.94e+06  1.96e+06         1  1.17e+09  5.74e+10
         P5  8.36e+12    0.0225    0.0411   0.00595   0.00168  8.58e-10         1      49.3
         P6   1.7e+11  0.000457  0.000834  0.000121  3.42e-05  1.74e-11    0.0203         1
   MasterEquation::set:  done, cpu time[sec] = 0.759688, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.13959e+06
      global relaxation matrix dimension = 197
      setting global matrices ... done, cpu time[sec] = 0.083129, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.656584, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        3.66093e+06  1.14863e+06       395217       437703      55841.3  4.28382e+06       766953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.97e-05  1.71e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.21e-06  1.71e-05         1
         *Z       ---       ---  1.03e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.70562e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999983  1.70187e-05  1.06155e-05  3.67806e-06  2.01906e-07  2.37674e-06  5.71768e-08  8.90631e-08  2.41374e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.902389, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.13959e+07
      global relaxation matrix dimension = 197
      setting global matrices ... done, cpu time[sec] = 0.08263, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.66727, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             366093       114863      39521.7      43770.3      5584.13       428382      76695.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  2.93e-05  1.24e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  8.91e-07  1.24e-05         1
         *Z       ---       ---  1.03e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.24368e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999988  1.24094e-05  9.20668e-06  2.45805e-06  7.95259e-08  5.56487e-07  1.62879e-08  9.21182e-08  2.41612e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.905025, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.13959e+08
      global relaxation matrix dimension = 197
      setting global matrices ... done, cpu time[sec] = 0.083249, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.704103, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            36609.3      11486.3      3952.17      4377.03      558.413      42838.2      7669.53
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.95e-05  7.77e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   5.9e-07  7.77e-06         1
         *Z       ---       ---  1.03e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 7.76733e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999992  7.75024e-06  6.35151e-06  1.08466e-06   3.8083e-08  1.72119e-07  6.30288e-09  9.73252e-08  2.43206e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.942039, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.13959e+09
      global relaxation matrix dimension = 197
      setting global matrices ... done, cpu time[sec] = 0.082659, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.773891, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            3660.93      1148.63      395.217      437.703      55.8413      4283.82      766.953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  1.03e-05  3.62e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-07  3.62e-06         1
         *Z       ---       ---  1.03e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 3.61647e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999996  3.60851e-06  3.09701e-06  3.48669e-07  1.69618e-08  5.51729e-08  2.48367e-09  8.79622e-08  2.53174e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.01203, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1700 K
            Well    Collision, 1/sec
              W1         5.13959e+10
      global relaxation matrix dimension = 197
      setting global matrices ... done, cpu time[sec] = 0.082588, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.856076, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            366.093      114.863      39.5217      43.7703      5.58413      428.382      76.6953
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.96e-06  1.11e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.18e-07  1.11e-06        -1
         *Z       ---       ---  1.03e+20
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.10901e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999999  1.10657e-06  9.52077e-07   8.2221e-08  5.71672e-09  1.45034e-08   7.8413e-10  5.10054e-08  2.64254e-10

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 1.09456, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1800 K
      Energy reference = 54761 1/cm
      Energy step      = 450 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -65.8 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003579
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.099068
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.052949
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.082777
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.210347
         W1 Well: minimal relaxation eigenvalue = 0.0284088
         W1 Well: maximal relaxation eigenvalue = 1.52693
         W1 Well:       grid size = 192
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31639 1/cm
         B1 Barrier:        grid size = 122
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -139 1/cm
         B2 Barrier:        grid size = 122
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -139 1/cm
         B3 Barrier:        grid size = 132
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4638 1/cm
         B4 Barrier:        grid size = 136
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6439 1/cm
         B5 Barrier: nonpositive number of states at -23539 1/cm => truncating
         B5 Barrier:        grid size = 174
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23539 1/cm
         B6 Barrier:        grid size = 119
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1210 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4360 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.708509, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31639 -23539 3.55e+05 2.76e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -139 1.91e+17
         B2   -139 6.37e+16
         B3  -4638  2.3e+16
         B4  -6439 2.52e+16
         B5 -23539 3.25e+15
         B6   1211 2.34e+17
         B7   4361 4.41e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.98e-13  5.51e-13  9.68e-14  2.97e-14  3.58e-20  1.18e-11  5.04e-10
          R  3.35e+12         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  1.81e+12     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  1.03e+13      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  3.37e+13      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  2.79e+19  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  8.48e+10    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  1.98e+09  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.13e-16  1.13e-15  1.99e-16   6.1e-17  7.36e-23  2.42e-14  1.04e-12
          R  1.63e+15         1      1.85     0.324    0.0995   1.2e-07      39.5  1.69e+03
         P1  8.83e+14     0.542         1     0.176    0.0539   6.5e-08      21.4       915
         P2  5.03e+15      3.08      5.69         1     0.307   3.7e-07       122  5.21e+03
         P3  1.64e+16      10.1      18.6      3.26         1  1.21e-06       397   1.7e+04
         P4  1.36e+22  8.33e+06  1.54e+07   2.7e+06  8.29e+05         1  3.29e+08  1.41e+10
         P5  4.13e+13    0.0253    0.0468   0.00821   0.00252  3.04e-09         1      42.8
         P6  9.66e+11  0.000592   0.00109  0.000192  5.89e-05  7.11e-11    0.0234         1
   MasterEquation::set:  done, cpu time[sec] = 0.717725, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.93964e+06
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.078882, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.617073, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        4.19682e+06  1.40303e+06       505497       554788      71657.4  5.15826e+06       971208
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000124  5.73e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.72e-06  5.73e-05        -1
         *Z       ---       ---  5.15e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 5.72956e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999943  5.71772e-05  3.71205e-05  1.06883e-05  7.04513e-07  8.11755e-06  1.96586e-07  3.48705e-07  1.16139e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.849663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.93964e+07
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.079287, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.618347, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             419682       140303      50549.7      55478.8      7165.74       515826      97120.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0  9.39e-05  4.27e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   2.8e-06  4.27e-05        -1
         *Z       ---       ---  5.15e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.27469e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999957  4.26586e-05  3.19924e-05  8.08337e-06  2.74148e-07   1.8918e-06  5.57396e-08  3.59942e-07  1.16251e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.84434, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.93964e+08
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.078212, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.643904, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            41968.2      14030.3      5054.97      5547.88      716.574      51582.6      9712.08
      eigenvector populations normalized:
          L        *R        *P        W1
          0  6.52e-05  2.79e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.93e-06  2.79e-05        -1
         *Z       ---       ---  5.15e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 2.7857e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999972  2.77994e-05  2.28415e-05  3.80667e-06  1.37018e-07  6.09144e-07  2.25327e-08  3.81412e-07  1.16974e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.868583, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.93964e+09
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.078437, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.699615, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4196.82      1403.03      505.497      554.788      71.6574      5158.26      971.208
      eigenvector populations normalized:
          L        *R        *P        W1
          0  3.63e-05  1.38e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.06e-06  1.38e-05         1
         *Z       ---       ---  5.15e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.37629e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999986  1.37345e-05  1.17873e-05  1.30779e-06  6.50647e-08  2.08441e-07  9.48743e-09  3.55148e-07   1.2144e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.924932, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1800 K
            Well    Collision, 1/sec
              W1         4.93964e+10
      global relaxation matrix dimension = 192
      setting global matrices ... done, cpu time[sec] = 0.079454, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.761249, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            419.682      140.303      50.5497      55.4788      7.16574      515.826      97.1208
      eigenvector populations normalized:
          L        *R        *P        W1
          0   1.5e-05   4.6e-06         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.34e-07   4.6e-06         1
         *Z       ---       ---  5.15e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.60446e-06
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999995  4.59494e-06  3.94685e-06  3.38179e-07  2.40298e-08  6.01465e-08  3.28823e-09  2.21165e-07  1.27984e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.957892, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 1900 K
      Energy reference = 57541 1/cm
      Energy step      = 475 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -63.6 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.001844
         W1 Well: collisional kernel bandwidth = 30
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.044597
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.022815
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.055632
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.201726
         W1 Well: minimal relaxation eigenvalue = 0.0273629
         W1 Well: maximal relaxation eigenvalue = 1.68104
         W1 Well:       grid size = 188
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31759 1/cm
         B1 Barrier:        grid size = 122
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -409 1/cm
         B2 Barrier:        grid size = 121
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 65 1/cm
         B3 Barrier:        grid size = 131
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4684 1/cm
         B4 Barrier:        grid size = 135
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6584 1/cm
         B5 Barrier: nonpositive number of states at -23209 1/cm => truncating
         B5 Barrier:        grid size = 170
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23209 1/cm
         B6 Barrier:        grid size = 118
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1490 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4340 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.584421, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31759 -23209 4.52e+05 3.87e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -409 2.91e+17
         B2     66 1.03e+17
         B3  -4684 3.91e+16
         B4  -6584 4.25e+16
         B5 -23209 5.56e+15
         B6   1491 3.75e+17
         B7   4341 7.39e+16
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.56e-14  1.41e-13  2.95e-14  9.71e-15  2.53e-20  2.68e-12  1.01e-10
          R  1.32e+13         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  7.07e+12     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  3.39e+13      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  1.03e+14      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  3.95e+19  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  3.73e+11    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  9.91e+09  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.64e-16  3.06e-16  6.38e-17   2.1e-17  5.49e-23  5.81e-15  2.19e-13
          R   6.1e+15         1      1.87      0.39     0.128  3.35e-07      35.5  1.33e+03
         P1  3.26e+15     0.534         1     0.208    0.0687  1.79e-07        19       713
         P2  1.57e+16      2.57       4.8         1      0.33   8.6e-07        91  3.42e+03
         P3  4.75e+16      7.79      14.6      3.03         1  2.61e-06       276  1.04e+04
         P4  1.82e+22  2.98e+06  5.58e+06  1.16e+06  3.83e+05         1  1.06e+08  3.98e+09
         P5  1.72e+14    0.0282    0.0527     0.011   0.00362  9.45e-09         1      37.6
         P6  4.57e+12  0.000749    0.0014  0.000292  9.62e-05  2.51e-10    0.0266         1
   MasterEquation::set:  done, cpu time[sec] = 0.593314, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.75932e+06
      global relaxation matrix dimension = 188
      setting global matrices ... done, cpu time[sec] = 0.075955, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.60581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        4.74112e+06  1.68337e+06       636015       692259        90433   6.1018e+06  1.20301e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000332  0.000168         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.88e-06  0.000168        -1
         *Z       ---       ---  2.82e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000167551
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999833  0.000167315  0.000106471  3.53322e-05  1.88924e-06  2.19275e-05  5.30303e-07  1.16013e-06  4.66849e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.815486, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.75932e+07
      global relaxation matrix dimension = 188
      setting global matrices ... done, cpu time[sec] = 0.076044, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.596501, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             474112       168337      63601.5      69225.9       9043.3       610180       120301
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00026  0.000128         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  7.65e-06  0.000128        -1
         *Z       ---       ---  2.82e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000127789
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999872  0.000127609  9.55937e-05  2.43411e-05  8.08391e-07  5.49936e-06    1.632e-07  1.19836e-06  4.67306e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.805543, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.75932e+08
      global relaxation matrix dimension = 188
      setting global matrices ... done, cpu time[sec] = 0.076578, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.620679, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            47411.2      16833.7      6360.15      6922.59       904.33        61018      12030.1
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000185  8.55e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.39e-06  8.55e-05        -1
         *Z       ---       ---  2.82e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 8.55271e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999915  8.54067e-05  7.02226e-05  1.15702e-05  4.21633e-07  1.84536e-06  6.89317e-08  1.27329e-06  4.70069e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.830423, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.75932e+09
      global relaxation matrix dimension = 188
      setting global matrices ... done, cpu time[sec] = 0.075667, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.66529, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            4741.12      1683.37      636.015      692.259       90.433       6101.8      1203.01
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000108  4.45e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   3.1e-06  4.45e-05         1
         *Z       ---       ---  2.82e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.44843e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999956  4.44217e-05  3.81054e-05  4.18427e-06  2.12068e-07  6.69676e-07  3.08054e-08   1.2146e-06  4.86865e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.874754, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 1900 K
            Well    Collision, 1/sec
              W1         4.75932e+10
      global relaxation matrix dimension = 188
      setting global matrices ... done, cpu time[sec] = 0.075167, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.736682, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            474.112      168.337      63.6015      69.2259       9.0433       610.18      120.301
      eigenvector populations normalized:
          L        *R        *P        W1
          0  4.77e-05  1.61e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.35e-06  1.61e-05        -1
         *Z       ---       ---  2.82e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 1.60906e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999984  1.60679e-05  1.37772e-05  1.17354e-06  8.50384e-08    2.102e-07  1.16125e-08  8.05193e-07  5.16836e-09

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.946627, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2000 K
      Energy reference = 60322 1/cm
      Energy step      = 500 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -61.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003478
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.086034
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.047797
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.058788
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.192174
         W1 Well: minimal relaxation eigenvalue = 0.0264187
         W1 Well: maximal relaxation eigenvalue = 1.68736
         W1 Well:       grid size = 184
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31678 1/cm
         B1 Barrier:        grid size = 121
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -178 1/cm
         B2 Barrier:        grid size = 121
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -178 1/cm
         B3 Barrier:        grid size = 130
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4678 1/cm
         B4 Barrier:        grid size = 133
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6178 1/cm
         B5 Barrier: nonpositive number of states at -23179 1/cm => truncating
         B5 Barrier:        grid size = 167
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23178 1/cm
         B6 Barrier:        grid size = 118
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1321 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4321 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.646069, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31678 -23178 4.62e+05 5.39e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -178 4.37e+17
         B2   -178 1.64e+17
         B3  -4678 6.51e+16
         B4  -6178 7.03e+16
         B5 -23178 9.28e+15
         B6   1322 5.87e+17
         B7   4322 1.21e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1   2.2e-14  4.17e-14  1.01e-14  3.56e-15  1.86e-20  7.06e-13  2.37e-11
          R  4.55e+13         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1   2.4e+13     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  9.89e+13      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  2.81e+14      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  5.38e+19  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  1.42e+12    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  4.23e+10  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  5.02e-17  9.51e-17  2.31e-17  8.11e-18  4.24e-23  1.61e-15   5.4e-14
          R  1.99e+16         1       1.9      0.46     0.162  8.45e-07      32.1  1.08e+03
         P1  1.05e+16     0.527         1     0.242    0.0853  4.45e-07      16.9       568
         P2  4.34e+16      2.18      4.13         1     0.352  1.84e-06      69.8  2.34e+03
         P3  1.23e+17      6.19      11.7      2.84         1  5.22e-06       199  6.66e+03
         P4  2.36e+22  1.18e+06  2.24e+06  5.44e+05  1.91e+05         1   3.8e+07  1.27e+09
         P5  6.21e+14    0.0312    0.0591    0.0143   0.00504  2.63e-08         1      33.5
         P6  1.85e+13  0.000929   0.00176  0.000427   0.00015  7.85e-10    0.0298         1
   MasterEquation::set:  done, cpu time[sec] = 0.655457, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.59566e+06
      global relaxation matrix dimension = 184
      setting global matrices ... done, cpu time[sec] = 0.073159, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.558369, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        5.28774e+06  1.98815e+06       788415       851754       112438   7.1063e+06  1.46166e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000768  0.000425         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.29e-05  0.000425        -1
         *Z       ---       ---  1.66e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000424588
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999576  0.000424079  0.000281474  7.49024e-05  5.12011e-06  5.77719e-05  1.40833e-06  3.38532e-06  1.61153e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.766541, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.59566e+07
      global relaxation matrix dimension = 184
      setting global matrices ... done, cpu time[sec] = 0.072669, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.556728, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             528774       198815      78841.5      85175.4      11243.8       710630       146166
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000612   0.00033         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   1.8e-05   0.00033         1
         *Z       ---       ---  1.66e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000329738
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999671  0.000329342  0.000249447  5.97283e-05  2.10553e-06  1.41325e-05  4.22006e-07  3.49107e-06  1.61308e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.763933, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.59566e+08
      global relaxation matrix dimension = 184
      setting global matrices ... done, cpu time[sec] = 0.073202, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.580614, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            52877.4      19881.5      7884.15      8517.54      1124.38        71063      14616.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000453  0.000229         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.32e-05  0.000229        -1
         *Z       ---       ---  1.66e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000229168
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999771  0.000228893  0.000188577  3.03801e-05  1.13536e-06  4.89182e-06  1.84532e-07  3.70817e-06  1.62216e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.78893, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.59566e+09
      global relaxation matrix dimension = 184
      setting global matrices ... done, cpu time[sec] = 0.072756, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.623925, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5287.74      1988.15      788.415      851.754      112.438       7106.3      1461.66
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000277  0.000125         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.9e-06  0.000125        -1
         *Z       ---       ---  1.66e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000125171
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999875  0.000125021  0.000107203  1.16301e-05  6.01941e-07  1.87455e-06  8.71269e-08  3.60744e-06   1.6766e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.831677, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 2000 K
            Well    Collision, 1/sec
              W1         4.59566e+10
      global relaxation matrix dimension = 184
      setting global matrices ... done, cpu time[sec] = 0.072237, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.6925, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            528.774      198.815      78.8415      85.1754      11.2438       710.63      146.166
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000131  4.86e-05         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.64e-06  4.86e-05        -1
         *Z       ---       ---  1.66e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 4.86276e-05
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999951  4.85693e-05   4.1571e-05  3.52142e-06  2.60119e-07  6.35424e-07  3.54544e-08  2.52803e-06  1.78946e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.89985, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2100 K
      Energy reference = 63101 1/cm
      Energy step      = 525 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -59.2 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003549
         W1 Well: collisional kernel bandwidth = 29
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.08515
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.046386
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.06982
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.185684
         W1 Well: minimal relaxation eigenvalue = 0.0255558
         W1 Well: maximal relaxation eigenvalue = 2.30041
         W1 Well:       grid size = 181
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31924 1/cm
         B1 Barrier:        grid size = 121
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -423 1/cm
         B2 Barrier:        grid size = 120
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 101 1/cm
         B3 Barrier:        grid size = 129
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4623 1/cm
         B4 Barrier:        grid size = 132
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6198 1/cm
         B5 Barrier: nonpositive number of states at -24049 1/cm => truncating
         B5 Barrier:        grid size = 166
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -24049 1/cm
         B6 Barrier:        grid size = 118
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1151 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4301 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.64748, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31924 -24049 2.42e+05 7.43e+14
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -423 6.42e+17
         B2    102 2.55e+17
         B3  -4623 1.06e+17
         B4  -6198 1.14e+17
         B5 -24049 1.52e+16
         B6   1152 8.99e+17
         B7   4302 1.92e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  7.21e-15  1.38e-14  3.84e-15  1.43e-15   1.4e-20  2.11e-13  6.36e-12
          R  1.39e+14         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  7.22e+13     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2   2.6e+14      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  6.97e+14      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  7.12e+19  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  4.74e+12    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  1.57e+11   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.73e-17  3.32e-17   9.2e-18  3.43e-18  3.36e-23  5.05e-16  1.52e-14
          R  5.79e+16         1      1.92     0.533     0.199  1.95e-06      29.2       882
         P1  3.01e+16     0.521         1     0.278     0.104  1.01e-06      15.2       459
         P2  1.09e+17      1.88       3.6         1     0.373  3.65e-06      54.8  1.65e+03
         P3  2.91e+17      5.03      9.66      2.68         1  9.79e-06       147  4.43e+03
         P4  2.97e+22  5.13e+05  9.87e+05  2.74e+05  1.02e+05         1   1.5e+07  4.53e+08
         P5  1.98e+15    0.0342    0.0657    0.0182   0.00681  6.66e-08         1      30.2
         P6  6.56e+13   0.00113   0.00218  0.000604  0.000225  2.21e-09    0.0331         1
   MasterEquation::set:  done, cpu time[sec] = 0.656906, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.44628e+06
      global relaxation matrix dimension = 181
      setting global matrices ... done, cpu time[sec] = 0.071013, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.56302, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        5.83121e+06  2.31562e+06       962859  1.03484e+06       137935  8.16325e+06  1.74603e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00158   0.00097         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  4.79e-05   0.00097         1
         *Z       ---       ---  1.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000969725
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999031  0.000968567  0.000624302  0.000197811  1.08518e-05  0.000123817  3.01162e-06  8.72754e-06  4.88398e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.758465, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.44628e+07
      global relaxation matrix dimension = 181
      setting global matrices ... done, cpu time[sec] = 0.070286, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.55204, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             583121       231562      96285.9       103484      13793.5       816325       174603
      eigenvector populations normalized:
          L        *R        *P        W1
          0    0.0013  0.000776         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.89e-05  0.000776        -1
         *Z       ---       ---  1.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000775511
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999225  0.000774585  0.000582757  0.000144953  4.84698e-06  3.20178e-05  9.64369e-07  8.99807e-06  4.88872e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.747167, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.44628e+08
      global relaxation matrix dimension = 181
      setting global matrices ... done, cpu time[sec] = 0.070598, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.58315, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            58312.1      23156.2      9628.59      10348.4      1379.35      81632.5      17460.3
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000986   0.00055         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  2.88e-05   0.00055         1
         *Z       ---       ---  1.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000549622
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999451  0.000548966  0.000452047  7.25479e-05  2.72873e-06  1.15744e-05  4.41056e-07  9.57738e-06  4.91514e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.778425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.44628e+09
      global relaxation matrix dimension = 181
      setting global matrices ... done, cpu time[sec] = 0.070317, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.597531, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            5831.21      2315.62      962.859      1034.84      137.935      8163.25      1746.03
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000629  0.000313         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.79e-05  0.000313        -1
         *Z       ---       ---  1.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000313064
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999687   0.00031269  0.000267886  2.88566e-05  1.51825e-06  4.66409e-06  2.19021e-07   9.4951e-06  5.07052e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.792612, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 2100 K
            Well    Collision, 1/sec
              W1         4.44628e+10
      global relaxation matrix dimension = 181
      setting global matrices ... done, cpu time[sec] = 0.070866, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.67303, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            583.121      231.562      96.2859      103.484      13.7935      816.325      174.603
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000315   0.00013         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   8.7e-06   0.00013        -1
         *Z       ---       ---  1.04e+19
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00012979
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1      0.99987  0.000129635  0.000110746  9.34511e-06  7.02469e-07  1.69676e-06  9.55851e-08  6.99452e-06  5.43305e-08

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.868397, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2200 K
      Energy reference = 65881 1/cm
      Energy step      = 550 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -57 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003423
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.080811
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.044936
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.071846
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.179001
         W1 Well: minimal relaxation eigenvalue = 0.0247663
         W1 Well: maximal relaxation eigenvalue = 3.45792
         W1 Well:       grid size = 178
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -32018 1/cm
         B1 Barrier:        grid size = 120
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -119 1/cm
         B2 Barrier:        grid size = 120
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -119 1/cm
         B3 Barrier:        grid size = 129
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -5068 1/cm
         B4 Barrier:        grid size = 132
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6719 1/cm
         B5 Barrier: nonpositive number of states at -23219 1/cm => truncating
         B5 Barrier:        grid size = 162
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23219 1/cm
         B6 Barrier:        grid size = 118
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 980 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4280 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.636162, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -32018 -23219 4.48e+05 1.02e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -119 9.29e+17
         B2   -119 3.89e+17
         B3  -5068  1.7e+17
         B4  -6719 1.81e+17
         B5 -23219 2.44e+16
         B6    981 1.35e+18
         B7   4281    3e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.62e-15   5.1e-15   1.6e-15  6.29e-16  1.09e-20  7.01e-14  1.92e-12
          R  3.82e+14         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  1.96e+14     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  6.26e+14      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  1.59e+15      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  9.18e+19   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  1.43e+13    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6   5.2e+11   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  6.57e-18  1.28e-17  4.01e-18  1.58e-18  2.73e-23  1.76e-16  4.83e-15
          R  1.52e+17         1      1.95      0.61      0.24  4.16e-06      26.8       735
         P1  7.82e+16     0.514         1     0.313     0.123  2.14e-06      13.8       377
         P2  2.49e+17      1.64      3.19         1     0.394  6.82e-06      43.9   1.2e+03
         P3  6.33e+17      4.16       8.1      2.54         1  1.73e-05       112  3.06e+03
         P4  3.66e+22   2.4e+05  4.68e+05  1.47e+05  5.77e+04         1  6.44e+06  1.77e+08
         P5  5.68e+15    0.0373    0.0727    0.0228   0.00897  1.55e-07         1      27.4
         P6  2.07e+14   0.00136   0.00265   0.00083  0.000327  5.66e-09    0.0365         1
   MasterEquation::set:  done, cpu time[sec] = 0.645314, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.30922e+06
      global relaxation matrix dimension = 178
      setting global matrices ... done, cpu time[sec] = 0.068666, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.544332, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        6.36676e+06  2.66381e+06   1.1621e+06  1.24303e+06       167177  9.26398e+06  2.05467e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00298   0.00204         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  9.25e-05   0.00204     0.999
         *Z       ---       ---  6.89e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00203935
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997964   0.00203626   0.00136412  0.000376074  2.22266e-05  0.000247292  6.06344e-06  2.03504e-05  1.32344e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.744963, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.30922e+07
      global relaxation matrix dimension = 178
      setting global matrices ... done, cpu time[sec] = 0.06827, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.530091, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             636676       266381       116210       124303      16717.7       926398       205467
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00246   0.00163         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   7.5e-05   0.00163    -0.999
         *Z       ---       ---  6.89e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00162517
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998377    0.0016227   0.00124067  0.000281355  1.03225e-05  6.71937e-05   2.0374e-06  2.09899e-05  1.32476e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.726034, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.30922e+08
      global relaxation matrix dimension = 178
      setting global matrices ... done, cpu time[sec] = 0.068722, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.535379, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            63667.6      26638.1        11621      12430.3      1671.77      92639.8      20546.7
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00192   0.00119         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  5.71e-05   0.00119    -0.999
         *Z       ---       ---  6.89e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00118789
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998814   0.00118609  0.000979515  0.000152406  5.94032e-06  2.47845e-05  9.54375e-07   2.2354e-05  1.33161e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.731981, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.30922e+09
      global relaxation matrix dimension = 178
      setting global matrices ... done, cpu time[sec] = 0.068519, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.572581, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            6366.76      2663.81       1162.1      1243.03      167.177      9263.98      2054.67
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00128  0.000706         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.68e-05  0.000706        -1
         *Z       ---       ---  6.89e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000705902
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999295  0.000704833  0.000603572  6.41787e-05  3.45569e-06    1.047e-05  4.96838e-07   2.2523e-05   1.3713e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.768425, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 2200 K
            Well    Collision, 1/sec
              W1         4.30922e+10
      global relaxation matrix dimension = 178
      setting global matrices ... done, cpu time[sec] = 0.069724, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.625488, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            636.676      266.381       116.21      124.303      16.7177      926.398      205.467
      eigenvector populations normalized:
          L        *R        *P        W1
          0  0.000679  0.000311         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  1.88e-05  0.000311        -1
         *Z       ---       ---  6.89e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000311052
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999689  0.000310581  0.000264834  2.22431e-05  1.70328e-06    4.069e-06  2.31397e-07  1.73529e-05  1.47321e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.822755, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2300 K
      Energy reference = 68662 1/cm
      Energy step      = 575 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -54.7 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.003391
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.079294
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.043556
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.060847
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.17208
         W1 Well: minimal relaxation eigenvalue = 0.0240458
         W1 Well: maximal relaxation eigenvalue = 2.53716
         W1 Well:       grid size = 175
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31963 1/cm
         B1 Barrier:        grid size = 120
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -338 1/cm
         B2 Barrier:        grid size = 120
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = -338 1/cm
         B3 Barrier:        grid size = 128
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4938 1/cm
         B4 Barrier:        grid size = 131
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6663 1/cm
         B5 Barrier: nonpositive number of states at -23913 1/cm => truncating
         B5 Barrier:        grid size = 161
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23913 1/cm
         B6 Barrier:        grid size = 117
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1386 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4261 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.613525, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31963 -23913 2.68e+05 1.38e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -338 1.32e+18
         B2   -338 5.82e+17
         B3  -4938 2.67e+17
         B4  -6663 2.84e+17
         B5 -23913 3.85e+16
         B6   1387    2e+18
         B7   4262 4.59e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.04e-15  2.05e-15  7.18e-16  2.97e-16  8.66e-21  2.57e-14  6.45e-13
          R  9.61e+14         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  4.87e+14     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  1.39e+15      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  3.37e+15       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4  1.15e+20   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  3.89e+13    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  1.55e+12   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  2.73e-18  5.39e-18  1.88e-18  7.79e-19  2.27e-23  6.74e-17  1.69e-15
          R  3.66e+17         1      1.97      0.69     0.285  8.32e-06      24.7       620
         P1  1.86e+17     0.507         1      0.35     0.145  4.22e-06      12.5       314
         P2  5.31e+17      1.45      2.86         1     0.414  1.21e-05      35.8       899
         P3  1.28e+18       3.5      6.91      2.42         1  2.92e-05      86.5  2.17e+03
         P4   4.4e+22   1.2e+05  2.37e+05  8.29e+04  3.43e+04         1  2.97e+06  7.45e+07
         P5  1.48e+16    0.0405    0.0799     0.028    0.0116  3.37e-07         1      25.1
         P6  5.91e+14   0.00161   0.00318   0.00111   0.00046  1.34e-08    0.0398         1
   MasterEquation::set:  done, cpu time[sec] = 0.622885, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.18289e+06
      global relaxation matrix dimension = 175
      setting global matrices ... done, cpu time[sec] = 0.066092, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.520748, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
         6.8904e+06  3.03078e+06  1.38775e+06   1.4778e+06       200419  1.04002e+07  2.38596e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0     0.005   0.00381         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0   0.00016   0.00381    -0.998
         *Z       ---       ---  4.78e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00380675
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996199   0.00380088   0.00255015  0.000654159   4.5271e-05  0.000494982   1.2195e-05  4.38008e-05  3.25506e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.705702, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.18289e+07
      global relaxation matrix dimension = 175
      setting global matrices ... done, cpu time[sec] = 0.066479, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.521312, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             689040       303078       138775       147780      20041.9  1.04002e+06       238596
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00427   0.00315         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000134   0.00315     0.998
         *Z       ---       ---  4.78e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.0031473
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.996858   0.00314245   0.00239364  0.000553307  1.97955e-05  0.000126475  3.87258e-06  4.50364e-05  3.25812e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.704753, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.18289e+08
      global relaxation matrix dimension = 175
      setting global matrices ... done, cpu time[sec] = 0.065973, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.543579, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
              68904      30307.8      13877.5        14778      2004.19       104002      23859.6
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00342   0.00236         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000105   0.00236    -0.999
         *Z       ---       ---  4.78e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00236038
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997643   0.00235674   0.00194407   0.00030213  1.18449e-05  4.85552e-05   1.8916e-06  4.79186e-05  3.27427e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.727044, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.18289e+09
      global relaxation matrix dimension = 175
      setting global matrices ... done, cpu time[sec] = 0.066713, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.564282, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             6890.4      3030.78      1387.75       1477.8      200.419      10400.2      2385.96
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00237   0.00146         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.95e-05   0.00146     0.999
         *Z       ---       ---  4.78e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00145552
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998547   0.00145328   0.00124298  0.000131408  7.19243e-06  2.14838e-05  1.03068e-06  4.88493e-05  3.36627e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.747097, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 2300 K
            Well    Collision, 1/sec
              W1         4.18289e+10
      global relaxation matrix dimension = 175
      setting global matrices ... done, cpu time[sec] = 0.066489, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.616694, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             689.04      303.078      138.775       147.78      20.0419      1040.02      238.596
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00133  0.000678         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  3.71e-05  0.000678        -1
         *Z       ---       ---  4.78e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.000678402
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.999323  0.000677357  0.000576402   4.8278e-05  3.75979e-06  8.88372e-06  5.10007e-07  3.91615e-05  3.62194e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.799804, elapsed time[sec] = 0
   MasterEquation::set:  starts
      Temperature      = 2400 K
      Energy reference = 71442 1/cm
      Energy step      = 600 1/cm
      setting wells, barriers, and bimolecular starts
         W1 Well: average energy = -52.4 kcal/mol
         W1 Well: density of states done, elapsed time[sec] = 0.00365
         W1 Well: collisional kernel bandwidth = 28
         W1 Well: collisional energy transfer kernel done, elapsed time[sec] = 0.077848
         W1 Well: relaxation modes basis done, elapsed time[sec] = 0.04209
         W1 Well: kernel in relaxation modes basis done, elapsed time[sec] = 0.069913
         W1 Well: relaxation eigenvalues done, elapsed time[sec] = 0.169823
         W1 Well: minimal relaxation eigenvalue = 0.0233788
         W1 Well: maximal relaxation eigenvalue = 2.03233
         W1 Well:       grid size = 172
         W1 Well:      real depth = -31566 1/cm
         W1 Well: effective depth = -31758 1/cm
         B1 Barrier:        grid size = 120
         B1 Barrier:      real height = 0 1/cm
         B1 Barrier: effective height = -557 1/cm
         B2 Barrier:        grid size = 119
         B2 Barrier:      real height = 213 1/cm
         B2 Barrier: effective height = 42 1/cm
         B3 Barrier:        grid size = 127
         B3 Barrier:      real height = -4600 1/cm
         B3 Barrier: effective height = -4758 1/cm
         B4 Barrier:        grid size = 130
         B4 Barrier:      real height = -6176 1/cm
         B4 Barrier: effective height = -6558 1/cm
         B5 Barrier: nonpositive number of states at -23958 1/cm => truncating
         B5 Barrier:        grid size = 159
         B5 Barrier:      real height = -24450 1/cm
         B5 Barrier: effective height = -23958 1/cm
         B6 Barrier:        grid size = 117
         B6 Barrier:      real height = 1504 1/cm
         B6 Barrier: effective height = 1241 1/cm
         B7 Barrier:        grid size = 112
         B7 Barrier:      real height = 4718 1/cm
         B7 Barrier: effective height = 4241 1/cm
      setting wells, barriers, and bimolecular done, cpu time[sec] = 0.618899, elapsed time[sec] = 0
      Bound Species (D1/D2 - density of states at dissociation energy (DE)/reference energy):
       Name  Depth     DE      *D1      *D2
              1/cm   1/cm       cm       cm
         W1 -31758 -23958 2.59e+05 1.85e+15
      Well-to-Bimolecular Barriers (N - number of states at the reference energy):
       Name Height       *N
              1/cm         
         B1   -557 1.86e+18
         B2     43 8.59e+17
         B3  -4758 4.13e+17
         B4  -6558 4.38e+17
         B5 -23958 5.98e+16
         B6   1242 2.91e+18
         B7   4242 6.88e+17
      Effective equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  4.47e-16  8.94e-16  3.45e-16  1.49e-16  7.02e-21  1.02e-14  2.37e-13
          R  2.24e+15         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  1.12e+15       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2   2.9e+15       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  6.69e+15      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4  1.42e+20  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  9.79e+13    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  4.23e+12   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
      Real equilibrium constants(bimolecular units - cm^3):
        Q/Q        W1         R        P1        P2        P3        P4        P5        P6
         W1         1  1.22e-18  2.45e-18  9.45e-19  4.09e-19  1.92e-23   2.8e-17  6.48e-16
          R  8.17e+17         1         2     0.772     0.334  1.57e-05      22.8       529
         P1  4.09e+17       0.5         1     0.386     0.167  7.86e-06      11.4       265
         P2  1.06e+18       1.3      2.59         1     0.433  2.03e-05      29.6       686
         P3  2.44e+18      2.99      5.98      2.31         1   4.7e-05      68.4  1.58e+03
         P4   5.2e+22  6.37e+04  1.27e+05  4.92e+04  2.13e+04         1  1.45e+06  3.37e+07
         P5  3.58e+16    0.0438    0.0875    0.0338    0.0146  6.88e-07         1      23.2
         P6  1.54e+15   0.00189   0.00378   0.00146  0.000631  2.97e-08    0.0432         1
   MasterEquation::set:  done, cpu time[sec] = 0.628297, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.001 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.06596e+06
      global relaxation matrix dimension = 172
      setting global matrices ... done, cpu time[sec] = 0.064386, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.495634, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
        7.39848e+06  3.41417e+06  1.64108e+06  1.74035e+06       237873  1.15631e+07   2.7378e+06
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00796    0.0068         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000267    0.0068     0.997
         *Z       ---       ---  3.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00680207
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.993209   0.00679101    0.0044855   0.00134111  7.09819e-05  0.000786374  1.93278e-05  8.69694e-05  7.35749e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.683179, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.01 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.06596e+07
      global relaxation matrix dimension = 172
      setting global matrices ... done, cpu time[sec] = 0.064242, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.490382, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
             739848       341417       164108       174035      23787.3  1.15631e+06       273780
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00694   0.00571         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000227   0.00571    -0.997
         *Z       ---       ---  3.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00571424
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.994295   0.00570495   0.00432926   0.00102334  3.51786e-05  0.000220149  6.81754e-06  8.94644e-05  7.36457e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.672341, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 0.1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.06596e+08
      global relaxation matrix dimension = 172
      setting global matrices ... done, cpu time[sec] = 0.064446, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.508224, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            73984.8      34141.7      16410.8      17403.5      2378.73       115631        27378
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00564   0.00434         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000179   0.00434     0.998
         *Z       ---       ---  3.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00434477
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.995662    0.0043377   0.00357853  0.000549865  2.18921e-05  8.80958e-05  3.47442e-06  9.51047e-05  7.39956e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.691171, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 1 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.06596e+09
      global relaxation matrix dimension = 172
      setting global matrices ... done, cpu time[sec] = 0.063699, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.549392, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            7398.48      3414.17      1641.08      1740.35      237.873      11563.1       2737.8
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00404   0.00277         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  0.000122   0.00277     0.999
         *Z       ---       ---  3.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00277187
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.997233   0.00276736   0.00236435  0.000247812   1.3837e-05  4.07224e-05  1.97616e-06  9.79072e-05  7.59521e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.730663, elapsed time[sec] = 0
   MasterEquation::direct_diagonalization_method:  starts
      Pressure = 10 atm	 Temperature = 2400 K
            Well    Collision, 1/sec
              W1         4.06596e+10
      global relaxation matrix dimension = 172
      setting global matrices ... done, cpu time[sec] = 0.063909, elapsed time[sec] = 0
      diagonalizing global relaxation matrix ... done, cpu time[sec] = 0.576687, elapsed time[sec] = 0
      microscopic rate coefficients (at reference energy) over collision frequency:
              W1->R       W1->P1       W1->P2       W1->P3       W1->P4       W1->P5       W1->P6
            739.848      341.417      164.108      174.035      23.7873      1156.31       273.78
      eigenvector populations normalized:
          L        *R        *P        W1
          0   0.00238   0.00136         1
      *R - eigenvalue over the relaxation limit
      *P - eigenvector projection squared on the relaxation subspace (= 1 -F_ne)
      eigenvector projections:
          L        *Q        *P        W1
          0  6.78e-05   0.00136    -0.999
         *Z       ---       ---  3.44e+18
      *Q - eigenvalue over the collision frequency in first well
      *P - eigenvector projection squared on the relaxation subspace (= 1 - F_ne)
      *Z - well partition function square root
      isomers-to-bimolecular equilibrium coefficients (kappa matrix):
        W\P        R       P1       P2       P3       P4       P5       P6
         W1        0        0        0        0        0        0        0
      projection error = 0.00136166
      Wa->Wb/Wb->Wa rate constants ratios:
      Wb\Wa        W1
         W1         1
      W->P/P->W rate constants ratios:
        P\W        W1
          R         1
         P1         1
         P2         1
         P3         1
         P4         1
         P5         1
         P6         1
      hot energies # = 0
      prompt isomerization/dissociation:
        W\W,P           W1  Total Diss.            R           P1           P2           P3           P4           P5           P6
           W1     0.998641   0.00135944   0.00115438  9.63822e-05  7.64114e-06  1.78544e-05  1.03497e-06  8.13314e-05  8.17582e-07

   MasterEquation::direct_diagonalization_method:  done, cpu time[sec] = 0.758622, elapsed time[sec] = 0
rate calculation done, cpu time[sec] = 2554.31, elapsed time[sec] = 60
